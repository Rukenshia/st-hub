
<ui>
	<css name="$QC_TextDefault">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="18"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$QC_Fullsize">
		<width value="100%"/>
		<height value="100%"/>
	</css>
	<css name="$QC_MiddleAligned">
		<marginLeft value="-50%"/>
		<left value="50%"/>
	</css>
	<css name="$QC_MiddleVAligned">
		<top value="50%"/>
		<marginTop value="-50%"/>
	</css>
	<css name="$QC_MiddleAlignedAbsolutely">
		<position value="absolute"/>
		<marginLeft value="-50%"/>
		<left value="50%"/>
	</css>
	<block className="ModalWindowQuickCommands">
		<styleClass value="$QC_Fullsize"/>
		<style>
			<position value="absolute"/>
		</style>
		<bind name="stageSize"/>
		<bind name="firstEntityDH" value="'quickCommandsPanelEntity'; CC.quickCommandsPanel"/>
		<bind name="watchDH" value="'commandsData'; ['quickCommandsPanelEntity.quickCommandsPanel.evChanged']; quickCommandsPanelEntity.quickCommandsPanel.commandsData"/>
		<bind name="var" value="{_currentMenuSector: -1}"/>
		<bind name="catch" value="'currentMenuSectorChanged'"/>
		<bind name="action" value="'_currentMenuSector' + varChanged; 'quickCommandChanged'; { 'commandId': commandsData[_currentMenuSector].commandId }"/>
		<block>
			<styleClass value="$QC_MiddleAlignedAbsolutely"/>
			<styleClass value="$QC_MiddleVAligned"/>
			<style>
				<height value="100%"/>
				<width value="100%"/>
				<backgroundColor value="0x00cccccc"/>
			</style>
			<bind name="dispatch" value="'rollOver'; 'currentMenuSectorChanged'; {_currentMenuSector: -1}"/>
		</block>
		<block>
			<bind name="appear" value="'startShow'; 0.1; 0.1; {alpha: 0}; {alpha: 1}"/>
			<styleClass value="$QC_MiddleAligned"/>
			<styleClass value="$QC_MiddleVAligned"/>
			<block>
				<styleClass value="$QC_MiddleAlignedAbsolutely"/>
				<styleClass value="$QC_MiddleVAligned"/>
				<bind name="repeat" value="8; 'QCSector'; {_stageHeight: stageHeight}"/>
			</block>
			<block>
				<styleClass value="$QC_MiddleAlignedAbsolutely"/>
				<styleClass value="$QC_MiddleVAligned"/>
				<bind name="repeat" value="4; 'QCSectorFar'; {_stageHeight: stageHeight}"/>
			</block>
			<block>
				<styleClass value="$QC_MiddleAlignedAbsolutely"/>
				<styleClass value="$QC_MiddleVAligned"/>
				<bind name="repeat" value="commandsData; 'QCItem'"/>
			</block>
			<block className="quick_command_crosshair" type="native">
				<styleClass value="$QC_MiddleAlignedAbsolutely"/>
				<styleClass value="$QC_MiddleVAligned"/>
				<style>
					<alpha value="0.6"/>
				</style>
			</block>
		</block>
	</block>
	<block className="QCSector">
		<bind name="firstEntityDH" value="'quickCommandsPanelEntity'; CC.quickCommandsPanel"/>
		<bind name="watchDH" value="'commandsData'; ['quickCommandsPanelEntity.quickCommandsPanel.evChanged']; quickCommandsPanelEntity.quickCommandsPanel.commandsData"/>
		<bind name="watchDH" value="'selected'; ['quickCommandsPanelEntity.quickCommandsPanel.evChanged']; !!quickCommandsPanelEntity.quickCommandsPanel.commandsData[$index].selected"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="transition" value="(selected || rollOver) &amp;&amp; commandsData[$index].enabled; 0.05; {alpha: 0.25}; {alpha: 0.4}"/>
		<style>
			<position value="absolute"/>
			<left value="0px"/>
			<top value="0px"/>
		</style>
		<bind name="watch" value="'_circRad'; (_stageHeight * 0.4)"/>
		<bind name="watch" value="'_circInRad'; (_stageHeight * 0.1)"/>
		<bind name="dispatch" value="'rollOver'; 'currentMenuSectorChanged'; {_currentMenuSector: (commandsData[$index].enabled ? $index : -1)}"/>
		<bind name="changeDispatch" value="selected; 'currentMenuSectorChanged'; {_currentMenuSector: (commandsData[$index].enabled ? $index : -1)}"/>
		<block className="lesta.display.Sector" type="native">
			<bind name="cacheAsBitmap" value="true"/>
			<bind name="rotation" value="$index * 45 - 22.5"/>
			<bind name="color" value="0xff000000"/>
			<bind name="arc" value="44.5"/>
			<bind name="radius" value="_circRad"/>
			<bind name="innerRadius" value="_circInRad"/>
		</block>
	</block>
	<block className="QCSectorFar">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="transition" value="rollOver; 0.05; {alpha: 0.25}; {alpha: 0.4}"/>
		<style>
			<position value="absolute"/>
			<left value="0px"/>
			<top value="0px"/>
		</style>
		<bind name="watch" value="'_circRad'; (_stageHeight * 0.4)"/>
		<bind name="dispatch" value="'rollOver'; 'currentMenuSectorChanged'; {_currentMenuSector: $index + 8}"/>
		<block className="lesta.display.Sector" type="native">
			<bind name="cacheAsBitmap" value="true"/>
			<bind name="rotation" value="$index * 90"/>
			<bind name="color" value="0xff000000"/>
			<bind name="arc" value="89.5"/>
			<bind name="radius" value="_stageHeight * 2"/>
			<bind name="innerRadius" value="_circRad + (_stageHeight * 0.005)"/>
		</block>
	</block>
	<block className="QCItem">
		<bind name="stageSize"/>
		<bind name="style" value="'alpha'; enabled ? 1 : 0.3"/>
		<style>
			<position value="absolute"/>
			<marginTop value="-50%"/>
			<marginLeft value="-50%"/>
			<hitTest value="false"/>
		</style>
		<bind name="watch" value="'itemPosition'; [ { qc_left: (stageHeight * 0.27) + 'px' },
								{ qc_top: (stageHeight * 0.18) + 'px', qc_left: (stageHeight * 0.2) + 'px' },
								{ qc_top: (stageHeight * 0.27) + 'px' },
								{ qc_top: (stageHeight * 0.18) + 'px', qc_left: -(stageHeight * 0.2) + 'px' },
								{ qc_left: -(stageHeight * 0.27) + 'px' },
								{ qc_top: -(stageHeight * 0.18) + 'px', qc_left: -(stageHeight * 0.2) + 'px' },
								{ qc_top: -(stageHeight * 0.27) + 'px' },
								{ qc_top: -(stageHeight * 0.18) + 'px', qc_left: (stageHeight * 0.2) + 'px' }, 

								{ qc_top: (stageHeight * 0.10) + 'px', qc_left: (stageHeight * 0.5) + 'px' }, 
								{ qc_top: (stageHeight * 0.10) + 'px', qc_left: -(stageHeight * 0.5) + 'px' },
								{ qc_top: -(stageHeight * 0.10) + 'px', qc_left: -(stageHeight * 0.5) + 'px' },
								{ qc_top: -(stageHeight * 0.10) + 'px', qc_left: (stageHeight * 0.5) + 'px' } ]"/>
		<bind name="style" value="'top'; itemPosition[$index].qc_top"/>
		<bind name="style" value="'left'; itemPosition[$index].qc_left"/>
		<block className="quick_command_sector" type="native">
			<bind name="visible" value="icon != null"/>
			<styleClass value="$QC_MiddleAligned"/>
			<bind name="gotoAndStop!" value="icon"/>
		</block>
		<block type="text">
			<styleClass value="$QC_MiddleAligned"/>
			<styleClass value="$QC_TextDefault"/>
			<style>
				<textAlign value="center"/>
				<textColor value="0xffffffff"/>
				<width value="1280:150,1920:220ah"/>
			</style>
			<bind name="text" value="text"/>
		</block>
		<block>
			<bind name="visible" value="!!commandName"/>
			<styleClass value="$QC_MiddleAligned"/>
			<style>
				<marginTop value="5px"/>
			</style>
			<block type="text">
				<bind name="substitute" value="4; null; '[' + commandName + ']'"/>
			</block>
		</block>
	</block>
	<css name="$TextMouseDisable">
		<mouseChildren value="false"/>
		<selectable value="false"/>
		<mouseEnabled value="false"/>
	</css>
	<css name="$MouseEnable">
		<hitTest value="true"/>
		<mouseChildren value="true"/>
		<mouseEnabled value="true"/>
	</css>
	<css name="$FontFamilyDefault">
		<fontFamily value="$WWSDefaultFont"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
	</css>
	<css name="$FontFamilyDefaultBold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
	</css>
	<css name="$FontFamilyDefaultBoldTabs">
		<fontFamily value="$WWSDefaultFontBold"/>
		<dropShadowFilter value="0 90 0x000000 1 2 2 1"/>
	</css>
	<css name="$Bold">
		<fontFamily value="$WWSDefaultFontBold"/>
	</css>
	<css name="$FontColorDefault">
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$FontColorGrey">
		<textColor value="0xDDDDDD"/>
	</css>
	<css name="$FontColorStrongGrey">
		<textColor value="0x636363"/>
	</css>
	<css name="$FontColorWhite">
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$FontColorBlueish">
		<textColor value="0x9CBABA"/>
	</css>
	<css name="$FontColorStrongBlueish">
		<textColor value="0x758b8b"/>
	</css>
	<css name="$FontColorDarkBlueish">
		<textColor value="0x2B393A"/>
	</css>
	<css name="$FontColorSpecialButton">
		<textColor value="0xFFE8D3"/>
	</css>
	<css name="$FontColorTurquoise">
		<textColor value="0x00cccc"/>
	</css>
	<css name="$FontColorBuoyancy">
		<textColor value="0x13C9F7"/>
	</css>
	<css name="$FontColorHealth">
		<textColor value="0x4ce8aa"/>
	</css>
	<css name="$FontColorGolden">
		<textColor value="0xFFCC66"/>
	</css>
	<css name="$FontColorGold">
		<textColor value="0xFFCC66"/>
	</css>
	<css name="$FontColorFreeExp">
		<textColor value="0xCCFF99"/>
	</css>
	<css name="$FontColorExp">
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$FontColorUnready">
		<textColor value="0xFF9933"/>
	</css>
	<css name="$FontColorAlmostBlack">
		<textColor value="0x08222a"/>
	</css>
	<css name="$FontColorTeamkiller">
		<textColor value="0xFF96CA"/>
	</css>
	<css name="$FontColorTTK">
		<textColor value="0xc8751c"/>
	</css>
	<css name="$FontColorParty">
		<textColor value="0x00cccc"/>
	</css>
	<css name="$FontColorDefaultButtonUp">
		<textColor value="0xc7e2e2"/>
	</css>
	<css name="$FontColorTabButtonDown">
		<textColor value="0x999999"/>
	</css>
	<css name="$FontColorTabButtonSelectedUp">
		<textColor value="0xAABFBF"/>
	</css>
	<css name="$FontColorComparePositive">
		<textColor value="0x4CE8AA"/>
	</css>
	<css name="$FontColorCompareNegative">
		<textColor value="0xFF6600"/>
	</css>
	<css name="$FontColorMercenaries">
		<textColor value="0x4ce8aa"/>
	</css>
	<css name="$FontSizeThumbelina">
		<fontSize value="7"/>
	</css>
	<css name="$FontSizeNano">
		<fontSize value="11"/>
	</css>
	<css name="$FontSizeSmall">
		<fontSize value="13"/>
	</css>
	<css name="$FontSizeDefault">
		<fontSize value="15"/>
	</css>
	<css name="$FontSizeLarge">
		<fontSize value="17"/>
	</css>
	<css name="$FontSizeHeader6">
		<fontSize value="19"/>
	</css>
	<css name="$FontSizeHeader5">
		<fontSize value="21"/>
	</css>
	<css name="$FontSizeHeader4">
		<fontSize value="23"/>
	</css>
	<css name="$FontSizeHeader3">
		<fontSize value="25"/>
	</css>
	<css name="$FontSizeHeader2">
		<fontSize value="30"/>
	</css>
	<css name="$FontSizeHeader1">
		<fontSize value="36"/>
	</css>
	<css name="$FontAccentSize2">
		<fontSize value="50"/>
	</css>
	<css name="$FontAccentSize1">
		<fontSize value="60"/>
	</css>
	<css name="$LetterSpacingSmall">
		<letterSpacing value="0"/>
	</css>
	<css name="$InvertedTextEffect">
		<dropShadowFilter value="0 90 0xffffff 1.0 3.0 3.0 0.3"/>
		<textColor value="0x08222a"/>
	</css>
	<css name="$FontGlowFilterBright">
		<dropShadowFilter value="1 90 0xffffff 0.3 5.0 3.0 0.9 2"/>
	</css>
	<css name="$BlockGlowFilterBright">
		<dropShadowFilter value="1 90 0xffffff 0.3 4.0 3.0 0.2 2"/>
	</css>
	<css name="$GlowDisabler">
		<dropShadowFilter value="0 0 0x000000 0 0 0 0 0"/>
	</css>
	<css name="$DropShadowDisabler">
		<dropShadowFilter value="0 0 0x000000 0 0 0 0 0"/>
	</css>
	<css name="$FontDropShadowFilter1">
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
	</css>
	<css name="$FontDropShadowWhite">
		<dropShadowFilter value="0 90 0xffffff 1.0 3.0 3.0 0.3"/>
	</css>
	<css name="$BlockDropShadowTabText">
		<dropShadowFilter value="0 90 0x000000 1 2 2 1"/>
	</css>
	<css name="$TextNano">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextSecondary">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextSecondaryNoFilter">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="13"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextSecondaryBold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextDefault">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="15"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextDefaultBold">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="15"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextHeaderBold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="17"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextHeader">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="19"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextHeaderWhite">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="19"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextHeaderHugeWhite">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="30"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextHeaderBigDefault">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="17"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextHeaderBigTeamKiller">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="17"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFF96CA"/>
	</css>
	<css name="$TextHeaderBigNegative">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="17"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFF6600"/>
	</css>
	<css name="$TextHeaderBigWhite">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="17"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextAccent">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="25"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextAccentBold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="25"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextAccentSecond">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="60"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextHeaderUnready">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="25"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFF9933"/>
	</css>
	<css name="$TextDefaultWhite">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="15"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultWhiteBold">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="15"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextSmallCompareNegative">
		<fontFamily value="$WWSDefaultFont"/>
		<textColor value="0xFF6600"/>
		<fontSize value="15"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
	</css>
	<css name="$TextSmallWhite">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextSmallGold">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFCC66"/>
	</css>
	<css name="$TextDefaultExpSmall">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextSmallNegative">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFF6600"/>
	</css>
	<css name="$TextTurquoiseQuests">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="17"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0x00cccc"/>
	</css>
	<css name="$TextLargeHeader">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="21"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextLargeHeaderBold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="21"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextLargeHeaderBlack">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="21"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0x08222a"/>
	</css>
	<css name="$TextThumbelina">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="7"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextAccentWhite">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="25"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultTech">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="15"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0x9CBABA"/>
	</css>
	<css name="$TextHeaderBigDefaultTech">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="17"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0x9CBABA"/>
	</css>
	<css name="$BlackLabel">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$ZurichCondensedBold"/>
		<fontSize value="13"/>
		<selectable value="false"/>
		<textColor value="0x08222a"/>
	</css>
	<css name="$TextHeaderWhiteBold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="19"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$ResultsReward">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="60"/>
		<letterSpacing value="-3"/>
		<marginRight value="2px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextAccentGreyBold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<textColor value="0xDDDDDD"/>
		<fontSize value="60"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
	</css>
	<css name="$TextAccentBoldAccountLevel">
		<fontFamily value="$WWSDefaultFontBold"/>
		<textColor value="0xFFFFFF"/>
		<fontSize value="50"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
	</css>
	<css name="$TextAccentBoldAccountLevel1">
		<fontFamily value="$WWSDefaultFontBold"/>
		<textColor value="0xFFFFFF"/>
		<fontSize value="36"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
	</css>
	<css name="$TextAccentBoldAccountLevel2">
		<fontFamily value="$WWSDefaultFontBold"/>
		<textColor value="0xFFFFFF"/>
		<fontSize value="30"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
	</css>
	<css name="$ConfirmationWindowWidth">
		<width value="472px"/>
	</css>
	<css name="$ModalWindowDefaultWidth">
		<width value="472px"/>
	</css>
	<css name="$ModalWindowLargeCostMargins">
		<marginLeft value="5px"/>
		<marginRight value="4px"/>
	</css>
	<css name="$SelectTypeListItem">
		<width value="100%"/>
		<height value="74px"/>
	</css>
	<css name="$SelectTypeListItemIndent">
		<marginBottom value="15px"/>
		<marginTop value="15px"/>
		<marginLeft value="21px"/>
		<marginRight value="21px"/>
	</css>

	<block className="ModalWindowOkCancelRequest">
		<style>
			<flow value="horizontal"/>
			<marginTop value="15px"/>
		</style>
		<block>
			<bind name="appear" value="'startShow'; 0.15; 0.60; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
			<bind name="appear" value="'startHide'; 0.15; 0.45; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
			<styleClass value="$InfoLineBoundaries"/>
			<style>
				<width value="129px"/>
				<marginRight value="20px"/>
			</style>
			<bind name="instance" value="'DefaultButton'; {	_width: '129px', _request: _request, _requestParams: _requestParams, _enabled: true, _isTransactionBtn: true,
											_containerName: ('Modal_window_action_Button' + _okLabel), _label: _okLabel,
											_focusIndex: 1, _defaultFocused: true,
											_name: 'btn_ok'}"/>
		</block>
		<block>
			<style>
				<width value="129px"/>
			</style>
			<bind name="appear" value="'startShow'; 0.15; 0.45; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
			<bind name="appear" value="'startHide'; 0.15; 0.45; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
			<block className="DefaultButtonModal">
				<styleClass value="$InfoLineBoundaries"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="name" value="'Modal_window_action_Button' + _cancelLabel"/>
				<block className="button_default" type="native">
					<style>
						<width value="100%"/>
					</style>
					<bind name="label" value="_cancelLabel"/>
					<params>
						<param name="name" value="btn_cancel"/>
					</params>
					<bind name="input"/>
					<bind name="focus" value="2;false"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ModalWindowUniversalHeader">
		<style>
			<marginBottom value="720:32,1080:64ah"/>
		</style>
		<bind name="style" value="'width'; _headerWidth ? _headerWidth : '100%'"/>
		<block>
			<bind name="visible" value="_header != null"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<style>
					<width value="100%"/>
					<textAlign value="center"/>
					<marginTop value="12px"/>
				</style>
				<styleClass value="$TextDefaultBold21NM"/>
				<bind name="text" value="toUpperCase(tr(_header))"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="720:9,1080:11ah"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="!_hideBackButton"/>
			<style>
				<position value="absolute"/>
				<top value="7px"/>
			</style>
			<bind name="instance" value="'BackButton'; {_text: 'IDS_RETURN_TO_DOCK', _action: 'btn_cancel'}"/>
		</block>
		<block>
			<bind name="visible" value="!_hideCloseButton"/>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="style" value="'right'; _innerCloseButton ? '60px' : '8px'"/>
			<block className="ModalWindowCloseIcon">
				<style>
					<position value="absolute"/>
					<right value="0px"/>
					<top value="13px"/>
					<flow value="horizontal"/>
				</style>
				<bind name="name" value="'btn_cancel'"/>
				<bind name="input"/>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLOSE'}; 0"/>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<backgroundColor value="0x01000000"/>
					</style>
					<bind name="dispatch" value="'mouseOver'; 'overEscapeButton'"/>
					<bind name="dispatch" value="'mouseOut'; 'upEscapeButton'"/>
					<bind name="dispatch" value="'mouseDown'; 'downEscapeButton'"/>
					<block>
						<bind name="soundSet" value="'default_button'"/>
						<bind name="catch" value="'overEscapeButton'; {EscapeButtonOverAlpha: 1}"/>
						<bind name="catch" value="'upEscapeButton'; {EscapeButtonOverAlpha: 0.8}"/>
						<bind name="catch" value="'downEscapeButton'; {EscapeButtonOverAlpha: 0.4}"/>
						<style>
							<alpha value="0.8"/>
						</style>
						<bind name="style" value="'alpha'; EscapeButtonOverAlpha"/>
						<bind name="instance" value="'HotkeyWithText'; {_text: 'ESC'}"/>
					</block>
					<block>
						<style>
							<marginTop value="3px"/>
						</style>
						<block className="button_close" type="native">
							<bind name="catch" value="'overEscapeButton'; {CrossButtonStates: 'over'}"/>
							<bind name="catch" value="'upEscapeButton'; {CrossButtonStates: 'up'}"/>
							<bind name="catch" value="'downEscapeButton'; {CrossButtonStates: 'down'}"/>
							<params>
								<param name="focusable" value="false"/>
							</params>
							<bind name="gotoAndPlay!" value="CrossButtonStates"/>
						</block>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="ModalWindowHeader">
		<style>
			<marginBottom value="3px"/>
		</style>
		<bind name="style" value="'width'; _headerWidth ? _headerWidth : '450px'"/>
		<block>
			<style>
				<marginBottom value="9px"/>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$TextLargeHeaderBold"/>
				<bind name="class" value="_isAlignLeft ? '$None' : '$MiddleAligned'"/>
				<bind name="text" value="toUpperCase(tr(_header))"/>
			</block>
			<block>
				<styleClass value="$AlignRight"/>
				<bind name="style" value="'right'; _innerCloseButton ? '60px' : '0px'"/>
				<block className="ModalWindowCloseIcon">
					<style>
						<position value="absolute"/>
						<right value="-50px"/>
						<top value="11px"/>
						<flow value="horizontal"/>
					</style>
					<bind name="name" value="'btn_cancel'"/>
					<bind name="input"/>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLOSE'}; 0"/>
					<block>
						<styleClass value="$MiddleVAligned"/>
						<style>
							<backgroundColor value="0x01000000"/>
						</style>
						<bind name="dispatch" value="'mouseOver'; 'overEscapeButton'"/>
						<bind name="dispatch" value="'mouseOut'; 'upEscapeButton'"/>
						<bind name="dispatch" value="'mouseDown'; 'downEscapeButton'"/>
						<block>
							<bind name="soundSet" value="'default_button'"/>
							<bind name="catch" value="'overEscapeButton'; {EscapeButtonOverAlpha: 1}"/>
							<bind name="catch" value="'upEscapeButton'; {EscapeButtonOverAlpha: 0.8}"/>
							<bind name="catch" value="'downEscapeButton'; {EscapeButtonOverAlpha: 0.4}"/>
							<style>
								<alpha value="0.8"/>
							</style>
							<bind name="style" value="'alpha'; EscapeButtonOverAlpha"/>
							<bind name="instance" value="'HotkeyWithText'; {_text: 'ESC'}"/>
						</block>
						<block>
							<style>
								<marginTop value="3px"/>
							</style>
							<block className="button_close" type="native">
								<bind name="catch" value="'overEscapeButton'; {CrossButtonStates: 'over'}"/>
								<bind name="catch" value="'upEscapeButton'; {CrossButtonStates: 'up'}"/>
								<bind name="catch" value="'downEscapeButton'; {CrossButtonStates: 'down'}"/>
								<params>
									<param name="focusable" value="false"/>
								</params>
								<bind name="gotoAndPlay!" value="CrossButtonStates"/>
							</block>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="_hideDivider != true"/>
			<style>
				<width value="100%"/>
				<position value="absolute"/>
				<bottom value="-3"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ModalWindowHeaderConfirmation">
		<style>
			<marginBottom value="3px"/>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<marginBottom value="9px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<block className="icon_warning_grey_big" type="native">
					<style>
						<marginTop value="6px"/>
					</style>
				</block>
				<block type="text">
					<styleClass value="$TextLargeHeaderBold"/>
					<text value="IDS_CONFIRMATION"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block className="ModalWindowCloseIcon">
				<style>
					<position value="absolute"/>
					<right value="-70px"/>
					<top value="9px"/>
					<flow value="horizontal"/>
				</style>
				<bind name="name" value="'btn_cancel'"/>
				<bind name="input"/>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLOSE'}; 0"/>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<backgroundColor value="0x01000000"/>
					</style>
					<bind name="dispatch" value="'mouseOver'; 'overEscapeButton'"/>
					<bind name="dispatch" value="'mouseOut'; 'upEscapeButton'"/>
					<bind name="dispatch" value="'mouseDown'; 'downEscapeButton'"/>
					<block>
						<bind name="soundSet" value="'default_button'"/>
						<bind name="catch" value="'overEscapeButton'; {EscapeButtonOverAlpha: 1}"/>
						<bind name="catch" value="'upEscapeButton'; {EscapeButtonOverAlpha: 0.8}"/>
						<bind name="catch" value="'downEscapeButton'; {EscapeButtonOverAlpha: 0.4}"/>
						<style>
							<alpha value="0.8"/>
						</style>
						<bind name="style" value="'alpha'; EscapeButtonOverAlpha"/>
						<bind name="instance" value="'HotkeyWithText'; {_text: 'ESC'}"/>
					</block>
					<block>
						<style>
							<marginTop value="3px"/>
						</style>
						<block className="button_close" type="native">
							<bind name="catch" value="'overEscapeButton'; {CrossButtonStates: 'over'}"/>
							<bind name="catch" value="'upEscapeButton'; {CrossButtonStates: 'up'}"/>
							<bind name="catch" value="'downEscapeButton'; {CrossButtonStates: 'down'}"/>
							<params>
								<param name="focusable" value="false"/>
							</params>
							<bind name="gotoAndPlay!" value="CrossButtonStates"/>
						</block>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ModalWindowHeaderNoEsc">
		<style>
			<marginBottom value="3px"/>
			<width value="450px"/>
		</style>
		<bind name="style" value="'width'; _headerWidth ? _headerWidth : '450px'"/>
		<block>
			<style>
				<marginBottom value="9px"/>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$TextHeader"/>
				<bind name="class" value="'$FontSizeHeader5'"/>
				<bind name="class" value="'$Bold'"/>
				<bind name="class" value="'$FontColorWhite'"/>
				<bind name="text" value="toUpperCase(tr(_header))"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginRight value="-12px"/>
				<marginLeft value="-12px"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ModalWindowHeaderWithIcon">
		<style>
			<marginBottom value="3px"/>
		</style>
		<bind name="style" value="'width'; _headerWidth ? _headerWidth : '450px'"/>
		<block>
			<style>
				<marginBottom value="9px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<block className="icons_modal_window_heading" type="native">
					<styleClass value="$MiddleVAligned"/>
					<style>
						<marginRight value="3px"/>
					</style>
					<bind name="gotoAndStop!" value="_type"/>
				</block>
				<block type="text">
					<styleClass value="$TextLargeHeaderBold"/>
					<bind name="text" value="toUpperCase(tr(_header))"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="_showInnerCloseButton"/>
				<styleClass value="$AlignRight"/>
				<block className="ModalWindowCloseIcon">
					<style>
						<position value="absolute"/>
						<right value="-50px"/>
						<top value="9px"/>
						<flow value="horizontal"/>
					</style>
					<bind name="name" value="'btn_cancel'"/>
					<bind name="input"/>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLOSE'}; 0"/>
					<block>
						<styleClass value="$MiddleVAligned"/>
						<style>
							<backgroundColor value="0x01000000"/>
						</style>
						<bind name="dispatch" value="'mouseOver'; 'overEscapeButton'"/>
						<bind name="dispatch" value="'mouseOut'; 'upEscapeButton'"/>
						<bind name="dispatch" value="'mouseDown'; 'downEscapeButton'"/>
						<block>
							<bind name="soundSet" value="'default_button'"/>
							<bind name="catch" value="'overEscapeButton'; {EscapeButtonOverAlpha: 1}"/>
							<bind name="catch" value="'upEscapeButton'; {EscapeButtonOverAlpha: 0.8}"/>
							<bind name="catch" value="'downEscapeButton'; {EscapeButtonOverAlpha: 0.4}"/>
							<style>
								<alpha value="0.8"/>
							</style>
							<bind name="style" value="'alpha'; EscapeButtonOverAlpha"/>
							<bind name="instance" value="'HotkeyWithText'; {_text: 'ESC'}"/>
						</block>
						<block>
							<style>
								<marginTop value="3px"/>
							</style>
							<block className="button_close" type="native">
								<bind name="catch" value="'overEscapeButton'; {CrossButtonStates: 'over'}"/>
								<bind name="catch" value="'upEscapeButton'; {CrossButtonStates: 'up'}"/>
								<bind name="catch" value="'downEscapeButton'; {CrossButtonStates: 'down'}"/>
								<params>
									<param name="focusable" value="false"/>
								</params>
								<bind name="gotoAndPlay!" value="CrossButtonStates"/>
							</block>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ModalWindowHeaderOptionalIcon">
		<style>
			<marginBottom value="3px"/>
		</style>
		<bind name="style" value="'width'; _headerWidth ? _headerWidth : '100%'"/>
		<block>
			<style>
				<marginBottom value="9px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<block className="icon_warning_grey_big" type="native">
					<bind name="visible" value="_showIcon"/>
					<style>
						<marginTop value="6px"/>
					</style>
				</block>
				<block type="text">
					<styleClass value="$TextLargeHeaderBold"/>
					<bind name="text" value="toUpperCase(tr(_header))"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="_showInnerCloseButton"/>
				<styleClass value="$AlignRight"/>
				<block className="ModalWindowCloseIcon">
					<style>
						<position value="absolute"/>
						<right value="-50px"/>
						<top value="9px"/>
						<flow value="horizontal"/>
					</style>
					<bind name="name" value="'btn_cancel'"/>
					<bind name="input"/>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLOSE'}; 0"/>
					<block>
						<styleClass value="$MiddleVAligned"/>
						<style>
							<backgroundColor value="0x01000000"/>
						</style>
						<bind name="dispatch" value="'mouseOver'; 'overEscapeButton'"/>
						<bind name="dispatch" value="'mouseOut'; 'upEscapeButton'"/>
						<bind name="dispatch" value="'mouseDown'; 'downEscapeButton'"/>
						<block>
							<bind name="soundSet" value="'default_button'"/>
							<bind name="catch" value="'overEscapeButton'; {EscapeButtonOverAlpha: 1}"/>
							<bind name="catch" value="'upEscapeButton'; {EscapeButtonOverAlpha: 0.8}"/>
							<bind name="catch" value="'downEscapeButton'; {EscapeButtonOverAlpha: 0.4}"/>
							<style>
								<alpha value="0.8"/>
							</style>
							<bind name="style" value="'alpha'; EscapeButtonOverAlpha"/>
							<bind name="instance" value="'HotkeyWithText'; {_text: 'ESC'}"/>
						</block>
						<block>
							<style>
								<marginTop value="3px"/>
							</style>
							<block className="button_close" type="native">
								<bind name="catch" value="'overEscapeButton'; {CrossButtonStates: 'over'}"/>
								<bind name="catch" value="'upEscapeButton'; {CrossButtonStates: 'up'}"/>
								<bind name="catch" value="'downEscapeButton'; {CrossButtonStates: 'down'}"/>
								<params>
									<param name="focusable" value="false"/>
								</params>
								<bind name="gotoAndPlay!" value="CrossButtonStates"/>
							</block>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ModalWindowHeaderFullSize">
		<bind name="style" value="'paddingTop';		_paddingTop   ? _paddingTop   : '720:20,2160:100ah'"/>
		<bind name="style" value="'paddingRight';	_paddingRight ? _paddingRight : '1280:20,1920:46aw'"/>
		<bind name="style" value="'paddingLeft'; 	_paddingLeft  ? _paddingLeft  : '1280:20,1920:46aw'"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<bind name="visible" value="_hideBackButton != true"/>
			<style>
				<position value="absolute"/>
				<marginTop value="-3px"/>
			</style>
			<bind name="instance" value="'BackButton'; { _text: _backButtonText,
										_event: _event, _eventData: _eventData,
										_action: _action, _actionParams: _actionParams,
										_request: _request, _requestParams: _requestParams }"/>
		</block>
		<block>
			<bind name="visible" value="_windowName != null"/>
			<styleClass value="$MiddleAligned"/>
			<block type="text">
				<styleClass value="$TextDefaultBold21NM"/>
				<bind name="text" value="toUpperCase(tr(_windowName))"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="_hideCloseIcon != true"/>
			<style>
				<position value="absolute"/>
				<right value="4"/>
				<top value="2"/>
			</style>
			<block className="ModalWindowCloseIcon">
				<style>
					<position value="absolute"/>
					<right value="0px"/>
					<top value="0px"/>
					<flow value="horizontal"/>
				</style>
				<bind name="name" value="'btn_cancel'"/>
				<bind name="input"/>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLOSE'}; 0"/>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<backgroundColor value="0x01000000"/>
					</style>
					<bind name="dispatch" value="'mouseOver'; 'overEscapeButton'"/>
					<bind name="dispatch" value="'mouseOut'; 'upEscapeButton'"/>
					<bind name="dispatch" value="'mouseDown'; 'downEscapeButton'"/>
					<block>
						<bind name="soundSet" value="'default_button'"/>
						<bind name="catch" value="'overEscapeButton'; {EscapeButtonOverAlpha: 1}"/>
						<bind name="catch" value="'upEscapeButton'; {EscapeButtonOverAlpha: 0.8}"/>
						<bind name="catch" value="'downEscapeButton'; {EscapeButtonOverAlpha: 0.4}"/>
						<style>
							<alpha value="0.8"/>
						</style>
						<bind name="style" value="'alpha'; EscapeButtonOverAlpha"/>
						<bind name="instance" value="'HotkeyWithText'; {_text: 'ESC'}"/>
					</block>
					<block>
						<style>
							<marginTop value="3px"/>
						</style>
						<block className="button_close" type="native">
							<bind name="catch" value="'overEscapeButton'; {CrossButtonStates: 'over'}"/>
							<bind name="catch" value="'upEscapeButton'; {CrossButtonStates: 'up'}"/>
							<bind name="catch" value="'downEscapeButton'; {CrossButtonStates: 'down'}"/>
							<params>
								<param name="focusable" value="false"/>
							</params>
							<bind name="gotoAndPlay!" value="CrossButtonStates"/>
						</block>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="_hideDivider != true"/>
			<style>
				<width value="100%"/>
				<marginTop value="720:12,1080:16ah"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<css name="$Fullsize">
		<width value="100%"/>
		<height value="100%"/>
	</css>
	<css name="$FullsizeAbsolute">
		<width value="100%"/>
		<position value="absolute"/>
		<height value="100%"/>
	</css>
	<css name="$FullWidth">
		<width value="100%"/>
	</css>
	<css name="$MiddleAligned">
		<marginLeft value="-50%"/>
		<left value="50%"/>
	</css>
	<css name="$MiddleAlignedAbsolutely">
		<position value="absolute"/>
		<marginLeft value="-50%"/>
		<left value="50%"/>
	</css>
	<css name="$MiddleVAligned">
		<top value="50%"/>
		<marginTop value="-50%"/>
	</css>
	<css name="$EyeLevelVAligned">
		<top value="720:360,2160:900ah"/>
		<marginTop value="-50%"/>
	</css>
	<css name="$MiddleVAlignedAbsolutely">
		<position value="absolute"/>
		<top value="50%"/>
		<marginTop value="-50%"/>
	</css>
	<css name="$MiddleVHAbsolutely">
		<position value="absolute"/>
		<top value="50%"/>
		<marginLeft value="-50%"/>
		<marginTop value="-50%"/>
		<left value="50%"/>
	</css>
	<css name="$AlignRight">
		<position value="absolute"/>
		<right value="0"/>
	</css>
	<css name="$MouseDisable">
		<hitTest value="false"/>
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
	</css>
	<css name="$InfoLineBoundaries">
		<marginTop value="6px"/>
		<marginBottom value="6px"/>
	</css>
	<css name="$InfoBlockHorizontalIndent">
		<width value="100%"/>
		<marginLeft value="12px"/>
		<marginRight value="12px"/>
	</css>
	<css name="$InfoBlockIndent">
		<width value="100%"/>
		<marginTop value="9px"/>
		<marginLeft value="12px"/>
		<marginBottom value="9px"/>
		<marginRight value="12px"/>
	</css>
	<css name="$InfoBlockHorizontalIndentNoWidth">
		<marginLeft value="12px"/>
		<marginRight value="12px"/>
	</css>
	<css name="$DockPanelMargins">
		<marginLeft value="13px"/>
		<marginRight value="13px"/>
	</css>
	<css name="$InfoBlockIndentNoWidth">
		<marginBottom value="9px"/>
		<marginTop value="9px"/>
		<marginLeft value="12px"/>
		<marginRight value="12px"/>
	</css>
	<css name="$TextInputEnterButton">
		<right value="2px"/>
		<top value="50%"/>
		<height value="25px"/>
		<width value="52px"/>
		<position value="absolute"/>
		<marginTop value="-11px"/>
	</css>
	<css name="$TextAreaEnterButton">
		<position value="absolute"/>
		<height value="25px"/>
		<right value="2px"/>
		<width value="52px"/>
		<bottom value="0px"/>
	</css>
	<css name="$DefaultScrollBar">
		<wheelScrollSpeed value="15"/>
		<scrollbarController value="lesta.unbound.style.UbScrollingControllerModern"/>
		<scrollArea value="ModernScrollArea"/>
		<scrollbar value="ModernScrollBar"/>
		<scrollbarTrackMode value="scrollToCursor"/>
	</css>
	<css name="$None"/>
	<css name="$PxHorizontalCorrection">
		<marginLeft value="1px"/>
		<marginRight value="1px"/>
	</css>
	<css name="$PxIndent">
		<marginTop value="1px"/>
		<marginBottom value="1px"/>
		<marginLeft value="1px"/>
		<marginRight value="1px"/>
	</css>
	<css name="$BottomMenu">
		<position value="absolute"/>
		<bottom value="0px"/>
		<width value="100%"/>
		<height value="30px"/>
	</css>
	<block className="HorizontalDivider">
		<styleClass value="$PxHorizontalCorrection"/>
		<style>
			<width value="100%"/>
			<height value="3px"/>
		</style>
		<block className="divider_h" type="native">
			<styleClass value="$Fullsize"/>
		</block>
	</block>
	<css name="$ModernizationAndConsumScrollBar">
		<wheelScrollSpeed value="15"/>
		<scrollbarController value="lesta.unbound.style.UbScrollingControllerModern"/>
		<scrollArea value="ModernScrollArea"/>
		<scrollbar value="ModernScrollBarSimple"/>
		<scrollbarTrackMode value="scrollToCursor"/>
	</css>
	<block className="VerticalDivider">
		<style>
			<height value="100%"/>
			<width value="3px"/>
		</style>
		<block className="divider_v" type="native">
			<styleClass value="$Fullsize"/>
		</block>
	</block>
	<block className="TableDivider">
		<bind name="style" value="'width'; 	_width  ? _width  : '100%'"/>
		<bind name="style" value="'height'; 	_height ? _height : '100%'"/>
		<style>
			<backgroundColor value="0xffffffff"/>
		</style>
	</block>
	<block className="Underline">
		<bind name="style" value="'backgroundColor'; (rollOver &amp;&amp; !mouseDown) ? '0xFFFFFFFF' : '0x00856933'"/>
		<bind name="transition" value="(rollOver &amp;&amp; !mouseDown) == true; 0.3; {scaleX : 0, alpha : 0}; {scaleX : 1, alpha :1}"/>
		<style>
			<backgroundColor value="0xFFFFFFFF"/>
			<position value="absolute"/>
			<height value="1px"/>
			<width value="100%"/>
			<bottom value="0px"/>
			<marginLeft value="2px"/>
			<marginRight value="2px"/>
		</style>
	</block>
	<block className="BlurMap">
		<bind name="visible" value="optionData.blurEnabled"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<style>
			<hitTest value="false"/>
		</style>
		<styleClass value="$FullsizeAbsolute"/>
		<block className="mc_blurmap_medium" type="native">
			<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
			<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="blurMap" value="0"/>
		</block>
		<block className="inner_panel" type="native">
			<style>
				<alpha value="0.5"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
		</block>
	</block>
	<block className="BlurMapLow">
		<bind name="visible" value="optionData.blurEnabled"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<style>
			<hitTest value="false"/>
		</style>
		<styleClass value="$FullsizeAbsolute"/>
		<block className="mc_blurmap5" type="native">
			<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
			<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="blurMap" value="0"/>
		</block>
		<block className="inner_panel" type="native">
			<style>
				<alpha value="0.2"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
		</block>
	</block>
	<block className="BlurMapNotifications">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<bind name="visible" value="optionData.blurEnabled"/>
		<style>
			<position value="absolute"/>
			<width value="100%"/>
			<height value="100%"/>
		</style>
		<block className="mc_blurmap5_feather" type="native">
			<bind name="fade" value="_start; 0.3; {alpha: 0, top: 10}; {alpha: 1, top:0 }; {alpha: 0, top: -20}; 1; 0.15"/>
			<style>
				<width value="100%"/>
				<height value="100%"/>
			</style>
			<bind name="blurMap" value="0"/>
		</block>
	</block>
	<block className="DeclareBlurLayer">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<bind name="visible" value="optionData.blurEnabled"/>
		<block className="transparentPixel" type="native">
			<bind name="blurLayer" value="0"/>
		</block>
		<style>
			<position value="absolute"/>
		</style>
	</block>
	<css name="$ContextMenuListItem">
		<width value="100%"/>
		<height value="29px"/>
	</css>
	<css name="$ContextMenuListItemContent">
		<width value="198px"/>
		<marginLeft value="6px"/>
		<marginRight value="6px"/>
	</css>
	<css name="$ContextMenuDimentions">
		<width value="210px"/>
	</css>
	<block className="DropShadow">
		<styleClass value="$FullsizeAbsolute"/>
		<styleClass value="$MouseDisable"/>
		<block className="drop_shadow" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
				<marginTop value="-2px"/>
				<marginRight value="-6px"/>
				<marginBottom value="-10px"/>
				<marginLeft value="-6px"/>
			</style>
		</block>
	</block>
	<block className="EmptyItem">
		<bind name="visible" value="false"/>
	</block>
	<block className="DottedLine">
		<style>
			<backgroundImage value="symbol:dotted_line"/>
			<backgroundRepeatX value="true"/>
			<width value="100%"/>
			<height value="1px"/>
			<alpha value="0.5"/>
		</style>
	</block>
	<css name="$ContentIndents">
		<marginBottom value="12"/>
		<marginTop value="12"/>
		<marginLeft value="12"/>
		<marginRight value="12"/>
	</css>
	<css name="$DockPanelVisibleArea">
		<marginBottom value="18px"/>
		<marginTop value="7px"/>
		<marginLeft value="12px"/>
		<marginRight value="12px"/>
	</css>
	<block className="PortMainInset">
		<bind name="collectionDH" value="CC.ownShip; 'playerShips'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'dockDefaultValues'; 'dockInitData,dockUpdateData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerQuests"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'slimClientData'"/>
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerLobby"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ownShip; shipId"/>
		<bind name="primaryEntityDH" value="'shipEntity2'; CC.ship; shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity2.ship.evUpdate', 'shipEntity2.ship.evCurrentSkinChanged']; shipEntity2.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity2.slimClientComponent.evUpdate']; shipEntity2.slimClientComponent"/>
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; shipEntity.ownShip.crewId"/>
		<bind name="watchDH" value="'crew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'crew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<bind name="watchDH" value="'isNeedRepair';		['shipEntity.ownShip.evUpdateDockState'];	shipEntity.ownShip.isNeedRepair"/>
		<bind name="watchDH" value="'isNeedShell';		['shipEntity.ownShip.evUpdateDockState'];	shipEntity.ownShip.isNeedShell"/>
		<bind name="watchDH" value="'isLocked';			['shipEntity.ownShip.evUpdateLock'];		shipEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'isInFormation';		['shipEntity.ownShip.evUpdateLock'];		shipEntity.ownShip.isInFormation"/>
		<styleClass value="$Fullsize"/>
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="watch" value="'carouselRows'; (userPrefs.curRowCountIndex == null) ? 0 : userPrefs.curRowCountIndex"/>
		<bind name="watch" value="'isSmallCarouselView'; (userPrefs.isSmallCarouselView == null) ? false : userPrefs.isSmallCarouselView"/>
		<bind name="style" value="'marginBottom'; isSmallCarouselView	?	(carouselRows == 1) ? '292px' :
															(carouselRows == 2) ? '353px'
																				: '229px'
														: '229px'"/>
		<bind name="firstEntityDH" value="'enterBattleEntity'; CC.enterBattle"/>
		<bind name="watchDH" value="'selectedBattle'; ['enterBattleEntity.enterBattle.evBattleTypesChanged']; enterBattleEntity.enterBattle.selectedBattle"/>
		<bind name="watch" value="'freezeListPath'; shipEntity.ownShip.id + '_' + selectedBattle.type"/>
		<bind name="primaryEntityDH" value="'shipFreezeListEntity'; CC.freezeList; freezeListPath"/>
		<bind name="watch" value="'isShipFrozen'; (shipFreezeListEntity ? true : false)"/>
		<bind name="firstEntityDH" value="'clanCurrentSeasonEntity'; CC.clanBattleSeason; 'current'"/>
		<bind name="watchDH" value="'isBrawl'; ['clanCurrentSeasonEntity.clanBattleSeason.evChanged']; clanCurrentSeasonEntity.clanBattleSeason.isBrawl"/>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<position value="absolute"/>
				<width value="900px"/>
				<bottom value="0px"/>
			</style>
			<block>
				<width value="100%"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'ShipStatusDockHeader'; (playerShips.length == 0)														? { _texts: [{_paragraphText: tr('IDS_NO_SHIPS') }] } :
													(isNeedRepair || isNeedShell) &amp;&amp; !(isShipFrozen)								? { _texts: [{_paragraphText: tr('IDS_SHIP_NEEDS_SERVICE_MESSAGE') }] } :
													(isInFormation &amp;&amp; divisionData.isCommander)										? { _texts: [{_paragraphText: tr('IDS_SHIP_IN_DIVISION_MESSAGE_COMMANDER_0')}, {_paragraphText: tr('IDS_SHIP_IN_FORMATION_MESSAGE_1') }] } :
													isInFormation 																	? { _texts: [{_paragraphText: tr('IDS_SHIP_IN_DIVISION_MESSAGE_NOT_COMMANDER_0')}, {_paragraphText: tr('IDS_SHIP_IN_FORMATION_MESSAGE_1') }] } :
													isLocked 																		? { _texts: [{_paragraphText: tr('IDS_SHIP_IN_BATTLE_MESSAGE') }] } :
													!(shipInfoSlim.isDownloaded)													? { _texts: [{_paragraphText: tr('IDS_NOT_AVAILABLE_MESSAGE') }] } :
													(clanBattleType &amp;&amp; !canCreate &amp;&amp; !divisionData.divisionExist &amp;&amp; isBrawl)		? { _texts: [{_paragraphText: tr('IDS_CLAN_BATTLES_ROLE_NOT_ALLOWED_TO_START_CLAN_BATTLE_BRAWL') }] } :
													(clanBattleType &amp;&amp; !canCreate &amp;&amp; !divisionData.divisionExist)					? { _texts: [{_paragraphText: tr('IDS_CLAN_BATTLES_ROLE_NOT_ALLOWED_TO_START_CLAN_BATTLE') }] } :
													(clanBattleType &amp;&amp; !divisionData.divisionExist &amp;&amp; isBrawl)						? { _texts: [{_paragraphText: tr('IDS_NOT_IN_DIVISION_FOR_CLAN_BATTLE_WITH_TRANSFER_BRAWL') }] } :
													(clanBattleType &amp;&amp; !divisionData.divisionExist)									? { _texts: [{_paragraphText: tr('IDS_NOT_IN_DIVISION_FOR_CLAN_BATTLE_WITH_TRANSFER') }] }
																																	: null"/>
			</block>
			<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; clanId"/>
			<bind name="watchDH" value="'clanTag'; ['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
			<bind name="watchDH" value="'clanName'; ['clanEntity.clanExtended.evNameChanged']; clanEntity.clanExtended.name"/>
			<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
			<bind name="watchDH" value="'clanId'; ['selfPlayerEntity.clanman.evClanIdChanged']; selfPlayerEntity.clanman.clanId"/>
			<bind name="watchDH" value="'role'; 	 ['selfPlayerEntity.clanman.evRoleChanged']; selfPlayerEntity.clanman.role"/>
			<bind name="watch" value="'clanBattleType'; 	selectedBattle.type == BattleTypes.CLAN_BATTLE"/>
			<bind name="watch" value="'canCreate'; 		(role == 'executive_officer' || role == 'recruitment_officer' || role == 'commander')"/>
			<block>
				<bind name="visible" value="	clanBattleType &amp;&amp; canCreate &amp;&amp; !(divisionData.divisionExist)"/>
				<styleClass value="$MiddleAligned"/>
				<block className="button_default" type="native">
					<style>
						<width value="160px"/>
						<top value="12px"/>
					</style>
					<bind name="label" value="toUpperCase(tr('IDS_CREATE_DIVISION'))"/>
					<bind name="action" value="'buttonClick'; 'DockProxy.createDivision'; { battleType: BattleTypes.CLAN_BATTLE }"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="((isNeedRepair || isNeedShell) &amp;&amp; !(isShipFrozen))"/>
				<style>
					<marginTop value="9px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'ShipStatusDock'; (isNeedRepair || isNeedShell) ? { _playerShipInfo: shipEntity.ownShip } : null"/>
			</block>
		</block>
		<bind name="firstEntityDH" value="'enterBattleEntity'; CC.enterBattle"/>
		<bind name="watchDH" value="'selectedBattle'; ['enterBattleEntity.enterBattle.evBattleTypesChanged']; enterBattleEntity.enterBattle.selectedBattle"/>
		<block>
			<style>
				<top value="38px"/>
				<position value="absolute"/>
				<height value="100%"/>
			</style>
			<block>
				<style>
					<flow value="vtile"/>
					<height value="100%"/>
				</style>
				<block>
					<bind name="visible" value="dockEventBannerSseId != null"/>
					<bind name="firstEntityDH" value="'dockEventBannerEntity'; CC.dockEventBanner"/>
					<bind name="watchDH" value="'dockEventBannerSseId'; ['dockEventBannerEntity.dockEventBanner.evSseIdChanged']; dockEventBannerEntity.dockEventBanner.sseId"/>
					<bind name="firstEntityDH" value="'windowEntity'; CC.sseWindowState"/>
					<bind name="watchDH" value="'windowState'; ['windowEntity.sseWindowState.evChanged']; windowEntity.sseWindowState.state"/>
					<bind name="action" value="'click'; 'ServerUIDataUSS.setEventBannerSeen'; { sseId: dockEventBannerSseId }"/>
					<bind name="watch" value="'imageUrl'; ((windowState == 'standard') || (windowState == 'no_milestones') || (windowState == ''))	? 'url:../events/banner_backgrounds/banner_ind_day_arc_usual.png'
																																: 'url:../events/banner_backgrounds/banner_ind_day_arc_active.png'"/>
					<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_MILESTONE_BANNER_INSTRUCTION'}], _maxWidth: 250}"/>
					<style>
						<marginBottom value="4px"/>
						<marginRight value="4px"/>
					</style>
					<block>
						<bind name="instance" value="'BigSimpleBanner'; 	{	_hideHeader: true,
															_imageUrl: imageUrl,
															_name: 'MilestonesBanner',
															_request: 'ModalMilestoneScreenRequest'}"/>
					</block>
				</block>
				<block>
					<bind name="firstEntityDH" value="'promoRewardEntity'; CC.accountPromoRewardBanner; 'upcoming.sorted'"/>
					<bind name="watchDH" value="'promoRewardBattles'; []; promoRewardEntity.accountPromoRewardBanner.battles"/>
					<bind name="watch" value="'isPromoReward'; !!promoRewardEntity"/>
					<bind name="watch" value="'isPromoRewardTaken'; promoRewardBattles &lt;= currentPoints"/>
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'accountLevelInfo'"/>
					<bind name="watch" value="'isAbuseStatusConfirmed'; accountLevelInfo.abuseStatus == 2"/>
					<bind name="firstEntityDH" value="'accountLevelEntity'; CC.accountLevel"/>
					<bind name="watchDH" value="'curAccountLevel'; ['accountLevelEntity.accountLevel.evLevelChanged']; accountLevelEntity.accountLevel.level"/>
					<bind name="firstEntityDH" value="'accountLevelPointsEntity'; CC.accountLevelPoints"/>
					<bind name="watchDH" value="'currentPoints'; 	['accountLevelPointsEntity.accountLevelPoints.evCurrentLevelPointsChanged']; accountLevelPointsEntity.accountLevelPoints.currentLevelPoints"/>
					<bind name="watchDH" value="'maxLevelEnabled'; 	['accountLevelPointsEntity.accountLevelPoints.evMaxLevelEnabledChanged']; accountLevelPointsEntity.accountLevelPoints.maxLevelEnabled"/>
					<bind name="watch" value="'isShowPromoRewardBanner'; isPromoReward &amp;&amp; !isPromoRewardTaken &amp;&amp; currentPoints &lt; 35 &amp;&amp; !isAbuseStatusConfirmed"/>
					<bind name="visible" value="curAccountLevel != maxLevelEnabled"/>
					<bind name="tooltip" value="'SlimClientStatusProfileTooltip'; !(slimClientData.isFull) ? {} : null"/>
					<block>
						<bind name="tooltip" value="'AccountLevelBannerTooltip'; !isAbuseStatusConfirmed &amp;&amp; slimClientData.isFull ? {} : null"/>
						<bind name="tooltip" value="'AbuseStatusProfileTooltip'; isAbuseStatusConfirmed &amp;&amp; slimClientData.isFull ? {_mouseInstructionText: 'IDS_GO_TO_PROFILE_ACCOUNT_MOUSE_INSTRUCTION'} : null"/>
						<bind name="instance" value="'AccountLevelBanner'; curAccountLevel != maxLevelEnabled ? {} : null"/>
					</block>
					<block>
						<style>
							<position value="absolute"/>
							<right value="-40"/>
							<top value="32px"/>
						</style>
						<bind name="tooltip" value="'PromoBannerTooltip'; isShowPromoRewardBanner &amp;&amp; slimClientData.isFull ? {} : null"/>
						<bind name="instance" value="'PromoRewardBanner'; isShowPromoRewardBanner &amp;&amp; curAccountLevel != maxLevelEnabled ? {_isPortBanner: true} : null"/>
					</block>
				</block>
				<block>
					<bind name="tooltip" value="'MouseInstructionTooltip'; slimClientData.isFull ? null : { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_EXIT_AND_CONTINUE_DOWNLOADING_MOUSE_INSTRUCTION'}], _maxWidth: 250 }"/>
					<bind name="visible" value="!(slimClientData.isFull)"/>
					<bind name="instance" value="'ShortFeaturesListItem'; slimClientData.isFull ? null : {_title: 'IDS_DOCK_BANNER_CONTINUE_DOWNLOADING',
																						_iconUrl: 'url:../service_kit/port_banner/icon_banner_download.png',
																						_action: 'exitGameAndContinueDownloading'
																						}"/>
				</block>
				<block>
					<bind name="tooltip" value="'MouseInstructionTooltip'; feature_21 == 'locked' ? { 	_multiParagraphArray:  [{_paragraphText: 'IDS_HINT_MENU_GUIDE_DESCR'}],
																						_mouseInstructions: [{_type: 'left', _instructionText: 'IDS_GO_TO_VIDEO_TUTORIALS_MOUSE_INSTRUCTION'}], _maxWidth: 250 } : null"/>
					<bind name="visible" value="feature_21 == 'locked'"/>
					<bind name="instance" value="'ShortFeaturesListItem'; feature_21 == 'locked' ? 	{_title: 'IDS_DOCK_BANNER_VIDEO_TUTORIALS',
																					_iconUrl: 'url:../service_kit/port_banner/icon_banner_guide.png',
																					_action: 'showGuide'
																					} : null"/>
				</block>
				<block>
					<bind name="watch" value="'intromissionBannerVisible'; (feature_21 == 'locked' &amp;&amp; (dockDefaultValues.introMissionEnabled == true) &amp;&amp; (dockDefaultValues.introMissionBannerEnabled == true))"/>
					<bind name="watch" value="'intromissionDenyReason';	divisionData.divisionExist	? ('IDS_INTRO_MISSION_NOT_AVAILABLE_WHEN_IN_'  + toUpperCase(divisionEntranceData.divisionType)) :
														selectedShipInfo.onlyPVPPVE	? 'IDS_INTRO_MISSION_NOT_AVAILABLE_WHEN_EVENT_SHIP'
																					: null"/>
					<bind name="tooltip" value="'MouseInstructionTooltip'; intromissionBannerVisible ? {	_multiParagraphArray:  [{_paragraphText: 'IDS_HINT_PLAY_INTROMISSION_DESC'}],
																						_mouseInstructions: [{_type: 'left', _instructionText: 'IDS_HINT_PLAY_INTROMISSION'}], _maxWidth: 250} : null"/>
					<bind name="tooltip" value="'SimpleWarningTooltip'; intromissionDenyReason != null ? { _text: intromissionDenyReason } : null"/>
					<bind name="visible" value="intromissionBannerVisible"/>
					<bind name="style" value="'hitTest'; intromissionDenyReason == null ? true : false"/>
					<bind name="instance" value="'ShortFeaturesListItem';  intromissionBannerVisible ? 	{_title: 'IDS_DOCK_BANNER_INTRO_MISSION',
																						_iconUrl: 'url:../service_kit/port_banner/icon_banner_intro_mission.png',
																						_action: 'startIntroMissionFromDock'
																						} : null"/>
				</block>
				<block>
					<bind name="firstEntityDH" value="'loginEntity'; CC.loginData"/>
					<bind name="watchDH" value="'isExternalPlatformClient'; ['loginEntity.loginData.evUpdate']; loginEntity.loginData.isExternalPlatformClient"/>
					<bind name="watch" value="'showPremShop'; realmConstants.premshopUIAvailable || isExternalPlatformClient"/>
					<bind name="tooltip" value="'MouseInstructionTooltip'; showPremShop ? { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_GO_TO_PREMSHOP_MOUSE_INSTRUCTION'}], _maxWidth: 250} : null"/>
					<bind name="name" value="'premium_shop_banner'"/>
					<bind name="visible" value="showPremShop"/>
					<bind name="instance" value="'ShortFeaturesListItem'; showPremShop ? {_title: 'IDS_DOCK_BANNER_PREMSHOP', 
																		_iconUrl: 'url:../service_kit/port_banner/icon_banner_premshop.png', 
																		_stateOwn: true,
																		_request: 'webBrowser', 
																		_requestParams: {url: URL.SHOP_IN_GAME}
																		} : null"/>
				</block>
				<block>
					<bind name="watch" value="'showMetaShop'; feature_29 != 'locked'"/>
					<bind name="feature" value="29; 'click'"/>
					<bind name="tooltip" value="'MouseInstructionTooltip'; showMetaShop ? { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_GO_TO_METASHOP_MOUSE_INSTRUCTION'}], _maxWidth: 250} : null"/>
					<bind name="name" value="'meta_shop_banner'"/>
					<bind name="visible" value="showMetaShop"/>
					<bind name="instance" value="'ShortFeaturesListItem'; showMetaShop ? {_title: 'IDS_DOCK_BANNER_METASHOP',
																		_iconUrl: 'url:../service_kit/port_banner/icon_banner_arsenal.png',
																		_request: 'webBrowser',
																		_requestParams: {url: URL.METASHOP},
																		_isNewMarker: (feature_29 == 'new')
																		} : null"/>
				</block>
				<block>
					<bind name="feature" value="16;'click'"/>
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'slimClientData'"/>
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'accountLevelInfo'"/>
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesStats'"/>
					<bind name="watch" value="'isRanksBannerAvailable';	slimClientData.isFull &amp;&amp;
														feature_16 != 'locked' &amp;&amp;
														!(rankedBattlesSeason.denyReason &amp; RBDeny.NO_SEASON)"/>
					<bind name="watch" value="'isRanksBannerVisible';	isRanksBannerAvailable ||
														selectedBattle.type == BattleTypes.RANKED_BATTLE ||
														(rankedBattlesStats.participated &amp;&amp; rankedBattlesSeason.active)"/>
					<bind name="tooltip" value="'RankBannerTooltip'; isRanksBannerVisible ? {} : null"/>
					<bind name="name" value="'rank_banner'"/>
					<bind name="instance" value="'ShortFeaturesListItem'; isRanksBannerVisible ? {_title: 'IDS_DOCK_BANNER_RANKS',
																				_action: 'changeInset',
																				_actionParams: {inset: LobbyConstants.PLAYER_PROFILE, page: LobbyConstants.PLAYER_PROFILE_RANKS},
																				_isNewMarker: (feature_16 == 'new')
																				} : null"/>
				</block>
				<block>
					<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'challenges'; 'isActive'; true; 'challengesCollection'"/>
					<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'tasks'; 'isActive'; true; 'tasksCollection'"/>
					<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'privateTasksAndChallenges'; 'isActive'; true; 'personalTasksCollection'"/>
					<bind name="watch" value="'sseAmount'; challengesCollection.length + tasksCollection.length + personalTasksCollection.length }"/>
					<bind name="watch" value="'sseActive'; sseAmount &gt; 0 }"/>
					<bind name="watch" value="'showQuests'; feature_9 != 'locked'"/>
					<bind name="feature" value="9; 'click'"/>
					<bind name="tooltip" value="'SseAmountBannerTooltip'; showQuests ? {} : null"/>
					<bind name="name" value="'quest_banner'"/>
					<bind name="visible" value="showQuests"/>
					<bind name="instance" value="'ShortFeaturesListItem'; showQuests ? 	{_title: 'IDS_DOCK_BANNER_SSE_BATTLE_TASKS', 
																		_amount: sseActive ? sseAmount : null, 
																		_isEmptyBanner: !sseActive, 
																		_request: 'buttonQuestEnter', 
																		_requestParams: {type: SSETypes.EVENT}, 
																		_isNewMarker: (sseActive &amp;&amp; (feature_9 == 'new'))
																		} : null"/>
				</block>
				<block>
					<bind name="collectionDH" value="CC.campaignTaskPlayer; 'choosenTasks'; 'active'"/>
					<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
					<bind name="watchDH" value="'isPremiumAccount';	['resourceEntity.accountResource.evChangedPrem']; resourceEntity.accountResource.isPremium"/>
					<bind name="firstEntityDH" value="'slotsEntity'; CC.constantsCampaignSlots"/>
					<bind name="watchDH" value="'common'; 	[]; slotsEntity.constantsCampaignSlots.common"/>
					<bind name="watchDH" value="'premium'; 	[]; slotsEntity.constantsCampaignSlots.premium"/>
					<bind name="watch" value="'totalSlots'; common + premium"/>
					<bind name="watch" value="'totalAvailableTaskCount'; isPremiumAccount 	? totalSlots
																			: !(isPremiumAccount) &amp;&amp; (choosenTasks.length == totalSlots) 	? totalSlots 
																																			: common
																			: common"/>
					<bind name="collectionDH" value="CC.campaignTaskPlayer; 'stateDone'; 'active.taskStateDone'"/>
					<bind name="watch" value="'isCampaignReward'; stateDone.length &gt; 0"/>
					<bind name="watch" value="'campaignReward'; isCampaignReward ? 'url:../service_kit/port_banner/icon_banner_star.png' : null"/>
					<bind name="collectionDH" value="CC.campaignParams; 'campaignUnviewed'; 'visibleCampaigns.campaignUnviewed'"/>
					<bind name="watch" value="'showCampaigns'; feature_22 != 'locked'"/>
					<bind name="feature" value="22; 'click'"/>
					<bind name="tooltip" value="'MouseInstructionTooltip'; showCampaigns ? { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_GO_TO_CAMPAIGNS_MOUSE_INSTRUCTION'}], _maxWidth: 250} : null"/>
					<bind name="name" value="'campaigns_banner'"/>
					<bind name="visible" value="showCampaigns"/>
					<bind name="instance" value="'ShortFeaturesListItem'; showCampaigns ? 	{_title: 'IDS_DOCK_BANNER_CAMPAIGNS', 
																			_iconReward: campaignReward,
																			_earnedScore: !isCampaignReward ? choosenTasks.length : null,
																			_maxScore: !isCampaignReward ? totalAvailableTaskCount : null,
																			_stateOwn: isCampaignReward,
																			_action: 'openChooseCampaignsWindow', 
																			_isNewMarker: (feature_22 == 'new'),
																			_newMarkerType: SC.Common.CONTENT_CATEGORY.CAMPAIGNS,
																			} : null"/>
				</block>
				<block>
					<bind name="feature" value="21; 'click'"/>
					<bind name="watch" value="'showLootBox'; feature_21 != 'locked'"/>
					<bind name="name" value="'lootboxes_banner'"/>
					<bind name="tooltip" value="'LootboxBannerTooltip'; showLootBox ? { } : null"/>
					<bind name="instance" value="'LootboxBanner'; showLootBox ? { } : null"/>
				</block>
				<block>
					<bind name="collectionDH" value="CC.referral; 'referralCollection'"/>
					<bind name="watch" value="'isRefSysParticipant'; referralCollection.length &gt; 0"/>
					<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
					<bind name="watchDH" value="'hasReferralPoints';	['resourceEntity.accountResource.evChangedHasReferralPoints'];	resourceEntity.accountResource.hasReferralPoints"/>
					<bind name="watch" value="'refarralReward'; hasReferralPoints ? 'url:../service_kit/port_banner/icon_banner_brotherhood.png' : null"/>
					<bind name="tooltip" value="'ReferralSysBannerTooltip'; isRefSysParticipant ? { } : null"/>
					<bind name="instance" value="'ShortFeaturesListItem'; isRefSysParticipant 	?	{	_title: toUpperCase(tr('IDS_DOCK_BANNER_REFERRAL_SYSTEM')),
																						_iconReward: refarralReward,
																						_stateOwn: hasReferralPoints,
																						_request: 'webBrowser', 
																						_requestParams: { url: URL.PLAYTOGETHER_IN_GAME } }
																				: null"/>
				</block>
				<block>
					<bind name="collectionDH" value="CC.almanacParams; 'almanacList'"/>
					<bind name="watch" value="'showAlmanacs'; almanacList.length &gt; 0"/>
					<bind name="watch" value="'almanacRewards'; hasActiveStages ? 'url:../service_kit/port_banner/icon_banner_reward.png' : null"/>
					<bind name="firstEntityDH" value="'globalAlmanacStateEntity'; CC.globalAlmanacState"/>
					<bind name="watchDH" value="'hasActiveStages'; ['globalAlmanacStateEntity.globalAlmanacState.evHasActiveStagesChanged']; globalAlmanacStateEntity.globalAlmanacState.hasActiveStages"/>
					<bind name="tooltip" value="'AlmanacBannerTooltip'; showAlmanacs ? {} : null"/>
					<bind name="name" value="'almanacs_banner'"/>
					<bind name="visible" value="showAlmanacs"/>
					<bind name="instance" value="'ShortFeaturesListItem'; showAlmanacs ? {_title: 'IDS_DOCK_BANNER_ALMANAC',
																		_iconReward: almanacRewards,
																		_stateOwn: hasActiveStages,
																		_isEmptyBanner: !hasActiveStages,
																		_action: 'openAlmanac'
																		} : null"/>
				</block>
				<block>
					<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
					<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
					<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
					<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
					<bind name="primaryEntityDH" value="'cwInfo'; CC.clanWarsInfo; selfPlayerDbId"/>
					<bind name="watchDH" value="'casualCvcBannerAvailable'; ['cwInfo.clanWarsInfo.evChanged']; cwInfo.clanWarsInfo.warEnabled"/>
					<bind name="watchDH" value="'attemptsLeft'; ['cwInfo.clanWarsInfo.evChanged']; cwInfo.clanWarsInfo.attemptsLeft"/>
					<bind name="watchDH" value="'casualCvcServerStage'; ['cwInfo.clanWarsInfo.evChanged']; cwInfo.clanWarsInfo.stage"/>
					<bind name="watchDH" value="'isPlayerParticipate'; ['cwInfo.clanWarsInfo.evChanged']; cwInfo.clanWarsInfo.playerParticipate"/>
					<bind name="visible" value="casualCvcBannerAvailable == true"/>
					<bind name="tooltip" value="'CvCBannerTooltip'; casualCvcBannerAvailable ? {} : null"/>
					<bind name="name" value="'buttonCwars'"/>
					<bind name="instance" value="'ShortFeaturesListItem'; casualCvcBannerAvailable ? {	_title: toUpperCase(tr('IDS_CASUAL_CVC')),
																						_amount: casualCvcServerStage == 'war' ? attemptsLeft : null, 
																						_isEmptyBanner: !isPlayerParticipate &amp;&amp; casualCvcServerStage == 'war',
																						_action: 'changeInset',
																						_actionParams: {inset: LobbyConstants.CLAN, pageData: {'url': URL.CLAN_WARS_IN_GAME}}
																					} : null"/>
				</block>
				<block>
					<bind name="firstEntityDH" value="'giftBox'; CC.giftBoxComponent"/>
					<bind name="watchDH" value="'visibilityState'; ['giftBox.giftBoxComponent.evUpdate']; giftBox.giftBoxComponent.visibilityState"/>
					<bind name="watch" value="'isGiftBoxVisible'; 	(visibilityState != 0) &amp;&amp;
													slimClientData.isFull"/>
					<bind name="handleEventDH" value="'giftBox.giftBoxComponent.evAnimateRewards'; 'animateGiftboxShowEv'"/>
					<bind name="action" value="'animateGiftboxShowEv'; 'playGiftBoxSound'"/>
					<bind name="transition" value="isGiftBoxVisible;  0.15; {alpha: 0, top: 5, ubScaleY: 0, scaleY: 0}; {alpha: 1, top: 0, ubScaleY: 1, scaleY: 1}; {alpha: 0, top: -5, ubScaleY: 0, scaleY: 0}"/>
					<bind name="tooltip" value="'GiftboxTooltip'; isGiftBoxVisible ? {} : null"/>
					<bind name="tooltip" value="'GiftboxInfotip'; isGiftBoxVisible ? {} : null; TooltipBehaviour.infotip; null; 'rewardsInfotip'"/>
					<bind name="name" value="'recent_rewards_banner'"/>
					<bind name="instance" value="'ShortFeaturesListItem'; { _title: 'IDS_DOCK_BANNER_RECEIVED_REWARDS' }"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="PortElement">
		<bind name="collectionDH" value="CC.ownShip; 'playerShips'"/>
		<styleClass value="$Fullsize"/>
		<bind name="child" value="playerShips.length &gt; 0 ? crewInset : 0; {shipId: shipId, playerShips: playerShips}; 'Harbour'; 'CrewsSelect'"/>
	</block>
	<block className="BigSimpleBanner">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="appear" value="'addedToStage'; 0.15; 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
		<bind name="tooltip" value="'MouseInstructionTooltip'; _instructionText ? { _mouseInstructions: [{_type: 'left', _instructionText: _instructionText }], _maxWidth: 250 } : null; 0"/>
		<bind name="name" value="_name"/>
		<bind name="soundSet" value="'default_button'"/>
		<bind name="soundSet" value="'default_banner'"/>
		<bind name="action" value="'click'; _action ? _action : null; _actionParams ? _actionParams : {}"/>
		<bind name="request" value="'click'; _request ? _request : null; _requestParams ? _requestParams : {}"/>
		<bind name="action" value="'click'; 'log'; { event: 'click:banner.' + _logItemName }"/>
		<style>
			<width value="240px"/>
			<height value="80px"/>
		</style>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundSize value="cover"/>
			</style>
			<bind name="style" value="'backgroundImage'; _imageUrl"/>
			<block className="white_panel_gradient" type="native">
				<bind name="transition" value="rollOver; 0.15; {alpha: 0}; {alpha: 0.7}"/>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!_hideHeader"/>
			<style>
				<width value="100%"/>
				<height value="36px"/>
			</style>
			<block>
				<bind name="transition" value="rollOver &amp;&amp; !(mouseDown); 0.15; {alpha: 0.75}; {alpha: 1.0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="quest_thumb_title" type="native">
					<styleClass value="$Fullsize"/>
					<bind name="style" value="'alpha'; _isEmptyBanner ? 0.7 : 1"/>
				</block>
			</block>
			<block type="text">
				<style>
					<width value="100%"/>
					<marginLeft value="10px"/>
				</style>
				<bind name="style" value="'alpha'; _isEmptyBanner ? 0.5 : 1"/>
				<styleClass value="$TextHeaderWhiteBold"/>
				<styleClass value="$MiddleVAligned"/>
				<bind name="text" value="toUpperCase(tr(_text))"/>
			</block>
		</block>
	</block>
	<block className="ArcEventBannerTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="340px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<margin value="16px|16px"/>
				</style>
				<block type="text">
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$TextDefaultBold19NM"/>
					<bind name="text" value="_header"/>
				</block>
				<block type="text">
					<bind name="visible" value="(_subHeader != null) &amp;&amp; (_subHeader != '')"/>
					<style>
						<width value="100%"/>
						<marginTop value="12"/>
					</style>
					<styleClass value="$TextDefault17NM"/>
					<bind name="text" value="_subHeader"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="(_timer != null) &amp;&amp; (_timer != '')"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<styleClass value="$ArcEventTooltipMargins"/>
				<block type="text">
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$TextDefault17NM"/>
					<bind name="text" value="_timer"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="(_descr != null) &amp;&amp; (_descr != '')"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$ArcEventTooltipMargins"/>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$TextDefault17NM"/>
					<bind name="text" value="_descr"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="_mouseInstructions != null"/>
			<styleClass value="$ArcEventTooltipMargins"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="repeat" value="_mouseInstructions; 'MouseInstructionRepeater'; { _maxWidth: _maxWidth, _lastIndex: (_mouseInstructions.length - 1), _leading: _leading }"/>
		</block>
	</block>
	<block className="ArcEventBannerInPort">
		<bind name="visible" value="dockEventBannerSseId == 'soviet_arc'"/>
		<bind name="firstEntityDH" value="'dockEventBannerEntity'; CC.dockEventBanner"/>
		<bind name="watchDH" value="'dockEventBannerSseId'; ['dockEventBannerEntity.dockEventBanner.evSseIdChanged']; dockEventBannerEntity.dockEventBanner.sseId"/>
		<bind name="firstEntityDH" value="'arcEventEntity'; CC.arcEvent"/>
		<bind name="watchDH" value="'state'; ['arcEventEntity.arcEvent.evChanged']; arcEventEntity.arcEvent.state"/>
		<bind name="watchDH" value="'sideId';['arcEventEntity.playerArcEventInfo.evSideChanged']; arcEventEntity.playerArcEventInfo.sideId"/>
		<bind name="watchDH" value="'finishTime';['arcEventEntity.arcEvent.evChanged']; arcEventEntity.arcEvent.finishTime"/>
		<bind name="countdown" value="finishTime; 'finishTimeFormatted'; 'HIGHEST,WITH_DAYS'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
		<bind name="watch" value="'realmSuffix'; realmConstants.currentRealm == 'RU' ? '_ru' : ''"/>
		<bind name="watch" value="'sideSuffix'; sideId == -1 ? '_neutral' : '_' + sideId"/>
		<bind name="watch" value="'bannerUrl'; 'url:../events/arc_event/banner/banner' + sideSuffix + realmSuffix + '.png'"/>
		<bind name="watch" value="'header'; 		(sideId == -1) 	? 'IDS_ARC_EVENT_TITLE'
																		: tr('IDS_ARC_EVENT_SIDE_TOOLTIP_' + sideId)"/>
		<bind name="tooltip" value="'ArcEventBannerTooltip'; { 	_header: header,
												_maxWidth: 300,
												_descr: 'IDS_ARC_EVENT_BANNER_DESCR',
												_timer: (state == 2) 	? ''
																								: subst('IDS_ARC_EVENT_TIMER', [], { _timer: finishTimeFormatted }),
												_mouseInstructions: [{_type: 'left', _instructionText: 'IDS_ARC_EVENT_TITLE_INSTRUCTION'}]}"/>
		<style>
			<marginBottom value="8px"/>
		</style>
		<bind name="instance" value="'BigSimpleBanner'; { 	_request: state == 2	? 'arcEventFinish'
																							: sideId == -1	? 'showSplashWindow' 
																																	: 'arcEventSideEntrance',
											_imageUrl: bannerUrl,
											_hideHeader: true
										}"/>
	</block>
	<css name="$FontShipnameWhite">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="19"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$FontShipnameWhiteNoFilter">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="15"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$FontShipnameGolden">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="19"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFCC66"/>
	</css>
	<css name="$FontShipnameBlack">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="19"/>
		<selectable value="false"/>
		<textColor value="0x08222a"/>
	</css>
	<css name="$FontShipnameGoldenNoFilter">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="15"/>
		<selectable value="false"/>
		<textColor value="0xFFCC66"/>
	</css>
	<css name="$FontShipnameBlackNoFilter">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="15"/>
		<selectable value="false"/>
		<textColor value="0x08222a"/>
	</css>
	<css name="$SmallNationButtonText">
		<fontSize value="13"/>
		<marginRight value="10px"/>
	</css>
	<css name="$BigNationButtonText">
		<fontSize value="15"/>
		<marginRight value="18px"/>
	</css>
	<block className="ShipResearchMainInset">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerResearchInset"/>
		<styleClass value="$Fullsize"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundImage value="url:../bg/nation_tree.jpg"/>
				<backgroundSize value="cover"/>
				<marginTop value="-60px"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="currentNationName &amp;&amp; realmConstants.showShipTreeBg == true"/>
			<bind name="appear" value="'onArrowsDataUpdate'; 0.3; 0.15; {alpha: 0}; {alpha: 1}"/>
			<style>
				<position value="absolute"/>
				<bottom value="0px"/>
				<right value="0px"/>
			</style>
			<bind name="instance" value="'NationBackgroundImage'; currentNationName &amp;&amp; realmConstants.showShipTreeBg == true ? {_currentNationName: currentNationName} : null"/>
		</block>
		<block>
			<bind name="appear" value="'onArrowsDataUpdate'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
			<styleClass value="$MiddleAligned"/>
			<bind name="width" value="(maxNodesHorizontal + 1) * block.width - (maxNodesHorizontal &gt; 10 ? 120 : 0)"/>
			<style>
				<marginTop value="48px"/>
				<width value="1px"/>
				<height value="24px"/>
			</style>
			<bind name="repeat" value="currentBranchTypes; 'BranchTypeLabel'; {_blockWidth: 164}"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<overflow value="scroll"/>
				<marginRight value="3px"/>
			</style>
			<styleClass value="$DefaultScrollBar"/>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<bind name="appear" value="'addedToStage'; 0.15; 0.15; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'onArrowsDataUpdate'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<style>
						<position value="absolute"/>
						<width value="100%"/>
						<marginTop value="3px"/>
					</style>
					<bind name="repeat" value="5; 'LevelItem'"/>
				</block>
				<block>
					<styleClass value="$MiddleAligned"/>
					<style>
						<width value="1px"/>
						<height value="846px"/>
					</style>
					<bind name="var" value="{block: {width: 84, height: 85}}"/>
					<bind name="width" value="(maxNodesHorizontal + 1) * block.width - (maxNodesHorizontal &gt; 10 ? 120 : 0)"/>
					<block>
						<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerArrowsPainter; 
						'ships_tree'; 
						84; 85; 
						84; 48; 
						8; 4; 
						8; 6; 
						1; 
						2"/>
						<styleClass value="$Fullsize"/>
						<style>
							<position value="absolute"/>
						</style>
						<bind name="appear" value="'addedToStage'; 0.3; 0.5; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'onArrowsDataUpdate'; 0.3; 0.5; {alpha: 0}; {alpha: 1}"/>
					</block>
					<block>
						<style>
							<position value="absolute"/>
							<width value="100%"/>
						</style>
						<bind name="repeat" value="currentTreeNodes; 'ShipTreeElement'; {_block: block}"/>
						<bind name="appear" value="'addedToStage'; 0.3; 0.3; {alpha: 0, top: 15}; {alpha: 1, top: 0}"/>
						<bind name="appear" value="'onArrowsDataUpdate'; 0.3; 0.3; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="1px"/>
				<height value="37px"/>
			</style>
		</block>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.3; 0.4; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
			<bind name="stageSize"/>
			<bind name="watch" value="'isBigButton'; (stageHeight &gt;= 1000) &amp;&amp; (stageWidth &gt;= 1315)"/>
			<style>
				<position value="absolute"/>
				<left value="0px"/>
			</style>
			<bind name="style" value="'top'; isBigButton ? '8.5sh' : '12sh'"/>
			<bind name="repeat" value="isBigButton ? nations : 0; 'NationButtonBig'; {	currentNationName: currentNationName,
																		onNationButtonClick: onNationButtonClick}"/>
			<bind name="repeat" value="isBigButton ? 0 : nations; 'NationButtonSmall'; {	currentNationName: currentNationName,
																		onNationButtonClick: onNationButtonClick}"/>
		</block>
		<block className="icon_question_mark" type="native">
			<style>
				<position value="absolute"/>
				<top value="8px"/>
				<left value="6px"/>
			</style>
			<bind name="tooltip" value="'ModuleTreeHelpTooltip'; {}; 0"/>
			<bind name="appear" value="'addedToStage'; 0.3; 0.4; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
		</block>
	</block>
	<block className="NationButtonBig">
		<bind name="name" value="'upgrade_tree_button' + labelTF"/>
		<bind name="primaryEntityDH" value="'exploreShipContextTip'; CC.contextGuidingTip; SC.Context_guiding_tip.TIP_TYPES.NATIONS + '_' + labelTF"/>
		<bind name="primaryEntityDH" value="'buyShipContextTip'; CC.contextGuidingTip; SC.Context_guiding_tip.TIP_TYPES.NATIONS_BUY + '_' + labelTF"/>
		<bind name="watchDH" value="'shipContextGuidingTip'; ['exploreShipContextTip.contextGuidingTip.evActiveChanged', 'buyShipContextTip.contextGuidingTip.evActiveChanged']; buyShipContextTip.contextGuidingTip.active == true ? buyShipContextTip : exploreShipContextTip"/>
		<bind name="instance" value="'ContextGuidingTipHub'; {
												_tooltipID: shipContextGuidingTip.contextGuidingTip.id, 
												_tipPositioning: 'right', 
												_extraCondition: (currentNationName != labelTF),
												_offset: -3, 
												_screenOffset : 0, 
												_hideOnReasonClick :false

							}"/>
		<block className="button_navigation" type="native">
			<style>
				<width value="150px"/>
				<height value="72px"/>
			</style>
			<bind name="name" value="'upgrade_tree_button' + labelTF + ':' + (currentNationName == labelTF)"/>
			<bind name="selected" value="currentNationName == labelTF"/>
			<bind name="enabled" value="currentNationName != labelTF"/>
			<bind name="event" value="'buttonClick'; onNationButtonClick; labelTF"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<hitTest value="false"/>
			</style>
			<bind name="transition" value="currentNationName == labelTF; 0.3; {alpha: 0.8}; {alpha: 1}"/>
			<bind name="instance" value="'NationFlagsSmall'; {	shipCountry: labelTF, 
												_alpha: 0.6, 
												_width: '117px', 
												_height: '72px'}"/>
		</block>
		<block type="text">
			<styleClass value="$TextSecondaryNoFilter"/>
			<style>
				<width value="100%"/>
				<position value="absolute"/>
				<textAlign value="right"/>
				<bottom value="1px"/>
				<leading value="-1"/>
				<marginRight value="18px"/>
			</style>
			<bind name="class" value="'$Bold'"/>
			<bind name="class" value="'$FontSizeDefault'"/>
			<bind name="class" value=" (currentNationName == labelTF) ? '$FontColorAlmostBlack' : '$FontColorDefault'"/>
			<bind name="class" value=" (currentNationName == labelTF) ? '$FontGlowFilterBrightStrong' : '$FontDropShadowFilter1'"/>
			<bind name="text" value="toUpperCase(tr('IDS_' + toUpperCase(labelTF)))"/>
		</block>
	</block>
	<block className="NationButtonSmall">
		<bind name="name" value="'upgrade_tree_button' + labelTF"/>
		<bind name="primaryEntityDH" value="'exploreShipContextTip'; CC.contextGuidingTip; SC.Context_guiding_tip.TIP_TYPES.NATIONS + '_' + labelTF"/>
		<bind name="primaryEntityDH" value="'buyShipContextTip'; CC.contextGuidingTip; SC.Context_guiding_tip.TIP_TYPES.NATIONS_BUY + '_' + labelTF"/>
		<bind name="watchDH" value="'shipContextGuidingTip'; ['exploreShipContextTip.contextGuidingTip.evActiveChanged', 'buyShipContextTip.contextGuidingTip.evActiveChanged']; buyShipContextTip.contextGuidingTip.active ? buyShipContextTip : exploreShipContextTip"/>
		<bind name="instance" value="'ContextGuidingTipHub'; {
												_tooltipID: shipContextGuidingTip.contextGuidingTip.id, 
												_tipPositioning: 'right', 
												_extraCondition: (currentNationName != labelTF), 
												_offset: -3, 
												_screenOffset : 0, 
												_hideOnReasonClick :false

							}"/>
		<block className="button_navigation_small_no_label" type="native">
			<style>
				<width value="116px"/>
			</style>
			<bind name="name" value="'upgrade_tree_button' + labelTF + ':' + (currentNationName == labelTF)"/>
			<bind name="selected" value="currentNationName == labelTF"/>
			<bind name="enabled" value="currentNationName != labelTF"/>
			<bind name="event" value="'buttonClick'; onNationButtonClick; labelTF"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<hitTest value="false"/>
			</style>
			<bind name="transition" value="currentNationName == labelTF; 0.3; {alpha: 0.8}; {alpha: 1}"/>
			<bind name="instance" value="'NationFlagsSmall'; {	shipCountry: labelTF, 
												_alpha: 0.6, 
												_width: '52px', 
												_height: '32px'}"/>
		</block>
		<block type="text">
			<styleClass value="$TextSecondaryNoFilter"/>
			<style>
				<width value="100%"/>
				<position value="absolute"/>
				<textAlign value="right"/>
				<bottom value="1px"/>
				<leading value="-1"/>
				<marginRight value="10px"/>
			</style>
			<bind name="class" value="'$Bold'"/>
			<bind name="class" value="'$FontSizeSmall'"/>
			<bind name="class" value=" (currentNationName == labelTF) ? '$FontColorAlmostBlack' : '$FontColorDefault'"/>
			<bind name="class" value=" (currentNationName == labelTF) ? '$FontGlowFilterBrightStrong' : '$FontDropShadowFilter1'"/>
			<bind name="text" value="toUpperCase(tr('IDS_' + toUpperCase(labelTF)))"/>
		</block>
	</block>
	<css name="$FontGlowFilterBrightStrong">
		<dropShadowFilter value="1 90 0xffffff 0.6 5.0 3.0 0.9 2"/>
	</css>
	<block className="NationBackgroundImage">
		<style>
			<width value="686px"/>
			<height value="445px"/>
			<alpha value="0.13"/>
		</style>
		<bind name="style" value="'backgroundImage'; 'url:../nation_flag_tree/' + _currentNationName + '.png'"/>
	</block>
	<block className="ShipTreeShortElement">
		<bind name="name" value="'upgradeTree_' + shipInfo.fullName"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; shipId"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="watchDH" value="'upgradableShipInfo'; ['shipEntity.upgradableShipInfo.evUpdate']; shipEntity.upgradableShipInfo"/>
		<bind name="watch" value="'isOwned'; shipOwnEntity != null"/>
		<bind name="primaryEntityDH" value="'selectedShipEntity'; CC.ship; _selectedShipId; 'evUpdate'"/>
		<bind name="watchDH" value="'selectedShipInfo'; ['selectedShipEntity.ship.evUpdate', 'selectedShipEntity.ship.evCurrentSkinChanged']; selectedShipEntity.ship"/>
		<bind name="watchDH" value="'selectedShipInfo' + 'Slim'; ['selectedShipEntity.slimClientComponent.evUpdate']; selectedShipEntity.slimClientComponent"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY +  shipId; 'shipBuyPrice'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_EXPLORE + shipId; 'shipExplorePrice'"/>
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'accountCredits';	['resourceEntity.accountResource.evChangedCredit'];	resourceEntity.accountResource.credits"/>
		<bind name="watch" value="'availableToDisplay';	(shipInfo.group == 'start') || 
										(shipInfo.group == 'upgradeableExclusive') ||
										(shipInfo.group == 'upgradeable') || 
										(shipInfo.group == 'premium') || 
										(shipInfo.group == 'earlyAccess') ||
										(shipInfo.isEventLike)"/>
		<bind name="watch" value="'unavailable'; !(upgradableShipInfo.dependencyResearched || isOwned || upgradableShipInfo.isExplored || shipInfo.isEventLike)"/>
		<bind name="action" value="'buttonClick';	availableToDisplay	?	'selectShipUpgrade'
    													:	'' ; {shipId : shipId}"/>
		<style>
			<position value="absolute"/>
		</style>
		<bind name="style" value="'marginLeft'; _isNextShip ? '-35%' : '0px'"/>
		<bind name="left" value="x * $parent.blockWidth + (_isNextShip ? $parent.blockWidth/2 : 15) + (x&gt;0 &amp;&amp; _isNextShip &amp;&amp; _totalShips&gt;1 ? 10 : 0)"/>
		<bind name="top" value="y * $parent.blockHeight"/>
		<block className="BlurMapCustom">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
			</style>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap5_feather" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<block className="button_dock" type="native">
			<bind name="tooltip" value="'ShipExtendedTooltip'; availableToDisplay	? { shipId: shipId, _hOffset: 0, _testShipParams: selectedShipInfo.params}
																	: null; 2"/>
			<bind name="tooltip" value="'SimpleWarningTooltip'; availableToDisplay	? null
																	: { _text: 'IDS_UNAVAILABLE_TO_DISPLAY_' + toUpperCase(shipInfo.group) }; 0"/>
			<bind name="enabled" value="availableToDisplay"/>
			<bind name="style" value="'alpha'; (availableToDisplay &amp;&amp; shipInfoSlim.isDownloaded) ? 1 : 0.5"/>
			<bind name="style" value="'minWidth'; _isNextShip ? 100 : 0"/>
			<params>
				<param name="focusable" value="false"/>
			</params>
			<params>
				<param name="name" value="upgradeTree_button_go_to_previous_ship"/>
			</params>
			<block>
				<bind name="visible" value="_isNextShip == true"/>
				<styleClass value="$MiddleAligned"/>
				<style>
					<width value="100px"/>
					<height value="59px"/>
					<marginBottom value="-6px"/>
					<backgroundStretchX value="true"/>
					<backgroundStretchY value="true"/>
					<hitTest value="false"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:' + (upgradableShipInfo.dependencyResearched || isOwned ? shipInfo.pathPreview : shipInfo.pathPreviewDS)"/>
				<block className="icon_check" type="native">
					<style>
						<position value="absolute"/>
						<right value="4px"/>
						<top value="4px"/>
					</style>
					<bind name="visible" value="isOwned"/>
				</block>
			</block>
			<block>
				<style>
					<marginBottom value="6px"/>
					<hitTest value="false"/>
				</style>
				<block className="icon_wreath" type="native">
					<style>
						<position value="absolute"/>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="upgradableShipInfo.isElite || shipInfo.isPremium || shipInfo.uiSpecial"/>
					<bind name="gotoAndStop!" value="(shipInfo.isPremium || shipInfo.uiSpecial) 	? 'premium' : 'elite'"/>
				</block>
				<block className="icon_ship" type="native">
					<style>
						<marginLeft value="6px"/>
						<marginTop value="8px"/>
						<hitTest value="false"/>
					</style>
					<bind name="gotoAndStop!" value="shipInfo.isPremium || shipInfo.uiSpecial 	? shipInfo.subtype + '_P'
																				: unavailable ? shipInfo.subtype + '_U'
																				: shipInfo.subtype"/>
				</block>
				<block>
					<style>
						<marginRight value="3px"/>
						<marginTop value="2px"/>
						<hitTest value="false"/>
					</style>
					<bind name="instance" value="'InvertableTextLine'; { _name: 'ship_level_name',
														_text: (shipInfo.levelRome + ' ' + toUpperCase(tr(shipInfo.nameIDS))), 
														_invert: unavailable, 
														_normalClass: (shipInfo.isPremium || shipInfo.uiSpecial) ? '$FontShipnameGoldenNoFilter' : '$FontShipnameWhiteNoFilter', 
														_invertedClass: '$FontShipnameBlackNoFilter'}"/>
				</block>
				<block>
					<style>
						<marginLeft value="-5px"/>
						<marginTop value="3px"/>
						<marginRight value="3px"/>
					</style>
					<bind name="visible" value="isOwned &amp;&amp; (_isNextShip != true)"/>
					<block className="icon_check" type="native"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
				<bind name="watchDH" value="'inset'; ['dockEntity.insetComponent.evUpdate']; dockEntity.insetComponent.inset"/>
				<bind name="primaryEntityDH" value="'exploreShipContextTip'; CC.contextGuidingTip; SC.Context_guiding_tip.TIP_TYPES.MODULES_NEXT + '_' + shipInfo.country"/>
				<bind name="primaryEntityDH" value="'buyShipContextTip'; CC.contextGuidingTip; SC.Context_guiding_tip.TIP_TYPES.MODULES_NEXT_BUY + '_' + shipInfo.country"/>
				<bind name="watchDH" value="'shipContextGuidingTip'; ['exploreShipContextTip.contextGuidingTip.evActiveChanged', 'buyShipContextTip.contextGuidingTip.evActiveChanged']; buyShipContextTip.contextGuidingTip.active == true ? buyShipContextTip : exploreShipContextTip"/>
				<bind name="instance" value="'ContextGuidingTipModuleTreeElement'; (_isNextShip	&amp;&amp;	
																		inset == LobbyConstants.SHIP_MODULES &amp;&amp;			
																		shipContextGuidingTip.contextGuidingTip.targetID == shipId)  ?
																																		{
																																			_tooltipID: shipContextGuidingTip.contextGuidingTip.id,
																																			_tipPositioning: 'right', 
																																			_offset: 5, 
																																			_moduleIndex: y

																																		}
																																	: null"/>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginTop value="-6px"/>
			</style>
			<bind name="instance" value="'PriceTag'; (_withPrice &amp;&amp; !(isOwned) &amp;&amp; !(upgradableShipInfo.isExplored))	?	{	priceInfo: shipExplorePrice.prices[0],
																											_deficit: ((upgradableShipInfo.expDeficit &gt; 0) || !(upgradableShipInfo.dependencyResearched)),
																											_showDiscountTag: true}
																									:	null"/>
			<bind name="instance" value="'PriceTag'; (_withPrice &amp;&amp; !(isOwned) &amp;&amp; upgradableShipInfo.isExplored)	? {	priceInfo: shipBuyPrice.prices[0],
																									_deficit: ((accountCredits - shipBuyPrice.prices[0].finalPrice) &lt; 0),
																									_showDiscountTag: true}
																								: null"/>
		</block>
		<block className="thumb_hl_red" type="native">
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
			<bind name="visible" value="!(shipInfoSlim.isDownloaded)"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<alpha value="1.2"/>
			</style>
			<bind name="tooltip" value="'ShipExtendedTooltip'; !(shipInfoSlim.isDownloaded)	? { shipId: shipId, _hOffset: 0, _testShipParams: selectedShipInfo.params}
																			: null; 2"/>
			<bind name="action" value="'click';	shipInfoSlim.isDownloaded	? null : 'exitGameAndContinueDownloading' "/>
		</block>
		<block>
			<bind name="visible" value="!(shipInfoSlim.isDownloaded)"/>
			<style>
				<hitTest value="false"/>
				<width value="39px"/>
				<height value="39px"/>
				<backgroundImage value="url:../service_kit/icons/icon_download.png"/>
			</style>
			<styleClass value="$MiddleVAlignedAbsolutely"/>
			<styleClass value="$MiddleAligned"/>
			<bind name="transition" value="rollOver; 0.07; {alpha: 0.75}; {alpha: 1}"/>
		</block>
	</block>
	<css name="$ShipThumbMargins">
		<marginTop value="10px"/>
		<marginBottom value="4px"/>
		<marginLeft value="6px"/>
		<marginRight value="6px"/>
	</css>
	<block className="ShipTreeElement">
		<bind name="name" value="'upgradeTree_' + shipInfo.fullName"/>
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerShipInfo"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; shipId"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="watchDH" value="'upgradableShipInfo'; ['shipEntity.upgradableShipInfo.evUpdate']; shipEntity.upgradableShipInfo"/>
		<bind name="watch" value="'isOwned'; shipOwnEntity != null"/>
		<bind name="watchDH" value="'timeRent';	['shipOwnEntity.ownShip.evUpdateDockState'];	shipOwnEntity.ownShip.timeRent"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_EXPLORE + shipId; 'shipExplorePrice'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY + shipId; 'shipBuyPrice'"/>
		<bind name="feature" value="'17'; ''"/>
		<bind name="watch" value="'availableToDisplay';	(shipInfo.group == 'start') ||
										(shipInfo.group == 'upgradeableExclusive') ||
										(shipInfo.group == 'upgradeable') ||
										(shipInfo.group == 'premium') ||
										(shipInfo.group == 'earlyAccess') ||
										(shipInfo.isEventLike)"/>
		<style>
			<width value="1px"/>
			<height value="1px"/>
			<position value="absolute"/>
		</style>
		<bind name="style" value="'width'; _block.width * 2"/>
		<bind name="style" value="'height'; _block.height"/>
		<bind name="left" value="(x * _block.width)"/>
		<bind name="top" value="(y * _block.height)"/>
		<block>
			<styleClass value="$Fullsize"/>
			<styleClass value="$ShipThumbMargins"/>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<block className="white_panel_gradient" type="native">
					<bind name="transition" value="rollOver &amp;&amp; shipInfoSlim.isDownloaded; 0.1; {alpha: 0}; {alpha: 0.35}"/>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block className="ship_tree_element_frame" type="native">
					<bind name="style" value="'alpha';	isOwned																																			? 0.85 :
										(!(upgradableShipInfo.isExplored) &amp;&amp; upgradableShipInfo.expDeficit &lt;= 0 &amp;&amp; upgradableShipInfo.dependencyResearched) &amp;&amp; !shipInfo.isEventLike 	? 0.2 :
										(upgradableShipInfo.isExplored &amp;&amp; !isOwned &amp;&amp; upgradableShipInfo.creditsDeficit &lt;= 0) &amp;&amp; !shipInfo.isEventLike									? 0.2
																																														: 0"/>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block className="thumb_hl_red" type="native">
					<bind name="visible" value="!shipInfoSlim.isDownloaded"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
						<alpha value="1.2"/>
					</style>
				</block>
				<bind name="primaryEntityDH" value="'exploreShipContextTip'; CC.contextGuidingTip; SC.Context_guiding_tip.TIP_TYPES.TECH_TREE_BUY + '_' + shipInfo.country"/>
				<bind name="primaryEntityDH" value="'buyShipContextTip'; CC.contextGuidingTip; SC.Context_guiding_tip.TIP_TYPES.TECH_TREE_BUY_BUY + '_' + shipInfo.country"/>
				<bind name="watchDH" value="'shipContextGuidingTip'; ['exploreShipContextTip.contextGuidingTip.evActiveChanged', 'buyShipContextTip.contextGuidingTip.evActiveChanged']; buyShipContextTip.contextGuidingTip.active == true ? buyShipContextTip : exploreShipContextTip"/>
				<bind name="watch" value="'tipTargetID'; shipContextGuidingTip.contextGuidingTip.targetID"/>
				<bind name="instance" value="'ContextGuidingTipHub'; tipTargetID == shipId 	? 	{
																	_tooltipID: shipContextGuidingTip.contextGuidingTip.id, 
												_tipPositioning: 'bottom', 
																	_extraCondition: tipTargetID == shipId, 
												_offset: 0, 
												_screenOffset : 150, 
												_onShowDelay : 0.6
																}
															:	null"/>
			</block>
			<block>
				<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
				<styleClass value="$Fullsize"/>
				<style>
					<margin value="4px"/>
					<backgroundColor value="0x01FFFFFF"/>
				</style>
				<bind name="clickSplit"/>
				<bind name="action" value="'click'; !(shipInfoSlim.isDownloaded) ? 'exitGameAndContinueDownloading' : null"/>
				<bind name="action" value="'left_click';  (availableToDisplay &amp;&amp; shipInfoSlim.isDownloaded)	? 'selectShipUpgrade'
																							: '' ; {shipId : shipId}"/>
				<bind name="menu" value="'ShipTreeMenu'; availableToDisplay &amp;&amp; (feature_17 != 'locked') &amp;&amp; shipInfoSlim.isDownloaded ? {shipId: shipId}
																													: null"/>
				<bind name="tooltip" value="'ShipExtendedTooltip'; availableToDisplay ? {shipId: shipId, _hOffset: 0} : null; 2"/>
				<bind name="tooltip" value="'SimpleWarningTooltip'; availableToDisplay ? null : {_text: 'IDS_UNAVAILABLE_TO_DISPLAY_' + toUpperCase(shipInfo.group)}; 0"/>
				<bind name="watch" value="'isActiveState';	(	(!(upgradableShipInfo.isExplored) &amp;&amp; upgradableShipInfo.dependencyResearched) ||
												(upgradableShipInfo.isExplored &amp;&amp; !isOwned &amp;&amp; upgradableShipInfo.creditsDeficit &lt;= 0) ||
												upgradableShipInfo.isExplored)
											&amp;&amp; !shipInfo.isEventLike
											&amp;&amp; shipInfoSlim.isDownloaded ? true : false"/>
				<bind name="transition" value="((isActiveState || rollOver) &amp;&amp; shipInfoSlim.isDownloaded); 0.15; {alpha: 0.3}; {alpha: 1}"/>
				<block>
					<style>
						<width value="115px"/>
						<height value="68px"/>
						<backgroundStretchX value="true"/>
						<backgroundStretchY value="true"/>
						<position value="absolute"/>
					</style>
					<styleClass value="$MiddleVAligned"/>
					<bind name="style" value="'backgroundImage'; 'url:' + (upgradableShipInfo.dependencyResearched || isOwned ? shipInfo.pathPreview : shipInfo.pathPreviewDS)"/>
				</block>
				<block>
					<styleClass value="$Fullsize"/>
					<block className="icon_wreath" type="native">
						<bind name="visible" value="upgradableShipInfo.isElite || shipInfo.isPremium || shipInfo.uiSpecial"/>
						<style>
							<position value="absolute"/>
							<marginTop value="-1px"/>
						</style>
						<bind name="gotoAndStop!" value="(shipInfo.isPremium || shipInfo.uiSpecial) 	? 'premium'
																					: 'elite'"/>
					</block>
					<block className="icon_ship" type="native">
						<style>
							<marginLeft value="5px"/>
							<marginTop value="7px"/>
							<marginRight value="6px"/>
						</style>
						<bind name="gotoAndStop!" value="shipInfo.isPremium || shipInfo.uiSpecial ? shipInfo.subtype + '_P' : shipInfo.subtype"/>
					</block>
					<block type="text">
						<style>
							<marginTop value="7px"/>
							<marginRight value="8px"/>
						</style>
						<styleClass value="$TextDefaultBoldNM"/>
						<bind name="class" value="shipInfo.isPremium || shipInfo.uiSpecial 	? '$FontColorGolden'
																			: '$FontColorDefault'"/>
						<bind name="text" value="shipInfo.levelRome"/>
					</block>
					<block>
						<style>
							<position value="absolute"/>
							<right value="3px"/>
							<top value="2px"/>
						</style>
						<block className="icon_discount" type="native">
							<style>
								<bottom value="1px"/>
							</style>
							<bind name="visible" value="	((shipBuyPrice.prices[0].finalPrice != shipBuyPrice.prices[0].basePrice) &amp;&amp; !isOwned) ||
										((shipExplorePrice.prices[0].finalPrice != shipExplorePrice.prices[0].basePrice) &amp;&amp; !(upgradableShipInfo.isExplored))"/>
							<bind name="gotoAndStop!" value="'normal'"/>
						</block>
						<block>
							<bind name="visible" value="!shipInfo.isEventLike &amp;&amp; shipInfo.group != 'earlyAccess'"/>
							<style>
								<right value="1px"/>
							</style>
							<bind name="instance" value="'PriceTag';	!isOwned &amp;&amp; !(upgradableShipInfo.isExplored) &amp;&amp; upgradableShipInfo.dependencyResearched		?   { priceInfo: shipInfo.group == 'upgradeableExclusive' ? {finalPrice: upgradableShipInfo.costFreeXP, currency: 'freexp' } : shipExplorePrice.prices[0], 
																																					_small: true } :

													!isOwned &amp;&amp; upgradableShipInfo.isExplored												? { priceInfo: shipBuyPrice.prices[0], _small: true }
																																			: null"/>
						</block>
						<block className="icon_check" type="native">
							<bind name="visible" value="(isOwned &amp;&amp; (timeRent == 0))"/>
							<bind name="name" value="'upgradeTree_ShipIsOwned_' + shipInfo.fullName"/>
							<style>
								<top value="6px"/>
								<right value="3px"/>
								<left value="4px"/>
							</style>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block type="text">
						<style>
							<position value="absolute"/>
							<right value="2px"/>
							<bottom value="-6px"/>
						</style>
						<styleClass value="$TextDefaultBoldNM"/>
						<bind name="class" value="shipInfo.isPremium || shipInfo.uiSpecial 	? '$FontColorGolden'
																				: '$FontColorDefault'"/>
						<bind name="text" value="toUpperCase(tr(shipInfo.nameIDS))"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block>
				<bind name="visible" value="(timeRent &gt; 0)"/>
				<style>
					<position value="absolute"/>
					<right value="3px"/>
					<top value="1px"/>
				</style>
				<bind name="instance" value="'RentTimer'; (timeRent &gt; 0) ? {_timeRent: timeRent} : null"/>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleVAlignedAbsolutely"/>
			<bind name="instance" value="'ShipLabelComingSoon'; shipInfo.isEventLike &amp;&amp; !isOwned ? {} : null"/>
		</block>
		<block>
			<bind name="visible" value="shipInfo.group == 'earlyAccess' &amp;&amp; !isOwned"/>
			<bind name="transition" value="rollOver; 0.07; {alpha: 0.7}; {alpha: 1}"/>
			<style>
				<hitTest value="false"/>
				<width value="31px"/>
				<height value="31px"/>
				<backgroundImage value="url:../service_kit/icons/icon_early_access.png"/>
			</style>
			<styleClass value="$MiddleVAlignedAbsolutely"/>
			<styleClass value="$MiddleAligned"/>
		</block>
		<block>
			<bind name="visible" value="!(shipInfoSlim.isDownloaded)"/>
			<bind name="transition" value="rollOver; 0.07; {alpha: 0.7}; {alpha: 1}"/>
			<style>
				<hitTest value="false"/>
				<width value="39px"/>
				<height value="39px"/>
				<backgroundImage value="url:../service_kit/icons/icon_download.png"/>
			</style>
			<styleClass value="$MiddleVAlignedAbsolutely"/>
			<styleClass value="$MiddleAligned"/>
		</block>
	</block>
	<block className="ShipLabelComingSoon">
		<block className="icon_issued" type="native">
			<style>
				<marginLeft value="100px"/>
				<marginTop value="12px"/>
				<hitTest value="false"/>
				<alpha value="0.9"/>
			</style>
			<bind name="scaleX" value="0.8"/>
			<bind name="scaleY" value=" 0.8"/>
			<bind name="rotation" value="-3"/>
			<innerBind elementName="item.item" name="text" value="toUpperCase(tr('IDS_UNAVAILABLE_TO_DISPLAY_SOON'))"/>
			<bind name="gotoAndPlay!" value="'issued'"/>
		</block>
	</block>
	<css name="$FontModuleWhite">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="13"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$FontModuleGolden">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<selectable value="false"/>
		<textColor value="0xFFCC66"/>
	</css>
	<css name="$FontModuleBlack">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="13"/>
		<selectable value="false"/>
		<textColor value="0x08222a"/>
	</css>
	<block className="ModuleTreeElement">
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerModuleUpgradeInfo"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_EXPLORE + moduleInfo.id; 'moduleExplorePrice'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY + moduleInfo.id; 'moduleBuyPrice'"/>
		<bind name="watchDH" value="'isNeedRepair';		['_playerShipInfo.evUpdateDockState'];	_playerShipInfo.isNeedRepair"/>
		<bind name="watchDH" value="'isNeedShell';		['_playerShipInfo.evUpdateDockState'];	_playerShipInfo.isNeedShell"/>
		<bind name="watchDH" value="'isLocked';			['_playerShipInfo.evUpdateLock'];		_playerShipInfo.isLocked"/>
		<bind name="watchDH" value="'isInFormation';		['_playerShipInfo.evUpdateLock'];		_playerShipInfo.isInFormation"/>
		<style>
			<width value="100px"/>
			<height value="100px"/>
			<position value="absolute"/>
		</style>
		<bind name="left" value="(x * $parent.blockWidth)"/>
		<bind name="top" value="(y * $parent.blockHeight)"/>
		<bind name="name" value="moduleInfo.nameIDS"/>
		<block>
			<style>
				<position value="absolute"/>
				<left value="5px"/>
				<top value="10px"/>
				<width value="90px"/>
				<height value="100px"/>
			</style>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap5_feather" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<marginTop value="12px"/>
				<marginBottom value="28px"/>
				<marginRight value="20px"/>
				<marginLeft value="20px"/>
			</style>
			<block className="dock_thumb_highlight" type="native">
				<styleClass value="$MouseDisable"/>
				<styleClass value="$Fullsize"/>
				<style>
					<position value="absolute"/>
				</style>
				<bind name="gotoAndStop!" value="highLight"/>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="50px"/>
					<height value="50px"/>
				</style>
				<block>
					<styleClass value="$MiddleAligned"/>
					<style>
						<marginTop value="-7px"/>
					</style>
					<bind name="event" value="'click'; onModuleClick; moduleInfo.id"/>
					<block className="icon_tree_module_states" type="native">
						<bind name="tooltip" value="'ModuleTreeInfotip'; {	_costXP: moduleExplorePrice.prices[0].finalPrice,
															_costCR: moduleBuyPrice.prices[0].finalPrice,
															_testModuleParams: (_upgradableShipInfo.isExplored) ? _installedModulesParams[moduleInfo.type] : _stockModulesMap[moduleInfo.type],
															_shipParams: _shipParams,
															_shipIsOwned: _isOwned, 
															_shipIsResearched: _upgradableShipInfo.isExplored,
															_isLocked: isLocked,
															_isInFormation: isInFormation,
															_isNeedRepair: isNeedRepair,
															_isNeedShell: isNeedShell,
															priceInfo: priceInfo,
															moduleInfo: moduleInfo,
															_isEventLike: _shipInfo.isEventLike
															 }; 5"/>
						<bind name="tooltip" value="'ModuleTreeTooltip'; { _shipIsResearched: _upgradableShipInfo.isExplored,
															_testModuleParams: (_upgradableShipInfo.isExplored) ? _installedModulesParams[moduleInfo.type] : _stockModulesMap[moduleInfo.type],
															_shipIsOwned: _isOwned,
															moduleExplorePrice: moduleExplorePrice,
															moduleBuyPrice: moduleBuyPrice,
															moduleInfo: moduleInfo,
															_shipParams: _shipParams,
															_isEventLike: _shipInfo.isEventLike
															}"/>
						<bind name="selected" value="selected"/>
						<bind name="style" value="'alpha'; _upgradableShipInfo.isExplored ? 1 : 0.7"/>
						<bind name="gotoAndStop!" value="moduleInfo.type + (((moduleInfo.toPurchase &amp;&amp; moduleInfo.creditsDeficit &lt;= 0) || (moduleInfo.toExplore &amp;&amp; moduleInfo.expDeficit &lt;= 0)) ? '_A' : '_P') "/>
					</block>
				</block>
				<block>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$MouseDisable"/>
					<style>
						<marginTop value="-9px"/>
					</style>
					<block type="text">
						<styleClass value="$TextSecondaryNoFilter"/>
						<bind name="class" value="'$Bold'"/>
						<bind name="class" value="_upgradableShipInfo.isExplored ? '$FontColorAlmostBlack' : '$FontColorDefault'"/>
						<style>
							<textAlign value="center"/>
							<maxWidth value="90"/>
							<leading value="-3"/>
							<alpha value="0.35"/>
							<top value="1px"/>
						</style>
						<bind name="text" value="moduleInfo.nameIDS"/>
					</block>
					<block type="text">
						<styleClass value="$TextSecondaryNoFilter"/>
						<bind name="class" value="'$Bold'"/>
						<bind name="class" value="_upgradableShipInfo.isExplored ? '$FontColorAlmostBlack' : '$FontColorDefault'"/>
						<style>
							<position value="absolute"/>
							<textAlign value="center"/>
							<maxWidth value="90"/>
							<leading value="-3"/>
							<alpha value="0.1"/>
							<top value="-1px"/>
						</style>
						<bind name="text" value="moduleInfo.nameIDS"/>
					</block>
					<block type="text">
						<styleClass value="$TextSecondaryNoFilter"/>
						<bind name="class" value="'$Bold'"/>
						<bind name="class" value="_upgradableShipInfo.isExplored ? '$FontColorAlmostBlack' : '$FontColorDefault'"/>
						<style>
							<position value="absolute"/>
							<textAlign value="center"/>
							<maxWidth value="90"/>
							<leading value="-3"/>
							<alpha value="0.15"/>
							<left value="-1px"/>
						</style>
						<bind name="text" value="moduleInfo.nameIDS"/>
					</block>
					<block type="text">
						<styleClass value="$TextSecondaryNoFilter"/>
						<bind name="class" value="'$Bold'"/>
						<bind name="class" value="_upgradableShipInfo.isExplored ? '$FontColorAlmostBlack' : '$FontColorDefault'"/>
						<style>
							<position value="absolute"/>
							<textAlign value="center"/>
							<maxWidth value="90"/>
							<leading value="-3"/>
							<alpha value="0.15"/>
							<left value="1px"/>
						</style>
						<bind name="text" value="moduleInfo.nameIDS"/>
					</block>
					<block type="text">
						<bind name="class" value="_upgradableShipInfo.isExplored ? (moduleInfo.count.Installed &gt; 0 ? '$FontModuleGolden' : '$FontModuleWhite' ) : '$FontModuleBlack'"/>
						<style>
							<position value="absolute"/>
							<textAlign value="center"/>
							<maxWidth value="90"/>
							<leading value="-3"/>
						</style>
						<bind name="text" value="moduleInfo.nameIDS"/>
					</block>
				</block>
				<block>
					<bind name="visible" value="!(_shipInfo.isEventLike &amp;&amp; !_isOwned)"/>
					<styleClass value="$MiddleAligned"/>
					<block>
						<style>
							<marginTop value="-4px"/>
						</style>
						<bind name="instance" value="'PriceTag'; !(moduleInfo.isExplored) &amp;&amp; !(moduleInfo.isStock) &amp;&amp; (moduleInfo.toExplore || !(_upgradableShipInfo.isExplored))	? {priceInfo: moduleExplorePrice.prices[0], _deficit: ((moduleInfo.expDeficit &gt; 0) || !(_upgradableShipInfo.isExplored)), _showDiscountTag:true}
																																									: moduleInfo.toPurchase ? {priceInfo: moduleBuyPrice.prices[0], _deficit: (moduleInfo.creditsDeficit &gt; 0), _showDiscountTag:true}
																																									: null"/>
					</block>
				</block>
				<block className="icon_check" type="native">
					<styleClass value="$MouseDisable"/>
					<style>
						<position value="absolute"/>
						<right value="-8px"/>
						<top value="-8px"/>
					</style>
					<bind name="visible" value="moduleInfo.count.Installed &gt; 0"/>
				</block>
			</block>
		</block>
		<bind name="watch" value="'contextGuidingTipId'; moduleInfo.isExplored ? SC.Context_guiding_tip.TIP_TYPES.MODULES_BUY_MODULE : SC.Context_guiding_tip.TIP_TYPES.MODULES_EXPLORE_MODULE"/>
		<bind name="primaryEntityDH" value="'modulesCGT'; CC.contextGuidingTip; contextGuidingTipId"/>
		<bind name="watch" value="'contextGuidingTipEnabled'; (modulesCGT.contextGuidingTip.targetID == moduleInfo.name)"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'inset'; ['dockEntity.insetComponent.evUpdate']; dockEntity.insetComponent.inset"/>
		<bind name="var" value="{dhNotificationEnabled : false}"/>
		<bind name="watchDH" value="'dhNotificationEnabled'; ['modulesCGT.contextGuidingTip.evActiveChanged']; 	(modulesCGT.contextGuidingTip.active || dhNotificationEnabled) 	&amp;&amp; 
																								contextGuidingTipEnabled 										&amp;&amp;	
																								inset == LobbyConstants.SHIP_MODULES"/>
		<bind name="instance" value="'ContextGuidingTipModuleTreeElement'; !dhNotificationEnabled 	? 	null
																					: 	{
																							_tooltipID: contextGuidingTipId,
																							_tipPositioning: 'right', 
																							_offset: -23,
																							_moduleIndex: y

																						}"/>
	</block>
	<block className="ShipModulesMainInset">
		<styleClass value="$Fullsize"/>
		<bind name="instance" value="'ModuleResearch'; {shipId: shipIdForModuleInset}"/>
	</block>
	<block className="ModuleResearch">
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; shipId"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="watchDH" value="'upgradableShipInfo'; ['shipEntity.upgradableShipInfo.evUpdate']; shipEntity.upgradableShipInfo"/>
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="watch" value="'isOwned'; shipOwnEntity != null"/>
		<bind name="var" value="{researchElementMinWidth: 500}"/>
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerModernizations"/>
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerResearchModuleInset"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_EXPLORE + shipId; 'shipExplorePrice'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY + shipId; 'shipBuyPrice'"/>
		<bind name="watchDH" value="'isNeedRepair';			['shipOwnEntity.ownShip.evUpdateDockState'];	shipOwnEntity.ownShip.isNeedRepair"/>
		<bind name="watchDH" value="'isNeedShell';			['shipOwnEntity.ownShip.evUpdateDockState'];	shipOwnEntity.ownShip.isNeedShell"/>
		<bind name="watchDH" value="'playerShipParams';		['shipOwnEntity.ownShip.evShipParamsUpdate'];	shipOwnEntity.ownShip.params"/>
		<bind name="watchDH" value="'canBuySomeAbility';		['shipOwnEntity.ownShip.evUpdateAbilities'];	shipOwnEntity.ownShip.canBuySomeAbility"/>
		<bind name="watchDH" value="'exp';					['shipOwnEntity.ownShip.evUpdateConfig'];		shipOwnEntity.ownShip.exp"/>
		<styleClass value="$Fullsize"/>
		<bind name="style" value="'width'; (25 + maxModuleWidth * blockWidth) &gt; researchElementMinWidth ? (25 + maxModuleWidth * blockWidth) : researchElementMinWidth"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="fade" value="(shipId &gt; 0); 0.15; {alpha: 0}; {alpha: 1}"/>
			<block>
				<bind name="appear" value="'addedToStage'; 0.3; 0.2; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
				<bind name="watch" value="'carouselRows'; (userPrefs.curRowCountIndex == null) ? 0 : userPrefs.curRowCountIndex"/>
				<bind name="watch" value="'isSmallCarouselView'; (userPrefs.isSmallCarouselView == null) ? false : userPrefs.isSmallCarouselView"/>
				<bind name="watch" value="'carouselHeight'; isSmallCarouselView	?	(carouselRows == 1) ? 261 :
																	(carouselRows == 2) ? 324
																						: 198
																: 	198"/>
				<bind name="watch" value="'researchElementMaxHeight'; stageHeight - carouselHeight - 98 - 60 - 31"/>
				<style>
					<marginTop value="98px"/>
					<position value="absolute"/>
					<height value="100%"/>
					<width value="1px"/>
					<marginBottom value="1px"/>
				</style>
				<bind name="style" value="'width'; (25 + maxModuleWidth * blockWidth) &gt; researchElementMinWidth ? (25 + maxModuleWidth * blockWidth) : researchElementMinWidth"/>
				<bind name="style" value="'marginBottom'; carouselHeight"/>
				<block>
					<style>
						<marginTop value="-27px"/>
						<width value="100%"/>
					</style>
					<bind name="instance" value="'ShipHeaderModuleTree'; {
					_shipName: toUpperCase(tr(shipInfo.nameIDS + '_FULL')),
					_levelRome: shipInfo.levelRome,
					_isElite: upgradableShipInfo.isElite,
					_isPremium: shipInfo.isPremium,
					_shipExp: exp,
					_isOwned: isOwned,
					_isExplored: upgradableShipInfo.isExplored,
					_totalCostXP: upgradableShipInfo.totalCostXP,
					_expDeficit: upgradableShipInfo.expDeficit,
					_costCR: shipInfo.costCR,
					_costGold: shipInfo.costGold,
					_creditsDeficit: upgradableShipInfo.creditsDeficit,
					_dependencyResearched: upgradableShipInfo.dependencyResearched,
					_isDownloaded: shipInfoSlim.isDownloaded,
					_unavailable: !(upgradableShipInfo.dependencyResearched || isOwned || upgradableShipInfo.isExplored || (shipInfo.isEventLike)),
					_shipId: shipId,
					_subtype: shipInfo.subtype,
					_uiSpecial: shipInfo.uiSpecial,
					_eventShips: shipInfo.isEventLike,
					_group: shipInfo.group,
					letterSpacing: 0.8,
					_buyPrice: shipBuyPrice.prices[0],
					_buyPriceFinal: shipBuyPrice.prices[0].finalPrice,
					_explorePrice: shipExplorePrice.prices[0],
					_explorePriceFinal: shipExplorePrice.prices[0].finalPrice }"/>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<height value="1px"/>
						<marginTop value="-4px"/>
						<overflow value="scroll"/>
					</style>
					<bind name="watch" value="'modulesTreeHeight'; maxNodesVertical * blockHeight + ((currentTreeNodes.length &gt; 0 || prevShips.length &gt; 0) ? 25 : 15)"/>
					<bind name="watch" value="'consumesModsElementHeight'; curPage == 0 ? 175 : 110"/>
					<bind name="watch" value="'modulesTreeContainerHeight'; (researchElementMaxHeight - modulesTreeHeight) &gt; consumesModsElementHeight 	? modulesTreeHeight 
																																		: (researchElementMaxHeight - consumesModsElementHeight)"/>
					<bind name="visible" value="shipInfo.subtype != ShipTypes.Submarine"/>
					<bind name="style" value="'height'; (shipInfo.subtype == ShipTypes.AircraftCarrier &amp;&amp; curPage == 0) 	? (researchElementMaxHeight * 0.42 &gt; modulesTreeHeight ? modulesTreeHeight : researchElementMaxHeight * 0.42) 
																										: modulesTreeContainerHeight"/>
					<styleClass value="$DefaultScrollBar"/>
					<style>
						<scrollbarController value="lesta.unbound.style.UbScrollingControllerModern"/>
					</style>
					<bind name="var" value="{moduleScrollIndex: 0, minBlocksOnScreen: 1}"/>
					<bind name="scrollController" value="'ModulesScroll'; blockHeight; minBlocksOnScreen"/>
					<bind name="catch" value="'evModulesScrollToIndexEvent'"/>
					<bind name="changeDispatch" value="moduleScrollIndex;  	'ModulesScrollScrollToIndex' : ''; moduleScrollIndex; SC.Common.UBSCOPE_EVENT_DIRECTIONS.NONE"/>
					<bind name="dispatch" value="'addedToStage'; 			'ModulesScrollScrollToIndex' : ''; moduleScrollIndex; SC.Common.UBSCOPE_EVENT_DIRECTIONS.NONE; 0.1"/>
					<bind name="dispatch" value="'mouseWheel'; 'evModuleMouseWheel'; null; SC.Common.UBSCOPE_EVENT_DIRECTIONS.DOWN"/>
					<bind name="dispatch" value="'removedFromStage'; 'evModuleMouseWheelReset'; null; SC.Common.UBSCOPE_EVENT_DIRECTIONS.DOWN"/>
					<bind name="firstEntityDH" value="'shipIdForModuleInsetDockEntity'; CC.dockDataMarker"/>
					<bind name="watchDH" value="'moduleScrollIndex'; ['shipIdForModuleInsetDockEntity.shipSelection.evShipViewUpdate']; 0"/>
					<block>
						<style>
							<marginRight value="20px"/>
							<width value="1px"/>
							<height value="1px"/>
						</style>
						<bind name="width" value="(maxNodesHorizontal) * blockWidth"/>
						<bind name="height" value="modulesTreeHeight"/>
						<block>
							<style>
								<position value="absolute"/>
								<top value="28px"/>
								<left value="22px"/>
							</style>
							<bind name="repeat" value="currentModuleTreeNodes; 'ModuleTreeElement'; {_playerShipInfo: shipOwnEntity.ownShip, _upgradableShipInfo: upgradableShipInfo,
																					_installedModulesParams: installedModulesParams, _stockModulesMap: stockModulesMap,
																					_shipParams: isOwned ? playerShipParams : shipInfo.params, _shipInfo: shipInfo, _isOwned: isOwned}"/>
						</block>
						<block>
							<style>
								<position value="absolute"/>
								<width value="100%"/>
								<top value="20px"/>
								<left value="22x"/>
							</style>
							<bind name="repeat" value="currentBranchTypes; 'BranchTypeLabelDark'"/>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
						<block>
							<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerArrowsPainter; 'modules_tree'; 100; 114; 50; 57; 15; -2; 15; 15"/>
							<styleClass value="$Fullsize"/>
							<style>
								<hitTest value="false"/>
								<position value="absolute"/>
								<top value="20px"/>
								<left value="22px"/>
							</style>
						</block>
						<block>
							<style>
								<position value="absolute"/>
								<top value="36px"/>
								<left value="7px"/>
							</style>
							<bind name="repeat" value="currentTreeNodes; 'ShipTreeShortElement'; {_withPrice: true, _isNextShip: true, _totalShips: currentTreeNodes.length, _selectedShipId: shipId}"/>
						</block>
					</block>
				</block>
				<block>
					<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
					<bind name="watchDH" value="'inset'; ['dockEntity.insetComponent.evUpdate']; dockEntity.insetComponent.inset"/>
					<bind name="primaryEntityDH" value="'pageEntity'; CC.insetPage; LobbyConstants.SHIP_MODULES"/>
					<bind name="watchDH" value="'page'; ['pageEntity.insetPage.evUpdate']; pageEntity.insetPage.page"/>
					<bind name="var" value="{isConsumablesLocked: false}"/>
					<bind name="feature" value="12; ''"/>
					<bind name="watch" value="'hasModernizations'; modernizationsSlotsList.length &gt; 0"/>
					<bind name="visible" value="(isConsumablesLocked != true) || (feature_12 != 'locked')"/>
					<style>
						<width value="100%"/>
						<height value="100%f"/>
					</style>
					<block>
						<style>
							<height value="31px"/>
							<width value="100%"/>
						</style>
						<bind name="style" value="'marginTop'; hasModernizations ? '1px' : '-4px'"/>
						<block className="BlurMapCustom">
							<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
							<styleClass value="$FullsizeAbsolute"/>
							<style>
								<hitTest value="false"/>
							</style>
							<bind name="visible" value="optionData.blurEnabled"/>
							<block className="mc_blurmap_h_no_right" type="native">
								<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
								<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
								<styleClass value="$Fullsize"/>
								<bind name="blurMap" value="0"/>
							</block>
						</block>
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
						<block className="contrast_panel" type="native">
							<styleClass value="$FullsizeAbsolute"/>
							<bind name="visible" value="optionData.contrast"/>
						</block>
						<block className="inner_panel" type="native">
							<styleClass value="$FullsizeAbsolute"/>
						</block>
						<block>
							<styleClass value="$MiddleAligned"/>
							<style>
								<marginTop value="3px"/>
							</style>
							<block>
								<bind name="visible" value="(isConsumablesLocked) &amp;&amp; (feature_12 != 'locked') &amp;&amp; hasModernizations"/>
								<styleClass value="$MiddleAligned"/>
								<block type="text">
									<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_TOOLTIP_MODERNIZATION'}"/>
									<styleClass value="$TextHeaderBigDefault"/>
									<bind name="text" value="toUpperCase(tr('IDS_MODERNIZATION'))"/>
								</block>
							</block>
							<block>
								<bind name="visible" value="(isConsumablesLocked != true) &amp;&amp; (feature_12 == 'locked') || !(hasModernizations)"/>
								<styleClass value="$MiddleAligned"/>
								<block type="text">
									<styleClass value="$TextHeaderBigDefault"/>
									<bind name="text" value="toUpperCase(tr('IDS_AMMUNITION_AND_CONSUMABLES'))"/>
								</block>
							</block>
							<block>
								<bind name="visible" value="(isConsumablesLocked != true) &amp;&amp; (feature_12 != 'locked') &amp;&amp; hasModernizations"/>
								<block className="tab_bar_bg" type="native">
									<style>
										<height value="25"/>
									</style>
									<block>
										<style>
											<marginLeft value="2px"/>
											<marginRight value="2px"/>
										</style>
										<block>
											<bind name="instance" value="'MainTabSmallInstance'; { 	_label: 'IDS_AMMUNITION_AND_CONSUMABLES',
																					_tooltipIDS: 'IDS_TOOLTIP_AMMUNITION_AND_CONSUMABLES',
																					_selected: page == LobbyConstants.SHIP_MODULES_ABILITY,
																					_width: 200,
																					_action: 'changeInset',
																					_actionParams: { inset: LobbyConstants.SHIP_MODULES, page: LobbyConstants.SHIP_MODULES_ABILITY },
																					_name: 'consumable' }"/>
										</block>
										<block className="divider_v" type="native">
											<style>
												<height value="23px"/>
												<marginTop value="2px"/>
											</style>
										</block>
										<block>
											<block>
												<bind name="feature" value="'12'; 'rollOver'"/>
												<params>
													<param name="name" value="modernizationsTabBlock"/>
												</params>
												<bind name="stageCoord" value="true"/>
												<bind name="instance" value="'MainTabSmallInstance'; { 	_label: 'IDS_MODERNIZATION',
																					_tooltipIDS: 'IDS_TOOLTIP_MODERNIZATION',
																					_selected: page == LobbyConstants.SHIP_MODULES_MODERNIZATION,
																					_width: 200,
																					_action: 'changeInset',
																					_actionParams: { inset: LobbyConstants.SHIP_MODULES, page: LobbyConstants.SHIP_MODULES_MODERNIZATION },
																					_name: 'modernization' }"/>
											</block>
											<block>
												<bind name="fade" value="(feature_12 == 'new'); 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
												<style>
													<position value="absolute"/>
													<top value="1px"/>
													<right value="0px"/>
												</style>
												<bind name="instance" value="'MarkerNewAttention'; { }"/>
											</block>
										</block>
										<block>
											<bind name="fade" value="(isModernizationSeen == false) &amp;&amp; (unseenModernizationType != 0) &amp;&amp; (feature_12 != 'new'); 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
											<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
											<bind name="watchDH" value="'isModernizationSeen'; 		['dockEntity.dockData.evUpdate']; dockEntity.dockData.isModernizationSeen"/>
											<bind name="watchDH" value="'unseenModernizationType'; 	['dockEntity.dockData.evUpdate']; dockEntity.dockData.unseenModernizationType"/>
											<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: tr('IDS_MODERNIZATION_TYPE_' + toUpperCase(tr(modernizationType)))}; 0"/>
											<bind name="watch" value="'modernizationType'; 	(unseenModernizationType == 1) 	? 'special' :
																			(unseenModernizationType == 2) 		? 'rare' :
																			(unseenModernizationType == 3) ? 'legendary'
																															: ''"/>
											<style>
												<position value="absolute"/>
												<right value="0px"/>
												<width value="23px"/>
												<height value="23px"/>
											</style>
											<bind name="style" value="'backgroundImage'; 'url:../service_kit/item_types/icon_modernization_' + modernizationType + '.png'"/>
										</block>
										<style>
											<flow value="horizontal"/>
										</style>
									</block>
								</block>
							</block>
						</block>
					</block>
					<block>
						<styleClass value="$DefaultScrollBar"/>
						<style>
							<height value="100%f"/>
							<width value="100%"/>
							<marginBottom value="1px"/>
							<marginTop value="1px"/>
							<paddingBottom value="8px"/>
							<paddingTop value="8px"/>
							<overflow value="scroll"/>
						</style>
						<bind name="watch" value="'curPage'; (isOwned == false)						? 2 :
											(feature_12 == 'locked')				? 0 :
											!(hasModernizations)					? 0
																					: page"/>
						<bind name="instance" value="'Consumables';		curPage == 0	? {} : null"/>
						<bind name="instance" value="'Modernization';	curPage == 1	? {} : null"/>
					</block>
					<block>
						<bind name="appear" value="'addedToStage'; 0.15; 0.22; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
						<style>
							<width value="100%"/>
						</style>
						<bind name="instance" value="'ConsumablesAutoreplenishment'; (canBuySomeAbility == true) &amp;&amp; (curPage == 0) ? {_hasPaidConsumes: hasPaidConsumes} : null"/>
					</block>
					<block>
						<bind name="visible" value="(feature_12 != 'locked') &amp;&amp; (page == LobbyConstants.SHIP_MODULES_MODERNIZATION)"/>
						<style>
							<width value="100%"/>
						</style>
						<block>
							<style>
								<marginBottom value="6px"/>
							</style>
							<styleClass value="$MiddleAligned"/>
							<bind name="visible" value="(shipInfo.params.slotsNum &gt; 0) &amp;&amp; (upgradableShipInfo.isExplored == false || isOwned == false)"/>
							<block className="icon_warning_orange" type="native">
								<style>
									<marginTop value="5px"/>
								</style>
							</block>
							<block type="text">
								<styleClass value="$TextDefaultBold"/>
								<bind name="class" value="'$FontColorUnready'"/>
								<bind name="text" value="(isOwned == false) ? 'IDS_PURCHASE_SHIP_TO_SEE_MODERNIZATIONS' : ' '"/>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
						<block>
							<style>
								<marginBottom value="6px"/>
							</style>
							<styleClass value="$MiddleAligned"/>
							<bind name="visible" value="shipInfo.params.slotsNum == 0"/>
							<block type="text">
								<styleClass value="$TextDefault"/>
								<text value="IDS_SHIP_HAS_NO_MODERNIZATIONS"/>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
					</block>
					<block>
						<bind name="visible" value="(isOwned == false) &amp;&amp; (isConsumablesLocked == false) &amp;&amp; ((page == LobbyConstants.SHIP_MODULES_ABILITY) || (feature_12 == 'locked'))"/>
						<style>
							<marginBottom value="6px"/>
							<flow value="horizontal"/>
						</style>
						<styleClass value="$MiddleAligned"/>
						<block className="icon_warning_orange" type="native">
							<style>
								<marginTop value="5px"/>
							</style>
						</block>
						<block type="text">
							<styleClass value="$TextDefaultBold"/>
							<bind name="class" value="'$FontColorUnready'"/>
							<bind name="text" value="'IDS_PURCHASE_SHIP_TO_SEE_AMMUNITION_AND_CONSUMABLES'"/>
						</block>
					</block>
				</block>
				<block>
					<bind name="appear" value="'startShow'; 0.15; 0.75; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
					<bind name="appear" value="'startHide'; 0.15; 0.75; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
					<bind name="visible" value="(shipInfo.isPremium) || shipInfo.peculiarity != 'default' || shipInfo.group == 'upgradeableExclusive' || shipInfo.group == 'earlyAccess' || upgradableShipInfo.isElite"/>
					<block className="DeclareBlurLayer">
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
						<bind name="visible" value="optionData.blurEnabled"/>
						<block className="transparentPixel" type="native">
							<bind name="blurLayer" value="0"/>
						</block>
						<style>
							<position value="absolute"/>
						</style>
					</block>
					<block className="BlurMapCustom">
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
						<styleClass value="$FullsizeAbsolute"/>
						<style>
							<hitTest value="false"/>
						</style>
						<bind name="visible" value="optionData.blurEnabled"/>
						<block className="mc_blurmap5_feather" type="native">
							<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
							<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
							<styleClass value="$Fullsize"/>
							<bind name="blurMap" value="0"/>
						</block>
					</block>
					<style>
						<width value="100%"/>
						<marginLeft value="6px"/>
						<marginRight value="12px"/>
					</style>
					<block>
						<block>
							<bind name="stageSize"/>
							<bind name="watch" value="'isEnoughtSpace'; stageHeight &gt;= '800' ? true : false"/>
							<bind name="watch" value="'isInfoExpanded'; (userPrefs.premiumInfoExpanded == null) ? isEnoughtSpace : userPrefs.premiumInfoExpanded"/>
							<bind name="action" value="'savePremiumInfoExpanded'; 'setUserPref' ; {value : isInfoExpanded, name : 'premiumInfoExpanded'}"/>
							<bind name="dispatch" value="'click' ; 'invertExpand'"/>
							<bind name="catch" value="'invertExpand'; { isInfoExpanded : !isInfoExpanded}; 'savePremiumInfoExpanded'"/>
							<bind name="tooltip" value="'MouseInstructionTooltip';	{ _mouseInstructions: [{_type: 'left', _instructionText: (isInfoExpanded 	?	(shipInfo.peculiarity != 'default' 	? 'IDS_NOT_DEFAULT_SHIP_POINTS_COLLAPSE_HINT_' + toUpperCase(shipInfo.peculiarity) :
																																					shipInfo.group == 'premium'			? 'IDS_PREMIUM_SHIP_POINTS_COLLAPSE_HINT' :
																																					shipInfo.group == 'earlyAccess'		? 'IDS_EARLY_ACCESS_SHIP_POINTS_COLLAPSE_HINT'
																																														: 'IDS_SHIP_PECULIARITIES_COLLAPSE_HINT') 
																																				:	(shipInfo.peculiarity != 'default'	? 'IDS_NOT_DEFAULT_SHIP_POINTS_EXPAND_HINT_' + toUpperCase(shipInfo.peculiarity) :
																																					shipInfo.group == 'premium'			? 'IDS_PREMIUM_SHIP_POINTS_EXPAND_HINT' :
																																					shipInfo.group == 'earlyAccess'		? 'IDS_EARLY_ACCESS_SHIP_POINTS_EXPAND_HINT'
																																														: 'IDS_SHIP_PECULIARITIES_EXPAND_HINT'))}],
																	_maxWidth: 250}"/>
							<block className="button_expand" type="native">
								<params>
									<param name="toggle" value="true"/>
									<param name="soundSet" value="dropmenu_button"/>
									<param name="focusable" value="false"/>
								</params>
								<bind name="selected" value="isInfoExpanded"/>
							</block>
							<block type="text">
								<style>
									<marginTop value="5px"/>
								</style>
								<styleClass value="$TextDefault17NM"/>
								<bind name="class" value="'$FontColorGolden'"/>
								<bind name="text" value="shipInfo.peculiarity != 'default' 	? 'IDS_NOT_DEFAULT_SHIP_POINTS_' + toUpperCase(shipInfo.peculiarity) :
										shipInfo.group == 'premium' 		? 'IDS_PREMIUM_SHIP_POINTS' :
										shipInfo.group == 'earlyAccess'		? 'IDS_EARLY_ACCESS_SHIP_POINTS' :
										upgradableShipInfo.isElite			? 'IDS_ELITE_SHIP_POINTS'
																			: 'IDS_SHIP_PECULIARITIES'"/>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
						<block>
							<bind name="fade" value="isInfoExpanded; 0.15; {alpha: 0, top: 10, ubScaleY: 0}; {alpha: 1, top: 0, ubScaleY: 1}; {alpha: 0, top: 10, ubScaleY: 0}; 3"/>
							<style>
								<marginTop value="3px"/>
								<marginLeft value="29px"/>
								<width value="480px"/>
							</style>
							<bind name="watch" value="'shipDescriptionBulletsArray';	isInfoExpanded 	? 	((shipInfo.peculiarity != 'default') &amp;&amp; shipInfo.group != 'event'										? 	[{_text: 'IDS_NOT_DEFAULT_SHIP_POINT_1'}, {_text: 'IDS_NOT_DEFAULT_SHIP_POINT_3_' + toUpperCase(shipInfo.peculiarity)}, {_text: 'IDS_NOT_DEFAULT_SHIP_POINT_4'}] :
																						(shipInfo.peculiarity != 'default') &amp;&amp; shipInfo.group == 'event'										? 	[{_text: 'IDS_NOT_DEFAULT_SHIP_POINT_1_' + toUpperCase(shipInfo.peculiarity)}, {_text: 'IDS_NOT_DEFAULT_SHIP_POINT_2_' + toUpperCase(shipInfo.peculiarity)}, {_text: 'IDS_NOT_DEFAULT_SHIP_POINT_3_' + toUpperCase(shipInfo.peculiarity)}] :
																						(shipInfo.group == 'upgradeableExclusive') 																? 	[{_text: 'IDS_EXCLUSIVE_SHIP_POINT_1'}, {_text: 'IDS_PREMIUM_SHIP_POINT_2'}, {_text: 'IDS_PREMIUM_SHIP_POINT_3'}, {_text: 'IDS_PREMIUM_SHIP_POINT_4'}, {_text: 'IDS_PREMIUM_SHIP_POINT_5'}] : 
																						(shipInfo.group == 'ultimate')																			?	[{_text: 'IDS_PREMIUM_SHIP_POINT_1'}, {_text: 'IDS_PREMIUM_SHIP_POINT_3'}, {_text: 'IDS_PREMIUM_SHIP_POINT_4'}, {_text: 'IDS_PREMIUM_SHIP_POINT_5'}] :
																						(shipInfo.group == 'premium' || shipInfo.group == 'special' || shipInfo.group == 'specialUnsellable')	?	[{_text: 'IDS_PREMIUM_SHIP_POINT_1'}, {_text: 'IDS_PREMIUM_SHIP_POINT_2'}, {_text: 'IDS_PREMIUM_SHIP_POINT_3'}, {_text: 'IDS_PREMIUM_SHIP_POINT_4'}, {_text: 'IDS_PREMIUM_SHIP_POINT_5'}] :
																						(shipInfo.group == 'earlyAccess')																		? 	[{_text: 'IDS_PREMIUM_SHIP_POINT_1'}, {_text: 'IDS_PREMIUM_SHIP_POINT_4'}, {_text: 'IDS_EARLY_ACCESS_SHIP_POINT_1'}] :
																						upgradableShipInfo.isElite																				?	[{_text: 'IDS_SHIP_ELITE_POINT_1'}]
																																																: 	[{_text: shipInfo.isGoalless ? 'IDS_SHIP_PECULIARITY_1' : ''}, {_text: shipInfo.isWithoutStats ? 'IDS_SHIP_PECULIARITY_2' : ''}, {_text: 'IDS_SHIP_PECULIARITY_3'}, {_text: 'IDS_SHIP_PECULIARITY_4'}, {_text: shipInfo.onlyPVPPVE ? 'IDS_SHIP_PECULIARITY_5' : ''}])
																					: null"/>
							<bind name="repeat" value="shipDescriptionBulletsArray; 'ListWithBulletsElement'"/>
						</block>
					</block>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<left value="90px"/>
						<top value="52px"/>
					</style>
					<bind name="repeat" value="prevShips; 'ShipTreeShortElement'; {_selectedShipId: shipId}"/>
				</block>
				<block>
					<style>
						<left value="36px"/>
						<top value="-63px"/>
						<position value="absolute"/>
					</style>
					<bind name="instance" value="'BackButton'; {_text: 'IDS_DOCK_BACK_TO_NATION', _action: 'changeInset', _actionParams: {inset: LobbyConstants.SHIP_RESEARCH_TREE}}"/>
				</block>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<top value="40px"/>
					<left value="6px"/>
				</style>
				<bind name="instance" value="'VideoIcon'; { 	_userTaskFlag: UserTasksFlags.VIDEO_SEEN_SHIP_DEVELOPMENT,
											_videoUrlId: 'guide_Modules_InGame',
											_headerText: 'IDS_TOOLTIP_SHIP_MODULES_HEADER',
											_multiParagraphArray: 	[	{ _paragraphText: 'IDS_TOOLTIP_SHIP_MODULES_DESC'},
																		{ _paragraphText: 'IDS_INSTRUCTION_ELITE_STATUS_1'}]}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!shipInfo.isEventLike"/>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<style>
				<hitTest value="false"/>
				<bottom value="220px"/>
			</style>
			<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
			<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
			<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
			<bind name="watch" value="'carouselRows'; (userPrefs.curRowCountIndex == null) ? 0 : userPrefs.curRowCountIndex"/>
			<bind name="watch" value="'isSmallCarouselView'; (userPrefs.isSmallCarouselView == null) ? false : userPrefs.isSmallCarouselView"/>
			<bind name="style" value="'bottom'; isSmallCarouselView	?	(carouselRows == 1) ? '283px' :
														(carouselRows == 2) ? '346px'
																			: '220px'
													: '220px'"/>
			<bind name="instance" value="'ShipStatusDockHeader'; (upgradableShipInfo == null || shipId &lt;= 0)		? { _texts: [ {_paragraphText: 'IDS_NO_SHIPS'}] } :
												!(upgradableShipInfo.isExplored)				? { _texts: [ {_paragraphText: 'IDS_NOT_RESEARCHED'}] } :
												!isOwned										? { _texts: [ {_paragraphText: 'IDS_NOT_PURCHASED'}] } :
												(isNeedRepair || isNeedShell)					? { _texts: [ {_paragraphText: 'IDS_SHIP_NEEDS_SERVICE_MESSAGE'}] } :
												!(shipInfoSlim.isDownloaded) 					? { _texts: [ {_paragraphText: 'IDS_NOT_AVAILABLE_MESSAGE'}] }
																								: null "/>
		</block>
	</block>
	<block className="QuestionIcon">
		<bind name="tooltip" value="'ModuleTreeHelpTooltip'; {}; 0"/>
		<block className="icon_question_mark" type="native"/>
	</block>
	<block className="VideoIcon">
		<bind name="tooltip" value="'VideoTooltip'; { _headerText: _headerText, _descriptionText: _descriptionText, _multiParagraphArray: _multiParagraphArray, 
									_isVideoSeen: (currentUserTaskFlag &amp; _userTaskFlag) != 0}; 0"/>
		<bind name="collectionDH" value="CC.userTask; 'userTaskCollection'"/>
		<bind name="entityDH" value="'userTaskEntity'; userTaskCollection[0].id"/>
		<bind name="watchDH" value="'currentUserTaskFlag'; ['userTaskEntity.userTask.evFlagChanged']; userTaskEntity.userTask.flag"/>
		<bind name="action" value="'click'; 'ServerUIDataUSS.setUserTaskExecuted'; { taskId: _userTaskFlag }"/>
		<bind name="request" value="'click'; 'webBrowser'; {url: _videoUrlId}"/>
		<block className="button_play_video" type="native">
			<bind name="selected" value="(currentUserTaskFlag &amp; _userTaskFlag) != 0"/>
		</block>
	</block>
	<block className="DefaultButton">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'operationsAccountLocked';	['resourceEntity.accountResource.evOperationsLockChanged'];	resourceEntity.accountResource.operationsLocked"/>
		<bind name="style" value="'width'; _width ? _width : '100%'"/>
		<bind name="name" value="_containerName ? _containerName : null"/>
		<block className="button_default" type="native">
			<bind name="style" value="'width'; _width ? _width : '100%'"/>
			<bind name="label" value="_label"/>
			<bind name="focus" value="_focusIndex; _defaultFocused"/>
			<bind name="focusable" value="_focusIndex ? true : false"/>
			<bind name="enabled" value="_enabled &amp;&amp; (_isTransactionBtn ? !(operationsAccountLocked) : true)"/>
			<bind name="event" value="'buttonClick'; _method ? _method : null"/>
			<bind name="request" value="'buttonClick'; _request ? _request : null; _requestParams ? _requestParams : {}"/>
			<bind name="action" value="'buttonClick'; _action ? _action : null; _actionParams"/>
			<bind name="name" value="_name ? _name : null"/>
			<bind name="input"/>
			<block>
				<bind name="visible" value="_isExternal == true"/>
				<style>
					<position value="absolute"/>
					<top value="7px"/>
					<right value="4px"/>
					<hitTest value="false"/>
				</style>
				<block className="icon_out_grey" type="native"/>
			</block>
		</block>
	</block>
	<block className="DefaultButtonBig">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'operationsAccountLocked';	['resourceEntity.accountResource.evOperationsLockChanged'];	resourceEntity.accountResource.operationsLocked"/>
		<bind name="style" value="'width'; _width ? _width : '100%'"/>
		<bind name="name" value="_containerName ? _containerName : null"/>
		<block className="button_default_big" type="native">
			<style>
				<width value="100%"/>
			</style>
			<bind name="name" value="_name ? _name : null"/>
			<bind name="input"/>
			<bind name="label" value="_label"/>
			<bind name="enabled" value="_enabled &amp;&amp; (_isTransactionBtn ? !(operationsAccountLocked) : true)"/>
			<bind name="event" value="'buttonClick'; _method ? _method : null"/>
			<bind name="request" value="'buttonClick'; _request ? _request : null; _requestParams ? _requestParams : {}"/>
			<bind name="action" value="'buttonClick'; _action ? _action : null; _actionParams ? _actionParams : {}"/>
		</block>
	</block>
	<block className="DefaultButtonCostMedium">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'operationsAccountLocked';	['resourceEntity.accountResource.evOperationsLockChanged'];	resourceEntity.accountResource.operationsLocked"/>
		<bind name="tooltip" value="'DiscountTooltip'; priceInfo.basePrice &amp;&amp; (priceInfo.finalPrice != priceInfo.basePrice) ? { priceInfo: priceInfo, _isExternal: _isExternal } : null"/>
		<style>
			<width value="100%"/>
		</style>
		<bind name="style" value="'height'; _height ? _height : 'auto'"/>
		<bind name="name" value="_name ? _name : null"/>
		<block className="button_default_no_label" type="native">
			<style>
				<width value="100%"/>
			</style>
			<bind name="style" value="'height'; _height ? _height : 'auto'"/>
			<bind name="focus" value="_focusIndex; _defaultFocused"/>
			<bind name="enabled" value="_enabled &amp;&amp; (_isTransactionBtn ? !(operationsAccountLocked) : true)"/>
			<bind name="dispatch" value="'buttonClick'; _dispatchEvent ? _dispatchEvent : null"/>
			<bind name="event" value="'buttonClick'; _method ? _method : null"/>
			<bind name="request" value="'buttonClick'; _request ? _request : null; _requestParams ? _requestParams : {}"/>
			<bind name="action" value="'buttonClick'; _action ? _action : null; _actionParams ? _actionParams : {}"/>
			<bind name="selected" value="_selected"/>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<marginTop value="3px"/>
					<marginBottom value="4px"/>
					<hitTest value="false"/>
				</style>
				<bind name="style" value="'alpha'; _enabled ? 1 : 0.55"/>
				<block type="text">
					<styleClass value="$TextDefaultBold"/>
					<bind name="class" value="'$FontColorDefaultButtonUp'"/>
					<bind name="class" value="_enabled ? '$None' : '$FontColorAlmostBlack'"/>
					<bind name="text" value="_label"/>
				</block>
				<block>
					<bind name="visible" value="priceInfo.finalPrice &gt; 0"/>
					<style>
						<marginLeft value="4px"/>
					</style>
					<styleClass value="$MiddleVAligned"/>
					<bind name="instance" value="'PriceTag'; priceInfo.finalPrice &gt; 0 ? {priceInfo: priceInfo, _showDiscountTag: _showDiscountTag } : null"/>
				</block>
				<block>
					<bind name="visible" value="_isExternal == true"/>
					<style>
						<marginTop value="2px"/>
						<marginLeft value="8px"/>
					</style>
					<block className="icon_out_grey" type="native"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ButtonCostSpecial">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'operationsAccountLocked';	['resourceEntity.accountResource.evOperationsLockChanged'];	resourceEntity.accountResource.operationsLocked"/>
		<style>
			<width value="130px"/>
		</style>
		<block className="button_default_always_hover" type="native">
			<style>
				<width value="100%"/>
			</style>
			<bind name="enabled" value="(_enabled &amp;&amp; !(operationsAccountLocked))"/>
			<bind name="event" value="'buttonClick'; _method ? _method : null"/>
			<bind name="request" value="'buttonClick'; _request ? _request : null; _requestParams ? _requestParams : {}"/>
			<bind name="action" value="'buttonClick'; _action ? _action : null; _actionParams ? _actionParams : {}"/>
			<bind name="input"/>
			<bind name="label" value="_label"/>
		</block>
	</block>
	<block className="DefaultButtonCostSmall">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'operationsAccountLocked';	['resourceEntity.accountResource.evOperationsLockChanged'];	resourceEntity.accountResource.operationsLocked"/>
		<bind name="tooltip" value="'DiscountTooltip'; priceInfo.basePrice &amp;&amp; (priceInfo.finalPrice != priceInfo.basePrice) ? { priceInfo: priceInfo } : null"/>
		<block className="button_default_no_label_small" type="native">
			<bind name="enabled" value="(_enabled &amp;&amp; !(operationsAccountLocked))"/>
			<bind name="event" value="'buttonClick'; _method ? _method : null"/>
			<bind name="request" value="'buttonClick'; _request ? _request : null; _requestParams ? _requestParams : {}"/>
			<bind name="action" value="'buttonClick'; _action ? _action : null; _actionParams ? _actionParams : {}"/>
			<block>
				<style>
					<marginBottom value="1px"/>
					<marginRight value="18px"/>
					<marginLeft value="18px"/>
					<hitTest value="false"/>
				</style>
				<bind name="style" value="'alpha'; _enabled ? 1 : 0.55"/>
				<block type="text">
					<styleClass value="$TextSecondaryBold"/>
					<bind name="class" value="'$FontColorDefaultButtonUp'"/>
					<bind name="class" value="_enabled ? '$None' : '$FontColorAlmostBlack'"/>
					<bind name="text" value="_label"/>
				</block>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<marginLeft value="2px"/>
					</style>
					<bind name="instance" value="'PriceTag'; priceInfo.finalPrice &gt; 0 ? {priceInfo: priceInfo, _small: true, _showDiscountTag: _showDiscountTag} : null"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ButtonSpecial">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="name" value="_name"/>
		<block className="button_special_no_label" type="native">
			<bind name="soundSet" value="'hard_button'"/>
			<bind name="enabled" value="_enabled"/>
			<bind name="action" value="'buttonClick'; _action ? _action : null; _actionParams ? _actionParams : {}"/>
			<bind name="request" value="'buttonClick'; _request ? _request : null; _requestParams ? _requestParams : {}"/>
			<bind name="style" value="'width'; _width ? _width : '100%f'"/>
			<bind name="focus" value="_focusIndex; _defaultFocused"/>
			<bind name="focusable" value="_focusIndex ? true : false"/>
			<block>
				<bind name="class" value="_width ? '$MiddleAligned' : '$None'"/>
				<style>
					<width value="100%f"/>
				</style>
				<block type="text">
					<style>
						<marginRight value="18px"/>
						<marginLeft value="18px"/>
						<marginTop value="3px"/>
						<marginBottom value="4px"/>
						<hitTest value="false"/>
					</style>
					<bind name="class" value="_enabled 	? '$FontDropShadowFilter1' 	: '$FontDropShadowWhite'"/>
					<bind name="class" value="_enabled 	? rollOver &amp;&amp; !(mouseDown) 	? '$FontColorDefault' 
																	: '$FontColorSpecialButton'
										: '$FontColorAlmostBlack'"/>
					<styleClass value="$TextDefaultBold"/>
					<bind name="text" value="_label"/>
				</block>
			</block>
		</block>
	</block>
	<block className="DockButton">
		<style>
			<width value="100%"/>
		</style>
		<block className="button_dock" type="native">
			<bind name="name" value="_name"/>
			<style>
				<width value="100%"/>
				<height value="30px"/>
			</style>
			<bind name="enabled" value="_enabled"/>
			<block type="text">
				<styleClass value="$TextDefaultBold"/>
				<styleClass value="$MiddleAligned"/>
				<style>
					<marginTop value="3px"/>
					<mouseEnabled value="false"/>
					<mouseChildren value="false"/>
				</style>
				<bind name="style" value="'alpha'; _enabled ? 1 : 0.55"/>
				<bind name="text" value="_label"/>
			</block>
		</block>
	</block>
	<block className="ResizableButtonDock">
		<style>
			<width value="100%f"/>
		</style>
		<bind name="watch" value="'enabled'; _enabled != false"/>
		<bind name="name" value="_name"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; null; 'resizableButtonDock_'"/>
		<bind name="clickSplit"/>
		<bind name="request" value="'left_click'; _request ? _request : null; _requestParams ? _requestParams : {}"/>
		<bind name="action" value="'left_click'; _action ? _action : null; _actionParams ? _actionParams : {}"/>
		<bind name="transition" value="resizableButtonDock_rollOver &amp;&amp; !(resizableButtonDock_mouseDown) &amp;&amp; enabled; 0.1; {alpha: 0.65}; {alpha: 1}; {alpha: 0.65}"/>
		<bind name="soundOn" value="'left_click'; 'press'; 'default_button'"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginLeft value="-10px"/>
				<marginRight value="-10px"/>
				<marginBottom value="-9px"/>
				<marginTop value="-10px"/>
			</style>
			<bind name="style" value="'hitTest'; enabled"/>
			<block className="button_dock_bg" type="native">
				<styleClass value="$Fullsize"/>
				<bind name="gotoAndStop!" value="'down'"/>
			</block>
		</block>
		<block type="text">
			<style>
				<hitTest value="false"/>
				<mouseEnabled value="false"/>
				<mouseChildren value="false"/>
			</style>
			<bind name="style" value="'alpha'; enabled ? 1 : 0.65"/>
			<styleClass value="$TextDefaultBoldNM"/>
			<bind name="class" value="'$FontColorBlueish'"/>
			<bind name="text" value="_label"/>
		</block>
	</block>
	<block className="InfopanelButton">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="request" value="'buttonClick'; _request ? _request : null; _requestParams ? _requestParams : {}"/>
		<bind name="action" value="'buttonClick'; _action ? _action : null; _actionParams ? _actionParams : {}"/>
		<bind name="watch" value="'infopanelButtonOverAlpha';	(mouseDown)		? 0.3 :
												(rollOver)		? 1
																: 0.6"/>
		<bind name="tooltip" value="'SimpleTooltip'; _tooltipIDS ? { tooltipText: _tooltipIDS } : null"/>
		<bind name="style" value="'alpha'; infopanelButtonOverAlpha"/>
		<bind name="name" value="_name"/>
		<block className="button_infopanel_no_label" type="native">
			<bind name="style" value="'width'; _width ? _width : '150px'"/>
			<bind name="style" value="'height'; _height ? _height : '40px'"/>
			<block>
				<styleClass value="$Fullsize"/>
				<style>
					<hitTest value="false"/>
				</style>
				<block>
					<bind name="visible" value="_backgroundImage != null"/>
					<bind name="style" value="'width'; _iconWidth"/>
					<bind name="style" value="'height'; _iconHeight"/>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<marginLeft value="8px"/>
						<backgroundStretchX value="true"/>
						<backgroundStretchY value="true"/>
					</style>
					<bind name="style" value="'backgroundImage'; _backgroundImage"/>
				</block>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$MiddleAlignedAbsolutely"/>
					<block type="text">
						<styleClass value="$TextDefaultBoldNM"/>
						<bind name="text" value="toUpperCase(tr(_label))"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<css name="$TabButtonFontUp">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="15"/>
		<marginText value="-3px|-3px|-6px|-5px"/>
		<dropShadowFilter value="0 90 0x000000 1 2 2 1"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<block className="MainTabButton">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="watch" value="'tabBarSoundSet'; 'main_tab_' + _actionParams.inset"/>
		<bind name="tooltip" value="'MouseInstructionTooltip'; _tooltipData ? { _isInBattle: _tooltipData.isInBattle,
																_multiParagraphArray: _tooltipData.paragraphText ? [{ _paragraphText: _tooltipData.paragraphText }] : null,
																_mouseInstructions: _tooltipData.mouseInstructions,
																_maxWidth: 250,
																_marginBottom: _tooltipData.marginBottom,
																_leading: _tooltipData.leading,
																_checkedLines: _tooltipData.checkedLines }
															: null"/>
		<style>
			<height value="29px"/>
		</style>
		<bind name="style" value="'width'; _width ? _width : '143px'"/>
		<block className="tab_bar_item_no_label" type="native">
			<bind name="name" value="_name"/>
			<bind name="soundSet" value="tabBarSoundSet"/>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="selected" value="_selected"/>
			<bind name="enabled" value="_enabled"/>
			<bind name="action" value="'buttonClick'; 	_action 	? _action : null; 	_actionParams 	? _actionParams : {}"/>
			<bind name="request" value="'buttonClick'; 	_request 	? _request : null; 	_requestParams 	? _requestParams : {}"/>
			<bind name="dispatch" value="'buttonClick'; 	_dispatch 	? _dispatch : null; _dispatchParams ? _dispatchParams : null"/>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<hitTest value="false"/>
			</style>
			<block type="text">
				<styleClass value="$TabButtonFontUp"/>
				<style>
					<textAlign value="center"/>
					<multiline value="false"/>
					<marginTop value="9px"/>
				</style>
				<bind name="class" value="(mouseDown || (_enabled == false))	? '$FontColorTabButtonDown' :
												rollOver	? '$FontColorWhite' :
												_selected	? '$FontColorDefaultButtonUp'
															: '$FontColorTabButtonUp'"/>
				<bind name="style" value="'alpha'; (_enabled == false) || mouseDown || rollOver || _selected ? 1 : 0.8"/>
				<bind name="text" value="toUpperCase(tr(_label))"/>
			</block>
			<block>
				<bind name="fade" value="((_newContentCounter &gt; 0) &amp;&amp; (_isNewMarker != true)); 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
				<style>
					<position value="absolute"/>
					<right value="-2px"/>
					<top value="1px"/>
				</style>
				<block>
					<style>
						<position value="absolute"/>
						<left value="0px"/>
					</style>
					<bind name="instance" value="'MarkerNewCounter'; { _newContentCounter: _newContentCounter }"/>
				</block>
			</block>
			<block>
				<bind name="fade" value="_isNewMarker; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
				<style>
					<position value="absolute"/>
					<right value="-38px"/>
					<top value="1px"/>
				</style>
				<bind name="instance" value="'MarkerNewAttention'; { }"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="MainTabSmallInstance">
		<block className="tab_bar_item_small" type="native">
			<bind name="name" value="'MainTabSmallInstance_' + _name"/>
			<bind name="style" value="'width'; (_width+'px')"/>
			<style>
				<height value="25px"/>
			</style>
			<bind name="selected" value="_selected"/>
			<bind name="dispatch" value="'buttonClick'; _event ? _event : null; _eventParams"/>
			<bind name="action" value="'buttonClick'; _action ? _action : null; _actionParams"/>
			<bind name="label" value="toUpperCase(tr(_label))"/>
		</block>
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: _tooltipIDS}"/>
	</block>
	<block className="NavigationProfileButton">
		<style>
			<width value="188px"/>
		</style>
		<block className="button_navigation_small_no_label" type="native">
			<params>
				<param name="toggle" value="false"/>
			</params>
			<style>
				<width value="100%"/>
				<marginBottom value="1px"/>
			</style>
			<bind name="selected" value="_actionParams.page == _activePage"/>
			<bind name="enabled" value="_actionParams.page != _activePage"/>
			<bind name="action" value="'buttonClick'; _action ? _action : null; _actionParams ? _actionParams : {}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<position value="absolute"/>
				<hitTest value="false"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefaultBoldNM"/>
				<style>
					<multiline value="false"/>
					<marginLeft value="14px"/>
					<marginTop value="13px"/>
				</style>
				<bind name="class" value=" (_actionParams.page == _activePage) ? '$FontColorAlmostBlack' : ''"/>
				<bind name="class" value=" (_actionParams.page == _activePage) ? '$FontGlowFilterBrightStrong' : '$FontDropShadowFilter1'"/>
				<bind name="text" value="toUpperCase(tr(_label))"/>
			</block>
			<block>
				<style>
					<marginLeft value="2px"/>
					<marginTop value="4px"/>
				</style>
				<block>
					<bind name="fade" value="_isNewMarker; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
					<bind name="instance" value="'MarkerNewAttention'; { }"/>
				</block>
				<block>
					<bind name="fade" value="((_newContentCounter &gt; 0) &amp;&amp; (_isNewMarker != true)); 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
					<style>
						<position value="absolute"/>
					</style>
					<bind name="instance" value="'MarkerNewCounter'; { _newContentCounter: _newContentCounter }"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<css name="$FontCostNormal">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="17"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$FontCostBlack">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="17"/>
		<selectable value="false"/>
		<textColor value="0x08222a"/>
	</css>
	<css name="$FontDeficit">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="17"/>
		<selectable value="false"/>
		<textColor value="0x08222a"/>
	</css>
	<block className="CostOilNano">
		<style>
			<flow value="horizontal"/>
		</style>
		<styleClass value="$InfoLineBoundaries"/>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextSecondary"/>
			<bind name="class" value="_class"/>
			<bind name="class" value="'$Bold'"/>
			<bind name="text" value="format(_costOil, -1)"/>
		</block>
		<block className="icon_currency" type="native">
			<styleClass value="$MiddleVAligned"/>
			<bind name="gotoAndStop!" value="'clan_resource'"/>
		</block>
	</block>
	<block className="CostEliteXPNano">
		<style>
			<flow value="horizontal"/>
		</style>
		<styleClass value="$InfoLineBoundaries"/>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextDefaultExpSmall"/>
			<bind name="class" value="_class"/>
			<bind name="class" value="'$Bold'"/>
			<bind name="text" value="format(_costEliteXP, -1)"/>
		</block>
		<block className="icon_elite_exp_small" type="native">
			<styleClass value="$MiddleVAligned"/>
		</block>
	</block>
	<block className="CostXPNano">
		<style>
			<flow value="horizontal"/>
		</style>
		<styleClass value="$InfoLineBoundaries"/>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextDefaultExpSmall"/>
			<bind name="class" value="_class"/>
			<bind name="class" value="'$Bold'"/>
			<bind name="text" value="format(_costXP, -1)"/>
		</block>
		<block className="icon_exp_small" type="native">
			<styleClass value="$MiddleVAligned"/>
		</block>
	</block>
	<block className="CostXPNanoWithoutIcon">
		<style>
			<flow value="horizontal"/>
		</style>
		<styleClass value="$InfoLineBoundaries"/>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextDefaultExpSmall"/>
			<bind name="class" value="_class"/>
			<bind name="class" value="'$Bold'"/>
			<bind name="text" value="format(_costXP, -1)"/>
		</block>
	</block>
	<block className="CostFreeXPNano">
		<style>
			<flow value="horizontal"/>
		</style>
		<styleClass value="$InfoLineBoundaries"/>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextSecondary"/>
			<bind name="class" value="_class"/>
			<bind name="class" value="'$Bold'"/>
			<bind name="text" value="format(_costFreeXP, -1)"/>
		</block>
		<block className="icon_exp_free_small" type="native">
			<styleClass value="$MiddleVAligned"/>
		</block>
	</block>
	<block className="CostCRNano">
		<style>
			<flow value="horizontal"/>
		</style>
		<styleClass value="$InfoLineBoundaries"/>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextSecondary"/>
			<bind name="class" value="_class"/>
			<bind name="class" value="'$Bold'"/>
			<bind name="text" value="format(_costCR, -1)"/>
		</block>
		<block className="icon_credit_small" type="native">
			<styleClass value="$MiddleVAligned"/>
		</block>
	</block>
	<block className="CostGoldNano">
		<style>
			<flow value="horizontal"/>
		</style>
		<styleClass value="$InfoLineBoundaries"/>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextSecondary"/>
			<bind name="class" value="_class"/>
			<bind name="class" value="'$Bold'"/>
			<bind name="text" value="format(_costGold, -1)"/>
		</block>
		<block className="icon_gold_small" type="native">
			<styleClass value="$MiddleVAligned"/>
		</block>
	</block>
	<block className="CostSteelNano">
		<style>
			<flow value="horizontal"/>
		</style>
		<styleClass value="$InfoLineBoundaries"/>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextSecondary"/>
			<bind name="class" value="_class"/>
			<bind name="class" value="'$Bold'"/>
			<bind name="text" value="format(_costSteel, -1)"/>
		</block>
		<block className="icon_currency" type="native">
			<styleClass value="$MiddleVAligned"/>
			<bind name="gotoAndStop!" value="'steel'"/>
		</block>
	</block>
	<block className="CostCoalNano">
		<style>
			<flow value="horizontal"/>
		</style>
		<styleClass value="$InfoLineBoundaries"/>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextSecondary"/>
			<bind name="class" value="_class"/>
			<bind name="class" value="'$Bold'"/>
			<bind name="text" value="format(_costCoal, -1)"/>
		</block>
		<block className="icon_currency" type="native">
			<styleClass value="$MiddleVAligned"/>
			<bind name="gotoAndStop!" value="'coal'"/>
		</block>
	</block>
	<block className="CostMolybdenumNano">
		<style>
			<flow value="horizontal"/>
		</style>
		<styleClass value="$InfoLineBoundaries"/>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextSecondary"/>
			<bind name="class" value="_class"/>
			<bind name="class" value="'$Bold'"/>
			<bind name="text" value="format(_costMolybdenum, -1)"/>
		</block>
		<block className="icon_currency" type="native">
			<styleClass value="$MiddleVAligned"/>
			<bind name="gotoAndStop!" value="'molybdenum'"/>
		</block>
	</block>
	<block className="CostBrassNano">
		<style>
			<flow value="horizontal"/>
		</style>
		<styleClass value="$InfoLineBoundaries"/>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextSecondary"/>
			<bind name="class" value="_class"/>
			<bind name="class" value="'$Bold'"/>
			<bind name="text" value="format(_costBrass, -1)"/>
		</block>
		<block className="icon_currency" type="native">
			<styleClass value="$MiddleVAligned"/>
			<bind name="gotoAndStop!" value="'brass'"/>
		</block>
	</block>
	<block className="CostSaltpeterNano">
		<style>
			<flow value="horizontal"/>
		</style>
		<styleClass value="$InfoLineBoundaries"/>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextSecondary"/>
			<bind name="class" value="_class"/>
			<bind name="class" value="'$Bold'"/>
			<bind name="text" value="format(_costSaltpeter, -1)"/>
		</block>
		<block className="icon_currency" type="native">
			<styleClass value="$MiddleVAligned"/>
			<bind name="gotoAndStop!" value="'saltpeter'"/>
		</block>
	</block>
	<block className="CostEventumFirstNano">
		<style>
			<flow value="horizontal"/>
		</style>
		<styleClass value="$InfoLineBoundaries"/>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextSecondary"/>
			<bind name="class" value="_class"/>
			<bind name="class" value="'$Bold'"/>
			<bind name="text" value="format(_costEventum_1, -1)"/>
		</block>
		<block className="icon_currency" type="native">
			<styleClass value="$MiddleVAligned"/>
			<bind name="gotoAndStop!" value="'eventum_1'"/>
		</block>
	</block>
	<block className="CostEventumSecondNano">
		<style>
			<flow value="horizontal"/>
		</style>
		<styleClass value="$InfoLineBoundaries"/>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextSecondary"/>
			<bind name="class" value="_class"/>
			<bind name="class" value="'$Bold'"/>
			<bind name="text" value="format(_costEventum_2, -1)"/>
		</block>
		<block className="icon_currency" type="native">
			<styleClass value="$MiddleVAligned"/>
			<bind name="gotoAndStop!" value="'eventum_2'"/>
		</block>
	</block>
	<block className="XPDeficitNano">
		<styleClass value="$InfoLineBoundaries"/>
		<style>
			<flow value="horizontal"/>
			<marginBottom value="5px"/>
		</style>
		<params>
			<param name="name" value="upgrade_tree_XP_deficit"/>
		</params>
		<block className="icon_warning_red" type="native">
			<styleClass value="$MiddleVAligned"/>
			<style>
				<marginRight value="1px"/>
				<marginBottom value="-1px"/>
			</style>
		</block>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextSecondary"/>
			<bind name="class" value="'$FontColorCompareNegative'"/>
			<text value="IDS_NOT_ENOUGH"/>
		</block>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextSecondary"/>
			<bind name="class" value="'$Bold'"/>
			<bind name="class" value="'$FontColorCompareNegative'"/>
			<bind name="text" value="format(_expDeficit, -1)"/>
		</block>
		<block className="icon_exp_small" type="native">
			<styleClass value="$MiddleVAligned"/>
		</block>
	</block>
	<block className="CRDeficitNano">
		<styleClass value="$InfoLineBoundaries"/>
		<style>
			<flow value="horizontal"/>
			<marginBottom value="5px"/>
		</style>
		<block className="icon_warning_red" type="native">
			<styleClass value="$MiddleVAligned"/>
			<style>
				<marginRight value="2px"/>
				<marginBottom value="-1px"/>
			</style>
		</block>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextDefaultSmall"/>
			<bind name="class" value="'$TextSmallCompareNegative'"/>
			<text value="IDS_NOT_ENOUGH"/>
		</block>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextDefaultSmall"/>
			<bind name="class" value="'$Bold'"/>
			<bind name="class" value="'$TextSmallCompareNegative'"/>
			<bind name="text" value="format(_creditsDeficit, -1)"/>
		</block>
		<block className="icon_credit_small" type="native">
			<styleClass value="$MiddleVAligned"/>
		</block>
	</block>
	<block className="GoldDeficitNano">
		<styleClass value="$InfoLineBoundaries"/>
		<style>
			<flow value="horizontal"/>
			<marginBottom value="5px"/>
		</style>
		<block className="icon_warning_red" type="native">
			<styleClass value="$MiddleVAligned"/>
			<style>
				<marginRight value="2px"/>
				<marginBottom value="-1px"/>
			</style>
		</block>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<bind name="class" value="'$TextSmallCompareNegative'"/>
			<text value="IDS_NOT_ENOUGH"/>
		</block>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<bind name="class" value="'$Bold'"/>
			<bind name="class" value="'$TextSmallCompareNegative'"/>
			<bind name="text" value="format(_goldDeficit, -1)"/>
		</block>
		<block className="icon_gold_small" type="native">
			<styleClass value="$MiddleVAligned"/>
		</block>
	</block>
	<block className="CrAndGoldDeficit">
		<styleClass value="$InfoLineBoundaries"/>
		<style>
			<flow value="horizontal"/>
			<marginBottom value="5px"/>
		</style>
		<params>
			<param name="name" value="upgrade_tree_Credit_deficit"/>
		</params>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<block className="icon_warning_red" type="native">
				<style>
					<marginRight value="2px"/>
				</style>
				<bind name="style" value="'marginTop'; _large ? '5px' : '0px'"/>
			</block>
		</block>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextDefault"/>
			<bind name="class" value="	_large ? '$FontSizeHeader6':
						_medium ? '$FontSizeLarge' :
						_small ? '$FontSizeSmall' : '$None'"/>
			<bind name="class" value="'$FontColorCompareNegative'"/>
			<text value="IDS_NOT_ENOUGH"/>
		</block>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<marginRight value="3px"/>
			</style>
			<bind name="visible" value="_creditsDeficit &gt; 0"/>
			<block type="text">
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$TextDefault"/>
				<bind name="class" value="	_large ? '$FontSizeHeader6':
							_medium ? '$FontSizeLarge' :
							_small ? '$FontSizeSmall' : '$None'"/>
				<bind name="class" value="_bold ? '$FontFamilyDefaultBold' : '$None'"/>
				<bind name="class" value="'$FontColorCompareNegative'"/>
				<bind name="text" value="format(_creditsDeficit, -1)"/>
			</block>
			<block className="icon_currency" type="native">
				<bind name="gotoAndStop!" value="_large ? 'credits_large' : 'credits'"/>
				<styleClass value="$MiddleVAligned"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block type="text">
			<bind name="visible" value="_creditsDeficit &gt; 0 &amp;&amp; _goldDeficit &gt; 0"/>
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextDefault"/>
			<bind name="class" value="	_large ? '$FontSizeHeader6':
						_medium ? '$FontSizeLarge' :
						_small ? '$FontSizeSmall' : '$None'"/>
			<bind name="class" value="_bold ? '$FontFamilyDefaultBold' : '$None'"/>
			<bind name="class" value="'$FontColorCompareNegative'"/>
			<text value="IDS_AND"/>
		</block>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<bind name="visible" value="_goldDeficit &gt; 0"/>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="	_large ? '$FontSizeHeader6':
							_medium ? '$FontSizeLarge' :
							_small ? '$FontSizeSmall' : '$None'"/>
				<bind name="class" value="_bold ? '$FontFamilyDefaultBold' : '$None'"/>
				<bind name="class" value="'$FontColorCompareNegative'"/>
				<bind name="text" value="format(_goldDeficit, -1)"/>
			</block>
			<block className="icon_currency" type="native">
				<bind name="gotoAndStop!" value="_large ? 'gold_large' : 'gold'"/>
				<styleClass value="$MiddleVAligned"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<css name="$TableCell">
		<width value="100%"/>
		<height value="23px"/>
	</css>
	<css name="$TableHeaderCell">
		<width value="100%"/>
		<marginBottom value="12px"/>
		<height value="23px"/>
	</css>
	<css name="$TableCellTextValue">
		<position value="absolute"/>
		<right value="0px"/>
	</css>
	<block className="ProfileMainInset">
		<styleClass value="$Fullsize"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<bind name="feature" value="3;	''"/>
		<bind name="feature" value="16;	''"/>
		<bind name="feature" value="19;	''"/>
		<bind name="feature" value="24;	''"/>
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'inset'; ['dockEntity.insetComponent.evUpdate']; dockEntity.insetComponent.inset"/>
		<bind name="primaryEntityDH" value="'pageEntity'; CC.insetPage; LobbyConstants.PLAYER_PROFILE"/>
		<bind name="watchDH" value="'page'; ['pageEntity.insetPage.evUpdate']; pageEntity.insetPage.page"/>
		<bind name="collectionDH" value="CC.collectionCard; 'allCards'"/>
		<bind name="contains" value="allCards; $item.collectionCard.isOwned; 'anyCardsOwned'"/>
		<bind name="catch" value="'selectedAlbumChanged'"/>
		<bind name="watchDH" value="'pageData'; ['pageEntity.dataComponent.evDataChanged']; pageEntity.dataComponent.data"/>
		<bind name="primaryEntityDH" value="'collectionEntity'; CC.collectionAlbum; pageData.collectionId"/>
		<bind name="watch" value="'profilePage';	(page == null)
								|| ((page == LobbyConstants.PLAYER_PROFILE_RANKS) &amp;&amp; (feature_16 == 'locked'))
								|| ((page == LobbyConstants.PLAYER_PROFILE_CLUB) &amp;&amp; (feature_19 == 'locked')) 
								|| ((page == LobbyConstants.PLAYER_PROFILE_COLLECTIONS) &amp;&amp; (!anyCardsOwned)) ? 0 : page"/>
		<bind name="firstEntityDH" value="'clubHistoryEntity'; CC.rankedSeasonHistory; 'byGameType.' + BattleTypes.CLUB_BATTLE"/>
		<bind name="watchDH" value="'hasClubHistoryData'; ['clubHistoryEntity.rankedSeasonHistory.evRankedSeasonHistoryDataUpdate']; clubHistoryEntity.rankedSeasonHistory.hasGamesPlayed"/>
		<bind name="watch" value="'_curItemIndex'; 	(userPrefs.summaryInset == null)
								|| ((feature_3  == 'locked') &amp;&amp;  (userPrefs.summaryInset == 1))
								|| ((feature_16 == 'locked') &amp;&amp;  (userPrefs.summaryInset == 2))
								|| ((!hasClubHistoryData) &amp;&amp;  (userPrefs.summaryInset == 3)) ? 0 : userPrefs.summaryInset"/>
		<bind name="changeDispatch" value="_curItemIndex; 'changeInsetInPrefs'"/>
		<bind name="action" value="'changeInsetInPrefs'; 'setUserPref' ; {value: _curItemIndex, name: 'summaryInset'}"/>
		<bind name="catch" value="'ItemChooserInnerEvent.battleTypeChanged'"/>
		<bind name="catch" value="'setBattleType'"/>
		<bind name="watch" value="'newBgSymbol';	(profilePage==LobbyConstants.PLAYER_PROFILE_SUMMARY &amp;&amp; _curItemIndex == 0)	? 'url:../bg/balancer/balancer_coop.jpg'		:
								(profilePage==LobbyConstants.PLAYER_PROFILE_SUMMARY &amp;&amp; _curItemIndex == 1)	? 'url:../bg/balancer/balancer_random.jpg'		:
								(profilePage==LobbyConstants.PLAYER_PROFILE_SUMMARY &amp;&amp; _curItemIndex == 2)	? 'url:../bg/balancer/balancer_ranked.jpg'		:
								(profilePage==LobbyConstants.PLAYER_PROFILE_SUMMARY &amp;&amp; _curItemIndex == 3)	? 'url:../bg/balancer/balancer_club.jpg'		:
								(profilePage==LobbyConstants.PLAYER_PROFILE_ACHIEVEMENTS)					? 'url:../bg/profile/profile_achievements.jpg' 	:
								(profilePage==LobbyConstants.PLAYER_PROFILE_RANKS)							? 'url:../bg/balancer/balancer_ranked.jpg' 		:
								(profilePage==LobbyConstants.PLAYER_PROFILE_COLLECTIONS)					? 'url:../bg/profile/profile_collections.jpg'	:
								(profilePage==LobbyConstants.PLAYER_PROFILE_CLUB)							? 'url:../bg/profile/profile_clubs.jpg'
																											: 'url:../bg/profile/profile_default.jpg'"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginTop value="-60px"/>
			</style>
			<bind name="instance" value="'BackgroundAnimatedSwitcher'; {_bgSymbol: newBgSymbol}"/>
		</block>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<bind name="firstEntityDH" value="'clubsCommonEntity'; CC.clubsCommon"/>
		<bind name="watchDH" value="'maxOfflineTime'; ['clubsCommonEntity.clubsCommon.evRulesChanged']; clubsCommonEntity.clubsCommon.maxOfflineTime"/>
		<bind name="watchDH" value="'seasonId'; ['clubsCommonEntity.clubsCommon.evRulesChanged']; clubsCommonEntity.clubsCommon.seasonId"/>
		<bind name="watchDH" value="'stage'; ['clubsCommonEntity.clubsCommon.evRulesChanged']; clubsCommonEntity.clubsCommon.stage"/>
		<bind name="timeFormat" value="maxOfflineTime; 'HIGHEST'; 'maxOfflineTimeFormatted'; true"/>
		<block className="icon_question_mark" type="native">
			<style>
				<position value="absolute"/>
				<top value="8px"/>
				<left value="6px"/>
			</style>
			<bind name="tooltip" value="'MultiParagraphHelpTooltip'; profilePage == LobbyConstants.PLAYER_PROFILE_ACCOUNT 		? {_tooltipHeader: 'IDS_PROFILE_ACCOUNT', _width: 350, _multiParagraphArray: [ {_paragraphText: 'IDS_PROFILE_ACCOUNT_INSTRUCTION_0'}, {_paragraphText: 'IDS_PROFILE_ACCOUNT_INSTRUCTION_1'}, {_paragraphText: 'IDS_PROFILE_ACCOUNT_INSTRUCTION_2'}]} :
													profilePage == LobbyConstants.PLAYER_PROFILE_SUMMARY 		? {_tooltipHeader: 'IDS_PROFILE_SUMMARY', _width: 350, _multiParagraphArray: [ {_paragraphText: 'IDS_PROFILE_SUMMARY_INSTRUCTION_0'}, {_paragraphText: 'IDS_PROFILE_SUMMARY_INSTRUCTION_1'}]} :
													profilePage == LobbyConstants.PLAYER_PROFILE_ACHIEVEMENTS	? {_tooltipHeader: 'IDS_PROFILE_ACHIEVEMENTS', _width: 350, _multiParagraphArray: [ {_paragraphText: 'IDS_PROFILE_ACHIEVEMENTS_INSTRUCTION_0'}, {_paragraphText: 'IDS_PROFILE_ACHIEVEMENTS_INSTRUCTION_1'}]} :
													profilePage == LobbyConstants.PLAYER_PROFILE_RANKS 			? {_tooltipHeader: 'IDS_PROFILE_RANKS', _width: 450, _multiParagraphArray: [ {_paragraphText: 'IDS_PROFILE_RANK_INSTRUCTION_0'}, {_paragraphText: 'IDS_PROFILE_RANK_INSTRUCTION_1'}, {_paragraphText: 'IDS_PROFILE_RANK_INSTRUCTION_2'}]} :
													(profilePage==LobbyConstants.PLAYER_PROFILE_COLLECTIONS)	? {_tooltipHeader: 'IDS_PROFILE_COLLECTIONS', _width: 350, _multiParagraphArray: [ {_paragraphText: 'IDS_PROFILE_COLLECTION_INSTRUCTION_0'}, {_paragraphText: 'IDS_PROFILE_COLLECTION_INSTRUCTION_1'}, {_paragraphText: 'IDS_PROFILE_COLLECTION_INSTRUCTION_2'}]} :
													profilePage == LobbyConstants.PLAYER_PROFILE_CLUB			? {_tooltipHeader: 'IDS_CLUBS', _width: 450, _multiParagraphArray: [ {_paragraphText: 'IDS_PROFILE_CLUBS_INSTRUCTION_0'}, {_paragraphText: 'IDS_PROFILE_CLUBS_INSTRUCTION_1'}, {_paragraphText: subst('IDS_PROFILE_CLUBS_INSTRUCTION_2', [], {maxOfflineTime: maxOfflineTimeFormatted})} ]}
																			 									: null"/>
		</block>
		<bind name="firstEntityDH" value="'statDataEntity'; CC.rankedSeasonHistory"/>
		<bind name="watchDH" value="'statData'; ['statDataEntity.dataComponent.evDataChanged']; statDataEntity.dataComponent.data"/>
		<block>
			<style>
				<position value="absolute"/>
				<marginTop value="34px"/>
				<left value="6px"/>
			</style>
			<block type="text">
				<style>
					<marginLeft value="0px"/>
				</style>
				<styleClass value="$TextSecondary"/>
				<bind name="text" value="statData.basicStats.registrationDate"/>
			</block>
			<block type="text">
				<style>
					<marginTop value="-6px"/>
					<marginLeft value="0px"/>
				</style>
				<styleClass value="$TextSecondary"/>
				<bind name="class" value="'$FontColorGrey'"/>
				<text value="IDS_REGISTRATION_DATE"/>
			</block>
			<block>
				<bind name="visible" value="statData.basicStats.timeLastBattle &gt; 0"/>
				<block type="text">
					<bind name="timeFormat" value="statData.basicStats.timeLastBattle; 'hh:mm  dd.MM.yyyy'; 'timeLastBattleFormatted'; true"/>
					<style>
						<marginLeft value="0px"/>
					</style>
					<styleClass value="$TextSecondary"/>
					<bind name="text" value="timeLastBattleFormatted"/>
				</block>
				<block type="text">
					<style>
						<marginTop value="-6px"/>
						<marginLeft value="0px"/>
					</style>
					<styleClass value="$TextSecondary"/>
					<bind name="class" value="'$FontColorGrey'"/>
					<bind name="text" value="toLowerCase(tr('IDS_LAST_BATTLE'))"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="child" value="profilePage; {_curItemIndex: _curItemIndex}; 'PlayerAccount'; 'PlayerAchievements'; 'PlayerRanks'; 'PlayerClubs'; 'PlayerSummary'; 'PlayerCollection'"/>
		</block>
		<block>
			<style>
				<top value="21sh"/>
				<position value="absolute"/>
			</style>
			<block>
				<bind name="instance" value="'NavigationProfileButton'; { 	_label: 'IDS_PROFILE_ACCOUNT',
															_activePage: profilePage,
															_action: 'changeInset',
															_actionParams: {	inset: LobbyConstants.PLAYER_PROFILE,
																				page: LobbyConstants.PLAYER_PROFILE_ACCOUNT,
																				pageData: { isPortBannerClicked: false }
																			}
															 }"/>
			</block>
			<block>
				<bind name="instance" value="'NavigationProfileButton'; { 	_label: 'IDS_PROFILE_ACHIEVEMENTS',
															_activePage: profilePage,
															_action: 'changeInset',
															_actionParams: {	inset: LobbyConstants.PLAYER_PROFILE,
																				page: LobbyConstants.PLAYER_PROFILE_ACHIEVEMENTS,
																				pageData: { isPortBannerClicked: false }
																			}
															 }"/>
			</block>
			<block>
				<bind name="feature" value="16; 'click'"/>
				<bind name="visible" value="feature_16 != 'locked'"/>
				<block>
					<bind name="instance" value="'NavigationProfileButton'; feature_16 != 'locked' ? { 	_label: 'IDS_PROFILE_RANKS',
																						_activePage: profilePage,
																						_action: 'changeInset',
																						_actionParams: {	inset: LobbyConstants.PLAYER_PROFILE,
																											page: LobbyConstants.PLAYER_PROFILE_RANKS,
																											pageData: { isPortBannerClicked: false }
																										},
																						_isNewMarker: (feature_16 == 'new')
																					 } : null"/>
				</block>
			</block>
			<block>
				<bind name="primaryEntityDH" value="'newCardsEntity'; CC.newContent; SC.Common.CONTENT_CATEGORY.CARDS"/>
				<bind name="watchDH" value="'newCardsCounter'; ['newCardsEntity.newContent.evCountChanged']; newCardsEntity.newContent.count"/>
				<bind name="visible" value="anyCardsOwned"/>
				<bind name="instance" value="'NavigationProfileButton'; anyCardsOwned ?	{ 	_label: 'IDS_PROFILE_COLLECTIONS',
																			_activePage: profilePage,
																			_action: 'changeInset',
																			_actionParams: {	inset: LobbyConstants.PLAYER_PROFILE,
																								page: LobbyConstants.PLAYER_PROFILE_COLLECTIONS,
																								pageData: { isPortBannerClicked: false }
																							},
																			_newContentCounter: newCardsCounter
																		 } : null"/>
			</block>
			<block>
				<bind name="instance" value="'NavigationProfileButton'; { 	_label: 'IDS_PROFILE_SUMMARY',
															_activePage: profilePage,
															_action: 'changeInset',
															_actionParams: {	inset: LobbyConstants.PLAYER_PROFILE,
																				page: LobbyConstants.PLAYER_PROFILE_SUMMARY,
																				pageData: { isPortBannerClicked: false }
																			}
															 }"/>
			</block>
			<block>
				<bind name="fade" value="profilePage==LobbyConstants.PLAYER_PROFILE_CLUB &amp;&amp; ((seasonId &gt; 0 &amp;&amp; stage == 2) || seasonId &lt;= 0); 0.13; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: 10}; 1; (profilePage==LobbyConstants.PLAYER_PROFILE_CLUB) ? 0.18 : 0"/>
				<bind name="tooltip" value="'ClubRulesInfoTooltip'; seasonId &gt; 0 &amp;&amp; stage == 2 ? {} : null"/>
				<style>
					<marginTop value="1sh"/>
					<marginLeft value="5px"/>
					<width value="170px"/>
					<height value="124px"/>
				</style>
				<block className="mc_issued_frame" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="instance" value="'ClubRulesInfo'; {}"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ProfileCarousel">
		<params>
			<param name="name" value="ProfileCarousel"/>
		</params>
		<style>
			<marginTop value="720:16,1080:32ah"/>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<position value="absolute"/>
					<width value="100%"/>
					<bottom value="-1px"/>
				</style>
				<block className="scroll_line" type="native">
					<style>
						<width value="100%"/>
					</style>
				</block>
			</block>
			<block>
				<style>
					<width value="20px"/>
					<height value="100%"/>
					<marginRight value="12px"/>
				</style>
				<block className="button_slide_left" type="native">
					<styleClass value="$MiddleAligned"/>
					<params>
						<param name="focusable" value="false"/>
					</params>
					<style>
						<marginTop value="40px"/>
					</style>
					<bind name="name" value="'buttonCarouselLeft'"/>
					<bind name="dispatch" value="'buttonClick'; 'profileCarousel.scrollOneUnitLeft'; null; true"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="catch" value="'mainCarouselElement.selectedIndexChanged'"/>
				<bind name="instance" value="_mainCarouselElementName; {}"/>
			</block>
			<block>
				<style>
					<width value="20px"/>
					<height value="100%"/>
					<marginLeft value="12px"/>
				</style>
				<block className="button_slide_right" type="native">
					<styleClass value="$MiddleAligned"/>
					<params>
						<param name="focusable" value="false"/>
					</params>
					<style>
						<marginTop value="40px"/>
					</style>
					<bind name="name" value="'buttonCarouselRight'"/>
					<bind name="dispatch" value="'buttonClick'; 'profileCarousel.scrollOneUnitRight'; null; true"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="-8px"/>
				<marginRight value="-8px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<height value="100%"/>
					<position value="absolute"/>
				</style>
				<block className="BlurMapCustom">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap_half_sphere" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
				<block className="gradient_half_sphere" type="native">
					<style>
						<width value="100%"/>
						<height value="110%"/>
					</style>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="_rewardsCarouselElementName; {_carouselData: _carouselData, _selectedIndex: selectedIndex}"/>
			</block>
		</block>
	</block>
	<css name="$DefaultTooltipBehaviour">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.1,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.1,
		disappearOffset: -10.0,
		tinyOffset: 2,
		rightOffset: 6,
		bottomOffset: 26
	}"/>
	</css>
	<css name="$DefaultInstantTooltipBehaviour">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.06,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.06,
		disappearOffset: -10.0,
		tinyOffset: 2,
		rightOffset: 6,
		bottomOffset: 26
	}"/>
	</css>
	<css name="$DefaultMenuBehaviour">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.07,
		appearOffset: 10.0,
		disappearDelay: 0.0,
		disappearDuration: 0.1,
		disappearOffset: 10.0,
		tinyOffset: 0,
		rightOffset: 0,
		bottomOffset: 0
	}"/>
	</css>
	<css name="$RightSubMenuBehaviour">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.15,
		appearOffset: 0.0,
		disappearDelay: 0.35,
		disappearDuration: 0.1,
		disappearOffset: 5.0,
		tinyOffset: 0,
		rightOffset: 0,
		bottomOffset: 0,
		showDirection: 'right'
	}"/>
	</css>
	<css name="$LeftSubMenuBehaviour">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.15,
		appearOffset: 0.0,
		disappearDelay: 0.35,
		disappearDuration: 0.1,
		disappearOffset: 5.0,
		tinyOffset: 0,
		rightOffset: 0,
		bottomOffset: 0,
		showDirection: 'left'
	}"/>
	</css>
	<css name="$VerticalInfotipBehaviour">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.1,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.1,
		disappearOffset: -10.0,
		tinyOffset: 2,
		rightOffset: 0,
		bottomOffset: 0
	}"/>
	</css>
	<css name="$VerticalInfotipBehaviourCenter">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.1,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.1,
		disappearOffset: -10.0,
		tinyOffset: 2,
		rightOffset: -8,
		bottomOffset: 0,
		screenBottomOffset: 26,
		isTipCenter: true
	}"/>
	</css>
	<css name="$VerticalInfotipBehaviourCenterUpper">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.1,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.1,
		disappearOffset: -10.0,
		tinyOffset: 2,
		rightOffset: -8,
		bottomOffset: 0,
		isTipCenter: true,
		fixedDirectionUp: true
	}"/>
	</css>
	<css name="$ReplaysInfotip">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.1,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.1,
		disappearOffset: -10.0,

		rightOffset: 300,
		bottomOffset: 0,
		isTipCenter: true
	}"/>
	</css>
	<css name="$ReplaysInfotipFilter">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.1,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.1,
		disappearOffset: -10.0,

		rightOffset: 0,
		bottomOffset: 0,
		isTipCenter: true
	}"/>
	</css>
	<css name="$HorizontalInfotipBehaviour">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.1,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.0,
		disappearOffset: -10.0,
		tinyOffset: 0,
		rightOffset: -10,
		bottomOffset: 0,
		isTipCenter: true
	}"/>
	</css>
	<css name="$FightButtonTooltipBehaviour">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.1,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.0,
		disappearOffset: -10.0,
		tinyOffset: 2,
		rightOffset: 6,
		bottomOffset: 26
	}"/>
	</css>
	<css name="$WarningTooltipBehaviour">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.1,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.1,
		disappearOffset: -10.0,
		tinyOffset: 2,
		rightOffset: 6,
		bottomOffset: 26
	}"/>
	</css>
	<css name="$ModuleTreeTooltipBehaviour">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.1,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.1,
		disappearOffset: -10.0,
		tinyOffset: 2,
		rightOffset: 6,
		bottomOffset: 26
	}"/>
	</css>
	<css name="$SmallListItem">
		<width value="100%"/>
		<height value="18px"/>
	</css>
	<css name="$SmallListItemValue">
		<position value="absolute"/>
		<right value="0px"/>
	</css>
	<css name="$DefaultTooltipWidth">
		<width value="300px"/>
	</css>
	<block className="EmptyLine"/>
	<block className="MouseInstructionTooltip">
		<style>
			<hitTest value="false"/>
		</style>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'TooltipBackground'; {_isInBattle: _isInBattle}"/>
		</block>
		<block>
			<bind name="visible" value="_multiParagraphArray.length &gt; 0"/>
			<styleClass value="$InfoBlockHorizontalIndentNoWidth"/>
			<style>
				<marginTop value="9px"/>
			</style>
			<bind name="style" value="'marginBottom'; _marginBottomParagraphs 												? _marginBottomParagraphs :
									(_multiParagraphArray.length &gt; 0) &amp;&amp; (_mouseInstructions.length &gt; 0)	? '0px'
																											: '5px'"/>
			<bind name="repeat" value="_multiParagraphArray; 'RepeatParagraphItem'; {_maxWidth: _maxWidth, _marginBottom: _marginBottom, _leading: _leading}"/>
		</block>
		<block>
			<bind name="visible" value="_checkedLines.length &gt; 0"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="_checkedLines.length &gt; 0"/>
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<bind name="repeat" value="_checkedLines; 'CheckedLineRepeater'; {_maxWidth: _maxWidth, _marginBottom: _marginBottom, _lastIndex: (_checkedLines.length - 1), _leading: _leading}"/>
		</block>
		<block>
			<bind name="visible" value="(_multiParagraphArray.length &gt; 0) &amp;&amp; (_mouseInstructions.length &gt; 0)"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="_mouseInstructions.length &gt; 0"/>
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<bind name="repeat" value="_mouseInstructions; 'MouseInstructionRepeater'; {_maxWidth: _maxWidth, _lastIndex: (_mouseInstructions.length - 1), _leading: _leading}"/>
		</block>
	</block>
	<block className="SimpleTooltip">
		<block className="SimpleTooltipTemplate">
			<styleClass value="$DefaultTooltipBehaviour"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
			<block className="hint_panel" type="native">
				<style>
					<position value="absolute"/>
				</style>
				<styleClass value="$Fullsize"/>
			</block>
			<block type="text">
				<styleClass value="$InfoBlockIndentNoWidth"/>
				<styleClass value="$TextHeaderBigDefault"/>
				<bind name="style" value="'leading'; (tooltipText.length &gt; 30 ? 0 : -3)"/>
				<style>
					<maxWidth value="300"/>
				</style>
				<bind name="text" value="tooltipText"/>
			</block>
		</block>
	</block>
	<block className="SubTextTooltip">
		<block className="SubTextTooltipTemplate">
			<styleClass value="$DefaultTooltipBehaviour"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
			<block className="hint_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<styleClass value="$InfoBlockIndentNoWidth"/>
				<block type="text">
					<styleClass value="$TextHeaderBold"/>
					<style>
						<leading value="-3"/>
						<maxWidth value="260"/>
					</style>
					<bind name="text" value="tooltipText"/>
				</block>
				<block type="text">
					<styleClass value="$TextHeaderBigDefault"/>
					<style>
						<marginTop value="3px"/>
						<leading value="-3"/>
						<maxWidth value="260"/>
					</style>
					<bind name="text" value="tooltipSubText"/>
				</block>
			</block>
		</block>
	</block>
	<block className="SimpleWarningTooltip">
		<styleClass value="$WarningTooltipBehaviour"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'TooltipBackground'; {_isInBattle: _isInBattle}"/>
		</block>
		<block>
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<block className="icon_warning_orange" type="native">
				<style>
					<marginTop value="5px"/>
					<marginRight value="2px"/>
				</style>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorUnready'"/>
				<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 240"/>
				<style>
					<leading value="-3"/>
				</style>
				<bind name="text" value="_text"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="MultipleWarningsTooltip">
		<styleClass value="$WarningTooltipBehaviour"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'TooltipBackground'; {_isInBattle: _isInBattle}"/>
		</block>
		<block>
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<block className="icon_warning_orange" type="native">
				<style>
					<marginTop value="5px"/>
					<marginRight value="2px"/>
				</style>
			</block>
			<block>
				<bind name="repeat" value="_warningsArr; 'SimpleWarningText'; {}"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="SimpleWarningText">
		<block type="text">
			<styleClass value="$TextDefault"/>
			<bind name="class" value="'$FontColorUnready'"/>
			<style>
				<maxWidth value="240"/>
				<leading value="-3"/>
			</style>
			<bind name="text" value="$value"/>
		</block>
	</block>
	<block className="StartButtonWarningsTooltip">
		<styleClass value="$WarningTooltipBehaviour"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'TooltipBackground'; {_isInBattle: _isInBattle}"/>
		</block>
		<block>
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<block className="icon_warning_orange" type="native">
				<style>
					<marginTop value="5px"/>
					<marginRight value="2px"/>
				</style>
			</block>
			<block>
				<params>
					<param name="name" value="MultipleWarningsTooltip"/>
				</params>
				<bind name="repeat" value="_warningsArr; 'StartButtonWarningText'; {}"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="StartButtonWarningText">
		<bind name="firstEntityDH" value="'clanCurrentSeasonEntity'; CC.clanBattleSeason; 'current'"/>
		<bind name="watchDH" value="'cbs_primeTimeStartTime'; ['clanCurrentSeasonEntity.clanBattleSeason.evChanged']; clanCurrentSeasonEntity.clanBattleSeason.primeTimeStartTime"/>
		<bind name="watchDH" value="'cbs_primeTimeFinishTime'; ['clanCurrentSeasonEntity.clanBattleSeason.evChanged']; clanCurrentSeasonEntity.clanBattleSeason.primeTimeFinishTime"/>
		<bind name="countdown" value="cbs_primeTimeStartTime; 'startPrimeTimeText'; 'HIGHEST,WITH_DAYS'; 'timeoutEvent'"/>
		<bind name="countdown" value="cbs_primeTimeFinishTime; 'finishPrimeTimeText'; 'HIGHEST,WITH_DAYS'; 'timeoutEvent'"/>
		<block type="text">
			<styleClass value="$TextDefault"/>
			<bind name="class" value="'$FontColorUnready'"/>
			<style>
				<maxWidth value="240"/>
				<leading value="-3"/>
			</style>
			<bind name="text" value="$value == 'IDS_CLAN_BATTLES_PRIMETIME_STARTS_IN'	?	subst('IDS_CLAN_BATTLES_PRIMETIME_STARTS_IN', [], {timeLeft: startPrimeTimeText}) 
																		:	$value"/>
		</block>
	</block>
	<block className="TooltipBackground">
		<styleClass value="$FullsizeAbsolute"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'DeclareBlurLayer'; _isInBattle ?  null : {}"/>
			<bind name="instance" value="'BlurMap'; _isInBattle ? null : {}"/>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="(optionData.contrast == true || _isInBattle == true)"/>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="!(_isInBattle)"/>
			<block className="hint_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
	</block>
	<block className="TimerTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'TooltipBackground'; {_isInBattle: _isInBattle}"/>
		</block>
		<block type="text">
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<styleClass value="$TextHeader"/>
			<bind name="class" value="'$FontSizeHeader4'"/>
			<bind name="pureText" value="_text"/>
		</block>
	</block>
	<block className="PlayerTooltipInvitationCountdown">
		<bind name="countdown" value="_expirationTime; 'countdownText'; 'mm:ss'"/>
		<style>
			<width value="100%"/>
		</style>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="4px"/>
				<marginLeft value="7px"/>
				<marginRight value="4px"/>
				<marginBottom value="3px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<marginRight value="6px"/>
				</style>
				<block>
					<style>
						<marginLeft value="4px"/>
					</style>
					<bind name="instance" value="'FormationPlayerIcon'; {_isEmptySlot: true, _formationType: _formationType}"/>
				</block>
				<block type="text">
					<style>
						<marginLeft value="4px"/>
						<maxWidth value="158"/>
						<leading value="-3"/>
					</style>
					<styleClass value="$TextDefaultBold"/>
					<bind name="class" value="'$FontColorWhite'"/>
					<bind name="text" value="_text"/>
				</block>
				<block type="text">
					<style>
						<top value="-4px"/>
					</style>
					<styleClass value="$TextHeaderBigDefault"/>
					<styleClass value="$AlignRight"/>
					<bind name="class" value="'$FontSizeHeader6'"/>
					<bind name="pureText" value="'-' + countdownText"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="TooltipHeaderWithIcon">
		<style>
			<width value="100%"/>
			<flow value="horizontal"/>
			<margin value="16px"/>
		</style>
		<block>
			<bind name="visible" value="_iconPath"/>
			<style>
				<width value="80px"/>
				<height value="80px"/>
			</style>
			<bind name="style" value="'backgroundImage'; _iconPath"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="16px"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefaultBold17NM"/>
				<bind name="class" value="_headerClass ? _headerClass : '$None'"/>
				<style>
					<width value="100%"/>
					<leading value="-5"/>
					<marginTop value="2px"/>
				</style>
				<bind name="text" value="_headerText"/>
			</block>
			<block type="text">
				<bind name="visible" value="_subheaderText"/>
				<styleClass value="$TextDefault17NM"/>
				<bind name="class" value="_subheaderClass ? _subheaderClass : '$None'"/>
				<style>
					<width value="100%"/>
					<leading value="-3"/>
					<marginTop value="16px"/>
				</style>
				<bind name="text" value="_subheaderText"/>
			</block>
		</block>
	</block>
	<block className="TooltipContentTextBlock">
		<style>
			<width value="100%"/>
		</style>
		<block className="inner_panel" type="native">
			<bind name="visible" value="_withBackground == true"/>
			<styleClass value="$FullsizeAbsolute"/>
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<marginTop value="1px"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<margin value="16px"/>
			</style>
			<bind name="repeat" value="_multiParagraphArray; 'RepeatParagraphItemNM'; {_maxWidth: _maxWidth, _marginBottom: _marginBottom, _leading: (_leading ? _leading : -3)}"/>
		</block>
	</block>
	<block className="AccountCompletionRewardTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="336px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<margin value="16px|16px|12px|12px"/>
			</style>
			<block type="text">
				<style>
					<width value="100%"/>
				</style>
				<styleClass value="$TextDefault17NM"/>
				<bind name="text" value="tooltipText"/>
			</block>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<margin value="16px|16px|12px|12px"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefault17NM"/>
				<style>
					<leading value="-3"/>
					<width value="100%"/>
					<marginBottom value="8px"/>
				</style>
				<bind name="text" value="'IDS_ACCOUNT_COMPLETION_TOOLTIP_SUBHEADER'"/>
			</block>
			<bind name="firstEntityDH" value="'completionRewardsEntity'; CC.completionRewards"/>
			<bind name="watchDH" value="'rewards';[]; completionRewardsEntity.completionRewards.rewards"/>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="repeat" value="rewards; 'RewardContainerTooltipItemAdapter'"/>
			</block>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<margin value="16px|16px|8px|8px"/>
			</style>
			<bind name="instance" value="'MouseInstruction'; { _type: 'left', _instructionText: 'IDS_FINISH_ACCOUNT_COMPLETION_TOOLTIP', _maxWidth: 300 }"/>
		</block>
	</block>
	<css name="$ShipTreeTooltipBehaviour">
		<userData value="{
		appearDelay: 0.3,
		appearDuration: 0,
		appearOffset: 5.0,
		disappearDelay: 0.2,
		disappearDuration: 0.1,
		disappearOffset: -10.0,
		tinyOffset: 0,
		rightOffset: 0,
		bottomOffset: 0
	}"/>
	</css>
	<css name="$ModuleTreeInfotipBehaviour">
		<userData value="{
		appearDelay: 0.1,
		appearDuration: 0.1,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.1,
		disappearOffset: -10.0,
		tinyOffset: 0,
		rightOffset: -10,
		bottomOffset: 0
	}"/>
	</css>
	<block className="PurchaseSlotTooltip">
		<bind name="style" value="'userData'; { rightOffset: _hOffset }"/>
		<styleClass value="$ShipTreeTooltipBehaviour"/>
		<style>
			<width value="330px"/>
		</style>
		<styleClass value="$MouseDisable"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<style>
				<position value="absolute"/>
			</style>
			<styleClass value="$Fullsize"/>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'InstructionParagraph'; { _text: 'IDS_INSTRUCTION_SLOT_PURCHASE', _maxWidth: '300' }"/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'MouseInstruction';  { _type: 'left', _instructionText: 'IDS_MOUSE_INSTRUCTION_SLOT_PURCHASE', _maxWidth: '300'}"/>
		</block>
	</block>
	<block className="PurchaseShipTooltip">
		<bind name="style" value="'userData'; { rightOffset: _hOffset }"/>
		<styleClass value="$ShipTreeTooltipBehaviour"/>
		<style>
			<width value="300px"/>
			<height value="80px"/>
		</style>
		<styleClass value="$MouseDisable"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<style>
				<width value="100%"/>
				<bottom value="0px"/>
			</style>
			<block className="contrast_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
			<block className="hint_panel" type="native">
				<style>
					<position value="absolute"/>
				</style>
				<styleClass value="$Fullsize"/>
			</block>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<bind name="instance" value="'MouseInstruction'; { _instructionText: 'IDS_INSTRUCTION_SHIP_PURCHASE', _type: 'left', _maxWidth: '250' }"/>
			</block>
		</block>
	</block>
	<block className="ModuleTooltipHeader">
		<style>
			<marginTop value="-6px"/>
			<marginBottom value="3px"/>
			<flow value="horizontal"/>
		</style>
		<block className="icon_tree_module_states" type="native">
			<style>
				<marginTop value="3px"/>
			</style>
			<styleClass value="$MouseDisable"/>
			<bind name="gotoAndStop!" value="moduleInfo.type + (((moduleInfo.toPurchase &amp;&amp; moduleInfo.creditsDeficit &lt;= 0) || (moduleInfo.toExplore &amp;&amp; moduleInfo.expDeficit &lt;= 0)) ? '_A' : '_P') "/>
		</block>
		<block className="icon_discount" type="native">
			<bind name="tooltip" value="'DiscountTooltip'; { priceInfo: (_explorePrice &amp;&amp; !(moduleInfo.isExplored) ? _explorePrice : _buyPrice)}"/>
			<bind name="visible" value="((_explorePrice.finalPrice != _explorePrice.basePrice &amp;&amp; !(moduleInfo.isExplored)) || (_buyPrice.finalPrice != _buyPrice.basePrice &amp;&amp; moduleInfo.isExplored))"/>
			<style>
				<position value="absolute"/>
				<left value="45px"/>
				<marginTop value="4px"/>
			</style>
			<bind name="gotoAndStop!" value="'normal'"/>
		</block>
		<block>
			<style>
				<marginTop value="3px"/>
				<marginLeft value="3px"/>
			</style>
			<block type="text">
				<style>
					<marginBottom value="5px"/>
					<maxWidth value="200"/>
				</style>
				<styleClass value="$TextHeaderBold"/>
				<bind name="class" value="	moduleInfo.count.Installed &gt; 0 	? '$FontColorGolden'	:
							moduleInfo.toPurchase			? '$FontColorDefault'	:
							moduleInfo.isExplored			? '$FontColorWhite' 
															: '$FontColorExp'"/>
				<bind name="text" value="moduleInfo.nameIDS"/>
			</block>
			<block type="text">
				<style>
					<marginTop value="-9px"/>
					<maxWidth value="200"/>
				</style>
				<styleClass value="$TextDefault"/>
				<bind name="text" value="moduleInfo.subTypeIDS != '' ? moduleInfo.subTypeIDS : moduleInfo.typeIDS"/>
			</block>
		</block>
	</block>
	<block className="ModuleTreeInfotip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY + moduleInfo.id; 'moduleBuyPrice'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_EXPLORE + moduleInfo.id; 'moduleExplorePrice'"/>
		<styleClass value="$ModuleTreeInfotipBehaviour"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block className="dock_panel" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
				<marginTop value="-10px"/>
				<marginRight value="-14px"/>
				<marginBottom value="-16px"/>
				<marginLeft value="-14px"/>
			</style>
		</block>
		<block>
			<style>
				<width value="300px"/>
			</style>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<style>
					<marginBottom value="0px"/>
				</style>
				<bind name="instance" value="'ModuleTooltipHeader'; {_explorePrice: moduleExplorePrice.prices[0], _buyPrice: moduleBuyPrice.prices[0], moduleInfo: moduleInfo}"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<bind name="watch" value="'showStats'; !(_isEventLike) || _shipIsOwned)"/>
			<block>
				<bind name="visible" value="showStats"/>
				<styleClass value="$InfoBlockIndent"/>
				<bind name="instance" value="'ModuleStatus'; {	_isStock: moduleInfo.isStock, _isExplored: moduleInfo.isExplored, _count: moduleInfo.count,
												_unableToInstallIncompatibles: moduleInfo.unableToInstallIncompatibles }"/>
			</block>
			<block>
				<bind name="visible" value="showStats"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
					<block className="inner_panel" type="native">
						<styleClass value="$Fullsize"/>
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<position value="absolute"/>
							<marginBottom value="1px"/>
							<marginTop value="1px"/>
						</style>
					</block>
					<block>
						<bind name="watch" value="'deepWaterTorpedoes'; 		moduleInfo.params.torpedoes.isDeepWater"/>
						<bind name="watch" value="'deepWaterTorpedoBombers'; moduleInfo.params.torpedoIsDeepWater"/>
						<styleClass value="$InfoBlockIndent"/>
						<bind name="visible" value="(deepWaterTorpedoes == true) || (deepWaterTorpedoBombers == true)"/>
						<bind name="instance" value="'TorpedoAffectedShipsParamRow'; (deepWaterTorpedoes == true) || (deepWaterTorpedoBombers == true) 	? { _torpedoId: moduleInfo.params.ammoNameRaw, 
																																			_isTooltip: true }
																																		: null"/>
					</block>
					<block>
						<bind name="visible" value="(deepWaterTorpedoes == true) || (deepWaterTorpedoBombers == true)"/>
						<style>
							<width value="100%"/>
						</style>
						<block className="HorizontalDivider">
							<styleClass value="$PxHorizontalCorrection"/>
							<style>
								<width value="100%"/>
								<height value="3px"/>
							</style>
							<block className="divider_h" type="native">
								<styleClass value="$Fullsize"/>
							</block>
						</block>
					</block>
					<bind name="instance" value="'ShipParamsTooltipList'; { typeList: 'tooltipModuleParams' + moduleInfo.type, params: moduleInfo.params, testParams: _testModuleParams, testObjectIsBaseForView: 0, testObjectIsBaseForCompare: 0, showCompareWithZero: 1}"/>
				</block>
				<block>
					<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerParams; 0; null; 'tooltipModuleParams'; _shipParams; moduleInfo.shipParamsWithThisModule; 1; 0; null; 1; 1; 0"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="instance" value="'ParamsAfterMount'; !(moduleInfo.count.Installed) &amp;&amp; viewParams.hasDiff ? { _viewParams: viewParams,
																											_title: 'IDS_AFTER_MOUNT'}
																										: null"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="style" value="'marginTop'; moduleInfo.unableToInstallIncompatibles.length &gt; 0 moduleInfo.dependentModules.length &gt; 0 ? '8px' : '0px'"/>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<bind name="instance" value="'IncompatiblesBlock'; moduleInfo.unableToInstallIncompatibles.length &gt; 0 ? { _type: [2,'mount'], _incompatibleModules: moduleInfo.unableToInstallIncompatibles } : null"/>
					</block>
					<bind name="instance" value="'ModuleDependenciesBlock'; moduleInfo.dependentModules.length &gt; 0 ? {  _type: [0,'research'], _dependentModules: moduleInfo.dependentModules, _priceInfo: moduleExplorePrice.prices[0]} : null"/>
				</block>
				<block>
					<styleClass value="$InfoBlockIndent"/>
					<bind name="style" value="'marginBottom'; moduleInfo.count.Installed ? '0px' : '9px'"/>
					<block>
						<bind name="instance" value="'PriceTagWithLabel'; ( moduleInfo.toExplore) &amp;&amp; ( moduleInfo.expDeficit &gt;  0) 	? { priceInfo: {finalPrice:moduleInfo.totalCostXP, currency: 'exp'}, _label: 'IDS_RESEARCH_COST', _medium : true}
																								: !(moduleInfo.toExplore) &amp;&amp; ( moduleInfo.toPurchase ) &amp;&amp; (moduleInfo.creditsDeficit &gt; 0) ? { priceInfo: {finalPrice:moduleInfo.totalCostCR, currency: 'credits'}, _label: 'IDS_PURCHASE_COST', _medium : true}
																								: null"/>
					</block>
					<block>
						<bind name="instance" value="'PriceDeficit'; moduleInfo.toExplore &amp;&amp; (moduleInfo.expDeficit &gt; 0) ? { _deficit: moduleInfo.expDeficit, priceInfo: {finalPrice:moduleInfo.totalCostXP, currency: 'exp'}, _tooltipText: 'IDS_TOOLTIP_NO_XP' }
													: moduleInfo.toPurchase &amp;&amp; (moduleInfo.creditsDeficit &gt; 0) ? { _deficit: moduleInfo.creditsDeficit, priceInfo: {finalPrice:moduleInfo.totalCostCR, currency: 'credits'}, _tooltipText: 'IDS_TOOLTIP_NO_CREDITS' }
													: null"/>
					</block>
					<block>
						<bind name="name" value="'ButtonModuleResearchOrPurchase'"/>
						<style>
							<width value="100%"/>
						</style>
						<bind name="instance" value="'DefaultButtonCostMedium'; moduleInfo.expDeficit &lt;= 0 &amp;&amp; moduleInfo.toExplore	? { _label: toUpperCase(tr('IDS_DO_RESEARCH')), priceInfo: {finalPrice:moduleInfo.totalCostXP, currency: 'exp'}, _action: 'researchModule', _actionParams: { shipId: moduleInfo.shipId,  moduleId: moduleInfo.id }, _enabled: (moduleInfo.expDeficit &lt;= 0)}
                    																								: !(_isNeedRepair || _isNeedShell || _isLocked) &amp;&amp; moduleInfo.creditsDeficit &lt;= 0 &amp;&amp; moduleInfo.toPurchase	? { _label: (moduleInfo.toInstall	? toUpperCase(tr('IDS_DO_PURCHASE_AND_INSTALL')) : toUpperCase(tr('IDS_DO_PURCHASE'))),
                    																																															priceInfo: {finalPrice:moduleInfo.totalCostCR, currency: 'credits'},
                    																																															_action: moduleInfo.toInstall ? 'purchaseAndInstallModule' : 'purchaseModule',
                    																																															_actionParams: { shipId: moduleInfo.shipId, moduleId: moduleInfo.id },
                    																																															_enabled: (moduleInfo.creditsDeficit &lt;= 0)}
                    																																														: null "/>
						<bind name="watch" value="'guidingTipId'; moduleInfo.toExplore ? SC.Context_guiding_tip.TIP_TYPES.MODULES_TOOLTIP_EXPLORE : SC.Context_guiding_tip.TIP_TYPES.MODULES_TOOLTIP_BUY"/>
						<bind name="primaryEntityDH" value="'guidingTipEntity'; CC.contextGuidingTip; guidingTipId"/>
						<bind name="watch" value="'isGuidingTipTarget'; (guidingTipEntity.contextGuidingTip.targetID == moduleInfo.name) ||
																	(moduleInfo.expDeficit &lt;= 0 &amp;&amp; moduleInfo.toExplore) ||
																	(moduleInfo.creditsDeficit &lt;= 0 &amp;&amp; moduleInfo.toPurchase)"/>
						<bind name="dispatch" value="'Tooltip.selfOpened'; isGuidingTipTarget ? 'ContextGuidingReasonOpen' : ''; {}; SC.Common.UBSCOPE_EVENT_DIRECTIONS.DOWN"/>
						<bind name="dispatch" value="'Tooltip.selfClosed'; isGuidingTipTarget ? 'ContextGuidingReasonClose' : ''; {}; SC.Common.UBSCOPE_EVENT_DIRECTIONS.DOWN"/>
						<bind name="instance" value="'ContextGuidingTipHub'; isGuidingTipTarget	?  {
																					_tooltipID: guidingTipId,
																					_tipPositioning: 'bottom',
																					_extraCondition: true,
																					_offset: 3, 
																					_screenOffset : 0,
																					_onShowDelay : 0.5,
																					_customOnStageEvent: true
																				}
																				: null"/>
					</block>
					<block>
						<styleClass value="$MiddleAligned"/>
						<bind name="instance" value="'StatusLineWithIcon'; (_isNeedRepair || _isNeedShell || _isLocked) &amp;&amp; (moduleInfo.isExplored || moduleInfo.isStock) &amp;&amp; (moduleInfo.count.Installed == 0) ?
						(_isNeedRepair || _isNeedShell)			? {_text: 'IDS_COMPLETE_SERVICE_FIRST', _maxWidth: 270}
						: _isInFormation 						? {_text: moduleInfo.toInstall &amp;&amp; !(moduleInfo.toPurchase) 	? tr(toUpperCase('IDS_UNREADY_TO_INSTALL_MODULE_' + divisionEntranceData.divisionType))
																															: tr(toUpperCase('IDS_UNREADY_TO_PURCHASE_AND_INSTALL_MODULE_' + divisionEntranceData.divisionType)),
																	_maxWidth: 270}
						: _isLocked	&amp;&amp; moduleInfo.count.Installed == 0	? {_text: 'IDS_SHIP_IN_BATTLE', _maxWidth: 270}
						: !(_shipIsResearched) 					? (moduleInfo.isExplored	? { _text: 'IDS_TO_INSTALL_PURCHASE_SHIP_FIRST', _maxWidth: 270 } 
																				: { _text: 'IDS_TO_RESEARCH_MODULE_RESEARCH_SHIP_FIRST', _maxWidth: 270 })
						: !(_shipIsOwned) 						?	{ _text: 'IDS_TO_INSTALL_PURCHASE_SHIP_FIRST', _maxWidth: 270 }
																: null
					: null"/>
					</block>
					<block>
						<bind name="visible" value="!(_isNeedRepair || _isNeedShell || _isLocked)"/>
						<style>
							<width value="100%"/>
						</style>
						<bind name="instance" value="'DefaultButton'; moduleInfo.toInstall &amp;&amp; !(moduleInfo.toPurchase)	? { _label: toUpperCase(tr('IDS_INSTALL')), _action: 'installModule', _actionParams: { shipId: moduleInfo.shipId, moduleId: moduleInfo.id },
                    																								_enabled: !(moduleInfo.unableToInstall), _containerName: 'upgrade_tree_Install_module_button'}
                    																							: null"/>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="!showStats"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'LabelComingSoon'; { _showTestSampleLabel: showStats }"/>
			</block>
		</block>
		<block className="dock_panel_pin_h" type="native">
			<style>
				<position value="absolute"/>
				<width value="9px"/>
				<height value="16px"/>
			</style>
			<bind name="gotoAndStop!" value="'left'"/>
			<params>
				<param name="name" value="pinLeft"/>
			</params>
		</block>
	</block>
	<block className="ModuleTreeTooltip">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY + moduleInfo.id; 'moduleBuyPrice'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_EXPLORE + moduleInfo.id; 'moduleExplorePrice'"/>
		<styleClass value="$ModuleTreeTooltipBehaviour"/>
		<styleClass value="$MouseDisable"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<style>
				<width value="300px"/>
			</style>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<bind name="instance" value="'ModuleTooltipHeader'; {_explorePrice: moduleExplorePrice.prices[0], _buyPrice: moduleBuyPrice.prices[0], moduleInfo: moduleInfo}"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<bind name="watch" value="'showStats'; !(_isEventLike) || _shipIsOwned)"/>
			<block>
				<bind name="visible" value="showStats"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$InfoBlockIndent"/>
					<bind name="instance" value="'ModuleStatus'; { _isStock: moduleInfo.isStock, _isExplored: moduleInfo.isExplored, _count: moduleInfo.count, _unableToInstallIncompatibles: moduleInfo.unableToInstallIncompatibles }"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="visible" value="!(moduleInfo.isStock) &amp;&amp; (moduleInfo.toPurchase || moduleInfo.toExplore || !(_shipIsResearched) || moduleInfo.unableToInstallIncompatibles.length &gt; 0)"/>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
					<block>
						<style>
							<marginTop value="9px"/>
							<marginBottom value="9px"/>
							<width value="100%"/>
						</style>
						<block>
							<bind name="visible" value="!(moduleInfo.isExplored) &amp;&amp; !(moduleInfo.isStock)"/>
							<styleClass value="$InfoBlockHorizontalIndent"/>
							<style>
								<width value="100%"/>
								<marginBottom value="9px"/>
							</style>
							<bind name="instance" value="'PriceInLine'; moduleInfo.totalCostXP &gt; 0 &amp;&amp; !(moduleInfo.isStock) &amp;&amp; !(moduleInfo.isExplored) 	? { priceInfo: moduleExplorePrice.prices[0], _showDiscountTag:true}
																																		: null"/>
						</block>
						<block>
							<styleClass value="$InfoBlockHorizontalIndent"/>
							<style>
								<width value="100%"/>
							</style>
							<bind name="instance" value="'PriceInLine'; moduleInfo.totalCostCR &gt; 0 &amp;&amp; !(moduleInfo.isStock) &amp;&amp; (moduleInfo.toPurchase || moduleInfo.toExplore || !(_shipIsResearched) || moduleInfo.unableToInstallIncompatibles.length &gt; 0) 	? {priceInfo: moduleBuyPrice.prices[0], _showDiscountTag:true}
																												: null"/>
						</block>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
					<block className="inner_panel" type="native">
						<styleClass value="$Fullsize"/>
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<position value="absolute"/>
							<marginBottom value="1px"/>
							<marginTop value="1px"/>
						</style>
					</block>
					<block>
						<bind name="watch" value="'deepWaterTorpedoes'; 		moduleInfo.params.torpedoes.isDeepWater"/>
						<bind name="watch" value="'deepWaterTorpedoBombers'; moduleInfo.params.torpedoIsDeepWater"/>
						<styleClass value="$InfoBlockIndent"/>
						<bind name="visible" value="(deepWaterTorpedoes == true) || (deepWaterTorpedoBombers == true)"/>
						<bind name="instance" value="'TorpedoAffectedShipsParamRow'; (deepWaterTorpedoes == true) || (deepWaterTorpedoBombers == true) 	? { _torpedoId: moduleInfo.params.ammoNameRaw, 
																																		 	_isTooltip: true }
																																		: null"/>
					</block>
					<block>
						<bind name="visible" value="(deepWaterTorpedoes == true) || (deepWaterTorpedoBombers == true)"/>
						<style>
							<width value="100%"/>
						</style>
						<block className="HorizontalDivider">
							<styleClass value="$PxHorizontalCorrection"/>
							<style>
								<width value="100%"/>
								<height value="3px"/>
							</style>
							<block className="divider_h" type="native">
								<styleClass value="$Fullsize"/>
							</block>
						</block>
					</block>
					<bind name="instance" value="'ShipParamsTooltipList'; { typeList: 'tooltipModuleParams' + moduleInfo.type, params: moduleInfo.params, testParams: _testModuleParams, testObjectIsBaseForView: 0, testObjectIsBaseForCompare: 0, showCompareWithZero: 1}"/>
				</block>
				<block>
					<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerParams; 0 ; null; 'tooltipModuleParams'; _shipParams; moduleInfo.shipParamsWithThisModule; 1; 0; null; 1; 1; 0"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="instance" value="'ParamsAfterMount'; !(moduleInfo.count.Installed) &amp;&amp; viewParams.hasDiff ? { _viewParams: viewParams,
																											_title: 'IDS_AFTER_MOUNT'}
																										: null"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="instance" value="'ModuleDependenciesBlock'; moduleInfo.neededModules.length &gt; 0 ? { _type: [2,'mount'], _dependentModules: moduleInfo.neededModules, _costXP: moduleExplorePrice.prices[0].finalPrice } : null"/>
				</block>
				<block>
					<styleClass value="$InfoBlockIndent"/>
					<bind name="visible" value="(moduleInfo.toPurchase || moduleInfo.toExplore || moduleInfo.toInstall) &amp;&amp; !(_noMouseInstruction)"/>
					<bind name="instance" value="'MouseInstruction'; (moduleInfo.toPurchase || moduleInfo.toExplore || moduleInfo.toInstall)	? {_type: 'left', _instructionText: 'IDS_INSTRUCTION_LMB_EXPLORE_PURCHASE_INSTALL_MODULE', _maxWidth: 250}
																															: null"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="!showStats"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'LabelComingSoon'; { _showTestSampleLabel: showStats }"/>
			</block>
		</block>
	</block>
	<block className="ModuleTreeHelpTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="330px"/>
		</style>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<block className="icon_question_mark" type="native">
				<style>
					<marginRight value="6px"/>
					<marginTop value="4px"/>
				</style>
			</block>
			<block type="text">
				<styleClass value="$TextHeaderWhiteBold"/>
				<text value="IDS_HELP_CREDITS_AND_EXPERIENCE"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$Fullsize"/>
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<block className="ModuleTreeHelpBlock">
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$InfoLineBoundaries"/>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<block>
							<style>
								<width value="18px"/>
								<marginTop value="5px"/>
							</style>
							<block className="icon_credit_small" type="native">
								<styleClass value="$MiddleAligned"/>
							</block>
						</block>
						<block type="text">
							<styleClass value="$TextHeaderBold"/>
							<bind name="class" value="'$FontColorDefault'"/>
							<text value="IDS_CREDITS_C"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block type="text">
						<styleClass value="$TextHeaderBigDefault"/>
						<style>
							<width value="100%"/>
						</style>
						<text value="IDS_HELP_MODULES_CREDITS"/>
					</block>
				</block>
				<block className="ModuleTreeHelpBlock">
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$InfoLineBoundaries"/>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<block>
							<style>
								<width value="18px"/>
								<marginTop value="5px"/>
							</style>
							<block className="icon_exp_small" type="native">
								<styleClass value="$MiddleAligned"/>
							</block>
						</block>
						<block type="text">
							<styleClass value="$TextHeaderBold"/>
							<bind name="class" value="'$FontColorExp'"/>
							<text value="IDS_EXPERIENCE_C"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block type="text">
						<styleClass value="$TextHeaderBigDefault"/>
						<style>
							<width value="100%"/>
						</style>
						<text value="IDS_HELP_MODULES_EXPERIENCE"/>
					</block>
				</block>
				<block className="ModuleTreeHelpBlock">
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$InfoLineBoundaries"/>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<block>
							<style>
								<width value="18px"/>
								<marginTop value="5px"/>
							</style>
							<block className="icon_exp_free_small" type="native">
								<styleClass value="$MiddleAligned"/>
							</block>
						</block>
						<block type="text">
							<styleClass value="$TextHeaderBold"/>
							<bind name="class" value="'$FontColorFreeExp'"/>
							<text value="IDS_FREE_EXPERIENCE_C"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block type="text">
						<styleClass value="$TextHeaderBigDefault"/>
						<style>
							<width value="100%"/>
						</style>
						<text value="IDS_HELP_ABOUT_FREE_EXPERIENCE"/>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="VideoTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="330px"/>
		</style>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<block className="button_play_video" type="native">
				<bind name="selected" value="_isVideoSeen"/>
				<style>
					<marginRight value="6px"/>
					<marginTop value="4px"/>
				</style>
			</block>
			<block type="text">
				<styleClass value="$TextHeaderWhiteBold"/>
				<bind name="text" value="_headerText"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!(_isVideoSeen)"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<block className="icon_warning_orange" type="native">
					<style>
						<marginRight value="6px"/>
						<marginTop value="4px"/>
					</style>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorUnready'"/>
					<text value="IDS_NEW_VIDEO"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="(_multiParagraphArray != null)"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<bind name="repeat" value="_multiParagraphArray; 'RepeatParagraphItem'; {}"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="(_descriptionText != null)"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<styleClass value="$PxHorizontalCorrection"/>
			</block>
			<block type="text">
				<styleClass value="$InfoBlockIndent"/>
				<styleClass value="$TextHeaderBigDefault"/>
				<bind name="text" value="_descriptionText"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'MouseInstruction'; {_type: 'left', _instructionText: 'IDS_WATCH_EDUCATIONAL_VIDEO', _maxWidth: 300}"/>
		</block>
	</block>
	<block className="SlotInfotip">
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
			</style>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
		</block>
		<block className="dock_panel" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
				<marginTop value="-9px"/>
				<marginRight value="-14px"/>
				<marginBottom value="-19px"/>
				<marginLeft value="-14px"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100px"/>
			</style>
			<block className="dock_submenu_item" type="native">
				<params>
					<param name="soundSet" value="dropmenu_button"/>
				</params>
				<bind name="dispatch" value="'click'; 'changeSlotBuy'; {buySlot:true}"/>
				<style>
					<width value="100%"/>
					<height value="24px"/>
				</style>
				<block>
					<style>
						<right value="4px"/>
						<hitTest value="false"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<text value="IDS_WITH_SLOT"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block className="divider_h" type="native">
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
			</block>
			<block className="dock_submenu_item" type="native">
				<params>
					<param name="soundSet" value="dropmenu_button"/>
				</params>
				<bind name="dispatch" value="'click'; 'changeSlotBuy'; {buySlot:false}"/>
				<style>
					<width value="100%"/>
					<height value="24px"/>
				</style>
				<block>
					<style>
						<right value="4px"/>
						<hitTest value="false"/>
					</style>
					<block className="icon_warning_orange" type="native">
						<style>
							<marginTop value="5px"/>
						</style>
					</block>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<text value="IDS_WITHOUT_SLOT"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="FormationReadyButtonTooltip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerShipId'; ['selfPlayerEntity.preBattlePlayerSimple.evShipIdChanged']; selfPlayerEntity.preBattlePlayerSimple.shipId"/>
		<bind name="watchDH" value="'isSelfPlayerReady'; ['selfPlayerEntity.preBattlePlayerSimple.evStateChanged']; selfPlayerEntity.preBattlePlayerSimple.isReady"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'shipId'; ['dockEntity.shipSelection.evShipUpdate']; dockEntity.shipSelection.currentShipId"/>
		<bind name="watchDH" value="'shipIdForModuleInset'; ['dockEntity.shipSelection.evShipViewUpdate']; dockEntity.shipSelection.currentShipIdForModuleInset"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<style>
			<width value="280"/>
		</style>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<marginTop value="9px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<style>
					<marginBottom value="7px"/>
				</style>
				<bind name="instance" value="'ShipTitleWithIconAndLevel'; {_shipID: isSelfPlayerReady ? selfPlayerShipId : shipId}"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<bottom value="0px"/>
					<position value="absolute"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<bind name="repeat" value="isSelfPlayerReady	? [ {_paragraphText: tr('IDS_READY_TO_BATTLE_IN_' + toUpperCase(divisionEntranceData.divisionType) + '_INFO')},
											{_paragraphText: tr('IDS_READY_TO_BATTLE_IN_FORMATION_INFO_2')}]
										: null; 'RepeatParagraphItem'; {	_maxWidth: 270, _marginBottom: '6px',
																			_middleAligned: false, _class: '$TextDefault'}"/>
			<bind name="instance" value="'MouseInstruction'; isSelfPlayerReady 	? null
																 : {_type: 'left', _instructionText: tr('IDS_SET_READY_TO_BATTLE_IN_FORMATION'), _maxWidth: 270}"/>
		</block>
	</block>
	<block className="FormationNotReadyButtonTooltip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'isSelfPlayerReady'; ['selfPlayerEntity.preBattlePlayerSimple.evStateChanged']; selfPlayerEntity.preBattlePlayerSimple.isReady"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<style>
			<width value="280"/>
		</style>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockIndentNoWidth"/>
				<bind name="repeat" value="isSelfPlayerReady	? [ {_paragraphText: tr('IDS_NOT_READY_TO_BATTLE_IN_FORMATION_INFO')}]
											: [ {_paragraphText: tr('IDS_NOT_READY_TO_BATTLE_IN_' + toUpperCase(divisionEntranceData.divisionType) + '_INFO')},
												{_paragraphText: tr('IDS_NOT_READY_TO_BATTLE_IN_FORMATION_INFO_2')}]; 'RepeatParagraphItem'; {	_maxWidth: 270, _marginBottom: '6px',
																																				_middleAligned: false, _class: '$TextDefault'}"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<bottom value="0px"/>
					<position value="absolute"/>
				</style>
				<bind name="visible" value="isSelfPlayerReady"/>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="isSelfPlayerReady"/>
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<bind name="instance" value="'MouseInstruction'; isSelfPlayerReady 	? {_type: 'left', _instructionText: tr('IDS_SET_NOT_READY_TO_BATTLE_IN_FORMATION'), _maxWidth: 270}
																: null"/>
		</block>
	</block>
	<block className="StartBattleTooltip">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInDivision'; 'playersInDivision'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInDivision'; 'isReady'; true; 'readyPlayersInDivision'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<bind name="primaryEntityDH" value="'battleTypeEntity'; CC.battleType; _battleType"/>
		<bind name="watchDH" value="'label'; []; battleTypeEntity.battleType.label"/>
		<bind name="watchDH" value="'status'; ['battleTypeEntity.battleType.evStatusChanged']; battleTypeEntity.battleType.status"/>
		<bind name="watchDH" value="'type'; ['battleTypeEntity.battleType.evStatusChanged']; battleTypeEntity.battleType.type"/>
		<bind name="firstEntityDH" value="'pveStateEntity'; CC.pveState"/>
		<bind name="watchDH" value="'chosenDifficulty';	['pveStateEntity.pveState.evStateUpdated']; pveStateEntity.pveState.chosenDifficulty"/>
		<styleClass value="$FightButtonTooltipBehaviour"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<style>
			<width value="260px"/>
		</style>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<bind name="visible" value="!(divisionData.divisionExist &amp;&amp; !(divisionData.isCommander))"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="watch" value="'rankBattleIcon'; 	(status == 0)	? 	(rankedBattlesSeason.isJuniorSeason == true)	? 'RankedBattle_junior'
																																: 'RankedBattle'
																			:	(status == 1) 				? (rankedBattlesSeason.isJuniorSeason == true)	? 'RankedBattle_junior_inactive'
																																												: 'RankedBattle_inactive'
																																: 	'RankedBattle_disabled'"/>
			<bind name="watch" value="'clanBattleIcon'; 	(status == 0)	?	isBrawl ? 'ClanBrawl'
																						: 'ClanBattle' :
										(status == 2)	?	isBrawl ? 'ClanBrawl_disabled'
																						: 'ClanBattle_disabled'
																			: 	isBrawl ? 'ClanBrawl_inactive'
																						: 'ClanBattle_inactive'"/>
			<block>
				<bind name="firstEntityDH" value="'clanCurrentSeasonEntity'; CC.clanBattleSeason; 'current'"/>
				<bind name="watchDH" value="'isBrawl'; ['clanCurrentSeasonEntity.clanBattleSeason.evChanged']; clanCurrentSeasonEntity.clanBattleSeason.isBrawl"/>
				<bind name="watch" value="'battleTypeLabel'; (type == BattleTypes.CLAN_BATTLE &amp;&amp; isBrawl)	? 'IDS_CLAN_BRAWL'
																							: label"/>
				<styleClass value="$InfoBlockIndentNoWidth"/>
				<block>
					<block className="icon_battletypes_small" type="native">
						<bind name="gotoAndStop!" value=" type == BattleTypes.RANKED_BATTLE 	? 	rankBattleIcon
										: type == BattleTypes.CLAN_BATTLE		? 	clanBattleIcon
										: type == BattleTypes.PVE_BATTLE		?	(status == 2)				?	'PVEBattle_disabled'
																				:	(chosenDifficulty == 'hard')		?	'PVEBattle_hard'
																																	:	'PVEBattle'
																				: 	_battleType"/>
					</block>
				</block>
				<block type="text">
					<styleClass value="$FontShipnameWhite"/>
					<style>
						<marginLeft value="4px"/>
						<marginTop value="4px"/>
					</style>
					<bind name="class" value="'$Bold'"/>
					<bind name="text" value="battleTypeLabel"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="!(divisionData.divisionExist) || readyPlayersInDivision.length &gt; 0"/>
				<style>
					<marginTop value="6px"/>
					<width value="100%"/>
				</style>
				<block>
					<bind name="visible" value="!(divisionData.divisionExist)"/>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<bind name="instance" value="'ShipTitleWithIconAndLevelWithDenyReason'; {_shipID : _shipID, _battleType: _battleType, isReady: true}"/>
				</block>
				<block>
					<bind name="visible" value="divisionData.divisionExist"/>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<bind name="repeat" value="playersInDivision; 'ShipTitleWithIconAndLevelWithDenyReason'; {divisionData: divisionData, _battleType: _battleType, _playerInDivision: true}"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="0px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="divisionData.divisionExist &amp;&amp; divisionData.isCommander &amp;&amp; ((_battleType == BattleTypes.RANKED_BATTLE) &amp;&amp; (rankedBattlesSeason.isDivisionAllowed != true))"/>
				<styleClass value="$InfoBlockIndentNoWidth"/>
				<block>
					<style>
						<width value="100%"/>
						<marginTop value="2px"/>
					</style>
					<block className="icon_warning_orange" type="native">
						<style>
							<marginTop value="5px"/>
							<marginRight value="2px"/>
							<leading value="-3"/>
						</style>
					</block>
					<block type="text">
						<style>
							<maxWidth value="216"/>
						</style>
						<styleClass value="$TextDefault"/>
						<bind name="class" value="'$FontColorUnready'"/>
						<bind name="text" value="'IDS_DIVISIONS_ARE_NOT_ALLOWED_IN_RANK_BATTLES'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block>
				<bind name="visible" value="	!((_battleType == BattleTypes.RANKED_BATTLE) &amp;&amp; rankedBattlesSeason.denyReason) &amp;&amp; !(_buttonDisabled)"/>
				<styleClass value="$InfoBlockIndentNoWidth"/>
				<bind name="instance" value="'MouseInstruction'; {_type: _instructionType, _instructionText: 'IDS_STARTTRAININGBATTLEBUTTON', _maxWidth: 260}"/>
			</block>
		</block>
	</block>
	<block className="BattletypeTooltip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<style>
			<width value="260"/>
		</style>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<block type="text">
				<style>
					<maxWidth value="240"/>
				</style>
				<styleClass value="$TextHeaderBigDefault"/>
				<bind name="text" value="_description"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="_battleType == BattleTypes.RANKED_BATTLE &amp;&amp; rankedBattlesSeason.denyReason"/>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<style>
					<marginBottom value="9px"/>
				</style>
				<bind name="instance" value="'RankBattleNotAvailableReason';  rankedBattlesSeason.denyReason ? { _maxWidth: 220} : null"/>
			</block>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<bind name="instance" value="'MouseInstruction'; { _type: 'left', _instructionText: 'IDS_CHOOSE_BATTLE_TYPE', _maxWidth: 220 }"/>
		</block>
	</block>
	<block className="RankSeasonNotActive">
		<block>
			<block>
				<style>
					<marginLeft value="2px"/>
					<marginTop value="3px"/>
				</style>
				<block className="icon_warning_orange" type="native"/>
			</block>
			<block type="text">
				<bind name="style" value="'maxWidth'; _maxWidth"/>
				<bind name="class" value="'$TextSecondary'"/>
				<bind name="class" value="'$FontColorUnready'"/>
				<bind name="text" value="(rankedBattlesSeason.denyReason &amp; RBDeny.SEASON_NOT_STARTED)	? (tr('IDS_RANK_BATTLES_SEASON_IS_NOT_ACTIVE')+' '+tr('IDS_SEASON_STARTS_IN') + ' '+ seasonTimeStart)
																						: 'IDS_RANK_BATTLES_SEASON_IS_NOT_ACTIVE'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ShipStatusDock">
		<bind name="watchDH" value="'creditsDeficit';	['_playerShipInfo.evCreditsDeficitChanged'];	_playerShipInfo.creditsDeficit"/>
		<bind name="watchDH" value="'isNeedRepair';		['_playerShipInfo.evUpdateDockState'];			_playerShipInfo.isNeedRepair"/>
		<bind name="watchDH" value="'isNeedShell';		['_playerShipInfo.evUpdateDockState'];			_playerShipInfo.isNeedShell"/>
		<bind name="watchDH" value="'costRepair';		['_playerShipInfo.evUpdateDockState'];			_playerShipInfo.costRepair"/>
		<bind name="watchDH" value="'costShell';			['_playerShipInfo.evUpdateDockState'];			_playerShipInfo.costShell"/>
		<bind name="watchDH" value="'costTotal';			['_playerShipInfo.evUpdateDockState'];			_playerShipInfo.costTotal"/>
		<bind name="appear" value="'addedToStage'; 0.15; 0.3; {alpha: 0}; {alpha: 1}"/>
		<styleClass value="$MiddleAligned"/>
		<block>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap5_feather" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<width value="200px"/>
				<marginTop value="7px"/>
				<hitTest value="false"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<styleClass value="$TextSmallWhite"/>
					<text value="IDS_SERVICE"/>
				</block>
				<block>
					<styleClass value="$AlignRight"/>
					<bind name="instance" value="'CostCRNano'; { _class: '$TextSecondary', _costCR: costRepair}"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<styleClass value="$TextSmallWhite"/>
					<text value="IDS_AMMUNITION_RECHARGE"/>
				</block>
				<block>
					<styleClass value="$AlignRight"/>
					<bind name="instance" value="'CostCRNano'; { _class: '$TextSecondary', _costCR: costShell }"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="3px"/>
					<marginBottom value="3px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<style>
				<height value="50px"/>
				<marginBottom value="3px"/>
				<marginTop value="6px"/>
			</style>
			<block>
				<bind name="instance" value="'DefaultButtonCostMedium'; (isNeedRepair || isNeedShell) &amp;&amp; (creditsDeficit &lt;= 0) ? {priceInfo: {finalPrice: costTotal, currency: 'credits' },  _enabled: true, _action: 'serveShip', _actionParams: { shipId : _playerShipInfo.id }, _label: 'IDS_SERVICE_C'}
																	: null"/>
				<style>
					<width value="200px"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="creditsDeficit &gt; 0"/>
				<style>
					<width value="100%"/>
					<marginTop value="-3px"/>
					<hitTest value="false"/>
				</style>
				<block>
					<styleClass value="$MiddleAligned"/>
					<block>
						<block type="text">
							<styleClass value="$TextDefaultWhite"/>
							<text value="IDS_SERVICE_COST"/>
						</block>
					</block>
					<block>
						<bind name="instance" value="'CostCRNano'; { _class: '$TextDefault', _costCR: costTotal }"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<style>
						<marginTop value="-3px"/>
					</style>
					<styleClass value="$MiddleAligned"/>
					<bind name="instance" value="'CRDeficitNano'; { _creditsDeficit: creditsDeficit, _class: '$TextDefault' } "/>
				</block>
			</block>
		</block>
	</block>
	<css name="$DockShipStatus">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="21"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFF9933"/>
	</css>
	<block className="ShipStatusDockHeader">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'dockDefaultValues'; 'dockInitData,dockUpdateData'"/>
		<bind name="appear" value="'addedToStage'; 0.15; 0.3; {alpha: 0}; {alpha: 1}"/>
		<styleClass value="$MiddleAligned"/>
		<block>
			<bind name="visible" value="!(dockDefaultValues.goToBattleState)"/>
			<styleClass value="$MiddleAligned"/>
			<style>
				<width value="700px"/>
				<marginBottom value="-10px"/>
			</style>
			<block>
				<bind name="name" value="'ShipStatusDockHeaderId'"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="repeat" value="_texts; 'RepeatParagraphItem'; {	_maxWidth: 700, _marginBottom: '4px', _class: '$DockShipStatus',
															_middleAligned: true, _textAlign: 'center', _toUpperCase: true}"/>
			</block>
		</block>
	</block>
	<css name="$PxCorrection">
		<position value="absolute"/>
		<marginTop value="1px"/>
		<marginBottom value="1px"/>
		<marginLeft value="1px"/>
		<marginRight value="1px"/>
	</css>
	<css name="$TextWhiteSmall">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultGoldSmall">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFCC66"/>
	</css>
	<css name="$TextSmallNegative">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFF6600"/>
	</css>
	<css name="$MarginForAccountNotifications">
		<marginTop value="10px"/>
		<marginBottom value="10px"/>
		<marginLeft value="12px"/>
		<marginRight value="12px"/>
	</css>
	<block className="Notification">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="watch" value="'isBigNotification'; (data.groupId == 6) || (data.groupId == 7) || (data.groupId == 2) || (data.groupId == 10))"/>
		<bind name="var" value="{	defaultWidth	: 245,
					bigWidth		: 290}"/>
		<bind name="style" value="'width';  isBigNotification ? (bigWidth + 'px') : (defaultWidth + 'px')"/>
		<block>
			<bind name="transition" value="rollOver; 0.4; {alpha: 1.2}; {alpha: 2}"/>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="notification_panel" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="child" value="data.groupId; {data: data, _isNotificationInbox: _isNotificationInbox, 
									_width: isBigNotification	? bigWidth
																: defaultWidth};	'NotificationCrew'; 'NotificationModernization'; 'NotificationDivisions';
																					'NotificationAccount'; 'NotificationExterior'; 'NotificationShipAndModule';
																					'EmptyItem'; 'EmptyItem'; 'EmptyItem';
																					'NotificationCampaign'; 'NotificationClan'; 'NotificationCollection';
																					'NotificationVanity'; 'NotificationNavalFlag'; 'NotificationLootboxes'"/>
		</block>
	</block>
	<block className="NotificationAccount">
		<block>
			<bind name="child" value="data.idInGroup; {data: data};
					'NotificationBattleResults';
					'NotificationInvoice';
					'NotificationServerReload';
					'NotificationAdministrator';
					'NotificationAccountRename';
					'EmptyItem';
					'EmptyItem';
					'NotificationConvertExp';
					'NotificationPurchaseSlot';
					'NotificationPurchasePremiumAccount';
					'NotificationPurchaseCreditsForGold';
					'NotificationPremiumAccountExpired';
					'NotificationChatBanAdded';
					'NotificationChatBanDropped';
					'NotificationThanksForActivity';
					'NotificationAchievementEarned';
					'NotificationDenuncationReceived';
					'NotificationPraiseReceived';
					'NotificationRent';
					'NotificationRent';
					'NotificationShipExpMoved';
					'NotificationPurchaseContainer';
					'NotificationAutoPurchaseContainer';
					'NotificationAutoOpenContainer';
					'NotificationTransactionError';
					'ClanOilRecieved';
					'NotificationDogTagRecieved';
					'NotificationAvARecruiter';
					'NotificationArcEventChooseSide';
					'NotificationShipBecameElite';
					'NotificationCompensation'
					"/>
		</block>
	</block>
	<block className="NotificationShipAndModule">
		<block>
			<bind name="child" value="data.idInGroup; {data: data};
					'NotificationShipPurchase';
					'NotificationShipSell';
					'NotificationModulePurchase';
					'NotificationModuleSell';
					'NotificationService';
					'NotificationShipResearch';
					'NotificationModuleResearch'; 
					'EmptyItem'"/>
		</block>
	</block>
	<block className="NotificationDivisions">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="controller" value="lesta.unbound.core.UbController"/>
		<block>
			<bind name="child" value="data.idInGroup;  {data: data, _isNotificationInbox: _isNotificationInbox, _width: _width};
					'NotificationYouAreACommander'; 
					'NotificationPlayerIsACommander'; 
					'NotificationYourActionInDivision'; 
					'NotificationPlayerActionInDivision'; 
					'NotificationDivisionInvitationAction';
					'NotificationDivisionInvitationFailed';
					'NotificationDivisionDismissed';
					'NotificationLookingForDivisionStatus';
					'NotificationDivisionInvitationReceived';
					'NotificationDivisionInvitationFailed';
					'NotificationAbuseStatusChanged'"/>
		</block>
	</block>
	<block className="NotificationCrew">
		<bind name="controller" value="lesta.unbound.core.UbController"/>
		<block>
			<bind name="child" value="data.idInGroup; {data: data};
					'NotificationRecruitCommander';
					'NotificationDemobilizeCommander';
					'NotificationLearnSkills';	
					'NotificationResetSkills';
					'NotificationAssigneCommander';
					'NotificationDisembarkCommander';
					'NotificationStartRetraining';
					'NotificationFinishRetraining';
					'NotificationBarracksCapacity';
					'NotificationAddSkillPoints';
					'NotificationCommanderFired';
					'NotificationCommanderRestored';
					'NotificationCommanderLeveledUp'"/>
		</block>
	</block>
	<block className="NotificationModernization">
		<bind name="controller" value="lesta.unbound.core.UbController"/>
		<block>
			<bind name="child" value="data.idInGroup; {data: data};
					'NotificationModernizationSell';
					'NotificationModernizationUnmount';	
					'NotificationModernizationPurchaseAndMount';
					'NotificationModernizationMount';
					'NotificationConsumablePurchased';
					'NotificationConsumableSell';
					'NotificationConsumableUnmount';
					'NotificationConsumableMount';	
					'EmptyItem';
					'NotificationConsumableAutochargeCompleted';
					'NotificationPurchaseFailed';"/>
		</block>
	</block>
	<block className="NotificationExterior">
		<bind name="controller" value="lesta.unbound.core.UbController"/>
		<block>
			<bind name="child" value="data.idInGroup; {data: data};
					'NotificationExteriorTakeAwayOrInstall';
					'NotificationExteriorAutochargeCompleted';
					'NotificationExteriorPurchaseAndInstall';
					'NotificationExteriorSell'"/>
		</block>
	</block>
	<block className="NotificationNavalFlag">
		<bind name="controller" value="lesta.unbound.core.UbController"/>
		<block>
			<bind name="child" value="data.idInGroup; {data: data};
					'NotificationNavalFlagChanged'"/>
		</block>
	</block>
	<block className="NotificationCampaign">
		<bind name="controller" value="lesta.unbound.core.UbController"/>
		<block>
			<bind name="child" value="data.idInGroup; {data: data};
					'CampaignCompleted';
					'CampaignDurationChanged';
					'CampaignMissionUpdate';
					'CampaignFinalTaskUnlocked';
					'CampaignTaskActivated';
					'CampaignTaskDeactivated';
					'CampaignTaskRewarded';
					'CampaignFinalTaskEnabled'"/>
		</block>
	</block>
	<block className="NotificationClan">
		<bind name="controller" value="lesta.unbound.core.UbController"/>
		<block>
			<bind name="child" value="data.idInGroup; {data: data, _width: _width};
					'ClanCommon';
					'ClanInvitation';
					'ClanPlayerAlreadyInvited'"/>
		</block>
	</block>
	<block className="NotificationCollection">
		<bind name="controller" value="lesta.unbound.core.UbController"/>
		<block>
			<bind name="child" value="data.idInGroup; {data: data};
					'NotificationCollectionFullyCollected';
					'NotificationCollectionBuyCard';
					'NotificationCollectionAlbumRemoved';
					'NotificationCollectionCardRemoved';
					'NotificationCompensationDuplicates';
					'NotificationCollectionSignIn';
					'NotificationCollectionSignOut'"/>
		</block>
	</block>
	<block className="NotificationVanity">
		<bind name="controller" value="lesta.unbound.core.UbController"/>
		<block>
			<bind name="child" value="data.idInGroup; {data: data};
					'NotificationVanitySet';
					'NotificationVanityUnset';"/>
		</block>
	</block>
	<block className="NotificationLootboxes">
		<block>
			<bind name="child" value="data.idInGroup; {data: data};
					'NotificationLootboxesOpened'"/>
		</block>
	</block>
	<css name="$NotificationTextStyleSheet">
		<styleSheet value="
		body {
			leading: -1
		}

		.bold_default {
			font-family: $WWSDefaultFontBold;
			color: #EEEEEE
		}

		.bold_currentPlayerRelated {
			font-family: $WWSDefaultFontBold;
			color: #FFCC66
		}

		.bold_error {
			font-family: $WWSDefaultFontBold;
			color: #FF6600
		}

		.bold_warning {
			font-family: $WWSDefaultFontBold;
			color: #FF9900
		}

		.default {
			font-family: $WWSDefaultFont;
			color: #EEEEEE
		}

		.currentPlayerRelated {
			font-family: $WWSDefaultFont;
			color: #FFCC66
		}

		.error {
			font-family: $WWSDefaultFont;
			color: #FF6600
		}

		.warning {
			font-family: $WWSDefaultFont;
			color: #FF9900
		}
	"/>
	</css>
	<block className="ClanCommon">
		<style>
			<width value="1px"/>
			<minHeight value="40"/>
		</style>
		<bind name="style" value="'width'; _width"/>
		<block>
			<bind name="visible" value="data.hasHeader == true"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<style>
					<marginTop value="2px"/>
					<marginBottom value="1px"/>
				</style>
				<block type="text">
					<styleClass value="$TextHeaderBold"/>
					<styleClass value="$NotificationTextStyleSheet"/>
					<bind name="style" value="'maxWidth'; _width - 55"/>
					<bind name="text" value="'&lt;body&gt;'+ data.header +'&lt;/body&gt;'"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block type="text">
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<styleClass value="$InfoLineBoundaries"/>
			<styleClass value="$TextHeaderBigDefault"/>
			<styleClass value="$NotificationTextStyleSheet"/>
			<style>
				<leading value="-1"/>
			</style>
			<bind name="style" value="'maxWidth'; _width - 55"/>
			<bind name="substitute" value="5;
							{
								'[commander]'				: 'icon_clan_role_commander',
								'[exec_officer]'			: 'icon_clan_role_executive_officer',
								'[private]'					: 'icon_clan_role_private',
								'[recr_officer]'			: 'icon_clan_role_recruitment_officer',
								'[comm_officer]'			: 'icon_clan_role_commissioned_officer',
								'[officer]'					: 'icon_clan_role_officer'
							};
							'&lt;body&gt;' + data.message + '&lt;/body&gt;'"/>
		</block>
		<block>
			<bind name="visible" value="data.cost != null"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="data.cost != null"/>
			<styleClass value="$InfoLineBoundaries"/>
			<style>
				<width value="100%"/>
				<marginLeft value="12px"/>
				<marginRight value="3px"/>
			</style>
			<bind name="instance" value="'PriceInLine'; { priceInfo: {finalPrice: data.cost, basePrice: data.cost, currency: data.currency}, _customLabel: 'IDS_COST', _small: true}"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<alpha value="0.6"/>
				<right value="5px"/>
				<top value="3px"/>
				<position value="absolute"/>
				<width value="35px"/>
				<height value="35px"/>
				<backgroundImage value="symbol:icon_account_clan"/>
			</style>
		</block>
	</block>
	<block className="ClanInvitation">
		<bind name="watch" value="'_clanTag'; '[' + data.clanTag + ']'"/>
		<bind name="style" value="'width'; _width"/>
		<style>
			<width value="1px"/>
			<minHeight value="40"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'NotificationHeader'; { _header: data.header, _class: '$TextHeaderBold'}"/>
		</block>
		<block>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<style>
				<marginBottom value="6px"/>
				<marginTop value="2px"/>
			</style>
			<block type="text">
				<styleClass value="$TextHeaderBigDefault"/>
				<bind name="style" value="'maxWidth'; _width - 55"/>
				<bind name="text" value="subst('IDS_SYS_MESSAGE_INVITATION_TO_CLAN_SEND', [], { clanTag: _clanTag })}"/>
			</block>
		</block>
		<block>
			<style>
				<alpha value="0.6"/>
				<right value="5px"/>
				<top value="3px"/>
				<position value="absolute"/>
				<width value="35px"/>
				<height value="35px"/>
				<backgroundImage value="symbol:icon_account_clan"/>
			</style>
		</block>
	</block>
	<block className="ClanPlayerAlreadyInvited">
		<bind name="watch" value="'_clanTag'; '[' + data.clanTag + ']'"/>
		<bind name="style" value="'width'; _width"/>
		<style>
			<width value="1px"/>
			<minHeight value="40"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'NotificationHeader'; { _header: data.header, _class: '$TextHeaderBold'}"/>
		</block>
		<block>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<style>
				<marginBottom value="6px"/>
				<marginTop value="2px"/>
			</style>
			<block type="text">
				<styleClass value="$TextHeaderBigDefault"/>
				<bind name="style" value="'maxWidth'; _width - 55"/>
				<bind name="text" value="subst('IDS_SYS_MESSAGE_PLAYER_ALREADY_INVITED', [], { clanTag: _clanTag })}"/>
			</block>
		</block>
		<block>
			<style>
				<alpha value="0.6"/>
				<right value="5px"/>
				<top value="3px"/>
				<position value="absolute"/>
				<width value="35px"/>
				<height value="35px"/>
				<backgroundImage value="symbol:icon_account_clan"/>
			</style>
		</block>
	</block>
	<block className="ClanOilRecieved">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CLAN_RESOURCE_RECEIVED', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$Fullsize"/>
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginBottom value="5px"/>
					<marginLeft value="12px"/>
					<marginRight value="12px"/>
				</style>
				<block type="text">
					<styleClass value="$TextSecondary"/>
					<text value="IDS_COUNT"/>
				</block>
				<block>
					<styleClass value="$AlignRight"/>
					<bind name="instance" value="'CostOilNano'; { _class: '$TextSecondary', _costOil: data.count}"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="NotificationCollectionFullyCollected">
		<block>
			<bind name="instance" value="'NotificationHeader';  { _header: data.header, _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="watch" value="'collectionNameQuotes'; (tr('IDS_' +  toUpperCase(data.albumName) + '_QUOTES'))"/>
			<bind name="instance" value="'NotificationIconWithTextAndSubtext'; { _mainText: subst('IDS_COLLECTION_NAME', [], { _collectionName: collectionNameQuotes }), 
																_backgroundImage: 'url:' + data.iconPath }"/>
		</block>
	</block>
	<block className="NotificationCollectionBuyCard">
		<block>
			<bind name="instance" value="'NotificationHeader';  { _header: data.header, _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="instance" value="'NotificationCollectionCardContent'; { 	_iconPath: data.iconPath, _mainText: data.cardName,	_collectionName: data.albumName }"/>
		</block>
	</block>
	<block className="NotificationCollectionAlbumRemoved">
		<block>
			<bind name="instance" value="'NotificationHeaderWithIcon'; data.operation != null  ? { _header: data.header, _class: '$FontColorUnready' } : null "/>
		</block>
		<block>
			<bind name="watch" value="'collectionNameQuotes'; (tr('IDS_' +  toUpperCase(data.albumName) + '_QUOTES'))"/>
			<bind name="instance" value="'NotificationIconWithTextAndSubtext'; { _mainText: subst('IDS_COLLECTION_NAME', [], { _collectionName: collectionNameQuotes }), 
																_backgroundImage: 'url:' + data.iconPath }"/>
		</block>
	</block>
	<block className="NotificationCollectionCardRemoved">
		<block>
			<bind name="instance" value="'NotificationHeaderWithIcon'; data.operation != null  ? { _header: data.header, _class: '$FontColorUnready' } : null "/>
		</block>
		<block>
			<bind name="instance" value="'NotificationCollectionCardContent'; { 	_iconPath: data.iconPath, _mainText: data.cardName, _collectionName: data.albumName}"/>
		</block>
	</block>
	<block className="NotificationCompensationDuplicates">
		<block>
			<bind name="instance" value="'NotificationHeader';  { _header: data.header, _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<block type="text">
				<styleClass value="$TextSecondary"/>
				<bind name="text" value="'IDS_DUPLICATE_COMPENSATION'"/>
			</block>
			<block>
				<style>
					<marginTop value="1px"/>
					<marginLeft value="3px"/>
				</style>
				<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: data.data.CR, currency: 'credits' }, _small: true}"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="NotificationCompensation">
		<block>
			<bind name="instance" value="'NotificationHeader';  { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_COMPENSATION', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="name" value="'NotificationCompensation'"/>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<marginLeft value="12px"/>
					<marginRight value="12px"/>
					<width value="100%"/>
				</style>
				<block>
					<bind name="visible" value="data.data.GL &gt; 0"/>
					<style>
						<width value="100%"/>
					</style>
					<block type="text">
						<styleClass value="$TextSecondary"/>
						<text value="IDS_GOLD_COLON"/>
					</block>
					<block>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: data.data.GL, currency: 'gold' }, _small: true}"/>
						<bind name="name" value="'NotificationCompensation_gold'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<bind name="visible" value="data.data.CR &gt; 0"/>
					<style>
						<width value="100%"/>
					</style>
					<block type="text">
						<styleClass value="$TextSecondary"/>
						<text value="IDS_CREDITS_COLON"/>
					</block>
					<block>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: data.data.CR, currency: 'credits' }, _small: true}"/>
						<bind name="name" value="'NotificationCompensation_credits'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<bind name="visible" value="data.data.ELXP &gt; 0"/>
					<style>
						<width value="100%"/>
					</style>
					<block type="text">
						<styleClass value="$TextSecondary"/>
						<text value="IDS_ELITE_EXPERIENCE_COLON"/>
					</block>
					<block>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: data.data.ELXP, currency: 'credits' }, _small: true}"/>
						<bind name="name" value="'NotificationCompensation_XP'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<bind name="visible" value="data.data.XP &gt; 0"/>
					<style>
						<width value="100%"/>
					</style>
					<block type="text">
						<styleClass value="$TextSecondary"/>
						<text value="IDS_FREE_EXPERIENCE_COLON"/>
					</block>
					<block>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: data.data.XP, currency: 'credits' }, _small: true}"/>
						<bind name="name" value="'NotificationCompensation_credits'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationCollectionSignIn">
		<block>
			<bind name="instance" value="'NotificationHeader';  { _header: data.header, _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="watch" value="'collectionNameQuotes'; (tr('IDS_' +  toUpperCase(data.albumName) + '_QUOTES'))"/>
			<bind name="instance" value="'NotificationIconWithTextAndSubtext'; { _mainText: subst('IDS_COLLECTION_NAME', [], { _collectionName: collectionNameQuotes }), 
																_backgroundImage: 'url:' + data.iconPath }"/>
		</block>
	</block>
	<block className="NotificationCollectionSignOut">
		<block>
			<bind name="instance" value="'NotificationHeader';  { _header: data.header, _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="watch" value="'collectionNameQuotes'; (tr('IDS_' +  toUpperCase(data.albumName) + '_QUOTES'))"/>
			<bind name="instance" value="'NotificationIconWithTextAndSubtext'; { _mainText: subst('IDS_COLLECTION_NAME', [], { _collectionName: collectionNameQuotes }), 
																_backgroundImage: 'url:' + data.iconPath }"/>
		</block>
	</block>
	<block className="NotificationVanitySet">
		<block>
			<bind name="instance" value="'NotificationHeader';  { _header: data.header, _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<paddingTop value="16px"/>
				<paddingLeft value="16px"/>
				<paddingRight value="16px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'VanityItemWithDescription'; { _vanityName: data.vanityName, _maxWidth: 150 }"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginRight value="-16px"/>
					<marginLeft value="-16px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block type="text">
				<style>
					<width value="100%"/>
					<marginTop value="12px"/>
					<marginBottom value="12px"/>
				</style>
				<styleClass value="$TextDefaultNM"/>
				<bind name="text" value="tr('IDS_REWARD_UNLOCK_' + data.vanityName + '_DESCRIPTION')"/>
			</block>
		</block>
	</block>
	<block className="NotificationVanityUnset">
		<block>
			<bind name="instance" value="'NotificationHeader';  { _header: data.header, _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<paddingTop value="16px"/>
				<paddingLeft value="16px"/>
				<paddingRight value="16px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'VanityItemWithDescription'; { _vanityName: data.vanityName, _maxWidth: 150 }"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginRight value="-16px"/>
					<marginLeft value="-16px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block type="text">
				<style>
					<width value="100%"/>
					<marginTop value="12px"/>
					<marginBottom value="12px"/>
				</style>
				<styleClass value="$TextDefaultNM"/>
				<bind name="text" value="tr('IDS_REWARD_UNLOCK_' + data.vanityName + '_DESCRIPTION')"/>
			</block>
		</block>
	</block>
	<block className="CampaignTaskActivated">
		<block>
			<bind name="instance" value="'NotificationHeader';  { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CAMPAIGNS_TASK_ACTIVATED', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="instance" value="'CampaignMessageContent';  {_campaignName: data.data.campaignName,
													_missionNumber: data.data.missionNumber, _taskNumber: data.data.taskNumber}"/>
		</block>
	</block>
	<block className="CampaignTaskDeactivated">
		<block>
			<bind name="instance" value="'NotificationHeader';  { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CAMPAIGNS_TASK_DEACTIVATED', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="instance" value="'CampaignMessageContent';  {_campaignName: data.data.campaignName,
													_missionNumber: data.data.missionNumber, _taskNumber: data.data.taskNumber}"/>
		</block>
	</block>
	<block className="CampaignTaskRewarded">
		<block>
			<bind name="instance" value="'NotificationHeader';  { 	_header: (data.data.isRewarded) ? (data.data.lootStars &gt; 0) ? 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CAMPAIGNS_TASK_REWARDED_ALL'
																												: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CAMPAIGNS_TASK_REWARDED_ONLY_REWARDS'
																					: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CAMPAIGNS_TASK_REWARDED_ONLY_STARS',
													_class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="instance" value="'CampaignMessageContent';  {_campaignName: data.data.campaignName, _taskNumber: data.data.taskNumber,
													_missionNumber: data.data.missionNumber, _lootStars: data.data.lootStars}"/>
		</block>
	</block>
	<block className="CampaignFinalTaskEnabled">
		<block>
			<bind name="instance" value="'NotificationHeader';  { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CAMPAIGNS_TASK_ENABLED', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="instance" value="'CampaignMessageContent';  {_campaignName: data.data.campaignName,
													_missionNumber: data.data.missionNumber, _isFinalTask: true}"/>
		</block>
	</block>
	<block className="CampaignFinalTaskUnlocked">
		<block>
			<bind name="instance" value="'NotificationHeader';  { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CAMPAIGNS_TASK_UNLOCKED', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="instance" value="'CampaignMessageContent';  {_campaignName: data.data.campaignName,
													_missionNumber: data.data.missionNumber, _isFinalTask: true}"/>
		</block>
	</block>
	<block className="CampaignMissionUpdate">
		<block>
			<bind name="instance" value="'NotificationHeader';  { _header: (data.data.missionState == 2) 	? 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CAMPAIGNS_MISSION_UPDATED_ACTIVATED'
																														: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CAMPAIGNS_MISSION_UPDATED_COMPLETED', 
												 _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="instance" value="'CampaignMessageContent';  {_campaignName: data.data.campaignName, _missionState: data.data.missionState,
													_missionNumber: data.data.missionNumber, _taskNumber: data.data.taskNumber,
													_isMissionMessage: true}"/>
		</block>
	</block>
	<block className="CampaignCompleted">
		<block>
			<bind name="instance" value="'NotificationHeader';  { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CAMPAIGNS_CAMPAIGN_COMPLETED', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="instance" value="'CampaignMessageContent';  {_campaignName: data.data.campaignName, _isCampaignMessage: true}"/>
		</block>
	</block>
	<block className="CampaignDurationChanged">
		<block>
			<bind name="instance" value="'NotificationHeader';  { _header: (data.data.campaignState == 6)	? 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CAMPAIGNS_CAMPAIGN_DURATION_CHANGED_PROLONGATED'
														: (data.data.campaignState == 7) ? 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CAMPAIGNS_CAMPAIGN_DURATION_CHANGED_REDUCED'
														: (data.data.campaignState == 9) ? 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CAMPAIGNS_CAMPAIGN_DURATION_CHANGED_PROLONGATED_NEW'
														: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CAMPAIGNS_CAMPAIGN_DURATION_CHANGED_TERMINATED', 
												 _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="instance" value="'CampaignMessageContent';  {_campaignName: data.data.campaignName, _isCampaignMessage: true}"/>
		</block>
	</block>
	<block className="CampaignMessageContent">
		<style>
			<width value="245px"/>
		</style>
		<block>
			<style>
				<height value="80px"/>
				<marginLeft value="4px"/>
				<marginRight value="6px"/>
				<marginTop value="4px"/>
				<marginBottom value="4px"/>
			</style>
			<block>
				<style>
					<width value="80px"/>
					<height value="80px"/>
					<backgroundSize value="cover"/>
				</style>
				<bind name="style" value="'backgroundImage'; (_isCampaignMessage) 								? 'url:../campaigns/campaign_logo/' + _campaignName +  '_logo.png' :
											(_missionState == 5) 	? 'url:../campaigns/missions_pin/' + _campaignName +  '_done_pin.png'
																								: 'url:../campaigns/missions_pin/' + _campaignName +  '_pin.png'"/>
				<block>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$MiddleVAligned"/>
					<block type="text">
						<bind name="visible" value="(_missionState != 5)"/>
						<styleClass value="$TextLargeHeaderBold"/>
						<bind name="text" value="_missionNumber"/>
					</block>
				</block>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<block type="text">
					<styleClass value="$TextDefaultBold"/>
					<style>
						<maxWidth value="130"/>
					</style>
					<bind name="text" value="_isCampaignMessage  ? (toUpperCase(tr('IDS_' + (toUpperCase(_campaignName)) + '_TITLE'))) :
							_isMissionMessage 	? (toUpperCase(tr('IDS_MISSIONS'))) 	 + ' ' + _missionNumber :
							_isFinalTask 		? (toUpperCase(tr('IDS_MISSION_FINAL_TASK')))
												: (toUpperCase(tr('IDS_CAMPAIGN_TASK'))) + ' ' + _taskNumber"/>
				</block>
				<block>
					<style>
						<marginTop value="5px"/>
					</style>
					<bind name="repeat" value="_lootStars; 'StarsEarnedEnable'"/>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="NotificationAchievementEarned">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'achievements'; data.data.achievementId; 'achievement'"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_EARN_ACHIEVEMENT', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<width value="245px"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$Fullsize"/>
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<styleClass value="$InfoLineBoundaries"/>
				<style>
					<hitTest value="false"/>
				</style>
				<block>
					<bind name="instance" value="'AchievementIcon'; {_id: data.data.achievementId}"/>
				</block>
				<block>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<style>
						<marginLeft value="5px"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefaultBold"/>
						<bind name="class" value="'$FontColorGolden'"/>
						<style>
							<maxWidth value="130"/>
						</style>
						<bind name="text" value="achievement.nameIDS"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<bind name="class" value="'$FontColorBlueish'"/>
						<style>
							<maxWidth value="130"/>
							<marginTop value="4px"/>
						</style>
						<bind name="text" value="toLowerCase(tr(achievement.subtypeIDS))"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<styleClass value="$InfoLineBoundaries"/>
				<block type="text">
					<style>
						<maxWidth value="212"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="text" value="achievement.condition.description"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<styleClass value="$InfoLineBoundaries"/>
				<block type="text">
					<styleClass value="$TextDefaultTech"/>
					<style>
						<textAlign value="left"/>
						<maxWidth value="218"/>
					</style>
					<bind name="text" value="achievement.multipleIDS"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<styleClass value="$InfoLineBoundaries"/>
				<bind name="visible" value="achievement.hasReward"/>
				<block className="icon_giftbox_small" type="native">
					<style>
						<marginLeft value="3px"/>
						<marginTop value="4px"/>
					</style>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<style>
						<maxWidth value="160"/>
						<textAlign value="left"/>
						<marginLeft value="9px"/>
					</style>
					<bind name="text" value="achievement.rewardConditionIDS"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="NotificationExteriorAutochargeCompleted">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'accountGold';			['resourceEntity.accountResource.evChangedGold'];		resourceEntity.accountResource.gold"/>
		<bind name="watchDH" value="'accountCredits';		['resourceEntity.accountResource.evChangedCredit'];		resourceEntity.accountResource.credits"/>
		<block>
			<bind name="visible" value="data.flagsAutorechargeCompleted != 0"/>
			<block>
				<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_EXTERIOR_AUTORECHARGE_RESULT_SIG', _class: '$FontColorWhite'}"/>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block className="ShipIconLevelName">
					<block>
						<style>
							<height value="30px"/>
						</style>
						<block className="icon_wreath" type="native">
							<style>
								<position value="absolute"/>
								<top value="3px"/>
							</style>
							<bind name="visible" value="data.isElite || data.isPremium || data.uiSpecial"/>
							<bind name="gotoAndStop!" value="(data.isPremium || data.uiSpecial) 	? 'premium' : 'elite'"/>
						</block>
						<block className="icon_ship" type="native">
							<bind name="style" value="'marginLeft'; data.isElite || data.isPremium || data.uiSpecial ? 5 : 2"/>
							<style>
								<marginTop value="11px"/>
							</style>
							<bind name="gotoAndStop!" value="data.isPremium || data.uiSpecial ? data.shipType + '_P' : data.shipType"/>
						</block>
						<block type="text">
							<style>
								<marginLeft value="2px"/>
							</style>
							<styleClass value="$TextDefaultBold"/>
							<styleClass value="$MiddleVAligned"/>
							<bind name="class" value="'$LetterSpacingSmall'"/>
							<bind name="class" value="data.isPremium || data.uiSpecial	? '$FontColorGolden'
															: '$FontColorDefault'"/>
							<bind name="text" value="data.shipLevelRome + ' ' + toUpperCase(tr(data.shipName))"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="visible" value="data.flagsAutorechargeCompleted == 2"/>
				<block>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<block>
						<style>
							<marginBottom value="1px"/>
							<marginTop value="2px"/>
						</style>
						<block className="icon_restrict_red" type="native">
							<styleClass value="$MiddleVAligned"/>
							<style>
								<marginRight value="2px"/>
							</style>
						</block>
						<block type="text">
							<styleClass value="$TextSmallNegative"/>
							<text value="IDS_SYS_MESSAGE_HEADER_MS_UI_PURCHASE_FAILED"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$Fullsize"/>
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block>
					<style>
						<marginTop value="2px"/>
						<marginLeft value="22px"/>
						<marginRight value="12px"/>
						<width value="100%"/>
					</style>
					<block>
						<bind name="visible" value="(data.flagsAutorechargeCompleted == 1)"/>
						<style>
							<width value="100%"/>
							<marginBottom value="3px"/>
						</style>
						<block>
							<style>
								<width value="100%"/>
							</style>
							<block type="text">
								<styleClass value="$TextSmallWhite"/>
								<text value="IDS_COST"/>
							</block>
							<block type="text">
								<bind name="visible" value="((data.data.flagsCost[0] == 0) &amp;&amp; (data.data.flagsCost[1] == 0))"/>
								<styleClass value="$TextSmallWhite"/>
								<styleClass value="$AlignRight"/>
								<bind name="text" value="'IDS_FOR_FREE'"/>
							</block>
							<block>
								<styleClass value="$AlignRight"/>
								<block>
									<bind name="visible" value="data.data.flagsCost[0] &gt; 0"/>
									<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: data.data.flagsCost[0], currency: 'credits' }, _small: true}"/>
								</block>
								<block type="text">
									<bind name="visible" value="((data.data.flagsCost[0] &gt; 0) &amp;&amp; (data.data.flagsCost[1] &gt; 0))"/>
									<style>
										<marginRight value="3px"/>
									</style>
									<styleClass value="$TextSecondary"/>
									<styleClass value="$MiddleVAligned"/>
									<text value="IDS_AND"/>
								</block>
								<block>
									<bind name="visible" value="data.data.flagsCost[1] &gt; 0"/>
									<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: data.data.flagsCost[1], currency: 'gold' }, _small: true}"/>
								</block>
								<style>
									<flow value="horizontal"/>
								</style>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="data.camouflageAutorechargeCompleted != 0"/>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="data.camouflageAutorechargeCompleted != 0"/>
			<block>
				<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_EXTERIOR_AUTORECHARGE_RESULT_CAM', _class: '$FontColorWhite'}"/>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block className="ShipIconLevelName">
					<block>
						<style>
							<height value="30px"/>
						</style>
						<block className="icon_wreath" type="native">
							<style>
								<position value="absolute"/>
								<top value="3px"/>
							</style>
							<bind name="visible" value="data.isElite || data.isPremium || data.uiSpecial"/>
							<bind name="gotoAndStop!" value="(data.isPremium || data.uiSpecial) 	? 'premium' : 'elite'"/>
						</block>
						<block className="icon_ship" type="native">
							<bind name="style" value="'marginLeft'; data.isElite || data.isPremium || data.uiSpecial ? 5 : 2"/>
							<style>
								<marginTop value="11px"/>
							</style>
							<bind name="gotoAndStop!" value="data.isPremium || data.uiSpecial ? data.shipType + '_P' : data.shipType"/>
						</block>
						<block type="text">
							<style>
								<marginLeft value="2px"/>
							</style>
							<styleClass value="$TextDefaultBold"/>
							<styleClass value="$MiddleVAligned"/>
							<bind name="class" value="'$LetterSpacingSmall'"/>
							<bind name="class" value="data.isPremium || data.uiSpecial	? '$FontColorGolden'
															: '$FontColorDefault'"/>
							<bind name="text" value="data.shipLevelRome + ' ' + toUpperCase(tr(data.shipName))"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="visible" value="data.camouflageAutorechargeCompleted == 2"/>
				<block>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<block>
						<style>
							<marginBottom value="1px"/>
							<marginTop value="2px"/>
						</style>
						<block className="icon_restrict_red" type="native">
							<styleClass value="$MiddleVAligned"/>
							<style>
								<marginRight value="2px"/>
							</style>
						</block>
						<block type="text">
							<styleClass value="$TextSmallNegative"/>
							<text value="IDS_SYS_MESSAGE_HEADER_MS_UI_PURCHASE_FAILED"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$Fullsize"/>
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block>
					<style>
						<marginTop value="2px"/>
						<marginLeft value="22px"/>
						<marginRight value="12px"/>
						<width value="100%"/>
					</style>
					<block>
						<bind name="visible" value="(data.camouflageAutorechargeCompleted == 1)"/>
						<style>
							<width value="100%"/>
							<marginBottom value="3px"/>
						</style>
						<block>
							<style>
								<width value="100%"/>
							</style>
							<block type="text">
								<styleClass value="$TextSmallWhite"/>
								<text value="IDS_COST"/>
							</block>
							<block type="text">
								<bind name="visible" value="((data.data.camoCost[0] == 0) &amp;&amp; (data.data.camoCost[1] == 0))"/>
								<styleClass value="$TextSmallWhite"/>
								<styleClass value="$AlignRight"/>
								<bind name="text" value="'IDS_FOR_FREE'"/>
							</block>
							<block>
								<styleClass value="$AlignRight"/>
								<block>
									<bind name="visible" value="data.data.camoCost[0] &gt; 0"/>
									<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: data.data.camoCost[0], currency: 'credits' }, _small: true}"/>
								</block>
								<block type="text">
									<bind name="visible" value="((data.data.camoCost[0] &gt; 0) &amp;&amp; (data.data.camoCost[1] &gt; 0))"/>
									<style>
										<marginRight value="3px"/>
									</style>
									<styleClass value="$TextSecondary"/>
									<styleClass value="$MiddleVAligned"/>
									<text value="IDS_AND"/>
								</block>
								<block>
									<bind name="visible" value="data.data.camoCost[1] &gt; 0"/>
									<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: data.data.camoCost[1], currency: 'gold' }, _small: true}"/>
								</block>
								<style>
									<flow value="horizontal"/>
								</style>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationExteriorTakeAwayOrInstall">
		<bind name="primaryEntityDH" value="'exteriorEntity'; CC.exteriorConfig; data.data.exteriorId"/>
		<bind name="watchDH" value="'exteriorConfig'; []; exteriorEntity.exteriorConfig"/>
		<block>
			<bind name="instance" value="'NotificationHeader';  { _header: data.header, _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block className="ExteriorHeader">
					<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; data.data.shipId; 'evUpdate'"/>
					<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
					<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
					<bind name="watch" value="'_isPermoflage'; exteriorConfig.type == ExteriorTypes.CAMOUFLAGE &amp;&amp; exteriorConfig.isPermanent"/>
					<block>
						<style>
							<marginTop value="3px"/>
						</style>
						<block>
							<bind name="instance" value="'ExteriorIconWithAmount'; {	_exteriorId: data.data.exteriorId ? data.data.exteriorId : data.flagId,
														_amount: 0,
														_isDesaturated: false,
														_needPNG: true
														}"/>
						</block>
						<block>
							<bind name="visible" value="data.numItems &gt; 1"/>
							<style>
								<marginTop value="40px"/>
								<marginLeft value="-20x"/>
							</style>
							<block type="text">
								<styleClass value="$TextDefaultBold"/>
								<bind name="text" value="data.numItems"/>
							</block>
						</block>
						<block>
							<style>
								<marginTop value="3px"/>
								<marginLeft value="6px"/>
							</style>
							<block type="text">
								<styleClass value="$TextDefaultBold"/>
								<bind name="class" value="(data.data.result == 28) ? '$FontColorGolden' : '$None'"/>
								<style>
									<marginBottom value="5px"/>
								</style>
								<bind name="style" value="'maxWidth'; (exteriorConfig.type == ExteriorTypes.FLAGS) ? '156' : '141'"/>
								<bind name="text" value="_isPermoflage 	? subst('IDS_EXTERIOR_NAME_WITH_SHIP', [], {exteriorName: tr('IDS_' + toUpperCase(exteriorConfig.name)), shipName: tr(shipInfo.nameIDS + '_FULL')})
											: exteriorConfig.name ? tr('IDS_' + toUpperCase(exteriorConfig.name)) : tr('IDS_NAVAL_FLAG_' + toUpperCase(data.flagId))"/>
							</block>
							<block type="text">
								<style>
									<marginTop value="-9px"/>
								</style>
								<bind name="style" value="'maxWidth'; (exteriorConfig.type == ExteriorTypes.FLAGS) ? '156' : '141'"/>
								<styleClass value="$TextSecondary"/>
								<bind name="text" value="exteriorConfig.name ? ('IDS_' + toUpperCase(exteriorConfig.name) + '_DESCRIPTION') : ('IDS_NAVAL_FLAG_' + toUpperCase(data.flagId) + '_DESCRIPTION')"/>
							</block>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationExteriorPurchaseAndInstall">
		<bind name="primaryEntityDH" value="'exteriorEntity'; CC.exteriorConfig; data.data.exteriorId"/>
		<bind name="watchDH" value="'exteriorConfig'; []; exteriorEntity.exteriorConfig"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll';  PriceInfoSet.OP_BUY + data.data.exteriorId; 'exteriorPrice'"/>
		<bind name="watch" value="'selectedIndex'; ((data.data.useGold == true) &amp;&amp;  (exteriorPrice.prices.length &gt; 1)) ? 1 : 0"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: data.header + (data.numItems &gt; 1 ? '_PLURAL' : ''), _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block className="ExteriorHeader">
					<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; data.data.shipId; 'evUpdate'"/>
					<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
					<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
					<bind name="watch" value="'_isPermoflage'; exteriorConfig.type == ExteriorTypes.CAMOUFLAGE &amp;&amp; exteriorConfig.isPermanent"/>
					<block>
						<style>
							<marginTop value="3px"/>
						</style>
						<block>
							<bind name="instance" value="'ExteriorIconWithAmount'; {	_exteriorId: data.data.exteriorId ? data.data.exteriorId : data.flagId,
														_amount: 0,
														_isDesaturated: false,
														_needPNG: true
														}"/>
						</block>
						<block>
							<bind name="visible" value="data.numItems &gt; 1"/>
							<style>
								<marginTop value="40px"/>
								<marginLeft value="-20x"/>
							</style>
							<block type="text">
								<styleClass value="$TextDefaultBold"/>
								<bind name="text" value="data.numItems"/>
							</block>
						</block>
						<block>
							<style>
								<marginTop value="3px"/>
								<marginLeft value="6px"/>
							</style>
							<block type="text">
								<styleClass value="$TextDefaultBold"/>
								<bind name="class" value="(data.data.result == 28) ? '$FontColorGolden' : '$None'"/>
								<style>
									<marginBottom value="5px"/>
								</style>
								<bind name="style" value="'maxWidth'; (exteriorConfig.type == ExteriorTypes.FLAGS) ? '156' : '141'"/>
								<bind name="text" value="_isPermoflage 	? subst('IDS_EXTERIOR_NAME_WITH_SHIP', [], {exteriorName: tr('IDS_' + toUpperCase(exteriorConfig.name)), shipName: tr(shipInfo.nameIDS + '_FULL')})
											: exteriorConfig.name ? tr('IDS_' + toUpperCase(exteriorConfig.name)) : tr('IDS_NAVAL_FLAG_' + toUpperCase(data.flagId))"/>
							</block>
							<block type="text">
								<style>
									<marginTop value="-9px"/>
								</style>
								<bind name="style" value="'maxWidth'; (exteriorConfig.type == ExteriorTypes.FLAGS) ? '156' : '141'"/>
								<styleClass value="$TextSecondary"/>
								<bind name="text" value="exteriorConfig.name ? ('IDS_' + toUpperCase(exteriorConfig.name) + '_DESCRIPTION') : ('IDS_NAVAL_FLAG_' + toUpperCase(data.flagId) + '_DESCRIPTION')"/>
							</block>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<bind name="instance" value="'PriceTagWithLabel'; data.cost != 0 ? { priceInfo: { finalPrice: data.cost, currency: data.currency }, _label: 'IDS_PURCHASE_COST', _small: true} : null"/>
				<block>
					<bind name="visible" value="data.cost == 0"/>
					<style>
						<width value="100%"/>
					</style>
					<block type="text">
						<styleClass value="$TextSmallWhite"/>
						<text value="IDS_PURCHASE_COST"/>
					</block>
					<block type="text">
						<styleClass value="$TextSmallWhite"/>
						<styleClass value="$AlignRight"/>
						<bind name="text" value="'IDS_FOR_FREE'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationExteriorSell">
		<bind name="primaryEntityDH" value="'exteriorEntity'; CC.exteriorConfig; data.data.exteriorId"/>
		<bind name="watchDH" value="'exteriorConfig'; []; exteriorEntity.exteriorConfig"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: data.header + (data.numItems &gt; 1 ? '_PLURAL' : ''), _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block className="ExteriorHeader">
					<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; data.data.shipId; 'evUpdate'"/>
					<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
					<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
					<bind name="watch" value="'_isPermoflage'; exteriorConfig.type == ExteriorTypes.CAMOUFLAGE &amp;&amp; exteriorConfig.isPermanent"/>
					<block>
						<style>
							<marginTop value="3px"/>
						</style>
						<block>
							<bind name="instance" value="'ExteriorIconWithAmount'; {	_exteriorId: data.data.exteriorId ? data.data.exteriorId : data.flagId,
														_amount: 0,
														_isDesaturated: false,
														_needPNG: true
														}"/>
						</block>
						<block>
							<bind name="visible" value="data.numItems &gt; 1"/>
							<style>
								<marginTop value="40px"/>
								<marginLeft value="-20x"/>
							</style>
							<block type="text">
								<styleClass value="$TextDefaultBold"/>
								<bind name="text" value="data.numItems"/>
							</block>
						</block>
						<block>
							<style>
								<marginTop value="3px"/>
								<marginLeft value="6px"/>
							</style>
							<block type="text">
								<styleClass value="$TextDefaultBold"/>
								<bind name="class" value="(data.data.result == 28) ? '$FontColorGolden' : '$None'"/>
								<style>
									<marginBottom value="5px"/>
								</style>
								<bind name="style" value="'maxWidth'; (exteriorConfig.type == ExteriorTypes.FLAGS) ? '156' : '141'"/>
								<bind name="text" value="_isPermoflage 	? subst('IDS_EXTERIOR_NAME_WITH_SHIP', [], {exteriorName: tr('IDS_' + toUpperCase(exteriorConfig.name)), shipName: tr(shipInfo.nameIDS + '_FULL')})
											: exteriorConfig.name ? tr('IDS_' + toUpperCase(exteriorConfig.name)) : tr('IDS_NAVAL_FLAG_' + toUpperCase(data.flagId))"/>
							</block>
							<block type="text">
								<style>
									<marginTop value="-9px"/>
								</style>
								<bind name="style" value="'maxWidth'; (exteriorConfig.type == ExteriorTypes.FLAGS) ? '156' : '141'"/>
								<styleClass value="$TextSecondary"/>
								<bind name="text" value="exteriorConfig.name ? ('IDS_' + toUpperCase(exteriorConfig.name) + '_DESCRIPTION') : ('IDS_NAVAL_FLAG_' + toUpperCase(data.flagId) + '_DESCRIPTION')"/>
							</block>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block type="text">
						<styleClass value="$TextSmallWhite"/>
						<text value="IDS_SELL_COST"/>
					</block>
					<block>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'CostCRNano'; { _class: '$TextSmallWhite', _costCR: data.cost}"/>
						<bind name="name" value="'NotificationExteriorSell_' + data.item.title + '_costCR'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="ExteriorHeader">
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; data.data.shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="watch" value="'_isPermoflage'; exteriorConfig.type == ExteriorTypes.CAMOUFLAGE &amp;&amp; exteriorConfig.isPermanent"/>
		<block>
			<style>
				<marginTop value="3px"/>
			</style>
			<block>
				<bind name="instance" value="'ExteriorIconWithAmount'; {	_exteriorId: data.data.exteriorId ? data.data.exteriorId : data.flagId,
														_amount: 0,
														_isDesaturated: false,
														_needPNG: true
														}"/>
			</block>
			<block>
				<bind name="visible" value="data.numItems &gt; 1"/>
				<style>
					<marginTop value="40px"/>
					<marginLeft value="-20x"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefaultBold"/>
					<bind name="text" value="data.numItems"/>
				</block>
			</block>
			<block>
				<style>
					<marginTop value="3px"/>
					<marginLeft value="6px"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefaultBold"/>
					<bind name="class" value="(data.data.result == 28) ? '$FontColorGolden' : '$None'"/>
					<style>
						<marginBottom value="5px"/>
					</style>
					<bind name="style" value="'maxWidth'; (exteriorConfig.type == ExteriorTypes.FLAGS) ? '156' : '141'"/>
					<bind name="text" value="_isPermoflage 	? subst('IDS_EXTERIOR_NAME_WITH_SHIP', [], {exteriorName: tr('IDS_' + toUpperCase(exteriorConfig.name)), shipName: tr(shipInfo.nameIDS + '_FULL')})
											: exteriorConfig.name ? tr('IDS_' + toUpperCase(exteriorConfig.name)) : tr('IDS_NAVAL_FLAG_' + toUpperCase(data.flagId))"/>
				</block>
				<block type="text">
					<style>
						<marginTop value="-9px"/>
					</style>
					<bind name="style" value="'maxWidth'; (exteriorConfig.type == ExteriorTypes.FLAGS) ? '156' : '141'"/>
					<styleClass value="$TextSecondary"/>
					<bind name="text" value="exteriorConfig.name ? ('IDS_' + toUpperCase(exteriorConfig.name) + '_DESCRIPTION') : ('IDS_NAVAL_FLAG_' + toUpperCase(data.flagId) + '_DESCRIPTION')"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="NotificationBarracksCapacity">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY + 'BARRAC_CAP_Increase';  'barracksCapacityPrice'"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_BARRACKS_CAPACITY', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$Fullsize"/>
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<marginBottom value="6px"/>
						<marginTop value="6px"/>
					</style>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<block type="text">
							<styleClass value="$TextSmallWhite"/>
							<text value="IDS_PLACED_ADDED"/>
						</block>
						<block type="text">
							<styleClass value="$TextSmallWhite"/>
							<text value="4"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<block type="text">
							<styleClass value="$TextSmallWhite"/>
							<style>
								<marginTop value="3px"/>
							</style>
							<bind name="text" value="tr('IDS_FREE_PLACES') + tr('IDS_COLON') + ' ' + ($parent.$parent.data.capacity - $parent.$parent.data.crewsInBarracks) + '/' + $parent.$parent.data.capacity"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block type="text">
						<styleClass value="$TextSmallWhite"/>
						<text value="IDS_COST"/>
					</block>
					<block>
						<bind name="visible" value="barracksCapacityPrice.prices[0].finalPrice != 0"/>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'CostGoldNano'; { _class: '$FontColorGold', _costGold: barracksCapacityPrice.prices[0].finalPrice}"/>
					</block>
					<block type="text">
						<bind name="visible" value="barracksCapacityPrice.prices[0].finalPrice == 0"/>
						<styleClass value="$TextSmallWhite"/>
						<styleClass value="$AlignRight"/>
						<bind name="text" value="'IDS_FOR_FREE'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationDemobilizeCommander">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CREW_FIRE', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="name" value="'NotificationDemobilizeCommander'"/>
			<style>
				<marginBottom value="3px"/>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<height value="94px"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$Fullsize"/>
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block>
					<styleClass value="$CrewPortraitSizeNormal"/>
					<style>
						<position value="absolute"/>
						<bottom value="0px"/>
						<right value="12px"/>
					</style>
					<block>
						<styleClass value="$FullsizeAbsolute"/>
						<style>
							<backgroundStretchX value="true"/>
							<backgroundStretchY value="true"/>
						</style>
						<bind name="style" value="'backgroundImage'; 'url:' + data.baseUrl"/>
					</block>
					<block>
						<bind name="visible" value="data.overlayUrl != ''"/>
						<styleClass value="$FullsizeAbsolute"/>
						<style>
							<backgroundStretchX value="true"/>
							<backgroundStretchY value="true"/>
						</style>
						<bind name="style" value="'backgroundImage'; 'url:' + data.overlayUrl"/>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<styleClass value="$MiddleVAligned"/>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<bind name="class" value="'$FontColorWhite'"/>
						<bind name="text" value="tr(data.firstNameIDS) + ' ' + tr(data.lastNameIDS)"/>
					</block>
					<block>
						<bind name="visible" value="data.hasRank == true"/>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<bind name="class" value="'$FontColorBlueish'"/>
							<bind name="text" value="'IDS_CREW_RANK_' + toUpperCase(data.nation) + '_' + data.rank"/>
						</block>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationRecruitCommander">
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; data.crewId"/>
		<bind name="watchDH" value="'crew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'crew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CREW_HIRE', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="name" value="'NotificationRecruitCommander_' + data.shipName"/>
			<style>
				<width value="100%"/>
				<marginBottom value="5px"/>
			</style>
			<block className="CommanderRankShipTraining">
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
						<height value="94px"/>
					</style>
					<block className="inner_panel" type="native">
						<styleClass value="$Fullsize"/>
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<position value="absolute"/>
						</style>
					</block>
					<block>
						<style>
							<position value="absolute"/>
							<bottom value="-1px"/>
							<right value="2px"/>
						</style>
						<bind name="instance" value="'CommanderPortraitNormal'; {_baseUrl: crew.baseUrl, _overlayUrl: crew.overlayUrl, _isUnique: crew.isUnique}"/>
					</block>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<styleClass value="$InfoBlockHorizontalIndent"/>
						<styleClass value="$MiddleVAligned"/>
						<block type="text">
							<styleClass value="$TextDefault"/>
							<bind name="class" value="'$FontColorWhite'"/>
							<bind name="text" value="tr(crew.firstNameIDS) + ' ' + tr(crew.lastNameIDS)"/>
						</block>
						<block type="text">
							<bind name="visible" value="crew.hasRank == true"/>
							<styleClass value="$TextSecondary"/>
							<bind name="class" value="'$FontColorBlueish'"/>
							<bind name="text" value="'IDS_CREW_RANK_' + toUpperCase(crew.nation) + '_' + crew.rank"/>
						</block>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<bind name="class" value="data.trainingType == 2	? '$FontColorGold'
													: '$None'"/>
							<bind name="text" value="data.trainingType == 0	? 'IDS_CREW_TRAINING_FREE' :
							data.trainingType == 1	? 'IDS_CREW_TRAINING_CREDIT' :
							data.trainingType == 2	? 'IDS_CREW_TRAINING_GOLD'
													: null"/>
						</block>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<style>
					<flow value="htile"/>
				</style>
				<block type="text">
					<style>
						<marginTop value="4px"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="text" value="tr('IDS_SHIP') + tr('IDS_COLON')"/>
				</block>
				<block className="ShipIconLevelName">
					<block>
						<style>
							<height value="30px"/>
						</style>
						<block className="icon_wreath" type="native">
							<style>
								<position value="absolute"/>
								<top value="3px"/>
							</style>
							<bind name="visible" value="data.isElite || data.isPremium || data.uiSpecial"/>
							<bind name="gotoAndStop!" value="(data.isPremium || data.uiSpecial) 	? 'premium' : 'elite'"/>
						</block>
						<block className="icon_ship" type="native">
							<bind name="style" value="'marginLeft'; data.isElite || data.isPremium || data.uiSpecial ? 5 : 2"/>
							<style>
								<marginTop value="11px"/>
							</style>
							<bind name="gotoAndStop!" value="data.isPremium || data.uiSpecial ? data.shipType + '_P' : data.shipType"/>
						</block>
						<block type="text">
							<style>
								<marginLeft value="2px"/>
							</style>
							<styleClass value="$TextDefaultBold"/>
							<styleClass value="$MiddleVAligned"/>
							<bind name="class" value="'$LetterSpacingSmall'"/>
							<bind name="class" value="data.isPremium || data.uiSpecial	? '$FontColorGolden'
															: '$FontColorDefault'"/>
							<bind name="text" value="data.shipLevelRome + ' ' + toUpperCase(tr(data.shipName))"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block type="text">
						<styleClass value="$TextSmallWhite"/>
						<text value="IDS_COST"/>
					</block>
					<block>
						<bind name="visible" value="data.trainingType == 2 &amp;&amp; data.price != 0"/>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'CostGoldNano'; { _class: '$FontColorGold', _costGold: data.price}"/>
						<bind name="name" value="'NotificationRecruitCommander_' + data.shipName + '_costGold'"/>
					</block>
					<block>
						<bind name="visible" value="data.trainingType == 1 &amp;&amp; data.price != 0"/>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'CostCRNano'; {_costCR: data.price}"/>
						<bind name="name" value="'NotificationRecruitCommander_' + data.shipName + '_costCR'"/>
					</block>
					<block>
						<bind name="visible" value="data.trainingType == 0 || data.price == 0"/>
						<styleClass value="$AlignRight"/>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<bind name="text" value="'IDS_FOR_FREE'"/>
						</block>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<bind name="visible" value="crew.freeSkillPoints &gt; 0"/>
					<style>
						<width value="100%"/>
					</style>
					<block type="text">
						<styleClass value="$TextSmallWhite"/>
						<text value="IDS_FREE_POINTS"/>
					</block>
					<block type="text">
						<styleClass value="$AlignRight"/>
						<styleClass value="$TextSmallWhite"/>
						<bind name="text" value="crew.freeSkillPoints + ' / ' + crew.allSkillPoints"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationAssigneCommander">
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; data.crewId"/>
		<bind name="watchDH" value="'crew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'crew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CREW_ASSIGN', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block className="CommanderRankShipTraining">
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
						<height value="94px"/>
					</style>
					<block className="inner_panel" type="native">
						<styleClass value="$Fullsize"/>
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<position value="absolute"/>
						</style>
					</block>
					<block>
						<style>
							<position value="absolute"/>
							<bottom value="-1px"/>
							<right value="2px"/>
						</style>
						<bind name="instance" value="'CommanderPortraitNormal'; {_baseUrl: crew.baseUrl, _overlayUrl: crew.overlayUrl, _isUnique: crew.isUnique}"/>
					</block>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<styleClass value="$InfoBlockHorizontalIndent"/>
						<styleClass value="$MiddleVAligned"/>
						<block type="text">
							<styleClass value="$TextDefault"/>
							<bind name="class" value="'$FontColorWhite'"/>
							<bind name="text" value="tr(crew.firstNameIDS) + ' ' + tr(crew.lastNameIDS)"/>
						</block>
						<block type="text">
							<bind name="visible" value="crew.hasRank == true"/>
							<styleClass value="$TextSecondary"/>
							<bind name="class" value="'$FontColorBlueish'"/>
							<bind name="text" value="'IDS_CREW_RANK_' + toUpperCase(crew.nation) + '_' + crew.rank"/>
						</block>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<bind name="class" value="data.trainingType == 2	? '$FontColorGold'
													: '$None'"/>
							<bind name="text" value="data.trainingType == 0	? 'IDS_CREW_TRAINING_FREE' :
							data.trainingType == 1	? 'IDS_CREW_TRAINING_CREDIT' :
							data.trainingType == 2	? 'IDS_CREW_TRAINING_GOLD'
													: null"/>
						</block>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<style>
					<flow value="htile"/>
				</style>
				<block type="text">
					<style>
						<marginTop value="4px"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="text" value="tr('IDS_SHIP') + tr('IDS_COLON')"/>
				</block>
				<block className="ShipIconLevelName">
					<block>
						<style>
							<height value="30px"/>
						</style>
						<block className="icon_wreath" type="native">
							<style>
								<position value="absolute"/>
								<top value="3px"/>
							</style>
							<bind name="visible" value="data.isElite || data.isPremium || data.uiSpecial"/>
							<bind name="gotoAndStop!" value="(data.isPremium || data.uiSpecial) 	? 'premium' : 'elite'"/>
						</block>
						<block className="icon_ship" type="native">
							<bind name="style" value="'marginLeft'; data.isElite || data.isPremium || data.uiSpecial ? 5 : 2"/>
							<style>
								<marginTop value="11px"/>
							</style>
							<bind name="gotoAndStop!" value="data.isPremium || data.uiSpecial ? data.shipType + '_P' : data.shipType"/>
						</block>
						<block type="text">
							<style>
								<marginLeft value="2px"/>
							</style>
							<styleClass value="$TextDefaultBold"/>
							<styleClass value="$MiddleVAligned"/>
							<bind name="class" value="'$LetterSpacingSmall'"/>
							<bind name="class" value="data.isPremium || data.uiSpecial	? '$FontColorGolden'
															: '$FontColorDefault'"/>
							<bind name="text" value="data.shipLevelRome + ' ' + toUpperCase(tr(data.shipName))"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationDisembarkCommander">
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; data.crewId"/>
		<bind name="watchDH" value="'crew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'crew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CREW_DISEMBARK', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<marginBottom value="3px"/>
				<width value="100%"/>
			</style>
			<block className="CommanderRankShipTraining">
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
						<height value="94px"/>
					</style>
					<block className="inner_panel" type="native">
						<styleClass value="$Fullsize"/>
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<position value="absolute"/>
						</style>
					</block>
					<block>
						<style>
							<position value="absolute"/>
							<bottom value="-1px"/>
							<right value="2px"/>
						</style>
						<bind name="instance" value="'CommanderPortraitNormal'; {_baseUrl: crew.baseUrl, _overlayUrl: crew.overlayUrl, _isUnique: crew.isUnique}"/>
					</block>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<styleClass value="$InfoBlockHorizontalIndent"/>
						<styleClass value="$MiddleVAligned"/>
						<block type="text">
							<styleClass value="$TextDefault"/>
							<bind name="class" value="'$FontColorWhite'"/>
							<bind name="text" value="tr(crew.firstNameIDS) + ' ' + tr(crew.lastNameIDS)"/>
						</block>
						<block type="text">
							<bind name="visible" value="crew.hasRank == true"/>
							<styleClass value="$TextSecondary"/>
							<bind name="class" value="'$FontColorBlueish'"/>
							<bind name="text" value="'IDS_CREW_RANK_' + toUpperCase(crew.nation) + '_' + crew.rank"/>
						</block>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<bind name="class" value="data.trainingType == 2	? '$FontColorGold'
													: '$None'"/>
							<bind name="text" value="data.trainingType == 0	? 'IDS_CREW_TRAINING_FREE' :
							data.trainingType == 1	? 'IDS_CREW_TRAINING_CREDIT' :
							data.trainingType == 2	? 'IDS_CREW_TRAINING_GOLD'
													: null"/>
						</block>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationAddSkillPoints">
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; data.data.crewId"/>
		<bind name="watchDH" value="'crew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'crew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CREW_LEVEL_UP', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<right value="3px"/>
				<top value="3px"/>
			</style>
			<bind name="instance" value="'CrewSkillPointBadge'; { _skillPoints: crew.freeSkillPoints, _state: 'active' }"/>
		</block>
		<block>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$Fullsize"/>
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<block type="text">
							<styleClass value="$TextSmallWhite"/>
							<text value="IDS_FREE_POINTS"/>
						</block>
						<block type="text">
							<styleClass value="$TextSmallWhite"/>
							<bind name="text" value="crew.freeSkillPoints + ' / ' + crew.allSkillPoints"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationCommanderFired">
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; data.data.crewId"/>
		<bind name="watchDH" value="'crew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'crew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_DOCKOP_TO_BASKET', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block className="CommanderRankShipTraining">
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
						<height value="94px"/>
					</style>
					<block className="inner_panel" type="native">
						<styleClass value="$Fullsize"/>
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<position value="absolute"/>
						</style>
					</block>
					<block>
						<style>
							<position value="absolute"/>
							<bottom value="-1px"/>
							<right value="2px"/>
						</style>
						<bind name="instance" value="'CommanderPortraitNormal'; {_baseUrl: crew.baseUrl, _overlayUrl: crew.overlayUrl, _isUnique: crew.isUnique}"/>
					</block>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<styleClass value="$InfoBlockHorizontalIndent"/>
						<styleClass value="$MiddleVAligned"/>
						<block type="text">
							<styleClass value="$TextDefault"/>
							<bind name="class" value="'$FontColorWhite'"/>
							<bind name="text" value="tr(crew.firstNameIDS) + ' ' + tr(crew.lastNameIDS)"/>
						</block>
						<block type="text">
							<bind name="visible" value="crew.hasRank == true"/>
							<styleClass value="$TextSecondary"/>
							<bind name="class" value="'$FontColorBlueish'"/>
							<bind name="text" value="'IDS_CREW_RANK_' + toUpperCase(crew.nation) + '_' + crew.rank"/>
						</block>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<bind name="class" value="data.trainingType == 2	? '$FontColorGold'
													: '$None'"/>
							<bind name="text" value="data.trainingType == 0	? 'IDS_CREW_TRAINING_FREE' :
							data.trainingType == 1	? 'IDS_CREW_TRAINING_CREDIT' :
							data.trainingType == 2	? 'IDS_CREW_TRAINING_GOLD'
													: null"/>
						</block>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$Fullsize"/>
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<block type="text">
						<styleClass value="$TextSmallWhite"/>
						<text value="IDS_WAITING_FOR_DEMOBILIZATION"/>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationCommanderRestored">
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; data.data.crewId"/>
		<bind name="watchDH" value="'crew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'crew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_DOCKOP_FROM_BASKET', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block className="CommanderRankShipTraining">
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
						<height value="94px"/>
					</style>
					<block className="inner_panel" type="native">
						<styleClass value="$Fullsize"/>
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<position value="absolute"/>
						</style>
					</block>
					<block>
						<style>
							<position value="absolute"/>
							<bottom value="-1px"/>
							<right value="2px"/>
						</style>
						<bind name="instance" value="'CommanderPortraitNormal'; {_baseUrl: crew.baseUrl, _overlayUrl: crew.overlayUrl, _isUnique: crew.isUnique}"/>
					</block>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<styleClass value="$InfoBlockHorizontalIndent"/>
						<styleClass value="$MiddleVAligned"/>
						<block type="text">
							<styleClass value="$TextDefault"/>
							<bind name="class" value="'$FontColorWhite'"/>
							<bind name="text" value="tr(crew.firstNameIDS) + ' ' + tr(crew.lastNameIDS)"/>
						</block>
						<block type="text">
							<bind name="visible" value="crew.hasRank == true"/>
							<styleClass value="$TextSecondary"/>
							<bind name="class" value="'$FontColorBlueish'"/>
							<bind name="text" value="'IDS_CREW_RANK_' + toUpperCase(crew.nation) + '_' + crew.rank"/>
						</block>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<bind name="class" value="data.trainingType == 2	? '$FontColorGold'
													: '$None'"/>
							<bind name="text" value="data.trainingType == 0	? 'IDS_CREW_TRAINING_FREE' :
							data.trainingType == 1	? 'IDS_CREW_TRAINING_CREDIT' :
							data.trainingType == 2	? 'IDS_CREW_TRAINING_GOLD'
													: null"/>
						</block>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$Fullsize"/>
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<block type="text">
						<styleClass value="$TextSmallWhite"/>
						<text value="IDS_DEMOBILIZATION_CANCELLED"/>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationCommanderLeveledUp">
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; data.crewId"/>
		<bind name="watchDH" value="'crew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'crew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_DOCKOP_CREW_LEVEL_UP', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block className="CommanderRankShipTraining">
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
						<height value="94px"/>
					</style>
					<block className="inner_panel" type="native">
						<styleClass value="$Fullsize"/>
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<position value="absolute"/>
						</style>
					</block>
					<block>
						<style>
							<position value="absolute"/>
							<bottom value="-1px"/>
							<right value="2px"/>
						</style>
						<bind name="instance" value="'CommanderPortraitNormal'; {_baseUrl: crew.baseUrl, _overlayUrl: crew.overlayUrl, _isUnique: crew.isUnique}"/>
					</block>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<styleClass value="$InfoBlockHorizontalIndent"/>
						<styleClass value="$MiddleVAligned"/>
						<block type="text">
							<styleClass value="$TextDefault"/>
							<bind name="class" value="'$FontColorWhite'"/>
							<bind name="text" value="tr(crew.firstNameIDS) + ' ' + tr(crew.lastNameIDS)"/>
						</block>
						<block type="text">
							<bind name="visible" value="crew.hasRank == true"/>
							<styleClass value="$TextSecondary"/>
							<bind name="class" value="'$FontColorBlueish'"/>
							<bind name="text" value="'IDS_CREW_RANK_' + toUpperCase(crew.nation) + '_' + crew.rank"/>
						</block>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<bind name="class" value="data.trainingType == 2	? '$FontColorGold'
													: '$None'"/>
							<bind name="text" value="data.trainingType == 0	? 'IDS_CREW_TRAINING_FREE' :
							data.trainingType == 1	? 'IDS_CREW_TRAINING_CREDIT' :
							data.trainingType == 2	? 'IDS_CREW_TRAINING_GOLD'
													: null"/>
						</block>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<style>
					<width value="100%"/>
					<marginBottom value="3px"/>
					<marginTop value="2px"/>
				</style>
				<block type="text">
					<styleClass value="$TextSmallWhite"/>
					<text value="IDS_COST"/>
				</block>
				<block>
					<styleClass value="$AlignRight"/>
					<block>
						<bind name="visible" value="data.data.moneyChange.ELXP &lt; 0"/>
						<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: -data.data.moneyChange.ELXP, currency: 'eliteXP' }, _small: true}"/>
					</block>
					<block type="text">
						<bind name="visible" value="((data.data.moneyChange.ELXP &lt; 0) &amp;&amp; (data.data.moneyChange.XP &lt; 0))"/>
						<style>
							<marginRight value="3px"/>
						</style>
						<styleClass value="$TextSecondary"/>
						<styleClass value="$MiddleVAligned"/>
						<text value="IDS_AND"/>
					</block>
					<block>
						<bind name="visible" value="data.data.moneyChange.XP &lt; 0"/>
						<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: -data.data.moneyChange.XP, currency: 'freeXP' }, _small: true}"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="NotificationLearnSkills">
		<bind name="primaryEntityDH" value="'crewSkillEntity'; CC.crewSkill; data.skillId; 'evUpdate'"/>
		<bind name="watchDH" value="'crewSkill'; ['crewSkillEntity.crewSkill.evUpdate']; crewSkillEntity.crewSkill"/>
		<bind name="primaryEntityDH" value="'skillEntity'; CC.skill; crewSkill.skillId"/>
		<bind name="watchDH" value="'skill'; []; skillEntity.skill"/>
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; data.crewId"/>
		<bind name="watchDH" value="'crew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'crew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CREW_LEARN_SKILL', _class: '$FontColorGolden'}"/>
		</block>
		<block>
			<bind name="name" value="'NotificationLearnSkills_' + skill.name"/>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<flow value="horizontal"/>
				</style>
				<styleClass value="$InfoBlockIndent"/>
				<block>
					<bind name="instance" value="'CrewSkillEpicIcon'; skill.isEpic ? {} : null"/>
					<style>
						<width value="60px"/>
						<height value="60px"/>
					</style>
					<bind name="style" value="'backgroundImage'; 'url:../crew_commander/skills/big/icon_perk_' + skill.name + '.png')"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<marginLeft value="6px"/>
					</style>
					<block type="text">
						<style>
							<maxWidth value="140"/>
						</style>
						<styleClass value="$TextSecondaryBold"/>
						<bind name="text" value="'IDS_SKILL_' + toUpperCase(skill.name)"/>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationResetSkills">
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; data.crewId"/>
		<bind name="watchDH" value="'crew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'crew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CREW_RESET_SKILLS', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block className="CommanderRankShipTraining">
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
						<height value="94px"/>
					</style>
					<block className="inner_panel" type="native">
						<styleClass value="$Fullsize"/>
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<position value="absolute"/>
						</style>
					</block>
					<block>
						<style>
							<position value="absolute"/>
							<bottom value="-1px"/>
							<right value="2px"/>
						</style>
						<bind name="instance" value="'CommanderPortraitNormal'; {_baseUrl: crew.baseUrl, _overlayUrl: crew.overlayUrl, _isUnique: crew.isUnique}"/>
					</block>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<styleClass value="$InfoBlockHorizontalIndent"/>
						<styleClass value="$MiddleVAligned"/>
						<block type="text">
							<styleClass value="$TextDefault"/>
							<bind name="class" value="'$FontColorWhite'"/>
							<bind name="text" value="tr(crew.firstNameIDS) + ' ' + tr(crew.lastNameIDS)"/>
						</block>
						<block type="text">
							<bind name="visible" value="crew.hasRank == true"/>
							<styleClass value="$TextSecondary"/>
							<bind name="class" value="'$FontColorBlueish'"/>
							<bind name="text" value="'IDS_CREW_RANK_' + toUpperCase(crew.nation) + '_' + crew.rank"/>
						</block>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<bind name="class" value="data.trainingType == 2	? '$FontColorGold'
													: '$None'"/>
							<bind name="text" value="data.trainingType == 0	? 'IDS_CREW_TRAINING_FREE' :
							data.trainingType == 1	? 'IDS_CREW_TRAINING_CREDIT' :
							data.trainingType == 2	? 'IDS_CREW_TRAINING_GOLD'
													: null"/>
						</block>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<style>
					<width value="100%"/>
					<marginBottom value="3px"/>
					<marginTop value="2px"/>
				</style>
				<block type="text">
					<styleClass value="$TextSmallWhite"/>
					<text value="IDS_COST"/>
				</block>
				<block>
					<styleClass value="$AlignRight"/>
					<block>
						<bind name="visible" value="data.data.moneyChange.GL &lt; 0"/>
						<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: -data.data.moneyChange.GL, currency: 'gold' }, _small: true}"/>
					</block>
					<block>
						<bind name="visible" value="data.data.moneyChange.ELXP &lt; 0"/>
						<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: -data.data.moneyChange.ELXP, currency: 'eliteXP' }, _small: true}"/>
					</block>
					<block type="text">
						<bind name="visible" value="((data.data.moneyChange.ELXP &lt; 0) &amp;&amp; (data.data.moneyChange.XP &lt; 0))"/>
						<style>
							<marginRight value="3px"/>
						</style>
						<styleClass value="$TextSecondary"/>
						<styleClass value="$MiddleVAligned"/>
						<text value="IDS_AND"/>
					</block>
					<block>
						<bind name="visible" value="data.data.moneyChange.XP &lt; 0"/>
						<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: -data.data.moneyChange.XP, currency: 'freeXP' }, _small: true}"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="NotificationStartRetraining">
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; data.data.crewId"/>
		<bind name="watchDH" value="'crew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'crew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CREW_START_ADAPTATION', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block className="CommanderRankShipTraining">
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
						<height value="94px"/>
					</style>
					<block className="inner_panel" type="native">
						<styleClass value="$Fullsize"/>
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<position value="absolute"/>
						</style>
					</block>
					<block>
						<style>
							<position value="absolute"/>
							<bottom value="-1px"/>
							<right value="2px"/>
						</style>
						<bind name="instance" value="'CommanderPortraitNormal'; {_baseUrl: crew.baseUrl, _overlayUrl: crew.overlayUrl, _isUnique: crew.isUnique}"/>
					</block>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<styleClass value="$InfoBlockHorizontalIndent"/>
						<styleClass value="$MiddleVAligned"/>
						<block type="text">
							<styleClass value="$TextDefault"/>
							<bind name="class" value="'$FontColorWhite'"/>
							<bind name="text" value="tr(crew.firstNameIDS) + ' ' + tr(crew.lastNameIDS)"/>
						</block>
						<block type="text">
							<bind name="visible" value="crew.hasRank == true"/>
							<styleClass value="$TextSecondary"/>
							<bind name="class" value="'$FontColorBlueish'"/>
							<bind name="text" value="'IDS_CREW_RANK_' + toUpperCase(crew.nation) + '_' + crew.rank"/>
						</block>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<bind name="class" value="data.trainingType == 2	? '$FontColorGold'
													: '$None'"/>
							<bind name="text" value="data.trainingType == 0	? 'IDS_CREW_TRAINING_FREE' :
							data.trainingType == 1	? 'IDS_CREW_TRAINING_CREDIT' :
							data.trainingType == 2	? 'IDS_CREW_TRAINING_GOLD'
													: null"/>
						</block>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<style>
					<flow value="htile"/>
				</style>
				<block type="text">
					<style>
						<marginTop value="4px"/>
					</style>
					<styleClass value="$TextDefault"/>
					<text value="IDS_RETRAINING_FOR"/>
				</block>
				<block className="ShipIconLevelName">
					<block>
						<style>
							<height value="30px"/>
						</style>
						<block className="icon_wreath" type="native">
							<style>
								<position value="absolute"/>
								<top value="3px"/>
							</style>
							<bind name="visible" value="data.isElite || data.isPremium || data.uiSpecial"/>
							<bind name="gotoAndStop!" value="(data.isPremium || data.uiSpecial) 	? 'premium' : 'elite'"/>
						</block>
						<block className="icon_ship" type="native">
							<bind name="style" value="'marginLeft'; data.isElite || data.isPremium || data.uiSpecial ? 5 : 2"/>
							<style>
								<marginTop value="11px"/>
							</style>
							<bind name="gotoAndStop!" value="data.isPremium || data.uiSpecial ? data.shipType + '_P' : data.shipType"/>
						</block>
						<block type="text">
							<style>
								<marginLeft value="2px"/>
							</style>
							<styleClass value="$TextDefaultBold"/>
							<styleClass value="$MiddleVAligned"/>
							<bind name="class" value="'$LetterSpacingSmall'"/>
							<bind name="class" value="data.isPremium || data.uiSpecial	? '$FontColorGolden'
															: '$FontColorDefault'"/>
							<bind name="text" value="data.shipLevelRome + ' ' + toUpperCase(tr(data.shipName))"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block>
					<style>
						<width value="100%"/>
						<marginTop value="6px"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<bind name="text" value="data.data.retrainingType == 1	? 'IDS_CREW_TRAINING_FREE' :
								data.data.retrainingType == 2	? 'IDS_CREW_TRAINING_CREDIT'
																: null"/>
					</block>
				</block>
				<block>
					<style>
						<width value="216px"/>
						<marginTop value="6px"/>
					</style>
					<block className="indicator_progress_bar_orange" type="native">
						<style>
							<width value="100%"/>
							<marginLeft value="2px"/>
						</style>
						<bind name="value" value="crewRetraining.adaptationExperienceEarned"/>
						<bind name="maximum" value="crewRetraining.adaptationExperiencePenalty"/>
					</block>
					<block>
						<style>
							<width value="100%"/>
							<marginTop value="3px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<bind name="class" value="'$FontColorUnready'"/>
							<bind name="text" value="crewRetraining.adaptationExperienceEarned + ' / ' + crewRetraining.adaptationExperiencePenalty"/>
						</block>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block type="text">
						<styleClass value="$TextSmallWhite"/>
						<text value="IDS_COST"/>
					</block>
					<block>
						<bind name="visible" value="data.data.retrainingType == 3"/>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'CostGoldNano'; { _class: '$FontColorGold', _costGold: -data.data.moneyChange.GL}"/>
					</block>
					<block>
						<bind name="visible" value="data.data.retrainingType == 2"/>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'CostCRNano'; {_costCR: -data.data.moneyChange.CR}"/>
					</block>
					<block>
						<bind name="visible" value="data.data.retrainingType == 1"/>
						<styleClass value="$AlignRight"/>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<bind name="text" value="'IDS_FOR_FREE'"/>
						</block>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationFinishRetraining">
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; data.data.crewId"/>
		<bind name="watchDH" value="'crew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'crew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CREW_FINISH_ADAPTATION', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block className="CommanderRankShipTraining">
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
						<height value="94px"/>
					</style>
					<block className="inner_panel" type="native">
						<styleClass value="$Fullsize"/>
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<position value="absolute"/>
						</style>
					</block>
					<block>
						<style>
							<position value="absolute"/>
							<bottom value="-1px"/>
							<right value="2px"/>
						</style>
						<bind name="instance" value="'CommanderPortraitNormal'; {_baseUrl: crew.baseUrl, _overlayUrl: crew.overlayUrl, _isUnique: crew.isUnique}"/>
					</block>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<styleClass value="$InfoBlockHorizontalIndent"/>
						<styleClass value="$MiddleVAligned"/>
						<block type="text">
							<styleClass value="$TextDefault"/>
							<bind name="class" value="'$FontColorWhite'"/>
							<bind name="text" value="tr(crew.firstNameIDS) + ' ' + tr(crew.lastNameIDS)"/>
						</block>
						<block type="text">
							<bind name="visible" value="crew.hasRank == true"/>
							<styleClass value="$TextSecondary"/>
							<bind name="class" value="'$FontColorBlueish'"/>
							<bind name="text" value="'IDS_CREW_RANK_' + toUpperCase(crew.nation) + '_' + crew.rank"/>
						</block>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<bind name="class" value="data.trainingType == 2	? '$FontColorGold'
													: '$None'"/>
							<bind name="text" value="data.trainingType == 0	? 'IDS_CREW_TRAINING_FREE' :
							data.trainingType == 1	? 'IDS_CREW_TRAINING_CREDIT' :
							data.trainingType == 2	? 'IDS_CREW_TRAINING_GOLD'
													: null"/>
						</block>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<style>
					<flow value="htile"/>
				</style>
				<block type="text">
					<style>
						<marginTop value="4px"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="text" value="tr('IDS_RETRAINED_FOR') + tr('IDS_COLON')"/>
				</block>
				<block className="ShipIconLevelName">
					<block>
						<style>
							<height value="30px"/>
						</style>
						<block className="icon_wreath" type="native">
							<style>
								<position value="absolute"/>
								<top value="3px"/>
							</style>
							<bind name="visible" value="data.isElite || data.isPremium || data.uiSpecial"/>
							<bind name="gotoAndStop!" value="(data.isPremium || data.uiSpecial) 	? 'premium' : 'elite'"/>
						</block>
						<block className="icon_ship" type="native">
							<bind name="style" value="'marginLeft'; data.isElite || data.isPremium || data.uiSpecial ? 5 : 2"/>
							<style>
								<marginTop value="11px"/>
							</style>
							<bind name="gotoAndStop!" value="data.isPremium || data.uiSpecial ? data.shipType + '_P' : data.shipType"/>
						</block>
						<block type="text">
							<style>
								<marginLeft value="2px"/>
							</style>
							<styleClass value="$TextDefaultBold"/>
							<styleClass value="$MiddleVAligned"/>
							<bind name="class" value="'$LetterSpacingSmall'"/>
							<bind name="class" value="data.isPremium || data.uiSpecial	? '$FontColorGolden'
															: '$FontColorDefault'"/>
							<bind name="text" value="data.shipLevelRome + ' ' + toUpperCase(tr(data.shipName))"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="visible" value="(data.data.retrainingType == 3) || (data.data.retrainingType == 4)"/>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="(data.data.retrainingType == 3) || (data.data.retrainingType == 4)"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<text value="IDS_CREW_TRAINING_GOLD"/>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
				<block>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<block type="text">
							<styleClass value="$TextSmallWhite"/>
							<text value="IDS_COST"/>
						</block>
						<block>
							<bind name="visible" value="(data.data.retrainingType == 3)"/>
							<styleClass value="$AlignRight"/>
							<styleClass value="$FontColorGold"/>
							<bind name="instance" value="'PriceTag'; {priceInfo: { finalPrice: -data.data.moneyChange.GL, currency: 'gold' }, _small: true}"/>
						</block>
						<block>
							<bind name="visible" value="(data.data.retrainingType == 4)"/>
							<styleClass value="$AlignRight"/>
							<block>
								<bind name="visible" value="data.price[1]"/>
								<bind name="instance" value="'PriceTag'; {priceInfo: { finalPrice: -data.data.moneyChange.ELXP, currency: 'eliteXP'}, _small: true }"/>
							</block>
							<block>
								<bind name="visible" value="(data.data.moneyChange.XP &amp;&amp; data.data.moneyChange.ELXP)"/>
								<block type="text">
									<style>
										<marginRight value="3px"/>
									</style>
									<styleClass value="$TextSecondary"/>
									<text value="IDS_AND"/>
								</block>
							</block>
							<block>
								<bind name="visible" value="data.data.moneyChange.XP"/>
								<bind name="instance" value="'PriceTag'; {priceInfo: { finalPrice: -data.data.moneyChange.XP, currency: 'freexp'}, _small: true }"/>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="CommanderRankShipTraining">
		<style>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
				<height value="94px"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$Fullsize"/>
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<bottom value="-1px"/>
					<right value="2px"/>
				</style>
				<bind name="instance" value="'CommanderPortraitNormal'; {_baseUrl: crew.baseUrl, _overlayUrl: crew.overlayUrl, _isUnique: crew.isUnique}"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<styleClass value="$MiddleVAligned"/>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorWhite'"/>
					<bind name="text" value="tr(crew.firstNameIDS) + ' ' + tr(crew.lastNameIDS)"/>
				</block>
				<block type="text">
					<bind name="visible" value="crew.hasRank == true"/>
					<styleClass value="$TextSecondary"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<bind name="text" value="'IDS_CREW_RANK_' + toUpperCase(crew.nation) + '_' + crew.rank"/>
				</block>
				<block type="text">
					<styleClass value="$TextSecondary"/>
					<bind name="class" value="data.trainingType == 2	? '$FontColorGold'
													: '$None'"/>
					<bind name="text" value="data.trainingType == 0	? 'IDS_CREW_TRAINING_FREE' :
							data.trainingType == 1	? 'IDS_CREW_TRAINING_CREDIT' :
							data.trainingType == 2	? 'IDS_CREW_TRAINING_GOLD'
													: null"/>
				</block>
			</block>
		</block>
	</block>
	<css name="$TextHeaderBigPositive">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="17"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0x4CE8AA"/>
	</css>
	<block className="NotificationYouAreACommander">
		<block>
			<bind name="style" value="'width'; ((_width - 25) + 'px')"/>
			<styleClass value="$MarginForAccountNotifications"/>
			<block type="text">
				<bind name="style" value="'maxWidth'; (_width - 55)"/>
				<styleClass value="$TextHeaderBold"/>
				<bind name="text" value="'IDS_SYS_MESSAGE_HEADER_MS_UI_YOU_ARE_COMMANDER_DIVISION'"/>
			</block>
		</block>
		<block className="icon_formation" type="native">
			<style>
				<alpha value="0.6"/>
				<right value="0px"/>
				<top value="4px"/>
				<position value="absolute"/>
			</style>
			<bind name="gotoAndStop!" value="'commander_' + toUpperCase(tr(data.divisionType))"/>
		</block>
	</block>
	<block className="NotificationPlayerIsACommander">
		<block>
			<bind name="style" value="'width'; ((_width - 25) + 'px')"/>
			<bind name="watch" value="'clanTag'; (data.playerClanTag ? '[' + data.playerClanTag + ']' : '')"/>
			<styleClass value="$MarginForAccountNotifications"/>
			<block type="text">
				<bind name="style" value="'maxWidth'; (_width - 55)"/>
				<style>
					<styleSheet value="h3
				    {
				        color: #FFCC66;
				    }"/>
				</style>
				<styleClass value="$TextHeaderBold"/>
				<bind name="text" value="'&lt;body&gt;&lt;h3&gt;' + clanTag + data.playerName + '&lt;/h3&gt;' + ' ' + toLowerCase(tr('IDS_DIVISION_COMMANDER')) + '&lt;/body&gt;'"/>
			</block>
		</block>
		<block className="icon_formation" type="native">
			<style>
				<alpha value="0.6"/>
				<right value="0px"/>
				<top value="4px"/>
				<position value="absolute"/>
			</style>
			<bind name="gotoAndStop!" value="'not_commander_' + toUpperCase(tr(data.divisionType))"/>
		</block>
	</block>
	<block className="NotificationYourActionInDivision">
		<block>
			<bind name="style" value="'width'; ((_width - 25) + 'px')"/>
			<styleClass value="$MarginForAccountNotifications"/>
			<block type="text">
				<bind name="style" value="'maxWidth'; (_width - 55)"/>
				<styleClass value="$TextHeaderBold"/>
				<bind name="text" value="tr('IDS_SYS_MESSAGE_HEADER_MS_UI_YOUR_ACTION_IN_DIVISION_' + data.actionId + '_DIVISION')"/>
			</block>
		</block>
		<block className="icon_formation" type="native">
			<style>
				<alpha value="0.6"/>
				<right value="0px"/>
				<top value="4px"/>
				<position value="absolute"/>
			</style>
			<bind name="gotoAndStop!" value="'not_commander_' + toUpperCase(tr(data.divisionType))"/>
		</block>
	</block>
	<block className="NotificationPlayerActionInDivision">
		<bind name="watch" value="'clanTag'; (data.playerClanTag ? '[' + data.playerClanTag + ']' : '')"/>
		<block>
			<bind name="style" value="'width'; ((_width - 25) + 'px')"/>
			<styleClass value="$MarginForAccountNotifications"/>
			<block type="text">
				<bind name="style" value="'maxWidth'; (_width - 55)"/>
				<style>
					<styleSheet value="h3
				    {
				        color: #FFCC66;
				    }"/>
				</style>
				<styleClass value="$TextHeaderBold"/>
				<bind name="text" value="data.actionId == 0	? '&lt;body&gt;&lt;h3&gt;' + clanTag + data.playerName + '&lt;/h3&gt;' + ' ' + tr('IDS_PLAYER_JOINED_DIVISION') + '&lt;/body&gt;'
											: data.actionId == 1 ? '&lt;body&gt;' + clanTag + data.playerName + ' ' + tr('IDS_PLAYER_LEFT_DIVISION') + '&lt;/body&gt;'
											: data.actionId == 2 ? '&lt;body&gt;' + clanTag + data.playerName + ' ' + tr('IDS_PLAYER_IS_OUT_OF_DIVISION') + '&lt;/body&gt;'
											: null"/>
			</block>
		</block>
		<block className="icon_formation" type="native">
			<style>
				<alpha value="0.6"/>
				<right value="0px"/>
				<top value="4px"/>
				<position value="absolute"/>
			</style>
			<bind name="gotoAndStop!" value="'not_commander_' + toUpperCase(tr(data.divisionType))"/>
		</block>
	</block>
	<block className="NotificationDivisionInvitationAction">
		<bind name="watch" value="'clanTag'; (data.playerClanTag ? '[' + data.playerClanTag + ']' : '')"/>
		<block>
			<bind name="style" value="'width'; ((_width - 25) + 'px')"/>
			<styleClass value="$MarginForAccountNotifications"/>
			<block type="text">
				<bind name="style" value="'maxWidth'; (_width - 55)"/>
				<style>
					<styleSheet value="h3
				    {
				        color: #FFCC66;
				    }"/>
				</style>
				<styleClass value="$TextHeaderBold"/>
				<bind name="text" value="data.actionId == 0	? '&lt;body&gt;'+ clanTag + data.playerName + ' ' + tr('IDS_PLAYER_DECLINED_YOUR_INVITATION') + '&lt;/body&gt;'
											: data.actionId == 1	? '&lt;body&gt;&lt;h3&gt;'+ clanTag + data.playerName + '&lt;/h3&gt;' + ' ' + tr('IDS_PLAYER_ACCEPTED_YOUR_INVITATION') + '&lt;/body&gt;'
																	: null"/>
			</block>
		</block>
		<block className="icon_formation" type="native">
			<style>
				<alpha value="0.6"/>
				<right value="0px"/>
				<top value="4px"/>
				<position value="absolute"/>
			</style>
			<bind name="gotoAndStop!" value="'not_commander_' + toUpperCase(tr(data.divisionType))"/>
		</block>
	</block>
	<block className="NotificationDivisionInvitationFailed">
		<bind name="watch" value="'clanTag'; (data.playerClanTag ? '[' + data.playerClanTag + ']' : '')"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_UI_INVITATION_FAILED', _class: '$TextHeaderBigNegative',
												_maxWidth: (_width - 55), _width: _width, _verticalMargins: 4}"/>
		</block>
		<block>
			<bind name="style" value="'width'; ((_width - 25) + 'px')"/>
			<styleClass value="$MarginForAccountNotifications"/>
			<block type="text">
				<bind name="style" value="'maxWidth'; (_width - 55)"/>
				<styleClass value="$TextHeaderBigDefault"/>
				<bind name="text" value="data.actionId == 0	? clanTag + data.playerName + ' ' + tr(toUpperCase('IDS_PLAYER_ALREADY_IN_' + data.divisionType))
											: data.actionId == 1 ? tr('IDS_TIME_TO_WAIT') + ' ' + clanTag + data.playerName + ' ' + tr('IDS_RUN_OUT')
											: data.actionId == 2 ? clanTag + data.playerName + ' ' + tr('IDS_PLAYER_IS_OFFLINE')
											: data.actionId == 3 ? 'IDS_SERVICE_IS_NOT_AVAILABLE'
											: data.actionId == 4 ? 'IDS_PLAYER_HAS_TOO_MANY_INVITES'
											: data.actionId == 5 ? 'IDS_YOU_SENT_TOO_MANY_INVITES'
											: null"/>
			</block>
		</block>
		<block className="icon_formation" type="native">
			<style>
				<alpha value="0.6"/>
				<right value="0px"/>
				<top value="4px"/>
				<position value="absolute"/>
			</style>
			<bind name="gotoAndStop!" value="'not_commander_' + toUpperCase(tr(data.divisionType))"/>
		</block>
	</block>
	<block className="NotificationDivisionDismissed">
		<block>
			<bind name="style" value="'width'; ((_width - 25) + 'px')"/>
			<styleClass value="$MarginForAccountNotifications"/>
			<block type="text">
				<bind name="style" value="'maxWidth'; (_width - 55)"/>
				<styleClass value="$TextHeaderBold"/>
				<bind name="text" value="'IDS_SYS_MESSAGE_HEADER_MS_UI_DISMISSED_DIVISION'"/>
			</block>
		</block>
		<block className="icon_formation" type="native">
			<style>
				<alpha value="0.6"/>
				<right value="0px"/>
				<top value="4px"/>
				<position value="absolute"/>
			</style>
			<bind name="gotoAndStop!" value="'not_commander_' + toUpperCase(tr(data.divisionType))"/>
		</block>
	</block>
	<block className="NotificationActionError">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_UI_ACTION_ERROR', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<styleClass value="$MarginForAccountNotifications"/>
			<block className="icon_restrict_red" type="native">
				<styleClass value="$MiddleVAligned"/>
			</block>
			<block>
				<block type="text">
					<bind name="class" value="'$FontColorCompareNegative'"/>
					<styleClass value="$TextDefault"/>
					<text value="IDS_SYS_MESSAGE_HEADER_MS_UI_PURCHASE_FAILED"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="notification_frame" type="native">
			<styleClass value="$Fullsize"/>
			<styleClass value="$PxCorrection"/>
		</block>
	</block>
	<block className="NotificationLookingForDivisionStatus">
		<block>
			<styleClass value="$MarginForAccountNotifications"/>
			<block>
				<block type="text">
					<styleClass value="$TextHeaderBold"/>
					<bind name="text" value="'IDS_SYS_MESSAGE_HEADER_MS_UI_LOOKING_FOR_DIVISION_STATUS_DIVISION'"/>
				</block>
			</block>
			<block>
				<style>
					<marginTop value="9px"/>
				</style>
				<block className="icon_formation_wanted" type="native">
					<styleClass value="$MiddleVAligned"/>
					<bind name="gotoAndStop!" value="data.actionId == 1 ? ('on_'+data.divisionType) : 'off'"/>
					<style>
						<marginRight value="2px"/>
					</style>
				</block>
				<block type="text">
					<style>
						<marginLeft value="3px"/>
					</style>
					<styleClass value="$TextHeaderBigDefault"/>
					<bind name="class" value="data.actionId == 1 ? '$FontColorTurquoise' : '$FontColorWhite'"/>
					<text value="IDS_STATUS_IS_ESTABLISHED"/>
					<bind name="text" value="data.actionId == 1 ? 'IDS_STATUS_IS_ESTABLISHED' : 'IDS_STATUS_IS_TAKEN_OFF'"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<style>
					<marginTop value="9px"/>
				</style>
				<bind name="style" value="'width'; ((_width - 25) + 'px')"/>
				<block type="text">
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$TextHeaderBigDefault"/>
					<bind name="text" value="data.actionId == 1 ? 'IDS_OTHER_PLAYERS_SEE_YOU_DIVISION' : 'IDS_OTHER_PLAYERS_DONT_SEE_YOU_DIVISION'"/>
				</block>
				<block type="text">
					<style>
						<width value="100%"/>
						<marginTop value="3px"/>
					</style>
					<bind name="visible" value="data.actionId == 1"/>
					<styleClass value="$TextHeaderBigDefault"/>
					<text value="IDS_WAIT_FOR_INVITATION"/>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationDivisionInvitationReceived">
		<block>
			<bind name="style" value="'width'; ((_width - 25) + 'px')"/>
			<styleClass value="$MarginForAccountNotifications"/>
			<block type="text">
				<bind name="style" value="'maxWidth'; (_width - 55)"/>
				<style>
					<styleSheet value="h3
					{
						color: #FFCC66;
					}"/>
				</style>
				<styleClass value="$TextHeaderBold"/>
				<bind name="text" value="'&lt;body&gt;' + subst('IDS_SYS_MESSAGE_PLAYER_INVITES_YOU_TO_JOIN_' + toUpperCase(data.divisionType),[], {playerName: '&lt;h3&gt;' + data.playerName + '&lt;/h3&gt;'}))
						+ '&lt;/body&gt;'"/>
			</block>
		</block>
		<block className="icon_formation" type="native">
			<style>
				<alpha value="0.6"/>
				<right value="0px"/>
				<top value="4px"/>
				<position value="absolute"/>
			</style>
			<bind name="gotoAndStop!" value="'not_commander_division'"/>
		</block>
	</block>
	<block className="NotificationBattleResults">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'accountLevelInfo'"/>
		<bind name="primaryEntityDH" value="'operationEntity'; CC.operation; data.operationId"/>
		<bind name="watchDH" value="'operationIsHard'; []; operationEntity.operation.isHard"/>
		<bind name="watch" value="'operationDifficulty'; operationIsHard ? 'HARD' : 'NORMAL'"/>
		<block>
			<bind name="name" value="'NotificationBattleResults_value'"/>
			<bind name="instance" value="'NotificationHeader'; data.result == 2 	?	{ _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_BATTLE_RESULTS_2', _class: '$FontColorCompareNegative'}
																			: data.result == 1 	? { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_BATTLE_RESULTS_1', _class: '$FontColorComparePositive'}
																											: data.result == 0 	? { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_BATTLE_RESULTS_0', _class: '$FontColorWhite'}
																																			: null"/>
		</block>
		<block>
			<bind name="name" value="'NotificationBattleResults'"/>
			<bind name="watch" value="'isPVEOperation'; (data.operationName != '')"/>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block className="ShipIconLevelName">
					<block>
						<style>
							<height value="30px"/>
						</style>
						<block className="icon_wreath" type="native">
							<style>
								<position value="absolute"/>
								<top value="3px"/>
							</style>
							<bind name="visible" value="data.isElite || data.isPremium || data.uiSpecial"/>
							<bind name="gotoAndStop!" value="(data.isPremium || data.uiSpecial) 	? 'premium' : 'elite'"/>
						</block>
						<block className="icon_ship" type="native">
							<bind name="style" value="'marginLeft'; data.isElite || data.isPremium || data.uiSpecial ? 5 : 2"/>
							<style>
								<marginTop value="11px"/>
							</style>
							<bind name="gotoAndStop!" value="data.isPremium || data.uiSpecial ? data.shipType + '_P' : data.shipType"/>
						</block>
						<block type="text">
							<style>
								<marginLeft value="2px"/>
							</style>
							<styleClass value="$TextDefaultBold"/>
							<styleClass value="$MiddleVAligned"/>
							<bind name="class" value="'$LetterSpacingSmall'"/>
							<bind name="class" value="data.isPremium || data.uiSpecial	? '$FontColorGolden'
															: '$FontColorDefault'"/>
							<bind name="text" value="data.shipLevelRome + ' ' + toUpperCase(tr(data.shipName))"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
				<block>
					<style>
						<marginTop value="-2px"/>
						<marginBottom value="2px"/>
					</style>
					<block type="text">
						<style>
							<leading value="-2"/>
							<maxWidth value="210"/>
						</style>
						<styleClass value="$TextSecondary"/>
						<bind name="class" value="'$FontColorBlueish'"/>
						<bind name="text" value="isPVEOperation ?	tr(toUpperCase('IDS_' + data.operationName + '_NAME'))
													+ '. '
													+ (tr('IDS_OPERATION_' + toUpperCase(operationDifficulty) + '_DIFFICULTY_TITLE'))
													+ ' ' + data.date
													: (tr(data.mapName) + ', ' + data.date)"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<bind name="visible" value="isPVEOperation"/>
					<style>
						<width value="100%"/>
						<marginBottom value="4px"/>
					</style>
					<bind name="repeat" value="isPVEOperation ? 5 : 0; 'EarnedStarsNano'; {_currentEarned: data.curTasksCompleted}"/>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block type="text">
					<styleClass value="$TextSmallWhite"/>
					<text value="IDS_BATTLE_REWARDS"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$Fullsize"/>
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block>
					<style>
						<marginLeft value="22px"/>
						<marginRight value="12px"/>
						<width value="100%"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<text value="IDS_SHIP_EXPERIENCE_COLON"/>
						</block>
						<block>
							<styleClass value="$AlignRight"/>
							<bind name="instance" value="'CostXPNano'; { _class: '$FontColorExp', _costXP: data.exp}"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<style>
							<width value="100%"/>
							<marginBottom value="2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<text value="IDS_CREDITS_COLON"/>
						</block>
						<block>
							<style>
								<right value="3px"/>
							</style>
							<styleClass value="$AlignRight"/>
							<bind name="instance" value="'CostCRNano'; { _class: '$TextSecondary', _costCR: data.credits}"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="(data.creditsPenalty &gt; 0) || (data.creditsPenalty &gt; 0)"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<block type="text">
						<styleClass value="$TextSmallWhite"/>
						<text value="IDS_BATTLE_PENALTY"/>
					</block>
				</block>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block className="inner_panel" type="native">
						<styleClass value="$Fullsize"/>
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<position value="absolute"/>
						</style>
					</block>
					<block>
						<style>
							<marginLeft value="22px"/>
							<marginRight value="12px"/>
							<width value="100%"/>
						</style>
						<block>
							<style>
								<width value="100%"/>
								<marginBottom value="-2px"/>
							</style>
							<block type="text">
								<styleClass value="$TextSecondary"/>
								<text value="IDS_PENALTY_ALLY_HIT"/>
							</block>
							<block>
								<styleClass value="$AlignRight"/>
								<bind name="instance" value="'CostXPNano'; { _class: '$FontColorExp', _costXP: data.expPenalty}"/>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
						<block>
							<style>
								<width value="100%"/>
								<marginBottom value="2px"/>
							</style>
							<block type="text">
								<styleClass value="$TextSecondary"/>
								<text value="IDS_PENALTY_ALLY_HIT"/>
							</block>
							<block>
								<style>
									<right value="3px"/>
								</style>
								<styleClass value="$AlignRight"/>
								<bind name="instance" value="'CostCRNano'; { _class: '$TextSecondary', _costCR: data.creditsPenalty}"/>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
					</block>
				</block>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block type="text">
					<styleClass value="$TextSmallWhite"/>
					<text value="IDS_EFFECTIVENESS"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="245px"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$Fullsize"/>
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block>
					<style>
						<marginLeft value="22px"/>
						<marginRight value="12px"/>
						<width value="100%"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
							<marginBottom value="2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<text value="IDS_DESTROYED"/>
						</block>
						<block>
							<styleClass value="$AlignRight"/>
							<block type="text">
								<styleClass value="$TextSmallWhite"/>
								<bind name="text" value="data.shipsKilled"/>
							</block>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="data.earnedAchievements.length &gt; 0"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<block type="text">
						<styleClass value="$TextSmallWhite"/>
						<bind name="text" value="tr('IDS_PROFILE_ACHIEVEMENTS')+tr('IDS_COLON')"/>
					</block>
				</block>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
				<block>
					<style>
						<width value="245px"/>
					</style>
					<block className="inner_panel" type="native">
						<styleClass value="$Fullsize"/>
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<position value="absolute"/>
						</style>
					</block>
					<block>
						<styleClass value="$InfoBlockIndent"/>
						<bind name="repeat" value="data.earnedAchievements; 'AchievementIconWithTitle'; {_showProgress: true}"/>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="data.quests.length &gt; 0"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'NotificationQuests'; data.quests.length &gt; 0 ? { _BattleTask: 'IDS_BATTLE_TASK', quests: data.quests } : null"/>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<style>
					<marginTop value="3px"/>
					<marginLeft value="12px"/>
					<marginRight value="12px"/>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'MouseInstruction'; {_type: 'left', _instructionText: 'IDS_HINT_LEFT_CLICK_FOR_FURTHER_INFO', _maxWidth: 194}"/>
			</block>
			<block>
				<style>
					<marginLeft value="12px"/>
					<marginRight value="12px"/>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'StatusLineWithIcon'; data.postponed ? {_postivie: false, _text: 'IDS_WARNING_BATTLESTATS_NOT_AVAILABLE', _maxWidth: 194} : null"/>
			</block>
		</block>
		<block className="notification_frame" type="native">
			<styleClass value="$Fullsize"/>
			<styleClass value="$PxCorrection"/>
			<bind name="visible" value="data.result == 2"/>
		</block>
	</block>
	<block className="NotificationService">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_SHIP_SERVE', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block className="ShipIconLevelName">
					<block>
						<style>
							<height value="30px"/>
						</style>
						<block className="icon_wreath" type="native">
							<style>
								<position value="absolute"/>
								<top value="3px"/>
							</style>
							<bind name="visible" value="data.isElite || data.isPremium || data.uiSpecial"/>
							<bind name="gotoAndStop!" value="(data.isPremium || data.uiSpecial) 	? 'premium' : 'elite'"/>
						</block>
						<block className="icon_ship" type="native">
							<bind name="style" value="'marginLeft'; data.isElite || data.isPremium || data.uiSpecial ? 5 : 2"/>
							<style>
								<marginTop value="11px"/>
							</style>
							<bind name="gotoAndStop!" value="data.isPremium || data.uiSpecial ? data.shipType + '_P' : data.shipType"/>
						</block>
						<block type="text">
							<style>
								<marginLeft value="2px"/>
							</style>
							<styleClass value="$TextDefaultBold"/>
							<styleClass value="$MiddleVAligned"/>
							<bind name="class" value="'$LetterSpacingSmall'"/>
							<bind name="class" value="data.isPremium || data.uiSpecial	? '$FontColorGolden'
															: '$FontColorDefault'"/>
							<bind name="text" value="data.shipLevelRome + ' ' + toUpperCase(tr(data.shipName))"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
				<block>
					<bind name="visible" value="data.result != 0"/>
					<style>
						<marginBottom value="1px"/>
						<marginTop value="1px"/>
					</style>
					<block className="icon_restrict_red" type="native">
						<styleClass value="$MiddleVAligned"/>
						<style>
							<marginRight value="2px"/>
						</style>
					</block>
					<block type="text">
						<styleClass value="$TextSmallNegative"/>
						<text value="IDS_SYS_MESSAGE_HEADER_MS_UI_PURCHASE_FAILED"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$Fullsize"/>
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block>
					<style>
						<marginLeft value="22px"/>
						<marginRight value="12px"/>
						<width value="100%"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<text value="IDS_SERVICE"/>
						</block>
						<block>
							<styleClass value="$AlignRight"/>
							<bind name="instance" value="'CostCRNano'; { _class: '$TextSecondary', _costCR: data.costRepair}"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<style>
							<width value="100%"/>
							<marginBottom value="2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<bind name="text" value="tr('IDS_AMMUNITION')+tr('IDS_COLON')"/>
						</block>
						<block>
							<styleClass value="$AlignRight"/>
							<bind name="instance" value="'CostCRNano'; { _class: '$TextSecondary', _costCR: data.costShell}"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block type="text">
						<styleClass value="$TextSmallWhite"/>
						<text value="IDS_SERVICE_COST"/>
					</block>
					<block>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'CostCRNano'; { _class: '$TextSmallWhite', _costCR: data.costTotal}"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block>
				<bind name="visible" value="data.result != 0"/>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="data.result != 0"/>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<style>
					<marginTop value="3px"/>
					<alpha value="0.9"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<bind name="text" value="'IDS_SERVICE_NOT_COMPLETED'"/>
				</block>
			</block>
		</block>
		<block className="notification_frame" type="native">
			<bind name="visible" value="data.result != 0"/>
			<styleClass value="$Fullsize"/>
			<styleClass value="$PxCorrection"/>
		</block>
	</block>
	<block className="NotificationShipResearch">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_SHIP_EXPLORE', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="name" value="'NotificationShipResearch_' + data.shipId"/>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block className="ShipIconLevelName">
					<block>
						<style>
							<height value="30px"/>
						</style>
						<block className="icon_wreath" type="native">
							<style>
								<position value="absolute"/>
								<top value="3px"/>
							</style>
							<bind name="visible" value="data.isElite || data.isPremium || data.uiSpecial"/>
							<bind name="gotoAndStop!" value="(data.isPremium || data.uiSpecial) 	? 'premium' : 'elite'"/>
						</block>
						<block className="icon_ship" type="native">
							<bind name="style" value="'marginLeft'; data.isElite || data.isPremium || data.uiSpecial ? 5 : 2"/>
							<style>
								<marginTop value="11px"/>
							</style>
							<bind name="gotoAndStop!" value="data.isPremium || data.uiSpecial ? data.shipType + '_P' : data.shipType"/>
						</block>
						<block type="text">
							<style>
								<marginLeft value="2px"/>
							</style>
							<styleClass value="$TextDefaultBold"/>
							<styleClass value="$MiddleVAligned"/>
							<bind name="class" value="'$LetterSpacingSmall'"/>
							<bind name="class" value="data.isPremium || data.uiSpecial	? '$FontColorGolden'
															: '$FontColorDefault'"/>
							<bind name="text" value="data.shipLevelRome + ' ' + toUpperCase(tr(data.shipName))"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block type="text">
						<styleClass value="$TextSmallWhite"/>
						<text value="IDS_RESEARCH_COST"/>
					</block>
					<block>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'CostXPNano'; { _class: '$FontColorExp', _costXP: data.cost}"/>
						<bind name="name" value="'NotificationShipResearch_' + data.shipId + '_costXP'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationShipPurchase">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_SHIP_BUY', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="name" value="'NotificationShipPurchase_' + data.shipId"/>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block className="ShipIconLevelName">
					<block>
						<style>
							<height value="30px"/>
						</style>
						<block className="icon_wreath" type="native">
							<style>
								<position value="absolute"/>
								<top value="3px"/>
							</style>
							<bind name="visible" value="data.isElite || data.isPremium || data.uiSpecial"/>
							<bind name="gotoAndStop!" value="(data.isPremium || data.uiSpecial) 	? 'premium' : 'elite'"/>
						</block>
						<block className="icon_ship" type="native">
							<bind name="style" value="'marginLeft'; data.isElite || data.isPremium || data.uiSpecial ? 5 : 2"/>
							<style>
								<marginTop value="11px"/>
							</style>
							<bind name="gotoAndStop!" value="data.isPremium || data.uiSpecial ? data.shipType + '_P' : data.shipType"/>
						</block>
						<block type="text">
							<style>
								<marginLeft value="2px"/>
							</style>
							<styleClass value="$TextDefaultBold"/>
							<styleClass value="$MiddleVAligned"/>
							<bind name="class" value="'$LetterSpacingSmall'"/>
							<bind name="class" value="data.isPremium || data.uiSpecial	? '$FontColorGolden'
															: '$FontColorDefault'"/>
							<bind name="text" value="data.shipLevelRome + ' ' + toUpperCase(tr(data.shipName))"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block type="text">
						<styleClass value="$TextSmallWhite"/>
						<text value="IDS_PURCHASE_COST"/>
					</block>
					<block>
						<bind name="visible" value="(data.costCR != 0) &amp;&amp; !(data.isPremium)"/>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'CostCRNano'; { _class: '$TextSmallWhite', _costCR: data.costCR}"/>
						<bind name="name" value="'NotificationShipPurchase_' + data.shipId + '_costCR'"/>
					</block>
					<block>
						<bind name="visible" value="(data.costGold != 0) &amp;&amp; (data.isPremium)"/>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'CostGoldNano'; { _class: '$TextSmallGold', _costGold: data.costGold}"/>
						<bind name="name" value="'NotificationShipPurchase_' + data.shipId + '_costGold'"/>
					</block>
					<block type="text">
						<bind name="visible" value="(data.costCR || data.costGold) == 0"/>
						<styleClass value="$TextSmallWhite"/>
						<styleClass value="$AlignRight"/>
						<bind name="text" value="'IDS_FOR_FREE'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationShipSell">
		<bind name="controller" value="lesta.unbound.core.UbController"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_SHIP_SELL_0', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block>
					<style>
						<width value="100%"/>
					</style>
				</block>
				<block className="ShipIconLevelName">
					<block>
						<style>
							<height value="30px"/>
						</style>
						<block className="icon_wreath" type="native">
							<style>
								<position value="absolute"/>
								<top value="3px"/>
							</style>
							<bind name="visible" value="data.isElite || data.isPremium || data.uiSpecial"/>
							<bind name="gotoAndStop!" value="(data.isPremium || data.uiSpecial) 	? 'premium' : 'elite'"/>
						</block>
						<block className="icon_ship" type="native">
							<bind name="style" value="'marginLeft'; data.isElite || data.isPremium || data.uiSpecial ? 5 : 2"/>
							<style>
								<marginTop value="11px"/>
							</style>
							<bind name="gotoAndStop!" value="data.isPremium || data.uiSpecial ? data.shipType + '_P' : data.shipType"/>
						</block>
						<block type="text">
							<style>
								<marginLeft value="2px"/>
							</style>
							<styleClass value="$TextDefaultBold"/>
							<styleClass value="$MiddleVAligned"/>
							<bind name="class" value="'$LetterSpacingSmall'"/>
							<bind name="class" value="data.isPremium || data.uiSpecial	? '$FontColorGolden'
															: '$FontColorDefault'"/>
							<bind name="text" value="data.shipLevelRome + ' ' + toUpperCase(tr(data.shipName))"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block type="text">
						<styleClass value="$TextSmallWhite"/>
						<text value="IDS_SELL_COST"/>
					</block>
					<block>
						<styleClass value="$AlignRight"/>
						<block>
							<bind name="visible" value="(data.costShipCR != 0) || (data.costShipGL == 0)"/>
							<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: data.costShipCR, currency: 'credits' }, _small: true}"/>
						</block>
						<block type="text">
							<bind name="visible" value="((data.costShipCR != 0) &amp;&amp; (data.costShipGL != 0))"/>
							<styleClass value="$TextSecondary"/>
							<styleClass value="$MiddleVAligned"/>
							<text value="IDS_AND"/>
						</block>
						<block>
							<bind name="visible" value="(data.costShipGL != 0)"/>
							<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: data.costShipGL, currency: 'gold' }, _small: true}"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block>
				<bind name="visible" value="data.modsCount != 0"/>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
				<block>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<block type="text">
						<styleClass value="$TextSecondary"/>
						<bind name="text" value="tr('IDS_MODERNIZATIONS') + tr('IDS_COLON')"/>
					</block>
				</block>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block className="inner_panel" type="native">
						<styleClass value="$Fullsize"/>
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<position value="absolute"/>
						</style>
					</block>
					<block>
						<styleClass value="$InfoBlockHorizontalIndent"/>
						<block>
							<bind name="visible" value="data.modFlag == '0'"/>
							<style>
								<width value="100%"/>
								<marginLeft value="12px"/>
							</style>
							<block type="text">
								<styleClass value="$TextSmallWhite"/>
								<text value="IDS_SELL_COST"/>
							</block>
							<block>
								<styleClass value="$AlignRight"/>
								<bind name="instance" value="'CostCRNano'; { _costCR: data.costModCR}"/>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
						<block>
							<bind name="visible" value="data.modFlag == '1'"/>
							<style>
								<width value="100%"/>
								<marginLeft value="12px"/>
							</style>
							<block type="text">
								<styleClass value="$TextSmallWhite"/>
								<text value="IDS_UNMOUNT_COST"/>
							</block>
							<block>
								<styleClass value="$AlignRight"/>
								<bind name="instance" value="'PriceTag'; {priceInfo: {finalPrice: -(data.modsCost[1]), currency: 'gold'}, _small: true}"/>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
						<block>
							<style>
								<width value="100%"/>
								<marginLeft value="12px"/>
							</style>
							<block type="text">
								<styleClass value="$TextSmallWhite"/>
								<text value="IDS_MODERNIZATION_QUANTITY"/>
							</block>
							<block>
								<styleClass value="$AlignRight"/>
								<block type="text">
									<styleClass value="$TextSmallWhite"/>
									<bind name="text" value="data.modsCount"/>
								</block>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationModuleResearch">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_USER_COMPONENT_EXPLORE', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="name" value="'NotificationModuleResearch_' + data.nameIDS"/>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block className="NotificationModuleHeader">
					<style>
						<width value="100%"/>
					</style>
					<block>
						<style>
							<marginBottom value="2px"/>
							<marginTop value="2px"/>
						</style>
						<block className="icon_tree_module_states" type="native">
							<styleClass value="$MouseDisable"/>
							<bind name="gotoAndStop!" value="data.type + (data.typeId == 2	? '_P' 
																: data.typeId == 7 	? '_A' 
																: '_P')"/>
						</block>
						<block>
							<style>
								<marginTop value="6px"/>
								<marginLeft value="3px"/>
							</style>
							<block type="text">
								<styleClass value="$TextDefaultBold"/>
								<bind name="class" value="data.typeId == 2 	? '$FontColorWhite' : '$FontColorExp'"/>
								<style>
									<marginBottom value="5px"/>
									<maxWidth value="160"/>
								</style>
								<bind name="text" value="data.nameIDS"/>
							</block>
							<block type="text">
								<style>
									<marginTop value="-9px"/>
									<maxWidth value="160"/>
								</style>
								<styleClass value="$TextSecondary"/>
								<bind name="text" value="data.typeIDS"/>
							</block>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block type="text">
						<styleClass value="$TextSmallWhite"/>
						<text value="IDS_RESEARCH_COST"/>
					</block>
					<block>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'CostXPNano'; { _class: '$FontColorExp', _costXP: data.cost}"/>
						<bind name="name" value="'NotificationModuleResearch_' + data.nameIDS + '_costXP'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationModulePurchase">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_USER_COMPONENT_BUY', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="name" value="'NotificationModulePurchase_' + data.nameIDS"/>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block className="NotificationModuleHeader">
					<style>
						<width value="100%"/>
					</style>
					<block>
						<style>
							<marginBottom value="2px"/>
							<marginTop value="2px"/>
						</style>
						<block className="icon_tree_module_states" type="native">
							<styleClass value="$MouseDisable"/>
							<bind name="gotoAndStop!" value="data.type + (data.typeId == 2	? '_P' 
																: data.typeId == 7 	? '_A' 
																: '_P')"/>
						</block>
						<block>
							<style>
								<marginTop value="6px"/>
								<marginLeft value="3px"/>
							</style>
							<block type="text">
								<styleClass value="$TextDefaultBold"/>
								<bind name="class" value="data.typeId == 2 	? '$FontColorWhite' : '$FontColorExp'"/>
								<style>
									<marginBottom value="5px"/>
									<maxWidth value="160"/>
								</style>
								<bind name="text" value="data.nameIDS"/>
							</block>
							<block type="text">
								<style>
									<marginTop value="-9px"/>
									<maxWidth value="160"/>
								</style>
								<styleClass value="$TextSecondary"/>
								<bind name="text" value="data.typeIDS"/>
							</block>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block type="text">
						<styleClass value="$TextSmallWhite"/>
						<text value="IDS_PURCHASE_COST"/>
					</block>
					<block>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'CostCRNano'; { _class: '$TextSmallWhite', _costCR: data.cost }"/>
						<bind name="name" value="'NotificationModulePurchase_' + data.nameIDS + '_costCR'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationModuleSell">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: data.header, _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="name" value="'NotificationModuleSell_' + data.nameIDS"/>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block className="NotificationModuleHeader">
					<style>
						<width value="100%"/>
					</style>
					<block>
						<style>
							<marginBottom value="2px"/>
							<marginTop value="2px"/>
						</style>
						<block className="icon_tree_module_states" type="native">
							<styleClass value="$MouseDisable"/>
							<bind name="gotoAndStop!" value="data.type + (data.typeId == 2	? '_P' 
																: data.typeId == 7 	? '_A' 
																: '_P')"/>
						</block>
						<block>
							<style>
								<marginTop value="6px"/>
								<marginLeft value="3px"/>
							</style>
							<block type="text">
								<styleClass value="$TextDefaultBold"/>
								<bind name="class" value="data.typeId == 2 	? '$FontColorWhite' : '$FontColorExp'"/>
								<style>
									<marginBottom value="5px"/>
									<maxWidth value="160"/>
								</style>
								<bind name="text" value="data.nameIDS"/>
							</block>
							<block type="text">
								<style>
									<marginTop value="-9px"/>
									<maxWidth value="160"/>
								</style>
								<styleClass value="$TextSecondary"/>
								<bind name="text" value="data.typeIDS"/>
							</block>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block type="text">
						<styleClass value="$TextSmallWhite"/>
						<text value="IDS_SELL_COST"/>
					</block>
					<block>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'CostCRNano'; { _class: '$TextSmallWhite', _costCR: data.cost }"/>
						<bind name="name" value="'NotificationModuleSell_' + data.nameIDS + '_costCR'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationLootboxesOpened">
		<style>
			<backgroundColor value="0x01000000"/>
		</style>
		<bind name="clickSplit"/>
		<bind name="entityDH" value="'RewardsEntity'; data.changes"/>
		<bind name="watchDH" value="'rewardsFromLootboxes';[]; RewardsEntity.openLooboxesResults.rewards"/>
		<bind name="request" value="'left_click'; 'openModalWindowAllLootBoxesRewards'; {rewards: rewardsFromLootboxes, header: 'IDS_RECEIVED_LOOTBOXES_REWARDS', subheader: subst('IDS_OPENED_LOOTBOXES', [], {count: data.lootboxOpened}, data.lootboxOpened)}"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_OPEN_SEVERAL_LOOTBOXES', _class: '$FontColorGolden'}"/>
		</block>
		<block>
			<bind name="name" value="'NotificationLootboxesOpened'"/>
			<style>
				<width value="100%"/>
			</style>
			<styleClass value="$PxHorizontalCorrection"/>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<marginBottom value="-3px"/>
				</style>
			</block>
			<block>
				<style>
					<marginLeft value="12px"/>
					<marginRight value="12px"/>
					<marginTop value="4px"/>
					<marginBottom value="4px"/>
					<width value="100%"/>
				</style>
				<block type="text">
					<style>
						<width value="100%"/>
						<alpha value="0.9"/>
						<marginRight value="8px"/>
					</style>
					<styleClass value="$TextSecondary"/>
					<text value="IDS_LOOTBOXES_TOOLTIP"/>
				</block>
				<block type="text">
					<style>
						<alpha value="0.9"/>
					</style>
					<styleClass value="$TextSecondary"/>
					<bind name="text" value="data.lootboxOpened"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<marginBottom value="8px"/>
				<marginTop value="8px"/>
				<marginLeft value="12px"/>
				<marginRight value="12px"/>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'MouseInstruction'; {_type: 'left', _instructionText: 'IDS_SYS_MESSAGE_OPEN_LOOTBOXES_REWARDS', _maxWidth: _width - 80, _leading: -3}"/>
		</block>
	</block>
	<block className="NotificationAdministrator">
		<style>
			<width value="245px"/>
		</style>
		<block>
			<bind name="instance" value="'NotificationHeaderWithIcon'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_ADMIN_TEXT_MESSAGE', _class: '$FontColorUnready'}"/>
		</block>
		<block>
			<bind name="name" value="'NotificationAdministratorId'"/>
			<style>
				<marginLeft value="12px"/>
				<marginRight value="12px"/>
				<width value="100%"/>
			</style>
			<block type="text">
				<style>
					<marginBottom value="5px"/>
					<width value="100%"/>
				</style>
				<styleClass value="$TextWhiteSmall"/>
				<bind name="text" value="data.msg"/>
			</block>
		</block>
		<block className="notification_frame_orange" type="native">
			<styleClass value="$Fullsize"/>
			<styleClass value="$PxCorrection"/>
		</block>
	</block>
	<block className="NotificationServerReload">
		<style>
			<width value="245px"/>
		</style>
		<block>
			<bind name="instance" value="'NotificationHeaderWithIcon'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_SERVER_REBOOT', _class: '$FontColorUnready'}"/>
		</block>
		<block>
			<bind name="name" value="'NotificationServerReloadId'"/>
			<style>
				<marginLeft value="12px"/>
				<marginRight value="12px"/>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$TextWhiteSmall"/>
				<text value="IDS_SERVER_RELOAD_MESSAGE"/>
			</block>
			<block type="text">
				<styleClass value="$TextWhiteSmall"/>
				<bind name="text" value="data.minutesLeft"/>
			</block>
			<block type="text">
				<styleClass value="$TextWhiteSmall"/>
				<bind name="pluralText" value="'IDS_PL_MINUTES_COUNT'; data.minutesLeft"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="notification_frame_orange" type="native">
			<styleClass value="$Fullsize"/>
			<styleClass value="$PxCorrection"/>
		</block>
	</block>
	<block className="NotificationAccountRename">
		<style>
			<width value="245px"/>
		</style>
		<block>
			<bind name="instance" value="'NotificationHeaderWithIcon'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CHANGE_NAME', _class: '$FontColorUnready'}"/>
		</block>
		<block>
			<params>
				<param name="name" value="NotificationAccountRename"/>
			</params>
			<style>
				<marginLeft value="12px"/>
				<marginRight value="12px"/>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<params>
					<param name="name" value="oldAccountName"/>
				</params>
				<block type="text">
					<styleClass value="$TextWhiteSmall"/>
					<text value="IDS_RENAME_MESSAGE_OLD"/>
				</block>
				<block type="text">
					<styleClass value="$TextWhiteSmall"/>
					<bind name="text" value="data.data.oldAccountName"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<params>
					<param name="name" value="newAccountName"/>
				</params>
				<block type="text">
					<styleClass value="$TextWhiteSmall"/>
					<text value="IDS_RENAME_MESSAGE_NEW"/>
				</block>
				<block type="text">
					<styleClass value="$TextWhiteSmall"/>
					<bind name="text" value="data.data.newAccountName"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block className="notification_frame_orange" type="native">
			<styleClass value="$Fullsize"/>
			<styleClass value="$PxCorrection"/>
		</block>
	</block>
	<block className="NotificationInvoice">
		<block>
			<bind name="child" value="data.subType; { data: data };
			'NotificationFundsChargeOrWriteoff'; 
			'NotificationShipAddOrWriteoff'; 
			'NotificationModuleAddOrWriteoff'; 
			'NotificationSlotsChargeOrWriteoff'; 
			'NotificationPremiumAccountChargeOrWriteoff';  
			'NotificationModernizationAddOrWriteoff'; 
			'NotificationExteriorAddOrWriteoff';
			'NotificationConsumableAddOrWriteoff';
			'NotificationBerthsChargeOrWriteoff';
			'NotificationAchievementAddOrWriteoff';
			'NotificationInvoiceContainer';
			'NotificationCollectionCardRecieved';
			'NotificationCollectionAlbumRecieved';
			'NotificationUnlockRecieved';
			'NotificationDogTagInvoices';
			'NotificationSSEReceived';
			'NotificationWOWSPremiumAccountChargeOrWriteoff'"/>
		</block>
		<block>
			<bind name="visible" value="data.reason.length &gt; 0"/>
			<styleClass value="$MarginForAccountNotifications"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorBlueish'"/>
				<style>
					<maxWidth value="216"/>
				</style>
				<bind name="text" value="data.reason"/>
			</block>
		</block>
		<block className="notification_frame_orange" type="native">
			<styleClass value="$Fullsize"/>
			<styleClass value="$PxCorrection"/>
		</block>
	</block>
	<block className="NotificationCollectionCardRecieved">
		<block>
			<bind name="instance" value="'NotificationHeaderWithIcon'; data.operation != null  ? { _header: data.header, _class: '$FontColorUnready' } : null "/>
		</block>
		<block>
			<params>
				<param name="name" value="NotificationCollectionCardInvoice"/>
			</params>
			<bind name="instance" value="'NotificationCollectionCardContent'; { 	_iconPath: data.iconPath, _duplicates: data.duplicates, 
															_mainText: data.cardName, _collectionName: data.albumName }"/>
		</block>
	</block>
	<block className="NotificationCollectionAlbumRecieved">
		<block>
			<bind name="instance" value="'NotificationHeaderWithIcon'; data.operation != null  ? { _header: data.header, _class: '$FontColorUnready' } : null "/>
		</block>
		<block>
			<params>
				<param name="name" value="NotificationCollectionAlbumInvoice"/>
			</params>
			<bind name="watch" value="'collectionNameQuotes'; (tr('IDS_' +  toUpperCase(data.albumName) + '_QUOTES'))"/>
			<bind name="instance" value="'NotificationIconWithTextAndSubtext'; { _mainText: subst('IDS_COLLECTION_NAME', [], { _collectionName: collectionNameQuotes }), 
																_backgroundImage: 'url:' + data.iconPath }"/>
		</block>
	</block>
	<block className="NotificationUnlockRecieved">
		<block>
			<params>
				<param name="name" value="NotificationUnlockInvoice"/>
			</params>
			<bind name="instance" value="'NotificationHeaderWithIcon'; data.operation != null  ? { _header: data.header, _class: '$FontColorUnready' } : null "/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<paddingTop value="12px"/>
				<paddingLeft value="12px"/>
				<paddingRight value="12px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'VanityItemWithDescription'; 	(data.item.params.vanityName != '') ? { _vanityName: data.item.params.vanityName, _maxWidth: 150 } : null"/>
			</block>
			<block>
				<bind name="instance" value="'NationUnlockWithDescription'; 	(data.item.params.vanityName == '') ? { _unlockName: data.item.name, _maxWidth: 150 } : null"/>
			</block>
			<block>
				<bind name="visible" value="data.item.params.vanityName != ''"/>
				<style>
					<width value="100%"/>
					<marginRight value="-12px"/>
					<marginLeft value="-12px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="data.item.params.item.firstNameIDS != ''"/>
				<style>
					<width value="100%"/>
					<marginTop value="12px"/>
					<marginBottom value="12px"/>
				</style>
				<bind name="instance" value="'RewardCrewImage'; { _crew: data.item.params.item }"/>
			</block>
			<block>
				<bind name="visible" value="!!(data.item.params.shipClass) || !!(data.item.params.nation)"/>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block>
					<bind name="instance" value="'RewardShipAndNationRestriction'; { _rewardshipClass: data.item.params.shipClass, _rewardNation: data.item.params.nation }"/>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationSSEReceived">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_INVOICE_RECEIVED_15', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="instance" value="'NotificationIconWithTextAndSubtext'; { _lowermostMargin: true, 
																_backgroundImage: 'url:../reward_icons/icon_reward_sse.png',
																_mainText: data.item.subtype == 'task' ? 'IDS_PERSONAL_BATTLE_TASK' : 'IDS_PERSONAL_CHALLENGE',
																_secondaryText: toUpperCase(data.item.clientName)}"/>
		</block>
	</block>
	<block className="NotificationCollectionCardContent">
		<style>
			<flow value="horizontal"/>
		</style>
		<styleClass value="$InfoBlockIndent"/>
		<bind name="watch" value="'collectionNameQuotes'; (tr('IDS_' +  toUpperCase(_collectionName) + '_QUOTES'))"/>
		<block>
			<style>
				<width value="60px"/>
				<height value="60px"/>
				<backgroundSize value="cover"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:' + _iconPath"/>
			<block>
				<bind name="visible" value="_duplicates &gt; 0"/>
				<style>
					<position value="absolute"/>
					<top value="50%"/>
					<left value="30px"/>
					<alpha value="0.9"/>
					<hitTest value="false"/>
				</style>
				<block className="icon_issued_small" type="native">
					<bind name="rotation" value="-3"/>
					<bind name="scaleX" value="0.8"/>
					<bind name="scaleY" value="0.8"/>
					<bind name="gotoAndStop!" value="'issued'"/>
					<innerBind elementName="item.item" name="text" value="toUpperCase(tr('IDS_DUPLICATE_STAMP'))"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<marginLeft value="6px"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefaultBold"/>
				<style>
					<maxWidth value="150"/>
				</style>
				<bind name="text" value="'IDS_' + toUpperCase(_mainText)"/>
			</block>
			<block type="text">
				<bind name="visible" value="_collectionName != null"/>
				<styleClass value="$TextDefault"/>
				<style>
					<maxWidth value="150"/>
				</style>
				<bind name="text" value="subst('IDS_COLLECTION_NAME', [], { _collectionName: collectionNameQuotes })"/>
			</block>
		</block>
	</block>
	<block className="NotificationConsumableAddOrWriteoff">
		<block>
			<bind name="instance" value="'NotificationHeaderWithIcon'; data.operation != null  ? { _header: data.header, _class: '$FontColorUnready'} : null "/>
		</block>
		<block>
			<bind name="name" value="'NotificationConsumableAddOrWriteoff' + data.item.title"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'NotificationIconWithTextAndSubtext'; { _hideInnerPanel: true, 
																_lowermostMargin: true, 
																_backgroundImage: 'url:' + data.item.iconPath, 
																_topVisualSpace: '-6px',
																_amount: data.amount, 
																_mainText: toUpperCase(data.item.title), 
																_hideSecondaryText: true}"/>
		</block>
	</block>
	<block className="NotificationExteriorAddOrWriteoff">
		<bind name="primaryEntityDH" value="'exteriorEntity'; CC.exteriorConfig; data.extId"/>
		<bind name="watchDH" value="'exteriorConfig'; []; exteriorEntity.exteriorConfig"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; data.shipID; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<block>
			<bind name="instance" value="'NotificationHeaderWithIcon'; data.operation != null  ? { _header: data.header, _class: '$FontColorUnready' } : null "/>
		</block>
		<block>
			<params>
				<param name="name" value="NotificationExteriorInvoice"/>
			</params>
			<bind name="watch" value="'exteriorItemName'; exteriorConfig.isPermanent ? subst('IDS_EXTERIOR_NAME_WITH_SHIP', [], {exteriorName: tr('IDS_' + toUpperCase(exteriorConfig.name)), shipName: tr(shipInfo.nameIDS + '_FULL')})
																	: tr('IDS_' + toUpperCase(exteriorConfig.name))})"/>
			<bind name="instance" value="'NotificationIconWithTextAndSubtext'; { _hideInnerPanel: true, 
																_lowermostMargin: true, 
																_isSpecialWidth: true,  
																_specialWidth: exteriorConfig.type == ExteriorTypes.FLAGS ? '60px' : '75px', 
																_backgroundImage: 'url:' + exteriorConfig.iconPath, 
																_amount: data.amount,
																_mainText: exteriorItemName,
																_secondaryText: 'IDS_' + toUpperCase(exteriorConfig.name) + '_DESCRIPTION'}"/>
		</block>
	</block>
	<block className="NotificationModuleAddOrWriteoff">
		<block>
			<bind name="instance" value="'NotificationHeaderWithIcon'; data.operation != null  ? { _header: data.header, _class: '$FontColorUnready'} : null "/>
		</block>
		<block>
			<params>
				<param name="name" value="NotificationModuleInvoice"/>
			</params>
			<style>
				<marginBottom value="5px"/>
			</style>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<block className="NotificationModuleHeader">
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<marginBottom value="2px"/>
						<marginTop value="2px"/>
					</style>
					<block className="icon_tree_module_states" type="native">
						<styleClass value="$MouseDisable"/>
						<bind name="gotoAndStop!" value="data.type + (data.typeId == 2	? '_P' 
																: data.typeId == 7 	? '_A' 
																: '_P')"/>
					</block>
					<block>
						<style>
							<marginTop value="6px"/>
							<marginLeft value="3px"/>
						</style>
						<block type="text">
							<styleClass value="$TextDefaultBold"/>
							<bind name="class" value="data.typeId == 2 	? '$FontColorWhite' : '$FontColorExp'"/>
							<style>
								<marginBottom value="5px"/>
								<maxWidth value="160"/>
							</style>
							<bind name="text" value="data.nameIDS"/>
						</block>
						<block type="text">
							<style>
								<marginTop value="-9px"/>
								<maxWidth value="160"/>
							</style>
							<styleClass value="$TextSecondary"/>
							<bind name="text" value="data.typeIDS"/>
						</block>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationShipAddOrWriteoff">
		<block>
			<bind name="instance" value="'NotificationHeaderWithIcon'; data.operation != null  ? { _header: data.header, _class: '$FontColorUnready'} : null "/>
		</block>
		<block>
			<params>
				<param name="name" value="NotificationShipInvoice"/>
			</params>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block className="ShipIconLevelName">
					<block>
						<style>
							<height value="30px"/>
						</style>
						<block className="icon_wreath" type="native">
							<style>
								<position value="absolute"/>
								<top value="3px"/>
							</style>
							<bind name="visible" value="data.isElite || data.isPremium || data.uiSpecial"/>
							<bind name="gotoAndStop!" value="(data.isPremium || data.uiSpecial) 	? 'premium' : 'elite'"/>
						</block>
						<block className="icon_ship" type="native">
							<bind name="style" value="'marginLeft'; data.isElite || data.isPremium || data.uiSpecial ? 5 : 2"/>
							<style>
								<marginTop value="11px"/>
							</style>
							<bind name="gotoAndStop!" value="data.isPremium || data.uiSpecial ? data.shipType + '_P' : data.shipType"/>
						</block>
						<block type="text">
							<style>
								<marginLeft value="2px"/>
							</style>
							<styleClass value="$TextDefaultBold"/>
							<styleClass value="$MiddleVAligned"/>
							<bind name="class" value="'$LetterSpacingSmall'"/>
							<bind name="class" value="data.isPremium || data.uiSpecial	? '$FontColorGolden'
															: '$FontColorDefault'"/>
							<bind name="text" value="data.shipLevelRome + ' ' + toUpperCase(tr(data.shipName))"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationFundsChargeOrWriteoff">
		<block>
			<bind name="instance" value="'NotificationHeaderWithIcon'; data.operation != null ? { _header: data.header, _class: '$FontColorUnready'} : null "/>
		</block>
		<block>
			<bind name="name" value="'NotificationFundsChargeOrWriteoff'"/>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$Fullsize"/>
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<position value="absolute"/>
						<marginBottom value="-2px"/>
					</style>
				</block>
				<block>
					<style>
						<marginLeft value="12px"/>
						<marginRight value="12px"/>
						<width value="100%"/>
					</style>
					<block>
						<bind name="visible" value="data.freeXP &gt; 0"/>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<text value="IDS_FREE_EXPERIENCE_COLON"/>
						</block>
						<block>
							<styleClass value="$AlignRight"/>
							<bind name="instance" value="'CostFreeXPNano'; { _class: '$FontColorFreeExp', _costFreeXP: data.freeXP}"/>
							<params>
								<param name="name" value="NotificationFundsChargeOrWriteoff_freeXP"/>
							</params>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<bind name="visible" value="data.leveling &gt; 0"/>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<style>
								<maxWidth value="160"/>
							</style>
							<bind name="text" value="tr('IDS_ACCOUNT_LEVELING_PROGRESS') + ':'"/>
						</block>
						<block>
							<styleClass value="$AlignRight"/>
							<bind name="instance" value="'CostXPNanoWithoutIcon'; { _class: '$TextDefaultExpSmall', _costXP: data.leveling}"/>
							<params>
								<param name="name" value="NotificationFundsChargeOrWriteoff_levelPoints"/>
							</params>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<bind name="visible" value="data.credits &gt; 0"/>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<text value="IDS_CREDITS_COLON"/>
						</block>
						<block>
							<styleClass value="$AlignRight"/>
							<bind name="instance" value="'CostCRNano'; { _class: '$TextSecondary', _costCR: data.credits}"/>
							<params>
								<param name="name" value="NotificationFundsChargeOrWriteoff_credits"/>
							</params>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<bind name="visible" value="data.gold &gt; 0"/>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<text value="IDS_GOLD_COLON"/>
						</block>
						<block>
							<styleClass value="$AlignRight"/>
							<bind name="instance" value="'CostGoldNano'; { _class: '$TextDefaultGoldSmall', _costGold: data.gold}"/>
							<params>
								<param name="name" value="NotificationFundsChargeOrWriteoff_gold"/>
							</params>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<bind name="visible" value="data.steel &gt; 0"/>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<text value="IDS_STEEL_COLON"/>
						</block>
						<block>
							<styleClass value="$AlignRight"/>
							<bind name="instance" value="'CostSteelNano'; { _class: '$TextSecondary', _costSteel: data.steel}"/>
							<params>
								<param name="name" value="NotificationFundsChargeOrWriteoff_steel"/>
							</params>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<bind name="visible" value="data.coal &gt; 0"/>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<text value="IDS_COAL_COLON"/>
						</block>
						<block>
							<styleClass value="$AlignRight"/>
							<bind name="instance" value="'CostCoalNano'; { _class: '$TextSecondary', _costCoal: data.coal}"/>
							<params>
								<param name="name" value="NotificationFundsChargeOrWriteoff_coal"/>
							</params>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<bind name="visible" value="data.molybdenum &gt; 0"/>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<text value="IDS_MOLYBDENUM_COLON"/>
						</block>
						<block>
							<styleClass value="$AlignRight"/>
							<bind name="instance" value="'CostMolybdenumNano'; { _class: '$TextSecondary', _costMolybdenum: data.molybdenum}"/>
							<params>
								<param name="name" value="NotificationFundsChargeOrWriteoff_molybdenum"/>
							</params>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<bind name="visible" value="data.brass &gt; 0"/>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<text value="IDS_BRASS_COLON"/>
						</block>
						<block>
							<styleClass value="$AlignRight"/>
							<bind name="instance" value="'CostBrassNano'; { _class: '$TextSecondary', _costBrass: data.brass}"/>
							<params>
								<param name="name" value="NotificationFundsChargeOrWriteoff_brass"/>
							</params>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<bind name="visible" value="data.saltpeter &gt; 0"/>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<text value="IDS_SALTPETER_COLON"/>
						</block>
						<block>
							<styleClass value="$AlignRight"/>
							<bind name="instance" value="'CostSaltpeterNano'; { _class: '$TextSecondary', _costSaltpeter: data.saltpeter}"/>
							<params>
								<param name="name" value="NotificationFundsChargeOrWriteoff_saltpeter"/>
							</params>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<bind name="visible" value="data.eventum_1 &gt; 0"/>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<text value="IDS_EVENTUM_1_COLON"/>
						</block>
						<block>
							<styleClass value="$AlignRight"/>
							<bind name="instance" value="'CostEventumFirstNano'; { _class: '$TextSecondary', _costEventum_1: data.eventum_1}"/>
							<params>
								<param name="name" value="NotificationFundsChargeOrWriteoff_eventum_1"/>
							</params>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<bind name="visible" value="data.eventum_2 &gt; 0"/>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<text value="IDS_EVENTUM_2_COLON"/>
						</block>
						<block>
							<styleClass value="$AlignRight"/>
							<bind name="instance" value="'CostEventumSecondNano'; { _class: '$TextSecondary', _costEventum_2: data.eventum_2}"/>
							<params>
								<param name="name" value="NotificationFundsChargeOrWriteoff_eventum_2"/>
							</params>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<bind name="visible" value="data.eliteXP &gt; 0"/>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<text value="IDS_ELITE_EXPERIENCE_COLON"/>
						</block>
						<block>
							<styleClass value="$AlignRight"/>
							<bind name="instance" value="'CostEliteXPNano'; { _class: '$TextDefaultExpSmall', _costEliteXP: data.eliteXP}"/>
							<params>
								<param name="name" value="NotificationFundsChargeOrWriteoff_eliteXP"/>
							</params>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationSlotsChargeOrWriteoff">
		<block>
			<bind name="instance" value="'NotificationHeaderWithIcon'; data.operation != null ? { _header: data.header, _class: '$FontColorUnready'} : null "/>
		</block>
		<block>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$Fullsize"/>
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<position value="absolute"/>
						<marginBottom value="-4px"/>
					</style>
				</block>
				<block>
					<style>
						<marginLeft value="12px"/>
						<marginRight value="12px"/>
						<width value="100%"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<params>
								<param name="name" value="NotificationSlotsInvoice"/>
							</params>
							<styleClass value="$TextSecondary"/>
							<text value="IDS_NUMBER_OF_SLOTS"/>
						</block>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<styleClass value="$AlignRight"/>
							<bind name="text" value="data.slots"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationBerthsChargeOrWriteoff">
		<block>
			<bind name="instance" value="'NotificationHeaderWithIcon'; data.operation != null ? { _header: data.header, _class: '$FontColorUnready'} : null "/>
		</block>
		<block>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$Fullsize"/>
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<position value="absolute"/>
						<marginBottom value="-4px"/>
					</style>
				</block>
				<block>
					<style>
						<marginLeft value="12px"/>
						<marginRight value="12px"/>
						<width value="100%"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<params>
								<param name="name" value="NotificationBerthsInvoice"/>
							</params>
							<styleClass value="$TextSecondary"/>
							<text value="IDS_NUMBER_OF_PLACES"/>
						</block>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<styleClass value="$AlignRight"/>
							<bind name="text" value="data.berths"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationAchievementAddOrWriteoff">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'achievements'; data.achivId; 'achievement'"/>
		<block>
			<bind name="instance" value="'NotificationHeaderWithIcon'; data.operation != null ? { _header: data.header, _class: '$FontColorUnready'} : null "/>
		</block>
		<block>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="3px"/>
					<marginBottom value="3px"/>
					<marginLeft value="6px"/>
					<marginRight value="10px"/>
				</style>
				<block>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="instance" value="'AchievementIcon'; {_id: data.achivId}"/>
					<block>
						<bind name="visible" value="data.amount &gt; 1"/>
						<style>
							<bottom value="0px"/>
							<right value="0px"/>
						</style>
						<block type="text">
							<styleClass value="$TextDefaultBold"/>
							<bind name="text" value="data.amount"/>
						</block>
					</block>
				</block>
				<block>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<style>
						<marginLeft value="5px"/>
					</style>
					<block type="text">
						<params>
							<param name="name" value="NotificationAchievementInvoice"/>
						</params>
						<styleClass value="$TextDefaultBold"/>
						<bind name="class" value="'$FontColorGolden'"/>
						<style>
							<maxWidth value="130"/>
						</style>
						<bind name="text" value="achievement.nameIDS"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<bind name="class" value="'$FontColorBlueish'"/>
						<style>
							<maxWidth value="130"/>
							<marginTop value="4px"/>
						</style>
						<bind name="text" value="toLowerCase(tr(achievement.subtypeIDS))"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="NotificationPremiumAccountChargeOrWriteoff">
		<block>
			<bind name="instance" value="'NotificationHeaderWithIcon'; { _header: data.header, _class: '$FontColorUnready'}"/>
		</block>
		<block>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block type="text">
					<styleClass value="$TextWhiteSmall"/>
					<bind name="text" value="data.operation &gt; 0 ? 'IDS_CHARGED_DAYS' : 'IDS_WRITTENOFF_DAYS'"/>
				</block>
				<block type="text">
					<bind name="name" value="'NotificationPremiumAccInvoice'"/>
					<styleClass value="$TextWhiteSmall"/>
					<style>
						<right value="0"/>
						<position value="absolute"/>
					</style>
					<bind name="text" value="data.premium"/>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationWOWSPremiumAccountChargeOrWriteoff">
		<block>
			<bind name="instance" value="'NotificationHeaderWithIcon'; { _header: data.header, _class: '$FontColorUnready'}"/>
		</block>
		<block>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block type="text">
					<styleClass value="$TextWhiteSmall"/>
					<bind name="text" value="data.operation &gt; 0 ? 'IDS_CHARGED_DAYS' : 'IDS_WRITTENOFF_DAYS'"/>
				</block>
				<block type="text">
					<bind name="name" value="'NotificationPremiumAccInvoice'"/>
					<styleClass value="$TextWhiteSmall"/>
					<style>
						<right value="0"/>
						<position value="absolute"/>
					</style>
					<bind name="text" value="data.wows_premium"/>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationModernizationAddOrWriteoff">
		<block>
			<bind name="instance" value="'NotificationHeaderWithIcon'; data.operation != null  ? { _header: data.header, _class: '$FontColorUnready'} : null "/>
		</block>
		<block>
			<bind name="name" value="'NotificationModernizationAddOrWriteoff' + data.nameIDS"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'NotificationIconWithTextAndSubtext'; { _hideInnerPanel: true, 
																_lowermostMargin: true, 
																_backgroundImage: 'url:' + data.iconPath, 
																_topVisualSpace: '-6px', 
																_amount: data.amount, 
																_mainText: data.nameIDS, 
																_hideSecondaryText: true}"/>
		</block>
	</block>
	<block className="NotificationHeaderWithIcon">
		<style>
			<width value="245px"/>
		</style>
		<block>
			<block>
				<style>
					<marginLeft value="12px"/>
					<marginTop value="7px"/>
				</style>
				<block className="icon_warning_orange" type="native"/>
			</block>
			<block>
				<style>
					<marginLeft value="3px"/>
					<marginBottom value="1px"/>
					<marginTop value="2px"/>
				</style>
				<block type="text">
					<style>
						<marginBottom value="2px"/>
						<maxWidth value="200"/>
					</style>
					<styleClass value="$TextDefaultBold"/>
					<bind name="text" value="_header"/>
					<bind name="class" value="_class"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
	</block>
	<block className="NotificationModuleHeader">
		<style>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<marginBottom value="2px"/>
				<marginTop value="2px"/>
			</style>
			<block className="icon_tree_module_states" type="native">
				<styleClass value="$MouseDisable"/>
				<bind name="gotoAndStop!" value="data.type + (data.typeId == 2	? '_P' 
																: data.typeId == 7 	? '_A' 
																: '_P')"/>
			</block>
			<block>
				<style>
					<marginTop value="6px"/>
					<marginLeft value="3px"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefaultBold"/>
					<bind name="class" value="data.typeId == 2 	? '$FontColorWhite' : '$FontColorExp'"/>
					<style>
						<marginBottom value="5px"/>
						<maxWidth value="160"/>
					</style>
					<bind name="text" value="data.nameIDS"/>
				</block>
				<block type="text">
					<style>
						<marginTop value="-9px"/>
						<maxWidth value="160"/>
					</style>
					<styleClass value="$TextSecondary"/>
					<bind name="text" value="data.typeIDS"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ShipIconLevelName">
		<block>
			<style>
				<height value="30px"/>
			</style>
			<block className="icon_wreath" type="native">
				<style>
					<position value="absolute"/>
					<top value="3px"/>
				</style>
				<bind name="visible" value="data.isElite || data.isPremium || data.uiSpecial"/>
				<bind name="gotoAndStop!" value="(data.isPremium || data.uiSpecial) 	? 'premium' : 'elite'"/>
			</block>
			<block className="icon_ship" type="native">
				<bind name="style" value="'marginLeft'; data.isElite || data.isPremium || data.uiSpecial ? 5 : 2"/>
				<style>
					<marginTop value="11px"/>
				</style>
				<bind name="gotoAndStop!" value="data.isPremium || data.uiSpecial ? data.shipType + '_P' : data.shipType"/>
			</block>
			<block type="text">
				<style>
					<marginLeft value="2px"/>
				</style>
				<styleClass value="$TextDefaultBold"/>
				<styleClass value="$MiddleVAligned"/>
				<bind name="class" value="'$LetterSpacingSmall'"/>
				<bind name="class" value="data.isPremium || data.uiSpecial	? '$FontColorGolden'
															: '$FontColorDefault'"/>
				<bind name="text" value="data.shipLevelRome + ' ' + toUpperCase(tr(data.shipName))"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="NotificationQuests">
		<style>
			<width value="100%"/>
		</style>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<block type="text">
				<styleClass value="$TextSmallWhite"/>
				<bind name="text" value="_BattleTask"/>
			</block>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$Fullsize"/>
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block>
				<style>
					<marginLeft value="24px"/>
					<marginTop value="6px"/>
					<marginBottom value="9px"/>
					<width value="100%"/>
				</style>
				<bind name="repeat" value="quests; 'QuestSystemLog'"/>
			</block>
		</block>
	</block>
	<block className="QuestSystemLog">
		<style>
			<flow value="horizontal"/>
			<marginTop value="6px"/>
		</style>
		<block>
			<block className="icon_sse" type="native">
				<bind name="scaleX" value="0.6"/>
				<bind name="scaleY" value="0.6"/>
				<bind name="gotoAndStop!" value="type"/>
			</block>
		</block>
		<block>
			<style>
				<marginTop value="-3px"/>
				<marginLeft value="3px"/>
			</style>
			<block type="text">
				<styleClass value="$TextSecondary"/>
				<style>
					<maxWidth value="166"/>
				</style>
				<bind name="text" value="titleText"/>
			</block>
			<block type="text">
				<bind name="visible" value="maxProgress &lt;= currentProgress"/>
				<style>
					<marginTop value="-2px"/>
				</style>
				<styleClass value="$TextSecondary"/>
				<bind name="class" value="'$FontColorTurquoise'"/>
				<text value="IDS_DONE"/>
			</block>
			<block>
				<bind name="visible" value="maxProgress &gt; currentProgress"/>
				<block className="indicator_progress_bar" type="native">
					<styleClass value="$MiddleVAligned"/>
					<style>
						<width value="36px"/>
						<marginLeft value="3px"/>
					</style>
					<bind name="maximum" value="maxProgress"/>
					<bind name="value" value="currentProgress"/>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationPurchaseSlot">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_BUY_SLOTS', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="name" value="'NotificationPurchaseSlot_' + data.count"/>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<marginLeft value="12px"/>
						<marginRight value="12px"/>
						<width value="100%"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<text value="IDS_PURCHASE_COST"/>
						</block>
						<block>
							<bind name="visible" value="data.cost != 0"/>
							<styleClass value="$AlignRight"/>
							<bind name="instance" value="'CostGoldNano'; { _class: '$TextDefaultGoldSmall', _costGold: data.cost}"/>
							<bind name="name" value="'NotificationPurchaseSlot_' + data.count + '_costGold'"/>
						</block>
						<block type="text">
							<bind name="visible" value="data.cost == 0"/>
							<styleClass value="$TextSmallWhite"/>
							<styleClass value="$AlignRight"/>
							<bind name="text" value="'IDS_FOR_FREE'"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<text value="IDS_NUMBER_OF_SLOTS"/>
						</block>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<styleClass value="$AlignRight"/>
							<bind name="text" value="data.count"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationPurchaseContainer">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: data.header, _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<style>
				<width value="100%"/>
				<height value="80px"/>
				<marginBottom value="9px"/>
				<marginTop value="9px"/>
			</style>
			<block>
				<bind name="watch" value="'backgroundURL'; 	'../reward_icons/icon_reward_lootbox_'+data.type+'.png'"/>
				<bind name="instance" value="'IconWithAmount'; {_width: '80px', 
												_height: '80px',
												_rewardItem: data.type, 
												_iconPath: backgroundURL, 
												_amount: ('x' + data.count)}"/>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<block type="text">
					<styleClass value="$TextHeaderBold"/>
					<style>
						<marginLeft value="12px"/>
					</style>
					<text value="IDS_LOOTBOX"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginBottom value="4px"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<styleClass value="$TextSecondary"/>
					<text value="IDS_LOOTBOX_FOR"/>
				</block>
				<block>
					<styleClass value="$AlignRight"/>
					<bind name="instance" value="'CostXPNano'; { _class: '$FontColorExp', _costXP: data.cost}"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="NotificationAutoPurchaseContainer">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: data.header, _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<style>
				<width value="100%"/>
				<marginTop value="9px"/>
				<marginBottom value="9px"/>
			</style>
			<block>
				<block className="icon_lootbox_normal" type="native">
					<style>
						<alpha value="0.9"/>
					</style>
					<bind name="gotoAndStop!" value="'normal'"/>
				</block>
				<block type="text">
					<style>
						<right value="-3px"/>
						<bottom value="-7px"/>
						<position value="absolute"/>
					</style>
					<styleClass value="$TextLargeHeaderBold"/>
					<bind name="class" value="'$FontSizeHeader3'"/>
					<bind name="text" value="'x' + data.count"/>
				</block>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<block type="text">
					<styleClass value="$TextHeaderBold"/>
					<style>
						<marginLeft value="12px"/>
					</style>
					<text value="IDS_LOOTBOX"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="timeFormat" value="data.at; 'dd.MM.yyyy'; 'timeAutoBuy'; true"/>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<style>
				<width value="100%"/>
				<marginBottom value="4px"/>
			</style>
			<block type="text">
				<styleClass value="$TextSecondary"/>
				<text value="IDS_CONTAINERS_TIME_AUTOBUY"/>
			</block>
			<block type="text">
				<styleClass value="$TextSecondary"/>
				<styleClass value="$AlignRight"/>
				<bind name="text" value="timeAutoBuy"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="NotificationInvoiceContainer">
		<block>
			<bind name="instance" value="'NotificationHeaderWithIcon'; { _header: data.header, _class: '$FontColorUnready'}"/>
		</block>
		<block>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<style>
				<width value="100%"/>
				<marginBottom value="4px"/>
			</style>
			<block type="text">
				<styleClass value="$TextSecondary"/>
				<text value="IDS_NUMBER_OF_CONTAINERS"/>
			</block>
			<block type="text">
				<bind name="name" value="'NotificationInvoiceLootbox'"/>
				<styleClass value="$TextSecondary"/>
				<styleClass value="$AlignRight"/>
				<bind name="text" value="data.amount"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="NotificationAutoOpenContainer">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: data.header, _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<style>
				<width value="100%"/>
				<marginBottom value="4px"/>
			</style>
			<block type="text">
				<style>
					<multiline value="true"/>
					<maxWidth value="220"/>
				</style>
				<styleClass value="$TextSecondary"/>
				<text value="IDS_SYS_MESSAGE_AUTO_OPEN_LOOTBOX"/>
			</block>
		</block>
	</block>
	<block className="NotificationTransactionError">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: data.header, _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<style>
				<width value="100%"/>
				<marginBottom value="4px"/>
			</style>
			<block type="text">
				<style>
					<multiline value="true"/>
					<maxWidth value="220"/>
				</style>
				<styleClass value="$TextSecondary"/>
				<text value="IDS_TRANSACTION_ERROR"/>
			</block>
		</block>
	</block>
	<block className="NotificationPurchasePremiumAccount">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: (data.type == 'wows_premium' ? 'IDS_SYS_MESSAGE_HEADER_MS_ACC_BUY_WOWS_PREM' : 'IDS_SYS_MESSAGE_HEADER_MS_ACC_BUY_PREM'), _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="name" value="'NotificationPurchasePremiumAccount'"/>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<marginLeft value="12px"/>
						<marginRight value="12px"/>
						<width value="100%"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<text value="IDS_PURCHASE_COST"/>
						</block>
						<block>
							<bind name="visible" value="data.cost != 0"/>
							<styleClass value="$AlignRight"/>
							<bind name="instance" value="'CostGoldNano'; { _class: '$TextDefaultGoldSmall', _costGold: data.cost}"/>
							<bind name="name" value="'NotificationPurchasePremiumAccount_costGold'"/>
						</block>
						<block type="text">
							<bind name="visible" value="data.cost == 0"/>
							<styleClass value="$TextSmallWhite"/>
							<styleClass value="$AlignRight"/>
							<bind name="text" value="'IDS_FOR_FREE'"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<text value="IDS_PREMIUM_PERIOD"/>
						</block>
						<block type="text">
							<styleClass value="$AlignRight"/>
							<styleClass value="$TextSecondary"/>
							<bind name="text" value=" 'IDS_PREMIUM_PERIOD_NOTIFICATIONS_' + data.period"/>
							<bind name="name" value="'NotificationPurchasePremiumAccount_period'"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationConvertExp">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_TRANFER_XP', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block type="text">
					<styleClass value="$TextWhiteSmall"/>
					<text value="IDS_CHARGED"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$Fullsize"/>
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<position value="absolute"/>
						<marginBottom value="-4px"/>
					</style>
				</block>
				<block>
					<style>
						<marginLeft value="22px"/>
						<marginRight value="12px"/>
						<width value="100%"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<text value="IDS_FREE_EXPERIENCE_COLON"/>
						</block>
						<block>
							<styleClass value="$AlignRight"/>
							<bind name="instance" value="'CostFreeXPNano'; { _class: '$FontColorFreeExp', _costFreeXP: data.data.xp}"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block type="text">
					<styleClass value="$TextWhiteSmall"/>
					<text value="IDS_WRITTENOFF"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$Fullsize"/>
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<position value="absolute"/>
						<marginBottom value="-4px"/>
					</style>
				</block>
				<block>
					<style>
						<marginLeft value="22px"/>
						<marginRight value="12px"/>
						<width value="100%"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<text value="IDS_GOLD_COLON"/>
						</block>
						<block>
							<styleClass value="$AlignRight"/>
							<bind name="instance" value="'CostGoldNano'; { _class: '$TextDefaultGoldSmall', _costGold: data.data.cost}"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationPurchaseCreditsForGold">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_BUY_MONEY', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="name" value="'NotificationPurchaseCreditsForGold'"/>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block type="text">
					<styleClass value="$TextWhiteSmall"/>
					<text value="IDS_CHARGED"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$Fullsize"/>
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<position value="absolute"/>
						<marginBottom value="-4px"/>
					</style>
				</block>
				<block>
					<style>
						<marginLeft value="22px"/>
						<marginRight value="12px"/>
						<width value="100%"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<text value="IDS_CREDITS_COLON"/>
						</block>
						<block>
							<styleClass value="$AlignRight"/>
							<bind name="instance" value="'CostCRNano'; { _class: '$TextSecondary', _costCR: data.moneyCount}"/>
							<bind name="name" value="'NotificationPurchaseCreditsForGold_receiveCR'"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block type="text">
					<styleClass value="$TextWhiteSmall"/>
					<text value="IDS_WRITTENOFF"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$Fullsize"/>
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<position value="absolute"/>
						<marginBottom value="-4px"/>
					</style>
				</block>
				<block>
					<style>
						<marginLeft value="22px"/>
						<marginRight value="12px"/>
						<width value="100%"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<text value="IDS_GOLD_COLON"/>
						</block>
						<block>
							<styleClass value="$AlignRight"/>
							<bind name="instance" value="'CostGoldNano'; { _class: '$TextDefaultGoldSmall', _costGold: data.cost}"/>
							<bind name="name" value="'NotificationPurchaseCreditsForGold_costGold'"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationModernizationSell">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: data.header + (data.numItems &gt; 1 ? '_PLURAL' : ''), _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="name" value="'NotificationModernizationSell_' + data.item.title"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<bind name="instance" value="'NotificationIconWithTextAndSubtext'; { _hideInnerPanel: true, 
																	_backgroundImage: 'url:' + data.item.iconPath, 
																	_topVisualSpace: '-6px',
																	_amount: data.numItems, 
																	_mainText: 'IDS_TITLE_' + toUpperCase(data.item.title), 
																	_hideSecondaryText: true}"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block>
					<style>
						<width value="100%"/>
						<marginBottom value="5px"/>
					</style>
					<block type="text">
						<styleClass value="$TextSmallWhite"/>
						<text value="IDS_SELL_COST"/>
					</block>
					<block>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'CostCRNano'; { _class: '$TextSmallWhite', _costCR: data.cost}"/>
						<bind name="name" value="'NotificationModernizationSell_' + data.item.title + '_costCR'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationModernizationMount">
		<bind name="controller" value="lesta.unbound.core.UbController"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_SET_MODERNIZATION', _class: '$FontColorGolden'}"/>
		</block>
		<block>
			<bind name="name" value="'NotificationModernizationMount_' + data.item.title"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<bind name="instance" value="'NotificationIconWithTextAndSubtext'; { _hideInnerPanel: true, 
																	_lowermostMargin: true, 
																	_backgroundImage: 'url:' + data.item.iconPath,  
																	_topVisualSpace: '-6px',
																	_mainText: 'IDS_TITLE_' + toUpperCase(data.item.title), 
																	_hideSecondaryText: true}"/>
			</block>
		</block>
	</block>
	<block className="NotificationModernizationPurchaseAndMount">
		<bind name="controller" value="lesta.unbound.core.UbController"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_BUY_MODERNIZATION', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="name" value="'NotificationModernizationPurchaseAndMount_' + data.item.title"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<bind name="instance" value="'NotificationIconWithTextAndSubtext'; { _hideInnerPanel: true, 
																	_backgroundImage: 'url:' + data.item.iconPath, 
																	_topVisualSpace: '-6px', 
																	_mainText: 'IDS_TITLE_' + toUpperCase(data.item.title), 
																	_hideSecondaryText: true}"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block>
					<style>
						<width value="100%"/>
						<marginBottom value="5px"/>
					</style>
					<block type="text">
						<styleClass value="$TextSmallWhite"/>
						<text value="IDS_PURCHASE_COST"/>
					</block>
					<block>
						<bind name="visible" value="(data.currency == 0) &amp;&amp; (data.cost != 0)"/>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'CostCRNano'; { _class: '$TextSmallWhite', _costCR: data.cost}"/>
						<bind name="name" value="'NotificationModernizationPurchaseAndMount_' + data.item.title + '_costCR'"/>
					</block>
					<block>
						<bind name="visible" value="(data.currency == 1) &amp;&amp; (data.cost != 0)"/>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'CostGoldNano'; { _class: '$FontColorGolden', _costGold: data.cost}"/>
						<bind name="name" value="'NotificationModernizationPurchaseAndMount_' + data.item.title + '_costGold'"/>
					</block>
					<block type="text">
						<bind name="visible" value="data.cost == 0"/>
						<styleClass value="$TextSmallWhite"/>
						<styleClass value="$AlignRight"/>
						<bind name="text" value="'IDS_FOR_FREE'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationConsumablePurchased">
		<bind name="controller" value="lesta.unbound.core.UbController"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_CONSUMABLE_PURCHASED_HEADER', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="name" value="'NotificationConsumablePurchased' + data.item.title"/>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<bind name="instance" value="'NotificationIconWithTextAndSubtext'; { _hideInnerPanel: true, 
																	_backgroundImage: 'url:' + data.item.iconPath, 
																	_topVisualSpace: '-6px', 
																	_amount: data.numItems, 
																	_mainText: toUpperCase(data.item.title), 
																	_hideSecondaryText: true}"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block>
					<style>
						<width value="100%"/>
						<marginBottom value="5px"/>
					</style>
					<block type="text">
						<styleClass value="$TextSmallWhite"/>
						<text value="IDS_PURCHASE_COST"/>
					</block>
					<block>
						<bind name="visible" value="(data.currency == 0) &amp;&amp; (data.cost != 0)"/>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'CostCRNano'; { _class: '$TextSmallWhite', _costCR: data.cost}"/>
						<bind name="name" value="'NotificationConsumablePurchased' + data.item.title + '_costCR'"/>
					</block>
					<block>
						<bind name="visible" value="(data.currency == 1) &amp;&amp; (data.cost != 0)"/>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'CostGoldNano'; { _class: '$FontColorGolden', _costGold: data.cost}"/>
						<bind name="name" value="'NotificationConsumablePurchased' + data.item.title + '_costGold'"/>
					</block>
					<block type="text">
						<bind name="visible" value="data.cost == 0"/>
						<styleClass value="$TextSmallWhite"/>
						<styleClass value="$AlignRight"/>
						<bind name="text" value="'IDS_FOR_FREE'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationConsumableAutochargeCompleted">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'accountGold';		['resourceEntity.accountResource.evChangedGold'];	resourceEntity.accountResource.gold"/>
		<bind name="watchDH" value="'accountCredits';	['resourceEntity.accountResource.evChangedCredit'];	resourceEntity.accountResource.credits"/>
		<block>
			<block>
				<bind name="instance" value="'NotificationHeader'; { _header: data.header, _class: '$FontColorWhite'}"/>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block className="ShipIconLevelName">
					<block>
						<style>
							<height value="30px"/>
						</style>
						<block className="icon_wreath" type="native">
							<style>
								<position value="absolute"/>
								<top value="3px"/>
							</style>
							<bind name="visible" value="data.isElite || data.isPremium || data.uiSpecial"/>
							<bind name="gotoAndStop!" value="(data.isPremium || data.uiSpecial) 	? 'premium' : 'elite'"/>
						</block>
						<block className="icon_ship" type="native">
							<bind name="style" value="'marginLeft'; data.isElite || data.isPremium || data.uiSpecial ? 5 : 2"/>
							<style>
								<marginTop value="11px"/>
							</style>
							<bind name="gotoAndStop!" value="data.isPremium || data.uiSpecial ? data.shipType + '_P' : data.shipType"/>
						</block>
						<block type="text">
							<style>
								<marginLeft value="2px"/>
							</style>
							<styleClass value="$TextDefaultBold"/>
							<styleClass value="$MiddleVAligned"/>
							<bind name="class" value="'$LetterSpacingSmall'"/>
							<bind name="class" value="data.isPremium || data.uiSpecial	? '$FontColorGolden'
															: '$FontColorDefault'"/>
							<bind name="text" value="data.shipLevelRome + ' ' + toUpperCase(tr(data.shipName))"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="visible" value="((data.costNeed[0] &gt; 0) || (data.costNeed[1] &gt; 0))"/>
				<block>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<block>
						<style>
							<marginBottom value="1px"/>
							<marginTop value="2px"/>
						</style>
						<block className="icon_restrict_red" type="native">
							<styleClass value="$MiddleVAligned"/>
							<style>
								<marginRight value="2px"/>
							</style>
						</block>
						<block type="text">
							<styleClass value="$TextSmallNegative"/>
							<text value="IDS_SYS_MESSAGE_HEADER_MS_UI_PURCHASE_FAILED"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$Fullsize"/>
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block>
					<style>
						<marginTop value="2px"/>
						<marginLeft value="22px"/>
						<marginRight value="12px"/>
						<width value="100%"/>
					</style>
					<block>
						<bind name="visible" value="((data.costNeed[0] == 0) &amp;&amp; (data.costNeed[1] == 0))"/>
						<style>
							<width value="100%"/>
							<marginBottom value="3px"/>
						</style>
						<block>
							<style>
								<width value="100%"/>
							</style>
							<block type="text">
								<styleClass value="$TextSmallWhite"/>
								<text value="IDS_COST"/>
							</block>
							<block type="text">
								<bind name="visible" value="((data.cost[0] == 0) &amp;&amp; (data.cost[1] == 0))"/>
								<styleClass value="$TextSmallWhite"/>
								<styleClass value="$AlignRight"/>
								<bind name="text" value="'IDS_FOR_FREE'"/>
							</block>
							<block>
								<styleClass value="$AlignRight"/>
								<block>
									<bind name="visible" value="data.cost[0] &gt; 0"/>
									<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: data.cost[0], currency: 'credits' }, _small: true}"/>
								</block>
								<block type="text">
									<bind name="visible" value="((data.cost[0] &gt; 0) &amp;&amp; (data.cost[1] &gt; 0))"/>
									<style>
										<marginRight value="3px"/>
									</style>
									<styleClass value="$TextSecondary"/>
									<styleClass value="$MiddleVAligned"/>
									<text value="IDS_AND"/>
								</block>
								<block>
									<bind name="visible" value="data.cost[1] &gt; 0"/>
									<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: data.cost[1], currency: 'gold' }, _small: true}"/>
								</block>
								<style>
									<flow value="horizontal"/>
								</style>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationPurchaseFailed">
		<bind name="controller" value="lesta.unbound.core.UbController"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_PURSHASE_FAILED', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<styleClass value="$MarginForAccountNotifications"/>
			<block className="icon_restrict_red" type="native">
				<styleClass value="$MiddleVAligned"/>
			</block>
			<block>
				<block type="text">
					<bind name="class" value="'$FontColorCompareNegative'"/>
					<styleClass value="$TextDefault"/>
					<text value="IDS_SYS_MESSAGE_HEADER_MS_UI_PURCHASE_FAILED"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="notification_frame" type="native">
			<styleClass value="$Fullsize"/>
			<styleClass value="$PxCorrection"/>
		</block>
	</block>
	<block className="NotificationConsumableSell">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: data.header + (data.numItems &gt; 1 ? '_PLURAL' : ''), _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="name" value="'NotificationConsumableSell' + data.item.title"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<bind name="instance" value="'NotificationIconWithTextAndSubtext'; { _hideInnerPanel: true, 
																	_backgroundImage: 'url:' + data.item.iconPath, 
																	_topVisualSpace: '-6px', 
																	_amount: data.numItems, 
																	_mainText: toUpperCase(data.item.title), 
																	_hideSecondaryText: true}"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block>
					<style>
						<width value="100%"/>
						<marginBottom value="5px"/>
					</style>
					<block type="text">
						<styleClass value="$TextSmallWhite"/>
						<text value="IDS_SELL_COST"/>
					</block>
					<block>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'CostCRNano'; { _class: '$TextSmallWhite', _costCR: data.cost}"/>
						<bind name="name" value="'NotificationConsumableSell_' + data.item.title + '_costCR'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationPremiumAccountExpired">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_PREM_OFF', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<marginLeft value="12px"/>
						<marginRight value="12px"/>
						<width value="100%"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
							<marginBottom value="-2px"/>
						</style>
						<block type="text">
							<styleClass value="$TextSecondary"/>
							<bind name="text" value="tr('IDS_EXPIRE_DATE') + tr('IDS_COLON')"/>
						</block>
						<block type="text">
							<styleClass value="$AlignRight"/>
							<styleClass value="$TextSecondary"/>
							<bind name="text" value="data.dateString"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationModernizationUnmount">
		<bind name="controller" value="lesta.unbound.core.UbController"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_UNSET_MODERNIZATION', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<bind name="name" value="'NotificationModernizationUnmount_' + data.item.title"/>
			<block>
				<bind name="instance" value="'NotificationIconWithTextAndSubtext'; { _hideInnerPanel: true, 
																	_backgroundImage: 'url:' + data.item.iconPath, 
																	_topVisualSpace: '-6px', 
																	_mainText: 'IDS_TITLE_' + toUpperCase(data.item.title), 
																	_hideSecondaryText: true}"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block>
					<style>
						<width value="100%"/>
						<marginBottom value="5px"/>
					</style>
					<block type="text">
						<styleClass value="$TextSmallWhite"/>
						<text value="IDS_COST"/>
					</block>
					<block>
						<bind name="visible" value="data.currency == 0"/>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'CostCRNano'; { _class: '$TextSmallWhite', _costCR: data.cost}"/>
						<bind name="name" value="'NotificationModernizationUnmount_' + data.item.title + '_costCR'"/>
					</block>
					<block>
						<bind name="visible" value="data.currency == 1"/>
						<styleClass value="$AlignRight"/>
						<bind name="instance" value="'CostGoldNano'; { _class: '$FontColorGolden', _costGold: data.cost}"/>
						<bind name="name" value="'NotificationModernizationUnmount_' + data.item.title + '_costGold'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationConsumableMount">
		<bind name="controller" value="lesta.unbound.core.UbController"/>
		<bind name="name" value="'NotificationConsumableMount_' + data.item.title"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_CONSUMABLE_MOUNTED', _class: '$FontColorGolden'}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'NotificationIconWithTextAndSubtext'; { _hideInnerPanel: true, 
																_lowermostMargin: true, 
																_backgroundImage: 'url:' + data.item.iconPath, 
																_topVisualSpace: '-6px', 
																_mainText: data.item.title, 
																_hideSecondaryText: true}"/>
		</block>
	</block>
	<block className="NotificationConsumableUnmount">
		<bind name="controller" value="lesta.unbound.core.UbController"/>
		<bind name="name" value="'NotificationConsumableUnmount_' + data.item.title"/>
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_CONSUMABLE_UNMOUNTED', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'NotificationIconWithTextAndSubtext'; { _hideInnerPanel: true, 
																_lowermostMargin: true, 
																_backgroundImage: 'url:' + data.item.iconPath, 
																_topVisualSpace: '-6px', 
																_mainText: data.item.title, 
																_hideSecondaryText: true}"/>
		</block>
	</block>
	<block className="NotificationChatBanAdded">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: data.header, _class: '$FontColorCompareNegative'}"/>
		</block>
	</block>
	<block className="NotificationChatBanDropped">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_SYS_MESSAGE_HEADER_MS_ACC_CHAT_BAN_DROPPED', _class: '$FontColorWhite'}"/>
		</block>
	</block>
	<block className="NotificationAbuseStatusChanged">
		<style>
			<width value="1px"/>
		</style>
		<bind name="style" value="'width'; _width"/>
		<bind name="watch" value="'abuseStatusStr';	data.status == 0	? 'NORMAL' :
									data.status == 1	? 'SUSPECT'
																			: 'CONFIRMED'"/>
		<bind name="watch" value="'headerStr';	tr('IDS_ABUSE_STATUS_' + abuseStatusStr)"/>
		<bind name="watch" value="'abuseComponents'; data.status != 0	? data.components[AbuseStatus.SUSPECT]
																			: []"/>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<marginTop value="2px"/>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'NotificationHeader'; { _header: headerStr, _width: 290, _maxWidth: 264,
													_class: (data.status == 1)		? '$FontColorTeamkiller' :
															(data.status == 2)	? '$FontColorCompareNegative'
																										: '$FontColorWhite',
													_verticalMargins: 5}"/>
			</block>
			<block>
				<bind name="visible" value="data.status != 0"/>
				<style>
					<width value="100%"/>
					<marginBottom value="8px"/>
					<marginTop value="6px"/>
					<marginRight value="12px"/>
					<marginLeft value="12px"/>
				</style>
				<bind name="repeat" value="abuseComponents; 'AbuseReasonMessage'; {}"/>
			</block>
			<block>
				<bind name="visible" value="data.status == 0"/>
				<style>
					<width value="100%"/>
					<marginBottom value="6px"/>
					<marginTop value="6px"/>
					<marginRight value="12px"/>
					<marginLeft value="12px"/>
				</style>
				<block type="text">
					<style>
						<width value="100%"/>
						<leading value="-1"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="text" value="tr('IDS_ABUSE_STATUS_' + toUpperCase(abuseStatusStr) + '_PUNISHMENT')"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="data.status != 0"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
						<position value="absolute"/>
						<top value="-3px"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
				<block className="inner_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<alpha value="1.4"/>
					</style>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<marginBottom value="6px"/>
						<marginTop value="6px"/>
						<marginRight value="12px"/>
						<marginLeft value="12px"/>
					</style>
					<block type="text">
						<style>
							<width value="100%"/>
							<leading value="-2"/>
						</style>
						<styleClass value="$TextDefault"/>
						<bind name="text" value="tr('IDS_ABUSE_' + toUpperCase(abuseStatusStr) + '_STATUS_CLEAN')"/>
					</block>
					<block type="text">
						<style>
							<marginLeft value="10px"/>
						</style>
						<styleClass value="$TextDefaultBold"/>
						<bind name="text" value="data.battlesToClean"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
		<block className="notification_frame_teamkiller" type="native">
			<bind name="visible" value="data.status == 1"/>
			<styleClass value="$Fullsize"/>
			<styleClass value="$PxCorrection"/>
		</block>
		<block className="notification_frame" type="native">
			<bind name="visible" value="data.status == 2"/>
			<styleClass value="$Fullsize"/>
			<styleClass value="$PxCorrection"/>
		</block>
	</block>
	<block className="AbuseReasonMessage">
		<style>
			<width value="100%"/>
		</style>
		<block type="text">
			<style>
				<width value="100%"/>
				<marginBottom value="0px"/>
			</style>
			<styleClass value="$TextDefault"/>
			<bind name="text" value="tr('IDS_ABUSE_REASON_' + toUpperCase($value))"/>
		</block>
	</block>
	<block className="NotificationThanksForActivity">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_THANKS_FOR_ACTIVITY_HEADER', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<width value="220px"/>
			</style>
			<styleClass value="$MarginForAccountNotifications"/>
			<block type="text">
				<style>
					<maxWidth value="208"/>
				</style>
				<styleClass value="$TextDefaultBold"/>
				<text value="IDS_YOU_HELP_THE_COMMUNITY"/>
			</block>
		</block>
	</block>
	<block className="NotificationDenuncationReceived">
		<block>
			<style>
				<marginTop value="2px"/>
			</style>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_YOU_HAVE_BEEN_DENUNCATED', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<width value="220px"/>
				<marginTop value="3px"/>
				<marginBottom value="6px"/>
			</style>
			<styleClass value="$InfoBlockHorizontalIndentNoWidth"/>
			<block type="text">
				<style>
					<maxWidth value="208"/>
				</style>
				<styleClass value="$TextDefaultBold"/>
				<bind name="text" value="data.message"/>
			</block>
		</block>
	</block>
	<block className="NotificationPraiseReceived">
		<block>
			<style>
				<marginTop value="2px"/>
			</style>
			<bind name="instance" value="'NotificationHeader'; { _header: 'IDS_YOU_HAVE_BEEN_PRAISED', _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<width value="220px"/>
				<marginTop value="3px"/>
				<marginBottom value="6px"/>
			</style>
			<styleClass value="$InfoBlockHorizontalIndentNoWidth"/>
			<block type="text">
				<style>
					<maxWidth value="208"/>
				</style>
				<styleClass value="$TextDefaultBold"/>
				<bind name="text" value="data.message"/>
			</block>
		</block>
	</block>
	<block className="NotificationRent">
		<bind name="timeFormat" value="data.rentTime; 'hh:mm dd:MM:yyyy'; 'formattedRentTime'; true"/>
		<bind name="watch" value="'rentTimeDeltaMod'; ((data.rentTimeDelta &gt;= 0)	? data.rentTimeDelta
																: -(data.rentTimeDelta))"/>
		<bind name="watch" value="'deltaDays'; ((rentTimeDeltaMod / 86400) &gt;= 1) 	? ((rentTimeDeltaMod - (rentTimeDeltaMod % 86400)) / 86400)
																	: 0"/>
		<bind name="watch" value="'deltaHours'; (((rentTimeDeltaMod - (deltaDays * 86400)) - (rentTimeDeltaMod % 3600)) / 3600)"/>
		<bind name="watch" value="'deltaMinutes'; (((rentTimeDeltaMod - (deltaDays * 86400) - (deltaHours * 3600)) - (rentTimeDeltaMod % 60)) / 60)"/>
		<block>
			<style>
				<marginTop value="2px"/>
			</style>
			<bind name="instance" value="'NotificationHeader'; { _header: data.header, _class: ((data.headerIDS == 'FINISHED') ? '$FontColorWhite' : '$FontColorGolden')}"/>
		</block>
		<block>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<bind name="style" value="'marginBottom'; ((data.headerIDS == 'FINISHED') ? '5px' : '0px')"/>
			<block className="ShipIconLevelName">
				<block>
					<style>
						<height value="30px"/>
					</style>
					<block className="icon_wreath" type="native">
						<style>
							<position value="absolute"/>
							<top value="3px"/>
						</style>
						<bind name="visible" value="data.isElite || data.isPremium || data.uiSpecial"/>
						<bind name="gotoAndStop!" value="(data.isPremium || data.uiSpecial) 	? 'premium' : 'elite'"/>
					</block>
					<block className="icon_ship" type="native">
						<bind name="style" value="'marginLeft'; data.isElite || data.isPremium || data.uiSpecial ? 5 : 2"/>
						<style>
							<marginTop value="11px"/>
						</style>
						<bind name="gotoAndStop!" value="data.isPremium || data.uiSpecial ? data.shipType + '_P' : data.shipType"/>
					</block>
					<block type="text">
						<style>
							<marginLeft value="2px"/>
						</style>
						<styleClass value="$TextDefaultBold"/>
						<styleClass value="$MiddleVAligned"/>
						<bind name="class" value="'$LetterSpacingSmall'"/>
						<bind name="class" value="data.isPremium || data.uiSpecial	? '$FontColorGolden'
															: '$FontColorDefault'"/>
						<bind name="text" value="data.shipLevelRome + ' ' + toUpperCase(tr(data.shipName))"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<bind name="name" value="'NotificationInvoiceRent'"/>
			<bind name="visible" value="(data.headerIDS != 'FINISHED')"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<marginBottom value="5px"/>
					<width value="100%"/>
					<marginLeft value="12px"/>
					<marginRight value="12px"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
						<marginBottom value="-2px"/>
					</style>
					<block type="text">
						<styleClass value="$TextSecondary"/>
						<bind name="text" value="(data.headerIDS == 'CUTTED')	? (tr('IDS_RENT_PERIOD_CUTTED_FOR') + tr('IDS_COLON')) :
								(data.headerIDS == 'LONGED')	? (tr('IDS_RENT_PERIOD_LONGED_ON') + tr('IDS_COLON'))
																: (tr('IDS_RENT_PERIOD') + tr('IDS_COLON'))"/>
					</block>
					<block>
						<styleClass value="$AlignRight"/>
						<block type="text">
							<bind name="visible" value="(data.headerIDS == 'STARTED')"/>
							<styleClass value="$TextSecondary"/>
							<bind name="text" value="formattedRentTime"/>
						</block>
						<block>
							<bind name="visible" value="(deltaDays != 0)"/>
							<block type="text">
								<styleClass value="$TextSecondary"/>
								<bind name="text" value="deltaDays"/>
							</block>
							<block type="text">
								<style>
									<marginLeft value="-2px"/>
								</style>
								<styleClass value="$TextSecondary"/>
								<bind name="pluralText" value="'IDS_PL_DAY_FULL_ACC'; deltaDays"/>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
						<block>
							<bind name="visible" value="(deltaHours != 0)"/>
							<block type="text">
								<styleClass value="$TextSecondary"/>
								<bind name="text" value="deltaHours"/>
							</block>
							<block type="text">
								<style>
									<marginLeft value="-2px"/>
								</style>
								<styleClass value="$TextSecondary"/>
								<bind name="pluralText" value="'IDS_PL_HOUR_FULL_ACC'; deltaHours"/>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
						<block>
							<bind name="visible" value="(deltaMinutes != 0) &amp;&amp; (deltaDays == 0)"/>
							<block type="text">
								<styleClass value="$TextSecondary"/>
								<bind name="text" value="deltaMinutes"/>
							</block>
							<block type="text">
								<style>
									<marginLeft value="-2px"/>
								</style>
								<styleClass value="$TextSecondary"/>
								<bind name="pluralText" value="'IDS_PL_MINUTE_FULL_ACC'; deltaMinutes"/>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationShipExpMoved">
		<block>
			<style>
				<marginTop value="2px"/>
			</style>
			<bind name="instance" value="'NotificationHeader'; { _header: data.header, _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<style>
				<marginTop value="9px"/>
				<marginBottom value="6px"/>
			</style>
			<bind name="instance" value="'ShipLineItem'; { _shipId: data.data.shipID, _width: '190px' } "/>
		</block>
		<block>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<style>
				<marginBottom value="3px"/>
			</style>
			<block type="text">
				<styleClass value="$TextSecondary"/>
				<style>
					<marginBottom value="3px"/>
				</style>
				<text value="IDS_SHIP_EXPERIENCE_MOVED_TO_COLON"/>
			</block>
			<bind name="instance" value="'ShipLineItem'; { _shipId: data.data.destinationShipID, _width: '190px' } "/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<style>
				<marginBottom value="5px"/>
			</style>
			<bind name="instance" value="'PriceTagWithLabel'; { priceInfo: { finalPrice: data.data.SXP, currency: 'exp'}, _label: 'IDS_EXPERIENCE_AMOUNT', _small: true}"/>
		</block>
	</block>
	<block className="SystemLogNotificationElement">
		<bind name="appear" value="'addedToStage'; 0.25; 0.3; {alpha: 0, ubScaleY: 0, scaleY: 0}; {alpha:1, ubScaleY: 1, scaleY: 1}; 1"/>
		<bind name="appear" value="'evHideMessage'; 0.18; 0; {alpha: 1}; {alpha: 0}; 1"/>
		<bind name="appear" value="'evHideMessage'; 0.18; 0;	($index != 0)	? {ubScaleY: 1, scaleY: 1}
    														: {top: 0};
    										($index != 0)	? {ubScaleY: 0, scaleY: 0}
    														: {top: -20}; 1"/>
		<bind name="handleEventDH" value="'$dataRef.ref.show.evHide'; 'evHideMessage'"/>
		<bind name="clickSplit"/>
		<bind name="dispatch" value="'right_click'; 'evHideMessage'"/>
		<bind name="dispatch" value="'evHideMessage'; 'evDelayedHide'; null; true; 0.2"/>
		<bind name="action" value="'evDelayedHide'; 'hideSystemMessage'; {id: $dataRef.ref.id}"/>
		<bind name="action" value="'removedFromStage'; 'hideSystemMessage'; {id: $dataRef.ref.id}"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<style>
			<right value="0px"/>
		</style>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<styleClass value="$PxCorrection"/>
			<bind name="transition" value="rollOver &amp;&amp; $dataRef.ref.dataComponent.data.typeId == 5; 0.4; {alpha: 1}; {alpha: 2}"/>
		</block>
		<bind name="instance" value="'Notification' ; { data: $dataRef.ref.dataComponent.data.data, extendedDataAvailable: ($dataRef.ref.dataComponent.data.hasExtendedData &amp;&amp; $dataRef.ref.dataComponent.data.extendedDataAvailable) }"/>
		<bind name="request" value="'left_click'; $dataRef.ref.dataComponent.data.hasExtendedData 	? ($dataRef.ref.dataComponent.data.extendedDataAvailable	? 'showExtendedSystemLog'
																																				: 'showUnavailableExtendedSystemLog')
																					: null;
								{_systemLogMessageEntityId: $dataRef.ref.id}"/>
		<bind name="primaryEntityDH" value="'battleResultsEntity'; CC.battleResultsComponent; systemLogMessage.data.arenaUniqueID"/>
		<bind name="dataRefDH" value="'systemLogMessageEntity'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'systemLogMessage'; ['systemLogMessageEntity.dataComponent.evDataChanged']; systemLogMessageEntity.dataComponent.data"/>
		<bind name="request" value="'left_click'; systemLogMessage.extendedData.game_data.battle_mode_id == 6 || systemLogMessage.extendedData.game_data.battle_mode_id == 7 ? 'pveBattlesShowStats' : null; {common: battleResultsEntity.dataComponent.data.common, 'private': battleResultsEntity.dataComponent.data.privateData}"/>
		<bind name="request" value="'left_click'; systemLogMessage.extendedData.game_data.battle_mode_id == 8 ? 'clanBattlesShowResults' : null; {arenaId: systemLogMessage.data.arenaUniqueID}"/>
		<bind name="request" value="'left_click'; isEmptyObject(systemLogMessage.extendedData.personal.arc_details) ? null : 'arcBattleShowResults'; {arenaId: systemLogMessage.data.arenaUniqueID}"/>
	</block>
	<block className="SystemLogNotificationShortElement">
		<style>
			<marginTop value="2px"/>
			<width value="100%"/>
		</style>
		<bind name="name" value="'SystemLogNotificationShortElement_' + $dataRef.ref.dataComponent.data.data.header"/>
		<bind name="instance" value="'NotificationShortElement'; {data: $dataRef.ref.dataComponent.data.data, typeId: $dataRef.ref.dataComponent.data.typeId}"/>
		<bind name="clickSplit"/>
		<bind name="request" value="'left_click'; $dataRef.ref.dataComponent.data.hasExtendedData 	? ($dataRef.ref.dataComponent.data.extendedDataAvailable	? 'showExtendedSystemLog'
																																				: 'showUnavailableExtendedSystemLog')
																					: null;
								{_systemLogMessageEntityId: $dataRef.ref.id}"/>
		<bind name="dataRefDH" value="'systemLogMessageEntity'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'systemLogMessage'; ['systemLogMessageEntity.dataComponent.evDataChanged']; systemLogMessageEntity.dataComponent.data"/>
		<bind name="primaryEntityDH" value="'battleResultsEntity'; CC.battleResultsComponent; systemLogMessage.data.arenaUniqueID"/>
		<bind name="request" value="'left_click'; systemLogMessage.extendedData.game_data.battle_mode_id == 6 || systemLogMessage.extendedData.game_data.battle_mode_id == 7 ? 'pveBattlesShowStats' : null; {common: battleResultsEntity.dataComponent.data.common, 'private': battleResultsEntity.dataComponent.data.privateData}"/>
		<bind name="request" value="'left_click'; systemLogMessage.extendedData.game_data.battle_mode_id == 8 ? 'clanBattlesShowResults' : null; {arenaId: systemLogMessage.data.arenaUniqueID}"/>
		<bind name="request" value="'left_click'; isEmptyObject(systemLogMessage.extendedData.personal.arc_details) ? null : 'arcBattleShowResults'; {arenaId: systemLogMessage.data.arenaUniqueID}"/>
		<bind name="entityDH" value="'RewardsEntity'; systemLogMessage.data.changes"/>
		<bind name="request" value="'left_click'; ($dataRef.ref.dataComponent.data.data.groupId == 14) ? 'openModalWindowAllLootBoxesRewards' : null; {rewards: RewardsEntity.openLooboxesResults.rewards, header: 'IDS_RECEIVED_LOOTBOXES_REWARDS', subheader: subst('IDS_OPENED_LOOTBOXES', [], {count: systemLogMessage.data.lootboxOpened}, systemLogMessage.data.lootboxOpened)}"/>
	</block>
	<block className="AdapterRewardContainer">
		<bind name="entityDH" value="'RewardsEntity';entityOpenLooboxesResultsID"/>
		<bind name="watchDH" value="'rewardsFromLootboxes';[]; RewardsEntity.openLooboxesResults.rewards"/>
		<bind name="request" value="'openAllLootBoxesRewards'; 'openModalWindowAllLootBoxesRewards'; {rewards: rewardsFromLootboxes, header: 'IDS_RECEIVED_LOOTBOXES_REWARDS', subheader: subst('IDS_OPENED_LOOTBOXES', [], {count: countOfLotboxes}, countOfLotboxes)}"/>
	</block>
	<css name="$BattleResultNotificationMargins">
		<marginLeft value="2px"/>
		<marginRight value="2px"/>
	</css>
	<block className="NotificationShortElement">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="primaryEntityDH" value="'operationEntity'; CC.operation; data.operationId"/>
		<bind name="watchDH" value="'operationIsHard'; []; operationEntity.operation.isHard"/>
		<bind name="watch" value="'operationDifficulty'; operationIsHard ? 'HARD' : 'NORMAL'"/>
		<bind name="name" value="'NotificationShortElement_' + data.header"/>
		<bind name="tooltip" value="'Notification'; { data: data, _isNotificationInbox: true}"/>
		<style>
			<width value="100%"/>
		</style>
		<bind name="watch" value="'isBattleResults'; typeId == 5 &amp;&amp; data.groupId == 3"/>
		<bind name="watch" value="'isPVEOperation'; (data.operationName != '')"/>
		<bind name="class" value="isBattleResults ? '$BattleResultNotificationMargins' : '$None'"/>
		<block className="hint_panel" type="native">
			<styleClass value="$Fullsize"/>
			<styleClass value="$PxCorrection"/>
			<bind name="transition" value="rollOver &amp;&amp; isBattleResults; 0.3; {alpha: 0}; {alpha: 1}"/>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="isBattleResults"/>
			<bind name="transition" value="rollOver &amp;&amp; isBattleResults; 0.4; {alpha: 1.5}; {alpha: 2}"/>
			<block className="notification_panel" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!(isBattleResults)"/>
			<style>
				<width value="100%"/>
				<marginTop value="3px"/>
				<marginBottom value="4px"/>
			</style>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<bind name="var" value="{ headerPostfix: data.numItems ? (data.numItems &gt; 1 ? '_PLURAL' : '') : '' }"/>
			<block type="text">
				<style>
					<width value="100%"/>
				</style>
				<styleClass value="$TextDefaultBold"/>
				<bind name="text" value="'&lt;body&gt;' + tr(data.header + headerPostfix) + '&lt;/body&gt;'"/>
				<bind name="class" value="isBattleResults ? '$FontColorWhite' : '$FontColorBlueish'"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="isBattleResults"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<style>
					<flow value="htile"/>
				</style>
				<block type="text">
					<style>
						<marginTop value="4px"/>
						<marginRight value="2px"/>
					</style>
					<styleClass value="$TextDefaultBold"/>
					<bind name="class" value="data.result == 2 	? '$FontColorCompareNegative'
												: data.result == 1 	? '$FontColorComparePositive'
																	: '$FontColorWhite'"/>
					<bind name="text" value="'&lt;body&gt;' + tr(data.header) + '&lt;/body&gt;'"/>
				</block>
				<block className="ShipIconLevelName">
					<block>
						<style>
							<height value="30px"/>
						</style>
						<block className="icon_wreath" type="native">
							<style>
								<position value="absolute"/>
								<top value="3px"/>
							</style>
							<bind name="visible" value="data.isElite || data.isPremium || data.uiSpecial"/>
							<bind name="gotoAndStop!" value="(data.isPremium || data.uiSpecial) 	? 'premium' : 'elite'"/>
						</block>
						<block className="icon_ship" type="native">
							<bind name="style" value="'marginLeft'; data.isElite || data.isPremium || data.uiSpecial ? 5 : 2"/>
							<style>
								<marginTop value="11px"/>
							</style>
							<bind name="gotoAndStop!" value="data.isPremium || data.uiSpecial ? data.shipType + '_P' : data.shipType"/>
						</block>
						<block type="text">
							<style>
								<marginLeft value="2px"/>
							</style>
							<styleClass value="$TextDefaultBold"/>
							<styleClass value="$MiddleVAligned"/>
							<bind name="class" value="'$LetterSpacingSmall'"/>
							<bind name="class" value="data.isPremium || data.uiSpecial	? '$FontColorGolden'
															: '$FontColorDefault'"/>
							<bind name="text" value="data.shipLevelRome + ' ' + toUpperCase(tr(data.shipName))"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block type="text">
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<style>
					<marginTop value="-4px"/>
					<marginBottom value="4px"/>
					<leading value="-2"/>
				</style>
				<styleClass value="$TextSecondary"/>
				<bind name="class" value="'$FontColorBlueish'"/>
				<bind name="text" value="isPVEOperation ?	tr(toUpperCase('IDS_' + data.operationName + '_NAME'))
													+ '. '
													+ (tr('IDS_OPERATION_' + toUpperCase(operationDifficulty) + '_DIFFICULTY_TITLE'))
													+ ' ' + data.date
													: (tr(data.mapName) + ', ' + data.date)"/>
			</block>
			<block>
				<bind name="visible" value="isPVEOperation"/>
				<style>
					<width value="100%"/>
					<marginBottom value="6px"/>
					<marginLeft value="13px"/>
				</style>
				<bind name="repeat" value="isPVEOperation ? 5 : 0; 'EarnedStarsNano'; {_currentEarned: data.curTasksCompleted}"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<bind name="visible" value="!(isBattleResults)"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<block className="EarnedStarsNano">
		<block className="icon_rank_star_nano" type="native">
			<bind name="gotoAndStop!" value="$index &lt; _currentEarned ? 'earned' : 'not_earned'"/>
		</block>
	</block>
	<block className="NotificationDogTagRecieved">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: data.header, _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<width value="245px"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$Fullsize"/>
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<styleClass value="$InfoLineBoundaries"/>
				<style>
					<hitTest value="false"/>
				</style>
				<block>
					<style>
						<backgroundStretchX value="true"/>
						<backgroundStretchY value="true"/>
						<width value="80px"/>
						<height value="80px"/>
					</style>
					<bind name="style" value="'backgroundImage'; 'url:../dogTags/small/' + data.iconPath"/>
					<bind name="watch" value="'dogTagId'; data.itemID"/>
					<bind name="primaryEntityDH" value="'dogTagEntity'; CC.dogTagComponent; dogTagId"/>
					<bind name="watchDH" value="'clanTagOffsetX';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagOffsetX"/>
					<bind name="watchDH" value="'clanTagOffsetY';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagOffsetY"/>
					<bind name="watchDH" value="'clanTagFont';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagFont"/>
					<bind name="watchDH" value="'clanTagVisible';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagVisible"/>
					<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
					<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
					<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
					<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
					<bind name="watchDH" value="'clanId'; ['selfPlayerEntity.clanman.evClanIdChanged']; selfPlayerEntity.clanman.clanId"/>
					<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; clanId"/>
					<bind name="watchDH" value="'clanTag'; ['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
					<block>
						<style>
							<position value="absolute"/>
						</style>
						<bind name="style" value="'top'; clanTagOffsetY + '%'"/>
						<bind name="style" value="'left'; clanTagOffsetX + '%'"/>
						<block>
							<style>
								<position value="absolute"/>
								<marginLeft value="-50%"/>
								<marginTop value="-50%"/>
							</style>
							<bind name="visible" value="clanTagVisible"/>
							<bind name="atlasText" value="clanTagVisible ?  (clanTag ? '[' + clanTag + ']' : '^') : '' ; '../fonts/small/' + clanTagFont; 0"/>
						</block>
					</block>
				</block>
				<block>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<style>
						<marginLeft value="5px"/>
						<marginTop value="8px"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefaultBoldNM"/>
						<style>
							<width value="100%"/>
							<leading value="-4"/>
							<alpha value="0.85"/>
						</style>
						<bind name="text" value="tr(toUpperCase('IDS_DOGTAG_' + data.itemName + '_NAME'))"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefaultNM"/>
						<style>
							<width value="100%"/>
							<marginTop value="8px"/>
							<leading value="-4"/>
							<alpha value="0.7"/>
						</style>
						<bind name="text" value="data.unique ? 'IDS_DOGTAG_COMPONENT_TOOLTIP_CATEGORY_UNIQUE' : tr(toUpperCase('IDS_DOGTAG_COMPONENT_TOOLTIP_CATEGORY_' + data.category))"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="NotificationDogTagInvoices">
		<block>
			<bind name="instance" value="'NotificationHeader'; { _header: data.header, _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<width value="245px"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$Fullsize"/>
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<styleClass value="$InfoLineBoundaries"/>
				<style>
					<hitTest value="false"/>
				</style>
				<block>
					<style>
						<backgroundStretchX value="true"/>
						<backgroundStretchY value="true"/>
						<width value="80px"/>
						<height value="80px"/>
					</style>
					<bind name="style" value="'backgroundImage'; 'url:../dogTags/small/' + data.iconPath"/>
					<bind name="watch" value="'dogTagId'; data.itemID"/>
					<bind name="primaryEntityDH" value="'dogTagEntity'; CC.dogTagComponent; dogTagId"/>
					<bind name="watchDH" value="'clanTagOffsetX';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagOffsetX"/>
					<bind name="watchDH" value="'clanTagOffsetY';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagOffsetY"/>
					<bind name="watchDH" value="'clanTagFont';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagFont"/>
					<bind name="watchDH" value="'clanTagVisible';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagVisible"/>
					<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
					<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
					<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
					<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
					<bind name="watchDH" value="'clanId'; ['selfPlayerEntity.clanman.evClanIdChanged']; selfPlayerEntity.clanman.clanId"/>
					<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; clanId"/>
					<bind name="watchDH" value="'clanTag'; ['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
					<block>
						<style>
							<position value="absolute"/>
						</style>
						<bind name="style" value="'top'; clanTagOffsetY + '%'"/>
						<bind name="style" value="'left'; clanTagOffsetX + '%'"/>
						<block>
							<style>
								<position value="absolute"/>
								<marginLeft value="-50%"/>
								<marginTop value="-50%"/>
							</style>
							<bind name="visible" value="clanTagVisible"/>
							<bind name="atlasText" value="clanTagVisible ?  (clanTag ? '[' + clanTag + ']' : '^') : '' ; '../fonts/small/' + clanTagFont; 0"/>
						</block>
					</block>
				</block>
				<block>
					<bind name="name" value="'NotificationDogTagInvoice'"/>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<style>
						<marginLeft value="5px"/>
						<marginTop value="8px"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefaultBoldNM"/>
						<style>
							<width value="100%"/>
							<leading value="-4"/>
							<alpha value="0.85"/>
						</style>
						<bind name="text" value="tr(toUpperCase('IDS_DOGTAG_' + data.itemName + '_NAME'))"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefaultNM"/>
						<style>
							<width value="100%"/>
							<marginTop value="8px"/>
							<leading value="-4"/>
							<alpha value="0.7"/>
						</style>
						<bind name="text" value="data.unique ? 'IDS_DOGTAG_COMPONENT_TOOLTIP_CATEGORY_UNIQUE' : tr(toUpperCase('IDS_DOGTAG_COMPONENT_TOOLTIP_CATEGORY_' + data.category))"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="NotificationNavalFlagChanged">
		<block>
			<bind name="instance" value="'NotificationHeader';  { _header: data.header, _class: '$FontColorWhite'}"/>
		</block>
		<block>
			<style>
				<marginBottom value="5px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<block className="ExteriorHeader">
					<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; data.data.shipId; 'evUpdate'"/>
					<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
					<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
					<bind name="watch" value="'_isPermoflage'; exteriorConfig.type == ExteriorTypes.CAMOUFLAGE &amp;&amp; exteriorConfig.isPermanent"/>
					<block>
						<style>
							<marginTop value="3px"/>
						</style>
						<block>
							<bind name="instance" value="'ExteriorIconWithAmount'; {	_exteriorId: data.data.exteriorId ? data.data.exteriorId : data.flagId,
														_amount: 0,
														_isDesaturated: false,
														_needPNG: true
														}"/>
						</block>
						<block>
							<bind name="visible" value="data.numItems &gt; 1"/>
							<style>
								<marginTop value="40px"/>
								<marginLeft value="-20x"/>
							</style>
							<block type="text">
								<styleClass value="$TextDefaultBold"/>
								<bind name="text" value="data.numItems"/>
							</block>
						</block>
						<block>
							<style>
								<marginTop value="3px"/>
								<marginLeft value="6px"/>
							</style>
							<block type="text">
								<styleClass value="$TextDefaultBold"/>
								<bind name="class" value="(data.data.result == 28) ? '$FontColorGolden' : '$None'"/>
								<style>
									<marginBottom value="5px"/>
								</style>
								<bind name="style" value="'maxWidth'; (exteriorConfig.type == ExteriorTypes.FLAGS) ? '156' : '141'"/>
								<bind name="text" value="_isPermoflage 	? subst('IDS_EXTERIOR_NAME_WITH_SHIP', [], {exteriorName: tr('IDS_' + toUpperCase(exteriorConfig.name)), shipName: tr(shipInfo.nameIDS + '_FULL')})
											: exteriorConfig.name ? tr('IDS_' + toUpperCase(exteriorConfig.name)) : tr('IDS_NAVAL_FLAG_' + toUpperCase(data.flagId))"/>
							</block>
							<block type="text">
								<style>
									<marginTop value="-9px"/>
								</style>
								<bind name="style" value="'maxWidth'; (exteriorConfig.type == ExteriorTypes.FLAGS) ? '156' : '141'"/>
								<styleClass value="$TextSecondary"/>
								<bind name="text" value="exteriorConfig.name ? ('IDS_' + toUpperCase(exteriorConfig.name) + '_DESCRIPTION') : ('IDS_NAVAL_FLAG_' + toUpperCase(data.flagId) + '_DESCRIPTION')"/>
							</block>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationAvARecruiter">
		<block>
			<bind name="watch" value="'headerAvARecruiter'; data.sideIsChanged == 1 ? 'IDS_RECRUITERS_AGREE_NOTIFICATION' : 'IDS_RECRUITERS_DISAGREE_NOTIFICATION'"/>
			<bind name="watch" value="'headerColorAvARecruiter'; data.sideIsChanged == 1 ? '$FontColorGolden' : ''"/>
			<bind name="instance" value="'NotificationHeader'; { _header: headerAvARecruiter, _class: headerColorAvARecruiter}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'NotificationIconWithTextAndSubtext'; { _lowermostMargin: true, 
																_backgroundImage: data.sideIsChanged == 1	? 'url:../events/arc_event/common/side_icon_' + data.sideId + '_small_selected.png'
																											: 'url:../events/arc_event/common/side_icon_' + data.sideId + '_small.png', 
																_topVisualSpace: '-9px', 
																_isSpecialWidth: true, 
																_specialWidth: '80px', 
																_isSpecialHeight: true, 
																_specialHeight: '80px', 
																_mainText: data.sideIsChanged == 1	? (data.sideId == 0) ? 'IDS_RECRUITERS_AGREE_DESCRIPTION_SIDE_0_NOTIFICATION' : 'IDS_RECRUITERS_AGREE_DESCRIPTION_SIDE_1_NOTIFICATION' 
																									: (data.sideId == 0) ? 'IDS_RECRUITERS_DISAGREE_DESCRIPTION_SIDE_0_NOTIFICATION' : 'IDS_RECRUITERS_DISAGREE_DESCRIPTION_SIDE_1_NOTIFICATION',
																_hideSecondaryText: true}"/>
		</block>
	</block>
	<block className="NotificationArcEventChooseSide">
		<style>
			<width value="100%"/>
		</style>
		<bind name="instance" value="'NotificationIconWithTextAndSubtext'; { _lowermostMargin: true, 
															_backgroundImage: 'url:../events/arc_event/common/side_icon_' + data.sideId + '_small_selected.png', 
															_topVisualSpace: '-9px', 
															_isSpecialWidth: true, 
															_specialWidth: '74px', 
															_specialHeight: '74px', 
															_isSpecialHeight: true, 
															_class: '$FontColorGolden',
															_mainText: tr('IDS_EVERYDAY_CHOOSE_SIDE_' + data.sideId + '_NOTIFICATION'), 
															_hideSecondaryText: true}"/>
	</block>
	<block className="NotificationShipBecameElite">
		<block>
			<style>
				<marginTop value="2px"/>
			</style>
			<bind name="instance" value="'NotificationHeader'; { _header: data.header, _class: '$FontColorGolden'}"/>
		</block>
		<block>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<block className="ShipIconLevelName">
				<block>
					<style>
						<height value="30px"/>
					</style>
					<block className="icon_wreath" type="native">
						<style>
							<position value="absolute"/>
							<top value="3px"/>
						</style>
						<bind name="visible" value="data.isElite || data.isPremium || data.uiSpecial"/>
						<bind name="gotoAndStop!" value="(data.isPremium || data.uiSpecial) 	? 'premium' : 'elite'"/>
					</block>
					<block className="icon_ship" type="native">
						<bind name="style" value="'marginLeft'; data.isElite || data.isPremium || data.uiSpecial ? 5 : 2"/>
						<style>
							<marginTop value="11px"/>
						</style>
						<bind name="gotoAndStop!" value="data.isPremium || data.uiSpecial ? data.shipType + '_P' : data.shipType"/>
					</block>
					<block type="text">
						<style>
							<marginLeft value="2px"/>
						</style>
						<styleClass value="$TextDefaultBold"/>
						<styleClass value="$MiddleVAligned"/>
						<bind name="class" value="'$LetterSpacingSmall'"/>
						<bind name="class" value="data.isPremium || data.uiSpecial	? '$FontColorGolden'
															: '$FontColorDefault'"/>
						<bind name="text" value="data.shipLevelRome + ' ' + toUpperCase(tr(data.shipName))"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$Fullsize"/>
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<styleClass value="$InfoLineBoundaries"/>
				<block type="text">
					<style>
						<maxWidth value="212"/>
						<leading value="-3"/>
						<alpha value="0.9"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="text" value="'IDS_INSTRUCTION_ELITE_STATUS_SYS_MESSAGE_1'"/>
				</block>
				<block type="text">
					<style>
						<maxWidth value="212"/>
						<leading value="-3"/>
						<alpha value="0.9"/>
						<marginBottom value="3px"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="text" value="'IDS_INSTRUCTION_ELITE_STATUS_SYS_MESSAGE_2'"/>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationHeader">
		<bind name="style" value="'width'; _width ? (_width + 'px') : '245px'"/>
		<block>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<bind name="style" value="'marginTop'; _verticalMargins ? ((_verticalMargins + 1) + 'px') : '2px'"/>
			<bind name="style" value="'marginBottom'; _verticalMargins ? (_verticalMargins + 'px') : '1px'"/>
			<block type="text">
				<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 220"/>
				<styleClass value="$TextDefaultBold"/>
				<bind name="text" value="_header"/>
				<bind name="class" value="_class"/>
			</block>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
	</block>
	<block className="NotificationIconWithTextAndSubtext">
		<style>
			<width value="245px"/>
		</style>
		<block className="inner_panel" type="native">
			<bind name="visible" value="!_hideInnerPanel"/>
			<styleClass value="$Fullsize"/>
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block>
			<styleClass value="$NotificationInfoBlockIndent"/>
			<style>
				<hitTest value="false"/>
			</style>
			<bind name="style" value="'marginBottom'; _lowermostMargin == true ? '12px' : '9px'"/>
			<block>
				<style>
					<backgroundStretchX value="true"/>
					<backgroundStretchY value="true"/>
				</style>
				<bind name="style" value="'width'; _isSpecialWidth == true ? _specialWidth : '60px'"/>
				<bind name="style" value="'height'; _isSpecialHeight == true ? _specialHeight : '60px'"/>
				<bind name="style" value="'marginTop'; _topVisualSpace"/>
				<bind name="style" value="'backgroundImage'; _backgroundImage"/>
				<block>
					<bind name="visible" value="_amount &gt; 1"/>
					<style>
						<bottom value="0px"/>
						<right value="0px"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefaultBold"/>
						<bind name="text" value="_amount"/>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="9px"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefaultBoldNM"/>
					<bind name="class" value="_class"/>
					<style>
						<width value="100%"/>
						<leading value="-4"/>
						<alpha value="0.95"/>
					</style>
					<bind name="text" value="_mainText"/>
				</block>
				<block type="text">
					<bind name="visible" value="!_hideSecondaryText"/>
					<styleClass value="$TextDefault13NM"/>
					<style>
						<width value="100%"/>
						<marginTop value="8px"/>
						<alpha value="0.7"/>
					</style>
					<bind name="text" value="_secondaryText"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<css name="$NotificationInfoBlockIndent">
		<width value="100%"/>
		<marginTop value="12px"/>
		<marginLeft value="12px"/>
		<marginRight value="12px"/>
	</css>
	<css name="$ChatDivisionDefaultWidth">
		<width value="280px"/>
		<userData value="{
		minResizeWidth: 220,
		maxResizeWidth: 300
	}"/>
	</css>
	<block className="FormationResizableMainElement">
		<styleClass value="$ChatDivisionDefaultWidth"/>
		<style>
			<height value="100%"/>
		</style>
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="watch" value="'divisionPlayersListWidth'; (userPrefs.divisionPlayersListWidth) ? userPrefs.divisionPlayersListWidth : '280'"/>
		<bind name="width" value="divisionPlayersListWidth"/>
		<block className="FormationMainElement">
			<bind name="name" value="'FormationMainElement_' + _teamId"/>
			<bind name="firstEntityDH" value="'trainingRoomEntity'; CC.trainingRoomWindowState"/>
			<bind name="watchDH" value="'windowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.state"/>
			<bind name="watchDH" value="'notReadyWindowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.notReadyWindowState"/>
			<bind name="watchDH" value="'windowInset'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.inset"/>
			<bind name="watchDH" value="'windowInsetLabel'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.insetLabel"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="collectionDH" value="CC.battleType; 'selectedBattleTypes'; 'selected'"/>
			<bind name="entityDH" value="'battleTypeEntity'; selectedBattleTypes[0].id"/>
			<bind name="watch" value="'teamId'; _teamId != undefined ? _teamId : selfTeamId"/>
			<bind name="action" value="'droppableStatus'+varChanged; droppableStatus == 'accept' ? 'TrainingRoomProxy.setPlayerTeam' : null; 
												{ playerId: droppableStatusData['playerId'], teamId: teamId }"/>
			<bind name="watch" value="'activeIds'; 	isSelfPlayerOwner 		? 	_teamId == 0 	? ['-1', '1', '-1_bot', '1_bot'] :
												  		  	_teamId == 1 	? ['0', '-1', '0_bot', '-1_bot'] 
												  							: ['0', '1', '0_bot', '1_bot'] :

								isSelfPlayerCommander	?	selfTeamId == _teamId 				? ['-1', '-1_bot'] :
															_teamId == -1 	? (selfTeamId == 0 ? ['0', '0_bot'] : ['1', '1_bot'])
																								: []
														:	[]"/>
			<bind name="droppable" value="'this'; activeIds; activeIds; 'droppableStatus'"/>
			<block>
				<bind name="visible" value="false"/>
				<params>
					<param name="name" value="botFakeDropZone"/>
				</params>
			</block>
			<bind name="droppable" value="'botFakeDropZone'; []; ['0_bot', '1_bot']; 'droppableStatusBot'"/>
			<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
			<bind name="watchDH" value="'isSelfPlayerOwner'; ['selfPlayerEntity.preBattlePlayerSimple.evIsCommanderChanged']; selfPlayerEntity.preBattlePlayerSimple.isCommander"/>
			<bind name="watchDH" value="'isSelfPlayerInBattle'; ['selfPlayerEntity.preBattlePlayerSimple.evStateChanged']; selfPlayerEntity.preBattlePlayerSimple.isInBattle"/>
			<bind name="watchDH" value="'isSelfPlayerCommander'; ['selfPlayerEntity.trainingRoomPlayer.evUpdate']; selfPlayerEntity.trainingRoomPlayer.isCommander"/>
			<bind name="watch" value="'isTeamManagementAvailable'; isSelfPlayerOwner || (isSelfPlayerCommander &amp;&amp; selfTeamId == _teamId)"/>
			<bind name="watchDH" value="'selfTeamId'; ['selfPlayerEntity.preBattlePlayerSimple.evStateChanged']; selfPlayerEntity.preBattlePlayerSimple.teamId"/>
			<bind name="watchDH" value="'selfPreBattleId'; ['selfPlayerEntity.preBattlePlayerSimple.evPreBattleIdChanged']; selfPlayerEntity.preBattlePlayerSimple.preBattleId"/>
			<bind name="watch" value="'preBattlePlayersFilter'; _isTrainingRoom 	? 'byPreBattleAndTeam.' + selfPreBattleId + '_' + teamId + '.preBattleMembers.sorted' 
															: 'byPreBattle.' + selfPreBattleId + '.preBattleMembers.sorted'"/>
			<bind name="collectionDH" value="CC.preBattlePlayerSimple; 'preBattlePlayers'; preBattlePlayersFilter"/>
			<bind name="watch" value="'preBattleInvitedPlayersFilter'; _isTrainingRoom 	? 'byPreBattleAndTeam.' + selfPreBattleId + '_' + teamId + '.invitedPlayers' 
																	: 'byPreBattle.' + selfPreBattleId + '.invitedPlayers'"/>
			<bind name="collectionDH" value="CC.preBattlePlayerSimple; 'preBattleInvitedPlayers'; preBattleInvitedPlayersFilter"/>
			<bind name="watchDH" value="'trainingRoomTeamSize'; ['trainingRoomEntity.trainingRoom.evUpdate']; trainingRoomEntity.trainingRoom.teamSize"/>
			<bind name="watch" value="'maxPlayersInFormation'; _isTrainingRoom 	? _teamId == -1 ? preBattlePlayers.length
																								: trainingRoomTeamSize 
															: battleTypeEntity.divisionRestrictions.shipsCount[1]"/>
			<bind name="primaryEntityDH" value="'preBattleEntity'; CC.preBattle; selfPreBattleId"/>
			<bind name="watchDH" value="'isFormationInBattle'; ['preBattleEntity.preBattle.evStatusChanged']; preBattleEntity.preBattle.isInBattle"/>
			<bind name="watchDH" value="'selfIsInBattle'; ['selfPlayerEntity.preBattlePlayerSimple.evStateChanged']; selfPlayerEntity.preBattlePlayerSimple.isInBattle"/>
			<styleClass value="$Fullsize"/>
			<bind name="dataRefDH" value="'chat'; 'dataHub.chat.ref.chat'"/>
			<bind name="watchDH" value="'isChatServerAvailable'; ['chat.evConnected', 'chat.evDisConnected']; chat.isConnected"/>
			<bind name="watch" value="'showFormationPlayers'; isChatServerAvailable || _isTrainingRoom"/>
			<block>
				<style>
					<width value="100%"/>
					<height value="120px"/>
				</style>
				<bind name="visible" value="!(showFormationPlayers)"/>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$MiddleVAligned"/>
					<bind name="instance" value="'ServerIsUnavailable'; showFormationPlayers ? null : {_maxWidth: '300', _small: true}"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<height value="100%"/>
				</style>
				<bind name="visible" value="(showFormationPlayers)"/>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="fade" value="divisionEntranceData.divisionAvailable &amp;&amp; !_isTrainingRoom; 0.1; {alpha: 0, ubScaleY: 0}; {alpha: 1, ubScaleY: 1}"/>
					<bind name="primaryEntityDH" value="'operationEntity'; CC.operation; chosenOperationId"/>
					<bind name="watch" value="'isHW2018'; isIn(operationEntity.operation.gpName, ['PCVO013_EV_HL_18_e04_Halloween_2018', 'PCVO017_EV_HL_18_e04_Halloween_2018_Hard'])"/>
					<block>
						<styleClass value="$MiddleAligned"/>
						<bind name="child" value="isHW2018 ? 0 : 1; {selfPreBattleId: selfPreBattleId, _teamId: teamId}; 'FormationShipClassesStatusHW2018HACK'; 'FormationShipClassesStatus'"/>
					</block>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
				<block>
					<styleClass value="$DefaultScrollBar"/>
					<style>
						<height value="100%f"/>
						<width value="100%"/>
						<overflow value="scroll"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<bind name="repeat" value="maxPlayersInFormation; 'DivisionListItem'; {
					_isTrainingRoom: _isTrainingRoom,
					_teamId: teamId,
					_formationPlayerClass: _formationPlayerClass,
					_showInvites: isTeamManagementAvailable &amp;&amp; !(_isTrainingRoom &amp;&amp; teamId == -1) &amp;&amp; !(isFormationInBattle &amp;&amp; selfIsInBattle),
					_preBattlePlayers: preBattlePlayers,
					_preBattleInvitedPlayers: preBattleInvitedPlayers}"/>
					</block>
				</block>
			</block>
			<bind name="collectionDH" value="CC.battleType; 'selectedBattleTypes'; 'selected'"/>
			<bind name="entityDH" value="'selectedBattleTypeEntity'; selectedBattleTypes[0].id"/>
			<bind name="watchDH" value="'selectedBattleType'; ['selectedBattleTypeEntity.battleType.evBattleTypeChanged']; selectedBattleTypeEntity.battleType.type"/>
			<bind name="firstEntityDH" value="'pveStateEntity'; CC.pveState"/>
			<bind name="watchDH" value="'chosenOperationId'; ['pveStateEntity.pveState.evStateUpdated']; pveStateEntity.pveState.chosenOperation"/>
			<bind name="watchDH" value="'activeOperationId'; ['pveStateEntity.pveState.evStateUpdated']; pveStateEntity.pveState.activeOperation"/>
			<bind name="watchDH" value="'chosenDifficulty';	['pveStateEntity.pveState.evStateUpdated']; pveStateEntity.pveState.chosenDifficulty"/>
			<bind name="watchDH" value="'enterMatchmaker'; ['pveStateEntity.pveState.evStateUpdated']; pveStateEntity.pveState.enterMatchmaker"/>
			<bind name="watch" value="'isChosenOperationOfTheWeek'; ((chosenOperationId == activeOperationId) &amp;&amp; (chosenDifficulty == 'normal'))"/>
			<block>
				<style>
					<width value="100%"/>
					<marginBottom value="6px"/>
				</style>
				<block>
					<bind name="fade" value="((!_isTrainingRoom &amp;&amp; !isSelfPlayerInBattle) || (selfTeamId == _teamId)); 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}; 2"/>
					<styleClass value="$MiddleAligned"/>
					<style>
						<marginTop value="6px"/>
					</style>
					<bind name="instance" value="'FormationReadySwitcher'; {_isTrainingRoom: _isTrainingRoom}"/>
				</block>
				<block>
					<style>
						<marginTop value="12px"/>
						<marginLeft value="12px"/>
						<marginRight value="8px"/>
						<width value="100%"/>
						<marginBottom value="2px"/>
					</style>
					<bind name="fade" value="(selectedBattleType == BattleTypes.PVE_BATTLE &amp;&amp; !isSelfPlayerInBattle); 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}; 2"/>
					<bind name="tooltip" value="'MouseInstructionTooltip'; {	_multiParagraphArray: [{	_paragraphText: 	enterMatchmaker 		?	'IDS_PVE_DIVISION_MATCHMAKER_ON_INFO' : 'IDS_PVE_DIVISION_MATCHMAKER_OFF_INFO'}],
																					_mouseInstructions:	!isSelfPlayerOwner		?	[{_type: 'warning', _instructionText: 'IDS_PVE_DIVISION_MATCHMAKER_CONFIG_AVAILABLE_FOR_COMMANDER'}] 
																																: !isChosenOperationOfTheWeek	? [{_type: 'warning', _instructionText: 'IDS_PVE_DIVISION_MATCHMAKER_NOT_AVAILABLE'}]
																																								: null,
																					_maxWidth: 250}"/>
					<bind name="action" value="'click'; 'PVEScriptsProxy.chooseOperation'; {operationId: chosenOperationId, difficulty: 'normal', shouldEnterMM: !(enterMatchmaker)}"/>
					<bind name="instance" value="'CheckBox'; { _maxTfWidth: 200, switchProperty: (enterMatchmaker &amp;&amp; isChosenOperationOfTheWeek), _disabled: !(isSelfPlayerOwner &amp;&amp; isChosenOperationOfTheWeek),  label: 'IDS_PVE_DIVISION_MATCHMAKER_CHECKBOX_TEXT'}"/>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="transition" value="droppableStatusState == 'active'; 0.15; {alpha: 0}; {alpha: 1}"/>
				<block className="outlined_panel_shaded" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginTop value="-2px"/>
					</style>
					<bind name="watch" value="'isBot'; droppableStatusBotState == 'active' &amp;&amp; _teamId == -1"/>
					<bind name="gotoAndStop!" value="isBot ? 'orange' : 'white'"/>
					<bind name="transition" value="droppableStatus == 'fadeIn' || droppableStatusBot == 'fadeIn'; 0.15; {alpha: 0.5}; {alpha: 1}"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_RIGHT'"/>
			<style>
				<position value="absolute"/>
				<width value="8px"/>
				<height value="100%"/>
				<right value="-4px"/>
				<backgroundColor value="0x01ff0000"/>
			</style>
			<params>
				<param name="name" value="gripper_right"/>
			</params>
		</block>
		<bind name="resize" value="'gripper_right'; 'right'; 'divisionPlayersListWidth'"/>
	</block>
	<block className="FormationMainElement">
		<bind name="name" value="'FormationMainElement_' + _teamId"/>
		<bind name="firstEntityDH" value="'trainingRoomEntity'; CC.trainingRoomWindowState"/>
		<bind name="watchDH" value="'windowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.state"/>
		<bind name="watchDH" value="'notReadyWindowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.notReadyWindowState"/>
		<bind name="watchDH" value="'windowInset'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.inset"/>
		<bind name="watchDH" value="'windowInsetLabel'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.insetLabel"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<bind name="collectionDH" value="CC.battleType; 'selectedBattleTypes'; 'selected'"/>
		<bind name="entityDH" value="'battleTypeEntity'; selectedBattleTypes[0].id"/>
		<bind name="watch" value="'teamId'; _teamId != undefined ? _teamId : selfTeamId"/>
		<bind name="action" value="'droppableStatus'+varChanged; droppableStatus == 'accept' ? 'TrainingRoomProxy.setPlayerTeam' : null; 
												{ playerId: droppableStatusData['playerId'], teamId: teamId }"/>
		<bind name="watch" value="'activeIds'; 	isSelfPlayerOwner 		? 	_teamId == 0 	? ['-1', '1', '-1_bot', '1_bot'] :
												  		  	_teamId == 1 	? ['0', '-1', '0_bot', '-1_bot'] 
												  							: ['0', '1', '0_bot', '1_bot'] :

								isSelfPlayerCommander	?	selfTeamId == _teamId 				? ['-1', '-1_bot'] :
															_teamId == -1 	? (selfTeamId == 0 ? ['0', '0_bot'] : ['1', '1_bot'])
																								: []
														:	[]"/>
		<bind name="droppable" value="'this'; activeIds; activeIds; 'droppableStatus'"/>
		<block>
			<bind name="visible" value="false"/>
			<params>
				<param name="name" value="botFakeDropZone"/>
			</params>
		</block>
		<bind name="droppable" value="'botFakeDropZone'; []; ['0_bot', '1_bot']; 'droppableStatusBot'"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'isSelfPlayerOwner'; ['selfPlayerEntity.preBattlePlayerSimple.evIsCommanderChanged']; selfPlayerEntity.preBattlePlayerSimple.isCommander"/>
		<bind name="watchDH" value="'isSelfPlayerInBattle'; ['selfPlayerEntity.preBattlePlayerSimple.evStateChanged']; selfPlayerEntity.preBattlePlayerSimple.isInBattle"/>
		<bind name="watchDH" value="'isSelfPlayerCommander'; ['selfPlayerEntity.trainingRoomPlayer.evUpdate']; selfPlayerEntity.trainingRoomPlayer.isCommander"/>
		<bind name="watch" value="'isTeamManagementAvailable'; isSelfPlayerOwner || (isSelfPlayerCommander &amp;&amp; selfTeamId == _teamId)"/>
		<bind name="watchDH" value="'selfTeamId'; ['selfPlayerEntity.preBattlePlayerSimple.evStateChanged']; selfPlayerEntity.preBattlePlayerSimple.teamId"/>
		<bind name="watchDH" value="'selfPreBattleId'; ['selfPlayerEntity.preBattlePlayerSimple.evPreBattleIdChanged']; selfPlayerEntity.preBattlePlayerSimple.preBattleId"/>
		<bind name="watch" value="'preBattlePlayersFilter'; _isTrainingRoom 	? 'byPreBattleAndTeam.' + selfPreBattleId + '_' + teamId + '.preBattleMembers.sorted' 
															: 'byPreBattle.' + selfPreBattleId + '.preBattleMembers.sorted'"/>
		<bind name="collectionDH" value="CC.preBattlePlayerSimple; 'preBattlePlayers'; preBattlePlayersFilter"/>
		<bind name="watch" value="'preBattleInvitedPlayersFilter'; _isTrainingRoom 	? 'byPreBattleAndTeam.' + selfPreBattleId + '_' + teamId + '.invitedPlayers' 
																	: 'byPreBattle.' + selfPreBattleId + '.invitedPlayers'"/>
		<bind name="collectionDH" value="CC.preBattlePlayerSimple; 'preBattleInvitedPlayers'; preBattleInvitedPlayersFilter"/>
		<bind name="watchDH" value="'trainingRoomTeamSize'; ['trainingRoomEntity.trainingRoom.evUpdate']; trainingRoomEntity.trainingRoom.teamSize"/>
		<bind name="watch" value="'maxPlayersInFormation'; _isTrainingRoom 	? _teamId == -1 ? preBattlePlayers.length
																								: trainingRoomTeamSize 
															: battleTypeEntity.divisionRestrictions.shipsCount[1]"/>
		<bind name="primaryEntityDH" value="'preBattleEntity'; CC.preBattle; selfPreBattleId"/>
		<bind name="watchDH" value="'isFormationInBattle'; ['preBattleEntity.preBattle.evStatusChanged']; preBattleEntity.preBattle.isInBattle"/>
		<bind name="watchDH" value="'selfIsInBattle'; ['selfPlayerEntity.preBattlePlayerSimple.evStateChanged']; selfPlayerEntity.preBattlePlayerSimple.isInBattle"/>
		<styleClass value="$Fullsize"/>
		<bind name="dataRefDH" value="'chat'; 'dataHub.chat.ref.chat'"/>
		<bind name="watchDH" value="'isChatServerAvailable'; ['chat.evConnected', 'chat.evDisConnected']; chat.isConnected"/>
		<bind name="watch" value="'showFormationPlayers'; isChatServerAvailable || _isTrainingRoom"/>
		<block>
			<style>
				<width value="100%"/>
				<height value="120px"/>
			</style>
			<bind name="visible" value="!(showFormationPlayers)"/>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<styleClass value="$MiddleVAligned"/>
				<bind name="instance" value="'ServerIsUnavailable'; showFormationPlayers ? null : {_maxWidth: '300', _small: true}"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<height value="100%"/>
			</style>
			<bind name="visible" value="(showFormationPlayers)"/>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="fade" value="divisionEntranceData.divisionAvailable &amp;&amp; !_isTrainingRoom; 0.1; {alpha: 0, ubScaleY: 0}; {alpha: 1, ubScaleY: 1}"/>
				<bind name="primaryEntityDH" value="'operationEntity'; CC.operation; chosenOperationId"/>
				<bind name="watch" value="'isHW2018'; isIn(operationEntity.operation.gpName, ['PCVO013_EV_HL_18_e04_Halloween_2018', 'PCVO017_EV_HL_18_e04_Halloween_2018_Hard'])"/>
				<block>
					<styleClass value="$MiddleAligned"/>
					<bind name="child" value="isHW2018 ? 0 : 1; {selfPreBattleId: selfPreBattleId, _teamId: teamId}; 'FormationShipClassesStatusHW2018HACK'; 'FormationShipClassesStatus'"/>
				</block>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<styleClass value="$DefaultScrollBar"/>
				<style>
					<height value="100%f"/>
					<width value="100%"/>
					<overflow value="scroll"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="repeat" value="maxPlayersInFormation; 'DivisionListItem'; {
					_isTrainingRoom: _isTrainingRoom,
					_teamId: teamId,
					_formationPlayerClass: _formationPlayerClass,
					_showInvites: isTeamManagementAvailable &amp;&amp; !(_isTrainingRoom &amp;&amp; teamId == -1) &amp;&amp; !(isFormationInBattle &amp;&amp; selfIsInBattle),
					_preBattlePlayers: preBattlePlayers,
					_preBattleInvitedPlayers: preBattleInvitedPlayers}"/>
				</block>
			</block>
		</block>
		<bind name="collectionDH" value="CC.battleType; 'selectedBattleTypes'; 'selected'"/>
		<bind name="entityDH" value="'selectedBattleTypeEntity'; selectedBattleTypes[0].id"/>
		<bind name="watchDH" value="'selectedBattleType'; ['selectedBattleTypeEntity.battleType.evBattleTypeChanged']; selectedBattleTypeEntity.battleType.type"/>
		<bind name="firstEntityDH" value="'pveStateEntity'; CC.pveState"/>
		<bind name="watchDH" value="'chosenOperationId'; ['pveStateEntity.pveState.evStateUpdated']; pveStateEntity.pveState.chosenOperation"/>
		<bind name="watchDH" value="'activeOperationId'; ['pveStateEntity.pveState.evStateUpdated']; pveStateEntity.pveState.activeOperation"/>
		<bind name="watchDH" value="'chosenDifficulty';	['pveStateEntity.pveState.evStateUpdated']; pveStateEntity.pveState.chosenDifficulty"/>
		<bind name="watchDH" value="'enterMatchmaker'; ['pveStateEntity.pveState.evStateUpdated']; pveStateEntity.pveState.enterMatchmaker"/>
		<bind name="watch" value="'isChosenOperationOfTheWeek'; ((chosenOperationId == activeOperationId) &amp;&amp; (chosenDifficulty == 'normal'))"/>
		<block>
			<style>
				<width value="100%"/>
				<marginBottom value="6px"/>
			</style>
			<block>
				<bind name="fade" value="((!_isTrainingRoom &amp;&amp; !isSelfPlayerInBattle) || (selfTeamId == _teamId)); 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}; 2"/>
				<styleClass value="$MiddleAligned"/>
				<style>
					<marginTop value="6px"/>
				</style>
				<bind name="instance" value="'FormationReadySwitcher'; {_isTrainingRoom: _isTrainingRoom}"/>
			</block>
			<block>
				<style>
					<marginTop value="12px"/>
					<marginLeft value="12px"/>
					<marginRight value="8px"/>
					<width value="100%"/>
					<marginBottom value="2px"/>
				</style>
				<bind name="fade" value="(selectedBattleType == BattleTypes.PVE_BATTLE &amp;&amp; !isSelfPlayerInBattle); 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}; 2"/>
				<bind name="tooltip" value="'MouseInstructionTooltip'; {	_multiParagraphArray: [{	_paragraphText: 	enterMatchmaker 		?	'IDS_PVE_DIVISION_MATCHMAKER_ON_INFO' : 'IDS_PVE_DIVISION_MATCHMAKER_OFF_INFO'}],
																					_mouseInstructions:	!isSelfPlayerOwner		?	[{_type: 'warning', _instructionText: 'IDS_PVE_DIVISION_MATCHMAKER_CONFIG_AVAILABLE_FOR_COMMANDER'}] 
																																: !isChosenOperationOfTheWeek	? [{_type: 'warning', _instructionText: 'IDS_PVE_DIVISION_MATCHMAKER_NOT_AVAILABLE'}]
																																								: null,
																					_maxWidth: 250}"/>
				<bind name="action" value="'click'; 'PVEScriptsProxy.chooseOperation'; {operationId: chosenOperationId, difficulty: 'normal', shouldEnterMM: !(enterMatchmaker)}"/>
				<bind name="instance" value="'CheckBox'; { _maxTfWidth: 200, switchProperty: (enterMatchmaker &amp;&amp; isChosenOperationOfTheWeek), _disabled: !(isSelfPlayerOwner &amp;&amp; isChosenOperationOfTheWeek),  label: 'IDS_PVE_DIVISION_MATCHMAKER_CHECKBOX_TEXT'}"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
			</style>
			<bind name="transition" value="droppableStatusState == 'active'; 0.15; {alpha: 0}; {alpha: 1}"/>
			<block className="outlined_panel_shaded" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<marginTop value="-2px"/>
				</style>
				<bind name="watch" value="'isBot'; droppableStatusBotState == 'active' &amp;&amp; _teamId == -1"/>
				<bind name="gotoAndStop!" value="isBot ? 'orange' : 'white'"/>
				<bind name="transition" value="droppableStatus == 'fadeIn' || droppableStatusBot == 'fadeIn'; 0.15; {alpha: 0.5}; {alpha: 1}"/>
			</block>
		</block>
	</block>
	<block className="DivisionHeaderLock">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionData'"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'isSelfPlayerCommander'; ['selfPlayerEntity.preBattlePlayerSimple.evIsCommanderChanged']; selfPlayerEntity.preBattlePlayerSimple.isCommander"/>
		<bind name="watchDH" value="'selfPreBattleId';		['selfPlayerEntity.preBattlePlayerSimple.evPreBattleIdChanged']; selfPlayerEntity.preBattlePlayerSimple.preBattleId"/>
		<bind name="primaryEntityDH" value="'preBattleEntity'; CC.preBattle; selfPreBattleId"/>
		<bind name="watchDH" value="'ownerId'; ['preBattleEntity.preBattle.evOwnerIdChanged']; preBattleEntity.preBattle.ownerId"/>
		<bind name="primaryEntityDH" value="'preBattleOwnerPlayerEntity'; CC.preBattlePlayerSimple; ownerId"/>
		<bind name="watch" value="'isPreBattleLocked'; divisionData.locked"/>
		<bind name="visible" value="preBattleOwnerPlayerEntity.clanman ? true : false"/>
		<bind name="tooltip" value="'MouseInstructionTooltip'; {	_multiParagraphArray: [{	_paragraphText: 	isPreBattleLocked 		? 'IDS_CLAN_LOCKED_DIVISION' : 'IDS_CLAN_UNLOCKED_DIVISION'}],
																			_mouseInstructions: isSelfPlayerCommander	? [{_type: 'left', _instructionText: (isPreBattleLocked	? 'IDS_CLAN_MOUSE_INSTRUCTION_UNLOCK_DIVISION'
																																												: 'IDS_CLAN_MOUSE_INSTRUCTION_LOCK_DIVISION')}]
																														: [{_type: 'warning', _instructionText: 'IDS_PVE_DIVISION_MATCHMAKER_CONFIG_AVAILABLE_FOR_COMMANDER'}],
																			_maxWidth: 250}"/>
		<bind name="action" value="'click'; isSelfPlayerCommander ?  (isPreBattleLocked ? 'unlockDivision' : 'lockDivision') : null; {id: selfPreBattleId}"/>
		<block className="button_lock" type="native">
			<bind name="selected" value="isPreBattleLocked"/>
			<bind name="enabled" value="isSelfPlayerCommander"/>
		</block>
	</block>
	<block className="FormationHeader">
		<bind name="firstEntityDH" value="'trainingRoomEntity'; CC.trainingRoomWindowState"/>
		<bind name="watchDH" value="'windowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.state"/>
		<bind name="watchDH" value="'notReadyWindowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.notReadyWindowState"/>
		<bind name="watchDH" value="'windowInset'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.inset"/>
		<bind name="watchDH" value="'windowInsetLabel'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.insetLabel"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionData'"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfTeamId'; ['selfPlayerEntity.preBattlePlayerSimple.evStateChanged']; selfPlayerEntity.preBattlePlayerSimple.teamId"/>
		<bind name="watchDH" value="'isSelfPlayerCommander'; ['selfPlayerEntity.preBattlePlayerSimple.evIsCommanderChanged']; selfPlayerEntity.preBattlePlayerSimple.isCommander"/>
		<bind name="watchDH" value="'selfPreBattleId'; ['selfPlayerEntity.preBattlePlayerSimple.evPreBattleIdChanged']; selfPlayerEntity.preBattlePlayerSimple.preBattleId"/>
		<bind name="primaryEntityDH" value="'preBattleEntity'; CC.preBattle; selfPreBattleId"/>
		<bind name="watchDH" value="'isFormationInBattle'; ['preBattleEntity.preBattle.evStatusChanged']; preBattleEntity.preBattle.isInBattle"/>
		<bind name="watchDH" value="'ownerId'; ['preBattleEntity.preBattle.evOwnerIdChanged']; preBattleEntity.preBattle.ownerId"/>
		<bind name="primaryEntityDH" value="'preBattleOwnerPlayerEntity'; CC.preBattlePlayerSimple; ownerId"/>
		<bind name="watchDH" value="'clanId'; ['preBattleOwnerPlayerEntity.clanman.evClanIdChanged']; preBattleOwnerPlayerEntity.clanman.clanId"/>
		<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; clanId"/>
		<bind name="watchDH" value="'clanTag'; ['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
		<bind name="watchDH" value="'clanName'; ['clanEntity.clanExtended.evNameChanged']; clanEntity.clanExtended.name"/>
		<bind name="primaryEntityDH" value="'clanTeamEntity'; CC.clanTeam; selfPreBattleId"/>
		<bind name="watchDH" value="'squadId'; ['clanTeamEntity.clanTeam.evSquadIdChanged']; clanTeamEntity.clanTeam.squadId"/>
		<bind name="primaryEntityDH" value="'clanLadderInfoEntity'; CC.clanLadderInfo; clanId"/>
		<bind name="watchDH" value="'leadingSquadId'; []; clanLadderInfoEntity.clanLadderInfo.leadingSquadId"/>
		<bind name="watch" value="'isLeadingSquad'; squadId == leadingSquadId"/>
		<bind name="watchDH" value="'hasClanSquadModifier'; ['selfPlayerEntity.clanmanSupplyInfo.evHasClanSquadModifierChanged']; selfPlayerEntity.clanmanSupplyInfo.hasClanSquadModifier"/>
		<bind name="firstEntityDH" value="'clanCurrentSeasonEntity'; CC.clanBattleSeason; 'current'"/>
		<bind name="watchDH" value="'isBrawl'; ['clanCurrentSeasonEntity.clanBattleSeason.evChanged']; clanCurrentSeasonEntity.clanBattleSeason.isBrawl"/>
		<bind name="watch" value="'isShowClanSquadModifier'; hasClanSquadModifier &amp;&amp; !isBrawl"/>
		<bind name="collectionDH" value="CC.battleType; 'selectedBattleTypes'; 'selected'"/>
		<bind name="entityDH" value="'selectedBattleTypeEntity'; selectedBattleTypes[0].id"/>
		<bind name="watchDH" value="'trainingRoomTeamSize'; ['trainingRoomEntity.trainingRoom.evUpdate']; trainingRoomEntity.trainingRoom.teamSize"/>
		<bind name="watch" value="'maxPlayersInFormation'; _isTrainingRoom ? trainingRoomTeamSize : selectedBattleTypeEntity.divisionRestrictions.shipsCount[1]"/>
		<bind name="watchDH" value="'fightButtonDenyReasons'; ['selectedBattleTypeEntity.battleType.evDisableReasonChanged']; selectedBattleTypeEntity.battleType.fightButtonReasons"/>
		<bind name="watchDH" value="'selectedBattleType'; ['selectedBattleTypeEntity.battleType.evBattleTypeChanged']; selectedBattleTypeEntity.battleType.type"/>
		<bind name="watch" value="'preBattlePlayersFilter'; _isTrainingRoom ? 	'byPreBattleAndTeam.' + selfPreBattleId + '_' + _teamId + '.preBattleMembers' : 
																'byPreBattle.' + selfPreBattleId + '.preBattleMembers'"/>
		<bind name="collectionDH" value="CC.preBattlePlayerSimple; 'preBattlePlayers'; preBattlePlayersFilter"/>
		<bind name="collectionDH" value="CC.preBattlePlayerSimple; 'preBattleInvitedPlayers'; 'byPreBattleAndTeam.' + selfPreBattleId + '_' + _teamId + '.invitedPlayers'"/>
		<bind name="watch" value="'curPlayersInFormation'; (preBattlePlayers.length + preBattleInvitedPlayers.length)"/>
		<bind name="watch" value="'label'; 	_isTrainingRoom 	? 	toUpperCase(tr('IDS_DIVISION_' + _teamId)) :
							isFormationInBattle ? 	tr('IDS_IN_BATTLE') :
							_isClanDivision		? 	'['+clanTag+'] ' + tr( isShowClanSquadModifier ? 'IDS_CLAN_SQUAD_' + squadId : 'IDS_DIVISION')
												: 	tr('IDS_DIVISION')"/>
		<bind name="watch" value="'limitExceed'; curPlayersInFormation &gt;= maxPlayersInFormation"/>
		<bind name="name" value="'headerDivision'"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<block className="icon_channel_types" type="native">
			<bind name="visible" value="_isTrainingRoom != true &amp;&amp; !(preBattleOwnerPlayerEntity.clanman)"/>
			<style>
				<hitTest value="false"/>
				<marginRight value="4px"/>
				<marginTop value="-1px"/>
			</style>
			<innerBind elementName="channel_icon" name="gotoAndStop!" value="'division'"/>
		</block>
		<block type="text">
			<styleClass value="$TextDefaultBold19NM"/>
			<bind name="class" value="	_isTrainingRoom &amp;&amp; _teamId == -1				? '$FontColorWhite'	 :
						_isTrainingRoom &amp;&amp; selfTeamId == _teamId							? '$FontColorGolden' :
						_isTrainingRoom &amp;&amp; selfTeamId != _teamId 							? '$FontColorWhite' :
						(isFormationInBattle || !(divisionEntranceData.divisionAvailable))	? '$FontColorUnready'
																							: '$FontColorGolden'"/>
			<style>
				<marginLeft value="4px"/>
				<marginTop value="1px"/>
			</style>
			<bind name="text" value="label"/>
		</block>
		<block>
			<bind name="watch" value="'isLeadingIconVisible'; _isClanDivision &amp;&amp; isShowClanSquadModifier &amp;&amp; isLeadingSquad &amp;&amp; !isFormationInBattle"/>
			<bind name="visible" value="isLeadingIconVisible"/>
			<style>
				<hitTest value="false"/>
				<marginLeft value="8px"/>
				<marginTop value="-1px"/>
			</style>
			<bind name="instance" value="'LeadingClanSquadIcon'; isLeadingIconVisible ? { _isGolden: true } : null"/>
		</block>
		<bind name="watch" value="'colorClass'; 	_isTrainingRoom &amp;&amp; selfTeamId == _teamId 	? '$FontColorGolden' :
								_isTrainingRoom &amp;&amp; selfTeamId != _teamId 	? '$FontColorWhite'	 :
								isFormationInBattle							? '$FontColorUnready'
																			: '$FontColorGolden'"/>
		<block>
			<bind name="visible" value="(divisionEntranceData.divisionAvailable &amp;&amp; !_isTrainingRoom) || (_isTrainingRoom &amp;&amp; _teamId != -1)"/>
			<bind name="style" value="'alpha'; limitExceed ? 0.5 : 1"/>
			<style>
				<marginLeft value="8px"/>
				<marginTop value="1px"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefaultBold19NM"/>
				<bind name="class" value="colorClass"/>
				<style>
					<marginRight value="2px"/>
				</style>
				<bind name="text" value="'(' + curPlayersInFormation"/>
			</block>
			<block type="text">
				<bind name="style" value="'alpha'; limitExceed ? 1 : 0.8"/>
				<styleClass value="$TextDefaultBold17NM"/>
				<bind name="class" value="colorClass"/>
				<style>
					<marginTop value="1px"/>
					<marginRight value="1px"/>
				</style>
				<bind name="text" value="'/' + maxPlayersInFormation"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefaultBold19NM"/>
				<bind name="class" value="colorClass"/>
				<bind name="text" value="')'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="FormationPlayerItem">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="entityDH" value="'entityAccount'; _entityAccountId ? _entityAccountId : $dataRef.ref.id"/>
		<bind name="watch" value="'isSelfPlayer'; entityAccount.accountSimple.isSelfPlayer"/>
		<bind name="watchDH" value="'isSuspended'; ['entityAccount.accountSimple.evSuspendedChanged']; entityAccount.accountSimple.suspended"/>
		<bind name="watch" value="'isBot'; entityAccount.bot != undefined"/>
		<bind name="watchDH" value="'shipId'; ['entityAccount.preBattlePlayerSimple.evShipIdChanged']; entityAccount.preBattlePlayerSimple.shipId"/>
		<bind name="watchDH" value="'teamId'; ['entityAccount.preBattlePlayerSimple.evStateChanged']; entityAccount.preBattlePlayerSimple.teamId"/>
		<bind name="watchDH" value="'isReady'; ['entityAccount.preBattlePlayerSimple.evStateChanged']; entityAccount.preBattlePlayerSimple.isReady"/>
		<bind name="watchDH" value="'isInBattle'; ['entityAccount.accountStatus.evInBattleChanged']; entityAccount.accountStatus.inBattle"/>
		<bind name="watchDH" value="'isCommander'; ['entityAccount.preBattlePlayerSimple.evIsCommanderChanged']; entityAccount.preBattlePlayerSimple.isCommander"/>
		<bind name="watchDH" value="'nickName'; ['entityAccount.accountName.evChanged']; entityAccount.accountName.nickName"/>
		<bind name="watchDH" value="'pureName'; ['entityAccount.accountName.evChanged']; entityAccount.accountName.name"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'isSelfPlayerCommander'; ['selfPlayerEntity.preBattlePlayerSimple.evIsCommanderChanged']; selfPlayerEntity.preBattlePlayerSimple.isCommander"/>
		<bind name="watchDH" value="'selfTeamId'; ['selfPlayerEntity.preBattlePlayerSimple.evStateChanged']; selfPlayerEntity.preBattlePlayerSimple.teamId"/>
		<bind name="primaryEntityDH" value="'selfVoiceChatEntity'; CC.voiceChat; 0"/>
		<bind name="watchDH" value="'selfVoiceChatEnabled'; ['selfVoiceChatEntity.voiceChat.evEnabledChanged']; selfVoiceChatEntity.voiceChat.enabled"/>
		<bind name="var" value="{isAnimationPreUnlocked: false,
				isAnimationUnlocked: 	false}"/>
		<bind name="dispatch" value="'addedToStage'; 'animationPreActivationEvent'; null; false; 0.1"/>
		<bind name="catch" value="'animationPreActivationEvent'; {isAnimationPreUnlocked: true}"/>
		<bind name="changeDispatch" value="isReady; 'animationActivationEvent'"/>
		<bind name="catch" value="'animationActivationEvent'; {isAnimationUnlocked: isAnimationPreUnlocked ? true : false}"/>
		<style>
			<width value="100%"/>
			<height value="27px"/>
			<flow value="horizontal"/>
		</style>
		<block className="inner_panel" type="native">
			<bind name="visible" value="isSelfPlayer"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block className="dock_submenu_item_bg" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<styleClass value="$PxHorizontalCorrection"/>
			<bind name="clickSplit"/>
			<bind name="style" value="'hitTest'; !(isSuspended)"/>
			<bind name="transition" value="(rollOver || _rollOver || formationPlayerContextMenuVisible) &amp;&amp; !(isSelfPlayer); 0.15; {alpha: 0}; {alpha: 1.0}"/>
			<bind name="tooltip" value="'ContactInfoTooltip';	{	_entityAccountId: entityAccount.id, _actionDenyReason: 'no_reason',
													_playerContext: {type: 'startPrivateChat'}}"/>
			<bind name="action" value="'left_click';	!(isSelfPlayer) &amp;&amp; !(isBot) ? 'openChannelForPrivateMessages' : null; {dbId: entityAccount.accountSimple.dbId}"/>
			<bind name="menu" value="'ContactContextMenu';	!(isSelfPlayer)	? {	_entityAccountId: entityAccount.id, _playerContext: {type: 'startPrivateChat'},
																_inviteType: InviteType.COMMON, _isTrainingRoom: _isTrainingRoom, _isBot: isBot}
															: null; null; 'formationPlayerContextMenuVisible'"/>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
			</style>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="fade" value="(!isReady || isInBattle) &amp;&amp; isAnimationUnlocked; 0.3; {alpha: 0}; {alpha: 1}; {alpha: 0}; 1; 0"/>
				<block>
					<styleClass value="$Fullsize"/>
					<style>
						<backgroundColor value="0x90FF9933"/>
					</style>
					<bind name="fade" value="(!isReady || isInBattle) &amp;&amp; isAnimationUnlocked; 1.0; {alpha: 1}; {alpha: 0}; {alpha: 1}; 1; 0.5"/>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="fade" value="isReady &amp;&amp; isAnimationUnlocked; 0.3; {alpha: 0}; {alpha: 1}; {alpha: 0}; 1; 0"/>
				<block>
					<styleClass value="$Fullsize"/>
					<style>
						<backgroundColor value="0x804CE8AA"/>
					</style>
					<bind name="fade" value="isReady &amp;&amp; isAnimationUnlocked; 1.0; {alpha: 1}; {alpha: 0}; {alpha: 1}; 1; 0.5"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="name" value="'participantDivisionPlayer_' + nickName"/>
			<style>
				<hitTest value="false"/>
				<marginLeft value="13px"/>
				<marginRight value="6px"/>
				<width value="100%"/>
				<height value="100%"/>
			</style>
			<block>
				<style>
					<position value="absolute"/>
					<marginLeft value="-12px"/>
				</style>
				<styleClass value="$MiddleVAligned"/>
				<bind name="instance" value="'VoiceChatDockIcon'; { _playerName: pureName, _isSelf: isSelfPlayer}"/>
			</block>
			<block>
				<bind name="name" value="'participantDivisionPlayer_' + teamId + '_' + nickName"/>
				<styleClass value="$MiddleVAligned"/>
				<bind name="instance" value="'DHFormationPlayerIcon'; teamId != -1 ? {_entityAccountId: entityAccount.id, _isOtherDivision: selfTeamId != teamId, _isTrainingRoom: _isTrainingRoom} : null"/>
			</block>
			<block type="text">
				<styleClass value="$MiddleVAligned"/>
				<style>
					<marginLeft value="1px"/>
					<width value="47%"/>
					<multiline value="false"/>
				</style>
				<styleClass value="$TextDefault"/>
				<bind name="class" value="	tkStatus											? '$FontColorTeamkiller' :
							teamId == -1 &amp;&amp; !isSelfPlayer 	? '$FontColorGrey' :
							selfTeamId == teamId 								? '$FontColorGolden'
																				: '$FontColorWhite'"/>
				<bind name="class" value="isSelfPlayer ? '$Bold' : '$None'"/>
				<bind name="text" value="nickName"/>
			</block>
			<block>
				<bind name="visible" value="shipId"/>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="53%"/>
				</style>
				<bind name="instance" value="'PreBattlePlayerShip'; (isReady || isInBattle) ? {_shipId: shipId} : null"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="PreBattlePlayerShip">
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; _shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<style>
			<flow value="horizontal"/>
			<width value="100%"/>
		</style>
		<block className="icon_ship" type="native">
			<styleClass value="$MiddleVAligned"/>
			<bind name="gotoAndStop!" value="shipInfo.subtype"/>
		</block>
		<block type="text">
			<styleClass value="$TextDefaultBold"/>
			<style>
				<multiline value="false"/>
				<width value="100%"/>
			</style>
			<bind name="class" value="'$LetterSpacingSmall'"/>
			<bind name="text" value="shipInfo.levelRome + ' ' + toUpperCase(tr(shipInfo.nameIDS))"/>
		</block>
	</block>
	<block className="InvitedPlayerItem">
		<bind name="name" value="'invitedDivisionPlayer_' + nickName"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="watch" value="'isSelfPlayer'; entityAccount.accountSimple.isSelfPlayer"/>
		<bind name="watchDH" value="'prebattlePlayerId'; []; entityAccount.preBattlePlayerSimple.id"/>
		<bind name="watchDH" value="'nickName'; ['entityAccount.accountName.evChanged']; entityAccount.accountName.nickName"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'isSelfPlayerCommander'; ['selfPlayerEntity.preBattlePlayerSimple.evIsCommanderChanged']; selfPlayerEntity.preBattlePlayerSimple.isCommander"/>
		<style>
			<width value="100%"/>
			<height value="27px"/>
			<flow value="horizontal"/>
		</style>
		<block className="dock_submenu_item_bg" type="native">
			<bind name="style" value="'hitTest'; !(isSelfPlayer)"/>
			<bind name="clickSplit"/>
			<bind name="transition" value="(rollOver || _rollOver || formationPlayerContextMenuVisible); 0.15; {alpha: 0}; {alpha: 1.0}"/>
			<bind name="action" value="'left_click';	'openChannelForPrivateMessages'; {dbId: entityAccount.accountSimple.dbId}"/>
			<bind name="tooltip" value="'ContactInfoTooltip'; {	_entityAccountId: entityAccount.id, _actionDenyReason: 'no_reason',
												_playerContext: {type: 'startPrivateChat', expirationTime: expirationTime}}"/>
			<bind name="menu" value="'ContactContextMenu';	!(isSelfPlayer) 	? {	_entityAccountId: entityAccount.id, _playerContext: {type: 'startPrivateChat', isInvitation: true},
																	_inviteType: InviteType.COMMON}
																: null; null; 'formationPlayerContextMenuVisible'"/>
			<styleClass value="$FullsizeAbsolute"/>
			<styleClass value="$PxHorizontalCorrection"/>
		</block>
		<block className="button_cross" type="native">
			<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_RECALL_INVITATION'}"/>
			<bind name="visible" value="(rollOver || _rollOver) &amp;&amp; isSelfPlayerCommander"/>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<position value="absolute"/>
				<right value="6px"/>
			</style>
			<bind name="action" value="'buttonClick'; 'revokeInvitationToDivision'; {id: prebattlePlayerId}"/>
		</block>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<marginLeft value="13px"/>
				<hitTest value="false"/>
				<alpha value="0.7"/>
			</style>
			<bind name="instance" value="'FormationPlayerIcon'; {_isEmptySlot: true, _formationType: 'division'}"/>
		</block>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<style>
				<marginLeft value="1px"/>
				<width value="262px"/>
				<hitTest value="false"/>
				<multiline value="false"/>
				<alpha value="0.7"/>
			</style>
			<styleClass value="$TextDefault"/>
			<bind name="class" value="tkStatus	? '$FontColorTeamkiller' : '$FontColorGrey'"/>
			<bind name="text" value="nickName"/>
		</block>
	</block>
	<block className="FormationReadySwitcher">
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'isSelfPlayerReady';		['selfPlayerEntity.preBattlePlayerSimple.evStateChanged']; selfPlayerEntity.preBattlePlayerSimple.isReady"/>
		<bind name="watchDH" value="'isSelfPlayerInBattle';	['selfPlayerEntity.preBattlePlayerSimple.evStateChanged']; selfPlayerEntity.preBattlePlayerSimple.isInBattle"/>
		<bind name="firstEntityDH" value="'enterBattleEntity'; CC.enterBattle"/>
		<bind name="watchDH" value="'selectedBattle'; ['enterBattleEntity.enterBattle.evBattleTypesChanged']; enterBattleEntity.enterBattle.selectedBattle"/>
		<bind name="primaryEntityDH" value="'battleTypeEntity'; CC.battleType; selectedBattle.type"/>
		<bind name="watchDH" value="'readyButtonDenyReasons'; ['battleTypeEntity.battleType.evDisableReasonChanged']; battleTypeEntity.battleType.readyButtonReasons"/>
		<block className="tab_bar_bg" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<marginLeft value="2px"/>
				<marginRight value="2px"/>
			</style>
			<block className="DivisionStatusTransition">
				<block>
					<style>
						<position value="absolute"/>
					</style>
					<bind name="transition" value="divisionData.isReady == false; 0.3; {x : 0}; {x : 94}; {x : 0}; 2"/>
					<bind name="fade" value="divisionData.isReady == false; 0.3; {alpha: 1}; {alpha: 0}; {alpha: 0}; 0; 0.3"/>
					<block className="status_transition_element" type="native">
						<style>
							<marginTop value="2px"/>
							<height value="23px"/>
						</style>
					</block>
				</block>
				<block>
					<style>
						<position value="absolute"/>
					</style>
					<bind name="transition" value="divisionData.isReady == true; 0.3; {x : 94}; {x : 0}; {x : 94}; 2"/>
					<bind name="fade" value="divisionData.isReady == true; 0.3; {alpha: 1}; {alpha: 0}; {alpha: 0}; 0; 0.3"/>
					<block className="status_transition_element" type="native">
						<style>
							<marginTop value="2px"/>
							<height value="23px"/>
						</style>
					</block>
				</block>
			</block>
			<bind name="watch" value="'isReadyBtnEnabled'; ((readyButtonDenyReasons.length == 0) || (isSelfPlayerReady)) ? true : false"/>
			<block>
				<bind name="name" value="isSelfPlayerReady ? 'isReadyDivision' : 'isNotReadyDivision'"/>
				<bind name="tooltip" value="'MultipleWarningsTooltip'; isReadyBtnEnabled ? null : {_warningsArr: readyButtonDenyReasons}"/>
				<bind name="tooltip" value="'FormationReadyButtonTooltip'; isReadyBtnEnabled ? {} : null; 0"/>
				<style>
					<width value="92px"/>
					<height value="27px"/>
				</style>
				<block className="status_ready_item" type="native">
					<bind name="name" value="'readyDivision'"/>
					<styleClass value="$Fullsize"/>
					<bind name="style" value="'colorMatrixFilter'; isReadyBtnEnabled ? '0 0 0 0' : '0 -100 0 -40'"/>
					<bind name="style" value="'mouseEnabled'; (!(isSelfPlayerReady) &amp;&amp; isReadyBtnEnabled)"/>
					<bind name="label" value="toUpperCase(tr('IDS_READY'))"/>
					<bind name="action" value="'buttonClick'; _isTrainingRoom ? 'setIsReadyInTrainingRoom' : 'setIsReadyInDivision'; {isReady: true}"/>
					<bind name="selected" value="isSelfPlayerReady || isSelfPlayerInBattle"/>
				</block>
			</block>
			<block className="divider_v" type="native">
				<style>
					<height value="27px"/>
				</style>
			</block>
			<block>
				<bind name="tooltip" value="'FormationNotReadyButtonTooltip'; {}; 0"/>
				<style>
					<width value="92px"/>
					<height value="27px"/>
				</style>
				<block className="status_not_ready_item" type="native">
					<bind name="name" value="'notReadyDivision'"/>
					<styleClass value="$Fullsize"/>
					<bind name="style" value="'mouseEnabled'; isSelfPlayerReady"/>
					<bind name="label" value="toUpperCase(tr('IDS_NOT_READY'))"/>
					<bind name="action" value="'buttonClick'; _isTrainingRoom ? 'setIsReadyInTrainingRoom' : 'setIsReadyInDivision'; {isReady: false}"/>
					<bind name="selected" value="!(isSelfPlayerReady) &amp;&amp; !(isSelfPlayerInBattle)"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="FormationShipClassesStatus">
		<bind name="firstEntityDH" value="'trainingRoomEntity'; CC.trainingRoomWindowState"/>
		<bind name="watchDH" value="'windowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.state"/>
		<bind name="watchDH" value="'notReadyWindowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.notReadyWindowState"/>
		<bind name="watchDH" value="'windowInset'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.inset"/>
		<bind name="watchDH" value="'windowInsetLabel'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.insetLabel"/>
		<bind name="watchDH" value="'trainingRoomTypesCount'; ['trainingRoomEntity.divisionRestrictions.evUpdate']; trainingRoomEntity.divisionRestrictions.typesCount"/>
		<bind name="primaryEntityDH" value="'preBattleEntity'; CC.preBattle; selfPreBattleId"/>
		<bind name="watchDH" value="'shipClassesCurCount'; ['preBattleEntity.preBattle.evShipClassesCountChanged']; preBattleEntity.preBattle.shipClassesCount[_teamId]"/>
		<bind name="firstEntityDH" value="'pveStateEntity'; CC.pveState"/>
		<bind name="watchDH" value="'chosenOperationId'; ['pveStateEntity.pveState.evStateUpdated']; pveStateEntity.pveState.chosenOperation"/>
		<bind name="primaryEntityDH" value="'operationEntity'; CC.operation; chosenOperationId"/>
		<bind name="collectionDH" value="CC.battleType; 'selectedBattleTypes'; 'selected'"/>
		<bind name="entityDH" value="'selectedBattleTypeEntity'; selectedBattleTypes[0].id"/>
		<bind name="watch" value="'shipTypeClassesRestrictions'; ((selectedBattleTypeEntity.battleType.type == BattleTypes.PVE_BATTLE)	? operationEntity.divisionRestrictions.typesCount :
												_isTrainingRoom															? trainingRoomTypesCount
																														: selectedBattleTypeEntity.divisionRestrictions.typesCount)"/>
		<style>
			<height value="24px"/>
		</style>
		<block>
			<style>
				<alpha value="0.8"/>
				<marginTop value="6px"/>
			</style>
			<bind name="instance" value="'FormationShipClassStatus'; {	_type: ShipTypes.AircraftCarrier,
														_curCount: shipClassesCurCount[ShipTypes.AircraftCarrier],
														_maxCount: _showOnlyCurrent ? 0 : shipTypeClassesRestrictions[ShipTypes.AircraftCarrier][1],
														_hideIfNoShips: _hideIfNoShips}"/>
			<bind name="instance" value="'FormationShipClassStatus'; {	_type: ShipTypes.BattleShip,
														_curCount: shipClassesCurCount[ShipTypes.BattleShip],
														_maxCount: _showOnlyCurrent ? 0 : shipTypeClassesRestrictions[ShipTypes.BattleShip][1],
														_hideIfNoShips: _hideIfNoShips}"/>
			<bind name="instance" value="'FormationShipClassStatus'; {	_type: ShipTypes.Cruiser,
														_curCount: shipClassesCurCount[ShipTypes.Cruiser],
														_maxCount: _showOnlyCurrent ? 0 : shipTypeClassesRestrictions[ShipTypes.Cruiser][1],
														_hideIfNoShips: _hideIfNoShips}"/>
			<bind name="instance" value="'FormationShipClassStatus'; {	_type: ShipTypes.Destroyer,
														_curCount: shipClassesCurCount[ShipTypes.Destroyer],
														_maxCount: _showOnlyCurrent ? 0 : shipTypeClassesRestrictions[ShipTypes.Destroyer][1],
														_hideIfNoShips: _hideIfNoShips}"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="FormationShipClassesStatusHW2018HACK">
		<bind name="firstEntityDH" value="'trainingRoomEntity'; CC.trainingRoomWindowState"/>
		<bind name="watchDH" value="'windowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.state"/>
		<bind name="watchDH" value="'notReadyWindowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.notReadyWindowState"/>
		<bind name="watchDH" value="'windowInset'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.inset"/>
		<bind name="watchDH" value="'windowInsetLabel'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.insetLabel"/>
		<bind name="watchDH" value="'trainingRoomTypesCount'; ['trainingRoomEntity.divisionRestrictions.evUpdate']; trainingRoomEntity.divisionRestrictions.typesCount"/>
		<bind name="primaryEntityDH" value="'preBattleEntity'; CC.preBattle; selfPreBattleId"/>
		<bind name="watchDH" value="'shipClassesCurCount'; ['preBattleEntity.preBattle.evShipClassesCountChanged']; preBattleEntity.preBattle.shipClassesCount[_teamId]"/>
		<bind name="firstEntityDH" value="'pveStateEntity'; CC.pveState"/>
		<bind name="watchDH" value="'chosenOperationId'; ['pveStateEntity.pveState.evStateUpdated']; pveStateEntity.pveState.chosenOperation"/>
		<bind name="primaryEntityDH" value="'operationEntity'; CC.operation; chosenOperationId"/>
		<bind name="collectionDH" value="CC.battleType; 'selectedBattleTypes'; 'selected'"/>
		<bind name="entityDH" value="'selectedBattleTypeEntity'; selectedBattleTypes[0].id"/>
		<bind name="watch" value="'shipTypeClassesRestrictions'; ((selectedBattleTypeEntity.battleType.type == BattleTypes.PVE_BATTLE)	? operationEntity.divisionRestrictions.typesCount :
												_isTrainingRoom															? trainingRoomTypesCount
																														: selectedBattleTypeEntity.divisionRestrictions.typesCount)"/>
		<style>
			<height value="24px"/>
		</style>
		<block>
			<style>
				<alpha value="0.8"/>
				<marginTop value="6px"/>
			</style>
			<bind name="instance" value="'FormationShipClassStatus'; {	_type: ShipTypes.Submarine,
														_curCount: shipClassesCurCount[ShipTypes.Submarine],
														_maxCount: _showOnlyCurrent ? 0 : shipTypeClassesRestrictions[ShipTypes.Submarine][1],
														_hideIfNoShips: _hideIfNoShips}"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="FormationShipClassStatus">
		<style>
			<flow value="horizontal"/>
			<backgroundColor value="0x01000000"/>
		</style>
		<bind name="style" value="'marginRight'; ((_type != ShipTypes.Destroyer) ? '12px' : '0px')"/>
		<bind name="visible" value="!_hideIfNoShips || _curCount"/>
		<bind name="watch" value="'curCount'; _curCount ? _curCount : 0"/>
		<bind name="watch" value="'curCountInstruction'; (tr('IDS_CUR_COUNT_' + toUpperCase(_type) + '_IN_DIVISION') + tr('IDS_COLON') + ' ' + curCount)"/>
		<bind name="watch" value="'maxCountInstruction'; (!_maxCount)		? tr('IDS_NO_MAX_COUNT_' + toUpperCase(_type) + '_IN_DIVISION') :
										(_maxCount == -1)	? tr('IDS_NO_COUNT_' + toUpperCase(_type) + '_IN_DIVISION')
															: tr('IDS_MAX_COUNT_' + toUpperCase(_type) + '_IN_DIVISION') + tr('IDS_COLON') + ' ' + _maxCount)"/>
		<bind name="watch" value="'maxCountInstructionClass'; (_maxCount != 0 &amp;&amp; curCount &gt; _maxCount) ? '$FontColorUnready' : '$FontColorWhite'"/>
		<bind name="tooltip" value="'MouseInstructionTooltip';	(_maxCount == -1 &amp;&amp; curCount == 0)	? 	{	_multiParagraphArray:	[	{_paragraphText: maxCountInstruction, _leading: -1, _class: maxCountInstructionClass}],
																							_maxWidth: 380, _marginBottom: '1px', _marginBottomParagraphs: '9px'}
																				:	{	_multiParagraphArray:	[	{_paragraphText: curCountInstruction, _leading: -1, _class: '$FontColorWhite'},
																													{_paragraphText: maxCountInstruction, _leading: -1, _class: maxCountInstructionClass}],
																						_maxWidth: 380, _marginBottom: '1px', _marginBottomParagraphs: '9px'}"/>
		<bind name="watch" value="'limitExceed'; (_maxCount == -1) || (curCount == _maxCount &amp;&amp; _maxCount &gt; 0)"/>
		<bind name="style" value="'alpha'; limitExceed ? 0.5 : 1"/>
		<block>
			<style>
				<marginTop value="1px"/>
			</style>
			<bind name="style" value="'marginLeft'; ((_type == ShipTypes.Destroyer) ? '-1px' : '0px')"/>
			<block className="icon_ship" type="native">
				<bind name="gotoAndStop!" value="_type"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="(_maxCount != -1) || (curCount &gt; 0)"/>
			<bind name="style" value="'marginLeft'; ((_type == ShipTypes.Destroyer) ? 0 : (2+'px'))"/>
			<block type="text">
				<style>
					<marginRight value="2px"/>
				</style>
				<styleClass value="$TextDefaultBold17NM"/>
				<bind name="class" value="	(_maxCount != 0 &amp;&amp; curCount &gt; _maxCount)	? '$FontColorUnready'
																		: $None"/>
				<bind name="text" value="curCount"/>
			</block>
			<block>
				<bind name="visible" value="(_maxCount &gt; 0)"/>
				<bind name="style" value="'alpha'; (curCount == _maxCount &amp;&amp; _maxCount &gt; 0) ? 1 : 0.8"/>
				<block type="text">
					<style>
						<marginTop value="1px"/>
					</style>
					<styleClass value="$TextDefaultBoldNM"/>
					<bind name="class" value="	(_maxCount &gt; 0 &amp;&amp; curCount &gt; _maxCount)		? '$FontColorUnready'
																			: $None"/>
					<bind name="text" value="'/' + _maxCount"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="FormationInviteListItem">
		<style>
			<position value="absolute"/>
			<width value="100%"/>
			<height value="27px"/>
		</style>
		<bind name="name" value="'FormationInviteListItem_' + _teamId + '_' + $index"/>
		<block className="dock_submenu_item" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="tooltip" value="'MouseInstructionTooltip'; {_multiParagraphArray: [{_paragraphText: 'IDS_HINT_INVITE_PLAYERS', _class: '$TextDefault'}], _maxWidth: 270}"/>
			<bind name="tooltip" value="'DivisionEntranceInfotip'; { _isFromTrainingRoomBtn: _isTrainingRoom, _teamId: _teamId }; TooltipBehaviour.infotip; null; 'divisionEntranceInfotipIsVisible'"/>
			<params>
				<param name="soundSet" value="dropmenu_button"/>
			</params>
			<bind name="selected" value="divisionEntranceInfotipIsVisible"/>
		</block>
		<block>
			<style>
				<marginLeft value="13px"/>
				<marginRight value="6px"/>
				<marginTop value="2px"/>
				<hitTest value="false"/>
			</style>
			<block className="icon_plus" type="native">
				<styleClass value="$MiddleVAligned"/>
			</block>
			<block type="text">
				<bind name="watch" value="'formationType'; _isTrainingRoom ? 'TRAINING_ROOM' : 'DIVISION'"/>
				<styleClass value="$TextDefaultBold"/>
				<bind name="class" value="'$FontColorBlueish'"/>
				<style>
					<marginLeft value="2px"/>
				</style>
				<bind name="text" value="tr(toUpperCase('IDS_HINT_LEFT_CLICK_TO_IVITE_TO_' + formationType))"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="DHFormationPlayerIcon">
		<bind name="entityDH" value="'entityAccount'; _entityAccountId ? _entityAccountId : $dataRef.ref.id"/>
		<bind name="watchDH" value="'isReady'; ['entityAccount.preBattlePlayerSimple.evStateChanged']; entityAccount.preBattlePlayerSimple.isReady"/>
		<bind name="watchDH" value="'isInBattle'; ['entityAccount.preBattlePlayerSimple.evStateChanged']; entityAccount.preBattlePlayerSimple.isInBattle"/>
		<bind name="watchDH" value="'isCommander'; ['entityAccount.preBattlePlayerSimple.evIsCommanderChanged']; entityAccount.preBattlePlayerSimple.isCommander"/>
		<bind name="watchDH" value="'isTeamCommander'; ['entityAccount.trainingRoomPlayer.evUpdate']; entityAccount.trainingRoomPlayer.isCommander"/>
		<bind name="instance" value="'FormationPlayerIcon'; {isCommander: _isTrainingRoom ? isTeamCommander : isCommander, isReady: isReady, isInBattle: isInBattle, _formationType: 'division', isOtherDivision: _isOtherDivision}"/>
	</block>
	<block className="DivisionHeaderRightClickMenu">
		<styleClass value="$DefaultMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMapCustom">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
			</style>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap3" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<styleClass value="$ContextMenuListItem"/>
			<bind name="visible" value="_isCommander"/>
			<block className="dock_submenu_item" type="native">
				<bind name="request" value="'buttonClick'; 'dismissDivision'; {subtitle : 'IDS_DISMISS_DIVISION_QUESTION'}"/>
				<params>
					<param name="soundSet" value="dropmenu_button"/>
				</params>
				<styleClass value="$Fullsize"/>
				<block type="text">
					<bind name="name" value="'menuDismissDivision'"/>
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_DISMISS_DIVISION'"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$ContextMenuListItem"/>
			<block className="dock_submenu_item" type="native">
				<bind name="request" value="'buttonClick'; 'leaveDivision'; {subtitle : 'IDS_LEAVE_DIVISION_QUESTION'}"/>
				<params>
					<param name="soundSet" value="dropmenu_button"/>
				</params>
				<styleClass value="$Fullsize"/>
				<block type="text">
					<bind name="name" value="'menuLeaveDivision'"/>
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_LEAVE_DIVISION'"/>
				</block>
			</block>
		</block>
	</block>
	<block className="DivisionStatusTransition">
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="transition" value="divisionData.isReady == false; 0.3; {x : 0}; {x : 94}; {x : 0}; 2"/>
			<bind name="fade" value="divisionData.isReady == false; 0.3; {alpha: 1}; {alpha: 0}; {alpha: 0}; 0; 0.3"/>
			<block className="status_transition_element" type="native">
				<style>
					<marginTop value="2px"/>
					<height value="23px"/>
				</style>
			</block>
		</block>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="transition" value="divisionData.isReady == true; 0.3; {x : 94}; {x : 0}; {x : 94}; 2"/>
			<bind name="fade" value="divisionData.isReady == true; 0.3; {alpha: 1}; {alpha: 0}; {alpha: 0}; 0; 0.3"/>
			<block className="status_transition_element" type="native">
				<style>
					<marginTop value="2px"/>
					<height value="23px"/>
				</style>
			</block>
		</block>
	</block>
	<block className="DivisionListItem">
		<style>
			<width value="100%"/>
			<height value="27px"/>
		</style>
		<bind name="watch" value="'entityPlayer'; _preBattlePlayers[$index]"/>
		<bind name="watch" value="'entityInvitedPlayer'; $index &gt;= _preBattlePlayers.length ? _preBattleInvitedPlayers[$index - _preBattlePlayers.length] : null"/>
		<block>
			<bind name="visible" value="entityPlayer != null"/>
			<style>
				<position value="absolute"/>
				<width value="100%"/>
				<height value="100%"/>
			</style>
			<bind name="instance" value="_formationPlayerClass ? _formationPlayerClass : 'FormationPlayerItem'; { _entityAccountId: entityPlayer.id} "/>
		</block>
		<block>
			<bind name="visible" value="entityInvitedPlayer != null"/>
			<style>
				<position value="absolute"/>
				<width value="100%"/>
				<height value="100%"/>
			</style>
			<bind name="instance" value="'InvitedPlayerItem'; { entityAccount: entityInvitedPlayer} "/>
		</block>
		<block>
			<bind name="visible" value="_showInvites &amp;&amp; entityPlayer == null &amp;&amp; entityInvitedPlayer == null"/>
			<style>
				<position value="absolute"/>
				<width value="100%"/>
				<height value="100%"/>
			</style>
			<block className="FormationInviteListItem">
				<style>
					<position value="absolute"/>
					<width value="100%"/>
					<height value="27px"/>
				</style>
				<bind name="name" value="'FormationInviteListItem_' + _teamId + '_' + $index"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="tooltip" value="'MouseInstructionTooltip'; {_multiParagraphArray: [{_paragraphText: 'IDS_HINT_INVITE_PLAYERS', _class: '$TextDefault'}], _maxWidth: 270}"/>
					<bind name="tooltip" value="'DivisionEntranceInfotip'; { _isFromTrainingRoomBtn: _isTrainingRoom, _teamId: _teamId }; TooltipBehaviour.infotip; null; 'divisionEntranceInfotipIsVisible'"/>
					<params>
						<param name="soundSet" value="dropmenu_button"/>
					</params>
					<bind name="selected" value="divisionEntranceInfotipIsVisible"/>
				</block>
				<block>
					<style>
						<marginLeft value="13px"/>
						<marginRight value="6px"/>
						<marginTop value="2px"/>
						<hitTest value="false"/>
					</style>
					<block className="icon_plus" type="native">
						<styleClass value="$MiddleVAligned"/>
					</block>
					<block type="text">
						<bind name="watch" value="'formationType'; _isTrainingRoom ? 'TRAINING_ROOM' : 'DIVISION'"/>
						<styleClass value="$TextDefaultBold"/>
						<bind name="class" value="'$FontColorBlueish'"/>
						<style>
							<marginLeft value="2px"/>
						</style>
						<bind name="text" value="tr(toUpperCase('IDS_HINT_LEFT_CLICK_TO_IVITE_TO_' + formationType))"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<css name="$TextModernizationCostCr">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="15"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextModernizationCostGold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="15"/>
		<selectable value="false"/>
		<textColor value="0xFFCC66"/>
	</css>
	<css name="$TextModernizationCostDeficit">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="15"/>
		<selectable value="false"/>
		<textColor value="0x08222a"/>
	</css>
	<block className="ModernizationSlotInfotip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'shipId'; ['dockEntity.shipSelection.evShipUpdate']; dockEntity.shipSelection.currentShipId"/>
		<bind name="watchDH" value="'shipIdForModuleInset'; ['dockEntity.shipSelection.evShipViewUpdate']; dockEntity.shipSelection.currentShipIdForModuleInset"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; shipId"/>
		<bind name="watchDH" value="'isLocked';			['shipOwnEntity.ownShip.evUpdateLock'];		shipOwnEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'isInFormation';	['shipOwnEntity.ownShip.evUpdateLock'];		shipOwnEntity.ownShip.isInFormation"/>
		<styleClass value="$VerticalInfotipBehaviourCenter"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap3" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
		</block>
		<block className="dock_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginLeft value="-13px"/>
				<marginRight value="-13px"/>
				<marginTop value="-9px"/>
				<marginBottom value="-18px"/>
			</style>
		</block>
		<block className="dock_panel_pin" type="native">
			<bind name="gotoAndStop!" value="'up'"/>
			<params>
				<param name="name" value="pinTop"/>
			</params>
			<style>
				<position value="absolute"/>
				<top value="-10px"/>
			</style>
		</block>
		<block>
			<style>
				<width value="350px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="repeat" value="list; 'ModernizationSlotInfotipItem'"/>
			</block>
			<block>
				<bind name="visible" value="!(isLocked || isInFormation)"/>
				<styleClass value="$InfoBlockIndent"/>
				<block type="text">
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorStrongBlueish'"/>
					<text value="IDS_CHOOSE_MODERNIZATION"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="!!(isLocked || isInFormation)"/>
				<styleClass value="$InfoBlockIndent"/>
				<block className="icon_warning_orange" type="native">
					<style>
						<marginTop value="4px"/>
					</style>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<style>
						<maxWidth value="300"/>
					</style>
					<bind name="class" value="'$FontColorUnready'"/>
					<bind name="text" value="isInFormation				? (divisionEntranceData.divisionType == 'party')	? 'IDS_SET_UNREADY_PARTY_FIRST_TO_BUY_MODERNIZATION'
																											: 'IDS_SET_UNREADY_DIVISION_FIRST_TO_BUY_MODERNIZATION'
														 : 'IDS_LEAVE_BATTLE_FIRST_TO_BUY_MODERNIZATION'"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block className="dock_panel_pin" type="native">
				<bind name="gotoAndStop!" value="'down'"/>
				<params>
					<param name="name" value="pinBottom"/>
				</params>
				<style>
					<position value="absolute"/>
					<bottom value="-9"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ModernizationEmptySlotTooltip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'shipId'; ['dockEntity.shipSelection.evShipUpdate']; dockEntity.shipSelection.currentShipId"/>
		<bind name="watchDH" value="'shipIdForModuleInset'; ['dockEntity.shipSelection.evShipViewUpdate']; dockEntity.shipSelection.currentShipIdForModuleInset"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; shipId"/>
		<bind name="watchDH" value="'isLocked';			['shipOwnEntity.ownShip.evUpdateLock'];		shipOwnEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'isInFormation';	['shipOwnEntity.ownShip.evUpdateLock'];		shipOwnEntity.ownShip.isInFormation"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<styleClass value="$MouseDisable"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMapCustom">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
			</style>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap3" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="350px"/>
				<marginTop value="9px"/>
			</style>
			<bind name="repeat" value="list; 'ModernizationSlotInfotipItem'; {_showInTooltip: true}"/>
		</block>
		<block>
			<bind name="visible" value="!(isLocked || isInFormation)"/>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'MouseInstruction'; { _type: 'left', _instructionText: 'IDS_TOOLTIP_EMPTY_SLOT', _maxWidth: 300 }"/>
		</block>
		<block>
			<bind name="visible" value="(isLocked || isInFormation)"/>
			<styleClass value="$InfoBlockIndent"/>
			<block className="icon_warning_orange" type="native">
				<style>
					<marginTop value="4px"/>
				</style>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<style>
					<maxWidth value="300"/>
				</style>
				<bind name="class" value="'$FontColorUnready'"/>
				<bind name="text" value="isInFormation				? (divisionEntranceData.divisionType == 'party')	? 'IDS_SET_UNREADY_PARTY_FIRST_TO_BUY_MODERNIZATION'
																										: 'IDS_SET_UNREADY_DIVISION_FIRST_TO_BUY_MODERNIZATION'
													 : 'IDS_LEAVE_BATTLE_FIRST_TO_BUY_MODERNIZATION'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ModernizationSlotInfotipItem">
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'shipId'; ['dockEntity.shipSelection.evShipUpdate']; dockEntity.shipSelection.currentShipId"/>
		<bind name="watchDH" value="'shipIdForModuleInset'; ['dockEntity.shipSelection.evShipViewUpdate']; dockEntity.shipSelection.currentShipIdForModuleInset"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; shipId"/>
		<bind name="watchDH" value="'isLocked';			['shipOwnEntity.ownShip.evUpdateLock'];		shipOwnEntity.ownShip.isLocked"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY + 'MODS_COST_Demontage'; 'unmountPrice'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY + modNumericId; 'priceInfoSet'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_INFO + 'SELL_COEF'; 'sellCoef'"/>
		<bind name="var" value="{unmountCost:unmountPrice.prices[0].finalPrice}"/>
		<bind name="catch" value="'selectedPriceChanged'"/>
		<bind name="var" value="{ selectedPriceIndex: 0 }"/>
		<bind name="watch" value="'validSelectedPriceIndex'; selectedPriceIndex &gt;= priceInfoSet.prices.length ? 0 : selectedPriceIndex"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="name" value="title"/>
		<style>
			<width value="100%"/>
			<height value="70px"/>
		</style>
		<block>
			<bind name="tooltip" value="'ModernizationTooltip'; {installed:installed, iconPath: iconPath, title: title, _attributesPositive: attributesPositive, _attributesNegative: attributesNegative,
												_attributesNeutral: attributesNeutral, numInStorage:numInStorage, tooltiptype: 0, priceInfoSet: priceInfoSet, _modId: modId, 
												type:type, description: description}; 0"/>
			<styleClass value="$Fullsize"/>
			<block>
				<bind name="request" value="'click'; !isLocked ? 'modernizationClicked' : null; {modId:modId, slotId:slotId, selectedCurrency: priceInfoSet.prices[validSelectedPriceIndex].currencyID, selectedPriceIndex: validSelectedPriceIndex}"/>
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<bind name="menu" value="'SelectUnmountTypeInfotip'; !isLocked					? {sellCoef: sellCoef, numInStorage:numInStorage, installed:installed, modId:modId, slotId:slotId, _unmountPriceInfo: unmountPrice.prices[0], purchasePriceInfo: priceInfoSet.prices[validSelectedPriceIndex], selectedPriceIndex: validSelectedPriceIndex }
																					: null; null; 'selectUnmountTypeInfotipVisible'"/>
					<bind name="selected" value="(installed || selectUnmountTypeInfotipVisible)"/>
					<styleClass value="$Fullsize"/>
					<params>
						<param name="soundSet" value="dropmenu_button"/>
					</params>
					<bind name="action" value="'rollOver'; 'ServerUIDataUSS.setModernizationSeen'; { modId: modId }"/>
				</block>
			</block>
			<block>
				<styleClass value="$Fullsize"/>
				<style>
					<position value="absolute"/>
					<marginTop value="10px"/>
				</style>
				<block>
					<style>
						<width value="70px"/>
						<marginTop value="-6px"/>
						<hitTest value="false"/>
					</style>
					<block>
						<bind name="style" value="'backgroundImage'; 'url:' + iconPath"/>
						<styleClass value="$MiddleAligned"/>
						<style>
							<width value="60px"/>
							<height value="60px"/>
							<backgroundStretchX value="true"/>
							<backgroundStretchY value="true"/>
							<hitTest value="false"/>
						</style>
					</block>
				</block>
				<block>
					<bind name="class" value="isLocked ? '$MouseDisable' : '$MouseEnable'"/>
					<style>
						<width value="100%"/>
					</style>
					<block>
						<style>
							<width value="150px"/>
							<marginTop value="-5px"/>
						</style>
						<block type="text">
							<style>
								<width value="100%"/>
								<leading value="-2"/>
								<hitTest value="false"/>
							</style>
							<styleClass value="$TextDefaultBold"/>
							<bind name="text" value="'IDS_TITLE_' + toUpperCase(title)"/>
							<bind name="class" value="installed ? '$FontColorGolden' : '$FontColorWhite'"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<bind name="class" value="isLocked ? '$MouseDisable' : '$MouseEnable'"/>
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
				<right value="10px"/>
			</style>
			<block>
				<style>
					<right value="0px"/>
					<marginTop value="6px"/>
					<width value="24px"/>
					<height value="24px"/>
				</style>
				<bind name="visible" value="installed &amp;&amp; rollOver &amp;&amp; !isLocked"/>
				<bind name="request" value="'click'; 'actionTypeChanged'; {flag:2, slotId:slotId, modId:modId, selectedCurrency:priceInfoSet.prices[validSelectedPriceIndex].currencyID, selectedPriceIndex: validSelectedPriceIndex}"/>
				<block className="button_cross" type="native">
					<bind name="name" value="'ButtonUnmount'"/>
					<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_INSTRUCTION_MODERNIZATION_UNMOUNT'}], _maxWidth: 250 }"/>
					<params>
						<param name="soundSet" value="dropmenu_button"/>
					</params>
				</block>
			</block>
			<block>
				<bind name="name" value="'installed_' + title"/>
				<style>
					<right value="6px"/>
					<marginTop value="12px"/>
				</style>
				<block className="icon_check" type="native"/>
				<bind name="visible" value="(installed &amp;&amp; !rollOver) || (isLocked &amp;&amp; installed)"/>
			</block>
			<block>
				<bind name="name" value="'bought_' + title"/>
				<bind name="visible" value="numInStorage &gt; 0 &amp;&amp; !installed"/>
				<style>
					<right value="0px"/>
					<marginTop value="6px"/>
					<hitTest value="false"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<text value="IDS_IN_WAREHOUSE"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<bind name="text" value="numInStorage"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<bind name="class" value="$parent.isLocked ? '$MouseDisable' : '$MouseEnable'"/>
			<bind name="visible" value="!installed &amp;&amp; (numInStorage == 0) &amp;&amp; !(_showInTooltip)"/>
			<style>
				<position value="absolute"/>
				<right value="12px"/>
				<marginTop value="5px"/>
			</style>
			<block>
				<style>
					<right value="0"/>
				</style>
				<bind name="instance" value="'AlterablePriceTag'; {_prices: priceInfoSet.prices, _showDiscountTag: true, _selectedPriceIndex: validSelectedPriceIndex}"/>
			</block>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<right value="12px"/>
				<marginTop value="6px"/>
			</style>
			<bind name="visible" value="!installed &amp;&amp; (numInStorage == 0) &amp;&amp; _showInTooltip"/>
			<block>
				<style>
					<right value="0px"/>
				</style>
				<bind name="visible" value="priceInfoSet.prices[0].finalPrice &gt; 0"/>
				<bind name="instance" value="'PriceTag'; { priceInfo:priceInfoSet.prices[0], _showDiscountTag:true}"/>
			</block>
			<block>
				<style>
					<marginTop value="3px"/>
				</style>
				<block type="text">
					<style>
						<marginRight value="3px"/>
					</style>
					<bind name="visible" value="(priceInfoSet.prices.length &gt; 1) &amp;&amp; (priceInfoSet.prices[1].finalPrice &gt; 0)"/>
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<text value="IDS_OR"/>
				</block>
				<block>
					<bind name="visible" value="(priceInfoSet.prices.length &gt; 1) &amp;&amp; (priceInfoSet.prices[1].finalPrice &gt; 0)"/>
					<styleClass value="$MiddleVAligned"/>
					<bind name="instance" value="'PriceTag'; { priceInfo:priceInfoSet.prices[1], _showDiscountTag:true }"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<bottom value="0px"/>
				<position value="absolute"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ModernizationTooltip">
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'shipId'; ['dockEntity.shipSelection.evShipUpdate']; dockEntity.shipSelection.currentShipId"/>
		<bind name="watchDH" value="'shipIdForModuleInset'; ['dockEntity.shipSelection.evShipViewUpdate']; dockEntity.shipSelection.currentShipIdForModuleInset"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; shipId"/>
		<bind name="watchDH" value="'isLocked';			['shipOwnEntity.ownShip.evUpdateLock'];			shipOwnEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'_playerShipParams';	['shipOwnEntity.ownShip.evShipParamsUpdate'];	shipOwnEntity.ownShip.params"/>
		<bind name="changeDispatch" value="shipId + _modId; 'evCompareChanged'"/>
		<bind name="dispatch" value="'Tooltip.selfOpened'; 'evCompareChanged'"/>
		<bind name="action" value="'evCompareChanged'; 'getShipWithUpgrade'; {id: _modId, type : 'modernization', shipId: shipId}"/>
		<bind name="primaryEntityDH" value="'compareItemEntity'; CC.compareItem; 'modernization_' + _modId"/>
		<bind name="watchDH" value="'modernizationCompare'; ['compareItemEntity.compareItem.evUpdate']; compareItemEntity.dataComponent.data"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="340px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<paddingTop value="8px"/>
					<paddingBottom value="8px"/>
					<paddingLeft value="6px"/>
					<paddingRight value="6px"/>
				</style>
				<block>
					<bind name="style" value="'backgroundImage'; 'url:' + iconPath"/>
					<style>
						<width value="60px"/>
						<height value="60px"/>
						<backgroundStretchX value="true"/>
						<backgroundStretchY value="true"/>
					</style>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<marginLeft value="6px"/>
						<marginTop value="-1px"/>
					</style>
					<block type="text">
						<styleClass value="$TextHeaderBold"/>
						<style>
							<width value="100%"/>
							<leading value="-5"/>
						</style>
						<bind name="text" value="'IDS_TITLE_' + toUpperCase(title)"/>
						<bind name="class" value="installed ? '$FontColorGolden' : '$FontColorWhite'"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<style>
							<width value="100%"/>
							<marginTop value="-4px"/>
						</style>
						<bind name="class" value="installed ? '$FontColorGolden' : '$FontColorWhite'"/>
						<bind name="text" value="'IDS_MODERNIZATION_' + toUpperCase(type)"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<block type="text">
					<bind name="visible" value="(numInStorage &gt; 0) &amp;&amp; !(installed)"/>
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<bind name="text" value="tr('IDS_IN_WAREHOUSE') + ' ' + numInStorage"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<marginLeft value="2px"/>
					</style>
					<bind name="visible" value="installed"/>
					<block className="icon_check" type="native">
						<styleClass value="$MiddleVAligned"/>
					</block>
					<block type="text">
						<style>
							<marginLeft value="4px"/>
						</style>
						<styleClass value="$TextDefault"/>
						<styleClass value="$MiddleVAligned"/>
						<bind name="class" value="'$FontColorGolden'"/>
						<text value="IDS_MODERNIZATION_IS_INSTALLED"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="visible" value="numInStorage == 0 &amp;&amp; !(installed)"/>
					<block>
						<bind name="visible" value="priceInfoSet.prices[0].finalPrice &gt; 0"/>
						<styleClass value="$MiddleVAligned"/>
						<bind name="instance" value="'PriceTagWithLabel'; { priceInfo:priceInfoSet.prices[0], _showDiscountTag:true, _label: 'IDS_PURCHASE_COST'}"/>
					</block>
					<block type="text">
						<bind name="visible" value="(priceInfoSet.prices.length &gt; 1) &amp;&amp; (priceInfoSet.prices[1].finalPrice &gt; 0)"/>
						<styleClass value="$TextDefault"/>
						<styleClass value="$MiddleVAligned"/>
						<text value="IDS_OR"/>
					</block>
					<block>
						<bind name="visible" value="(priceInfoSet.prices.length &gt; 1) &amp;&amp; (priceInfoSet.prices[1].finalPrice &gt; 0)"/>
						<styleClass value="$MiddleVAligned"/>
						<bind name="instance" value="'PriceTag'; { priceInfo:priceInfoSet.prices[1], _showDiscountTag:true }"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<block type="text">
					<style>
						<maxWidth value="315"/>
					</style>
					<styleClass value="$TextHeaderBigDefault"/>
					<bind name="text" value="'IDS_DESC_' + toUpperCase(description)"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$Fullsize"/>
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<paddingTop value="16px"/>
						<paddingLeft value="12px"/>
						<paddingRight value="12px"/>
					</style>
					<bind name="instance" value="'ParamsModifierList'; { _attributesPositive: _attributesPositive,
														_attributesNegative: _attributesNegative,
														_attributesNeutral:	_attributesNeutral}"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerParams; 0; null; 'tooltipShipParams'; _playerShipParams; modernizationCompare; 1; 0; null; 1; 1; 0"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'ParamsAfterMount'; !installed &amp;&amp; viewParams.hasDiff ? { _viewParams: 	viewParams,
																									_title: 'IDS_AFTER_MOUNT'}
																								 	: null"/>
			</block>
			<block>
				<bind name="visible" value="!isLocked &amp;&amp; (tooltiptype!='modalWindow')"/>
				<style>
					<width value="100%"/>
				</style>
				<styleClass value="$InfoBlockIndent"/>
				<bind name="instance" value="'MouseInstruction'; !installed &amp;&amp; numInStorage == 0 ? { _type: 'left', _instructionText: 'IDS_INSTRUCTION_MODERNIZATION_PURCHASE_AND_INSTALL', _maxWidth: '270'} :
												installed &amp;&amp; tooltiptype == 0	? { _type: 'right', _instructionText: 'IDS_INSTRUCTION_MODERNIZATION_INSTALLED_ITEM', _maxWidth: '270'} :
												installed &amp;&amp; tooltiptype == 1	? { _type: 'left', _instructionText: 'IDS_TOOLTIP_EMPTY_SLOT', _maxWidth: '270'} :
												!installed &amp;&amp; numInStorage &gt; 0	? { _type: 'left', _instructionText: 'IDS_INSTRUCTION_MODERNIZATION_INSTALL', _maxWidth: '270'}
																				: null"/>
			</block>
		</block>
	</block>
	<block className="SelectUnmountTypeInfotip">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'accountGold';		['resourceEntity.accountResource.evChangedGold'];	resourceEntity.accountResource.gold"/>
		<bind name="watchDH" value="'accountCredits';	['resourceEntity.accountResource.evChangedCredit'];	resourceEntity.accountResource.credits"/>
		<bind name="watch" value="'curCurrencyResource'; ((_unmountPriceInfo.currency == 'gold') ? accountGold : accountCredits)"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<styleClass value="$DefaultMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<bind name="visible" value="installed"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="dock_submenu_item" type="native">
				<bind name="name" value="'RemoveInSelectUnmountTypeInfotip'"/>
				<params>
					<param name="soundSet" value="dropmenu_button"/>
				</params>
				<bind name="request" value="'click'; 'actionTypeChanged'; {flag:2, modId:modId, slotId:slotId, selectedCurrency: purchasePriceInfo.currencyID, selectedPriceIndex: selectedPriceIndex }"/>
				<styleClass value="$ContextMenuListItem"/>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<hitTest value="false"/>
						<right value="6px"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<text value="IDS_UNMOUNT"/>
					</block>
					<block>
						<bind name="instance" value="'PriceTag'; { 	priceInfo: _unmountPriceInfo, 
													_showDiscountTag: true, 
													_deficit: _unmountPriceInfo.finalPrice - curCurrencyResource}"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block className="dock_submenu_item" type="native">
				<bind name="name" value="'DestroyInSelectUnmountTypeInfotip'"/>
				<params>
					<param name="soundSet" value="dropmenu_button"/>
				</params>
				<bind name="request" value="'click'; 'actionTypeChanged'; {flag:8, slotId:slotId, modId:modId, selectedCurrency: purchasePriceInfo.currencyID, selectedPriceIndex: selectedPriceIndex }"/>
				<styleClass value="$ContextMenuListItem"/>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<hitTest value="false"/>
						<right value="6px"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<style>
							<hitTest value="false"/>
						</style>
						<text value="IDS_SELL"/>
					</block>
					<block>
						<bind name="instance" value="'PriceTag'; { priceInfo:  {finalPrice: (purchasePriceInfo.finalPrice) * (sellCoef.prices[0].finalPrice), currency: 'credits'}}"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="!installed"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="dock_submenu_item" type="native">
				<params>
					<param name="soundSet" value="dropmenu_button"/>
				</params>
				<bind name="request" value="'click'; 'actionTypeChanged'; {flag:1, slotId:slotId, modId:modId, selectedCurrency: purchasePriceInfo.currencyID, selectedPriceIndex: selectedPriceIndex }"/>
				<styleClass value="$ContextMenuListItem"/>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<hitTest value="false"/>
						<right value="6px"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<text value="IDS_INSTALL"/>
					</block>
					<block>
						<bind name="visible" value="numInStorage == 0"/>
						<bind name="instance" value="'PriceTag'; { priceInfo: purchasePriceInfo, _showDiscountTag:true }"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="SelectModarnizationActionInfotip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'accountGold';		['resourceEntity.accountResource.evChangedGold'];	resourceEntity.accountResource.gold"/>
		<bind name="watchDH" value="'accountCredits';	['resourceEntity.accountResource.evChangedCredit'];	resourceEntity.accountResource.credits"/>
		<bind name="watch" value="'curCurrencyResource'; ((unmountPrice.prices[0].currency == 'gold') ? accountGold : accountCredits)"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY + 'MODS_COST_Demontage'; 'unmountPrice'"/>
		<bind name="var" value="{unmountCost: unmountPrice.prices[0].finalPrice}"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap3" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
		</block>
		<block className="dock_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginTop value="-9px"/>
				<marginRight value="-14px"/>
				<marginBottom value="-19px"/>
				<marginLeft value="-14px"/>
			</style>
		</block>
		<block>
			<style>
				<width value="168px"/>
			</style>
			<block className="dock_submenu_item" type="native">
				<params>
					<param name="soundSet" value="dropmenu_button"/>
				</params>
				<bind name="dispatch" value="'click'; 'unmountTypeChanged'; {unmountFlag: LobbyConstants.MODERNIZATION_UNSET}"/>
				<bind name="selected" value="$parent.unmountFlag == LobbyConstants.MODERNIZATION_UNSET"/>
				<style>
					<width value="100%"/>
					<height value="24px"/>
				</style>
				<block>
					<style>
						<right value="2px"/>
						<hitTest value="false"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<bind name="class" value="$parent.unmountFlag == LobbyConstants.MODERNIZATION_UNSET ? '$Bold' : '$None'"/>
						<text value="IDS_UNMOUNT"/>
					</block>
					<block>
						<bind name="instance" value="'PriceTag'; { 	priceInfo: unmountPrice.prices[0], _showDiscountTag: true, 
													_deficit: unmountPrice.prices[0].finalPrice - curCurrencyResource}"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<position value="absolute"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block className="dock_submenu_item" type="native">
				<params>
					<param name="soundSet" value="dropmenu_button"/>
				</params>
				<bind name="dispatch" value="'click'; 'unmountTypeChanged'; {unmountFlag: LobbyConstants.MODERNIZATION_SELL}"/>
				<bind name="selected" value="$parent.unmountFlag == LobbyConstants.MODERNIZATION_SELL"/>
				<style>
					<width value="100%"/>
					<height value="24px"/>
				</style>
				<block>
					<bind name="visible" value="action == 0"/>
					<style>
						<right value="4px"/>
						<hitTest value="false"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<bind name="class" value="$parent.unmountFlag == LobbyConstants.MODERNIZATION_SELL ? '$Bold' : '$None'"/>
						<text value="IDS_SELL"/>
					</block>
					<block>
						<bind name="instance" value="'PriceTag'; {priceInfo: {finalPrice: sellCost, currency: 'credits'}}"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="ModernizationsParams">
		<bind name="controller" value="lesta.unbound.core.UbController"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
				<marginBottom value="6px"/>
			</style>
			<block type="text">
				<style>
					<width value="100%"/>
				</style>
				<styleClass value="$TextDefault"/>
				<bind name="text" value="percent &gt; 0 ? '+' + percent + '%' + ' ' + ids
									: percent &lt; 0 	? percent + '%' + ' '+ ids
													: percent == 0 ? ids
																	: ' '"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<css name="$TextShipLineNormal">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="15"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextShipLinePremium">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="15"/>
		<selectable value="false"/>
		<textColor value="0xFFCC66"/>
	</css>
	<css name="$TextShipLineBlack">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="15"/>
		<selectable value="false"/>
		<textColor value="0x08222a"/>
	</css>
	<css name="$TextMetaHeader">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="15"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextMetaInfo">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="15"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$ShipParamTitleWidth">
		<width value="160px"/>
	</css>
	<css name="$ShipParamOnePieceTitleWidth">
		<maxWidth value="160"/>
	</css>
	<css name="$TextShipLinePremiumAccentBold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="25"/>
		<selectable value="false"/>
		<textColor value="0xFFCC66"/>
	</css>
	<css name="$TextShipLineBoldAccent">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="25"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextShipLinePremiumBold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="15"/>
		<selectable value="false"/>
		<textColor value="0xFFCC66"/>
	</css>
	<css name="$TextShipLineBold">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="15"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextShipLineBlackAccentBold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="25"/>
		<selectable value="false"/>
		<textColor value="0x08222a"/>
	</css>
	<css name="$TextShipLineBlackBold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="15"/>
		<selectable value="false"/>
		<textColor value="0x08222a"/>
	</css>
	<css name="$TextShipHeaderNameGolden21">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="21"/>
		<selectable value="false"/>
		<textColor value="0xFFCC66"/>
	</css>
	<css name="$TextShipHeaderNameNormal21">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="21"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextShipHeaderNameBlack21">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="21"/>
		<selectable value="false"/>
		<textColor value="0x08222a"/>
	</css>
	<block className="ShipLineItem">
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; _shipId"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; _shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="watchDH" value="'upgradableShipInfo'; ['shipEntity.upgradableShipInfo.evUpdate']; shipEntity.upgradableShipInfo"/>
		<bind name="watch" value="'notInvertable'; (shipOwnEntity != null) || _notInvertable"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<bind name="style" value="'marginTop'; _large ? '7px' : '1px'"/>
			<block className="icon_wreath" type="native">
				<style>
					<position value="absolute"/>
					<left value="-5px"/>
					<top value="-8px"/>
				</style>
				<bind name="visible" value="upgradableShipInfo.isElite || shipInfo.isPremium || shipInfo.uiSpecial"/>
				<bind name="gotoAndStop!" value="(shipInfo.isPremium || shipInfo.uiSpecial) 	? 'premium' : 'elite'"/>
			</block>
			<block className="icon_ship" type="native">
				<bind name="gotoAndStop!" value="shipInfo.subtype + (!notInvertable ? '_U' : (shipInfo.isPremium || shipInfo.uiSpecial ? '_P' : '')) "/>
			</block>
		</block>
		<block>
			<style>
				<marginTop value="-5px"/>
				<marginLeft value="3px"/>
			</style>
			<bind name="instance" value="'InvertableTextLine'; { _text: shipInfo.levelRome + ' ' + toUpperCase(tr(shipInfo.nameIDS)),
												_invert: !notInvertable, 
												_normalClass: (shipInfo.isPremium || shipInfo.uiSpecial ? (_large ? '$TextShipLinePremiumAccentBold' : '$TextShipLinePremiumBold') 
																										: (_large ? '$TextShipLineBoldAccent' : '$TextShipLineBold')), 
												_invertedClass: (_large ? '$TextShipLineBlackAccentBold': '$TextShipLineBlackBold'),
												_width: _width ? _width : '110px',
												_letterSpacing: 0.8}"/>
		</block>
	</block>
	<block className="ShipInfoTabHeader">
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; shipId"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="watchDH" value="'upgradableShipInfo'; ['shipEntity.upgradableShipInfo.evUpdate']; shipEntity.upgradableShipInfo"/>
		<bind name="watch" value="'isOwned'; shipOwnEntity != null"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<bind name="feature" value="13; ''"/>
			<style>
				<width value="300px"/>
				<height value="184px"/>
				<position value="absolute"/>
				<hitTest value="false"/>
			</style>
			<bind name="transition" value="_isNotExpanded; 0.1;	{width: 300, height: 184};
												(feature_13 != 'locked' &amp;&amp; isOwned)	? {width: 118, height: 72}
																					: {width: 69, height: 43};
												{width: 300, height: 184}"/>
			<bind name="instance" value="'NationFlagsBig'; _isHideFlag ? null : {_width: '100%', _height: '100%', _alpha: 0.5, shipCountry: shipInfo.flagName}"/>
		</block>
		<block>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<style>
				<marginTop value="12px"/>
			</style>
			<block>
				<style>
					<backgroundColor value="0x01000000"/>
				</style>
				<block>
					<style>
						<height value="20px"/>
					</style>
					<block className="icon_wreath" type="native">
						<style>
							<position value="absolute"/>
							<left value="-3px"/>
							<top value="-3px"/>
						</style>
						<bind name="visible" value="(upgradableShipInfo.isElite || shipInfo.isPremium || shipInfo.uiSpecial) &amp;&amp; !_isNotMyShip"/>
						<bind name="gotoAndStop!" value="(shipInfo.isPremium || shipInfo.uiSpecial) 	? 'premium' : 'elite'"/>
					</block>
					<block>
						<styleClass value="$MiddleVAligned"/>
						<style>
							<marginLeft value="2px"/>
						</style>
						<block className="icon_ship" type="native">
							<bind name="gotoAndStop!" value="_fromCrew 	? (isOwned ? ((shipInfo.isPremium || shipInfo.uiSpecial) ? shipInfo.subtype + '_P' : shipInfo.subtype) : shipInfo.subtype + '_U')
														: _inSideCompare &amp;&amp; _isNotMyShip ? shipInfo.subtype
														: ((shipInfo.isPremium || shipInfo.uiSpecial) ? shipInfo.subtype + '_P' : shipInfo.subtype)"/>
						</block>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<marginLeft value="3px"/>
					</style>
					<bind name="instance" value="'InvertableTextLine'; { _text: (shipInfo.levelRome) + ' ' + toUpperCase(tr(shipInfo.nameIDS + '_FULL')),
														_invert: _fromCrew ? !isOwned : false, 
														_normalClass: (shipInfo.isPremium || shipInfo.uiSpecial) &amp;&amp; !_isNotMyShip	? '$TextShipHeaderNameGolden21'
																																	: '$TextShipHeaderNameNormal21',
														_invertedClass: '$TextShipHeaderNameBlack21' }"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<style>
					<height value="28px"/>
					<marginTop value="4px"/>
				</style>
				<bind name="transition" value="_isNotExpanded; 0.15;	{alpha: 1, ubScaleY: 1, scaleY: 1};
													{alpha: 0, ubScaleY: 0.23, scaleY: 0.23};
													{alpha: 1, ubScaleY: 1, scaleY: 1}"/>
				<bind name="watch" value="'shipClass';	(shipInfo.subtype == ShipTypes.Cruiser) 		? tr('IDS_CRUISER') :
										(shipInfo.subtype == ShipTypes.AircraftCarrier)	? tr('IDS_AIRCARRIER') :
										(shipInfo.subtype == ShipTypes.BattleShip) 		? tr('IDS_BATTLESHIP') : 
										(shipInfo.subtype == ShipTypes.Auxiliary) 		? tr('IDS_AUXILIARY') :
										(shipInfo.subtype == ShipTypes.Submarine) 		? tr('IDS_SUBMARINE')
																						: tr('IDS_DESTROYER')"/>
				<bind name="instance" value="'InvertableTextLine'; { _text: subst('IDS_SHIP_LEVEL', [], {_shipClass: shipClass, _shipLevel: shipInfo.levelRome}),
													_invert: _fromCrew ? !isOwned : false, 
													_normalClass: shipInfo.isPremium &amp;&amp; !_isNotMyShip	? '$TextShipLinePremium'
																										: '$TextShipLineNormal', 
													_invertedClass: '$TextShipLineBlack' }"/>
			</block>
		</block>
	</block>
	<block className="TitleDefaultMockup">
		<style>
			<flow value="horizontal"/>
			<width value="100%"/>
		</style>
		<block type="text">
			<style>
				<leading value="-4"/>
				<maxWidth value="184"/>
				<marginRight value="9px"/>
			</style>
			<bind name="class" value="meta ? '$TextMetaHeader' : '$TextMetaInfo'"/>
			<bind name="style" value="'alpha'; meta ? 1 : 0.7"/>
			<bind name="text" value="hideParamNameIDS ? (title.data.items ? tr(title.data.items[0].textValue) : '') : (tr(nameIDS) + ' ' + (title.data.items ? tr(title.data.items[0].textValue) : ''))"/>
		</block>
	</block>
	<block className="TitleVertMockup">
		<style>
			<width value="100%"/>
		</style>
		<block type="text">
			<styleClass value="$TextMetaInfo"/>
			<style>
				<leading value="-4"/>
				<width value="184px"/>
				<marginRight value="9px"/>
			</style>
			<bind name="style" value="'alpha'; meta ? 1 : 0.7"/>
			<bind name="text" value="nameIDS"/>
		</block>
		<block type="text">
			<style>
				<leading value="-4"/>
				<maxWidth value="184"/>
				<marginRight value="9px"/>
			</style>
			<styleClass value="$TextMetaInfo"/>
			<style>
				<alpha value="0.7"/>
				<marginTop value="-7px"/>
			</style>
			<bind name="text" value="title.data.items[0].textValue"/>
		</block>
	</block>
	<block className="ShipInfoTabRow">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'dockDefaultValues'; 'dockInitData,dockUpdateData'"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="watch" value="'id'; id"/>
		<bind name="name" value="'param_' + id"/>
		<bind name="dispatch" value="'click'; dockDefaultValues.armourVisibility &amp;&amp; !(excursionOff) ? null : 'onParamRowClicked'; index"/>
		<bind name="action" value="'click'; (id == 'armour') &amp;&amp; (_armourOff != true) ? (dockDefaultValues.armourVisibility ? 'hideArmour' : 'showArmour') : null"/>
		<bind name="fade" value="!empty &amp;&amp; (state &amp;&amp; isRoot || (!(parent.empty) &amp;&amp; parent.state.active)); 0.15; {alpha: 0, ubScaleY: 0.0}; {alpha: 1, ubScaleY: 1.0}"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<bind name="visible" value="!(!_armorEnabled &amp;&amp; id == 'armour')"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="tooltip" value="'ShipParamTooltip';{	id: id, meta: meta, secondLevel: secondLevel, tooltipIDS: tooltipIDS, nameIDS: nameIDS,
											_hasExcursion: (!excursionOff &amp;&amp; !(dockDefaultValues.armourVisibility)),
											_isArmour: id == 'armour', _armourOff: _armourOff, _torpedoId: aviations.params.ammoNameRaw, 
											_deepWaterTorpedoBombers: deepWaterTorpedoBombers }"/>
			<block className="inner_panel" type="native">
				<styleClass value="$Fullsize"/>
				<styleClass value="$PxHorizontalCorrection"/>
				<styleClass value="$MouseDisable"/>
				<style>
					<position value="absolute"/>
				</style>
				<bind name="visible" value="!(isRoot)"/>
			</block>
			<block className="dock_submenu_item" type="native">
				<styleClass value="$Fullsize"/>
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<position value="absolute"/>
				</style>
				<bind name="style" value="'alpha'; (!(isRoot) &amp;&amp; !(excursionOff) &amp;&amp; !(dockDefaultValues.armourVisibility)) || ((id == 'armour') &amp;&amp; (_armourOff != true)) ? 1 : 0"/>
				<bind name="selected" value="state.selected"/>
			</block>
			<block>
				<styleClass value="$Fullsize"/>
				<styleClass value="$MouseDisable"/>
				<style>
					<position value="absolute"/>
					<left value="1px"/>
				</style>
				<bind name="instance" value="'StatValueBar'; meta ? {_width: 310,	 						_hasDiff: root.hasDiff,
													_currentValue: root.values[0], 			_diffValue: root.diffData[0].value,
													_isGood: root.diffData[0].isGood, 		_expand: state.active,
													_invert: ident == 'visibility',			rollOver: rollOver,
													viewParams: viewParams} : null"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<position value="absolute"/>
					<bottom value="-1px"/>
				</style>
				<styleClass value="$MouseDisable"/>
				<bind name="visible" value="meta"/>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<styleClass value="$MouseDisable"/>
				<style>
					<width value="100%"/>
					<marginRight value="12px"/>
				</style>
				<bind name="style" value="'marginLeft'; secondLevelTooltip ? '12px' : '32px'"/>
				<bind name="style" value="'marginTop'; (viewParams.list[$index - 1].meta || viewParams.list[$index - 1] == null) &amp;&amp; !(meta) ? '5px' : '1px'"/>
				<bind name="style" value="'marginBottom'; viewParams.list[$index + 1].meta || viewParams.list[$index + 1] == null ? '8px' : '3px'"/>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="instance" value="'TitleDefaultMockup';(title == null || titleMockup == 0) ? { meta: meta, isRoot: isRoot, nameIDS: nameIDS, hideParamNameIDS: hideParamNameIDS, title: title } : null"/>
					<bind name="instance" value="'TitleVertMockup'; (title != null &amp;&amp; titleMockup == 1) ? { meta: meta, isRoot: isRoot, nameIDS: nameIDS, title: title } : null"/>
				</block>
				<block>
					<block>
						<style>
							<right value="0"/>
							<position value="absolute"/>
						</style>
						<block>
							<bind name="visible" value="secondLevel.hasDiff ? true : false"/>
							<block type="text">
								<styleClass value="$TextParams"/>
								<style>
									<marginTop value="-1px"/>
									<alpha value="0.55"/>
								</style>
								<text value="("/>
							</block>
							<block className="icon_warning_orange" type="native">
								<styleClass value="$MiddleVAligned"/>
								<style>
									<marginLeft value="-2px"/>
									<marginRight value="-2px"/>
								</style>
							</block>
							<block type="text">
								<styleClass value="$TextParams_tight_left"/>
								<style>
									<marginTop value="-1"/>
								</style>
								<text value=")"/>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
						<bind name="instance" value="'ParamElement'; value"/>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
				<block>
					<bind name="fade" value="!(isRoot) &amp;&amp; !(excursionOff) &amp;&amp; !(dockDefaultValues.armourVisibility); 0.3; {alpha: 0}; {alpha: 1}"/>
					<style>
						<position value="absolute"/>
						<left value="-22px"/>
						<top value="7px"/>
					</style>
					<block className="icon_camera_off" type="native">
						<style>
							<position value="absolute"/>
						</style>
						<bind name="fade" value="!(state.selected); 0.3; {alpha: 0}; {alpha: 1}"/>
					</block>
					<block className="icon_camera_on" type="native">
						<style>
							<position value="absolute"/>
						</style>
						<bind name="fade" value="state.selected; 0.3; {alpha: 0}; {alpha: 1}"/>
					</block>
				</block>
				<block>
					<bind name="visible" value="((id == 'armour') &amp;&amp; (_armourOff != true))"/>
					<style>
						<position value="absolute"/>
						<left value="-22px"/>
						<top value="6px"/>
					</style>
					<block className="button_armour_switcher_small" type="native">
						<bind name="selected" value="dockDefaultValues.armourVisibility"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerModernizations"/>
			<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'weaponsInfo'; deepWaterTorpedoRow ? torpedoSlotsList[0].itemsInSlot[0].id : null; 'torpedoes'"/>
			<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'weaponsInfo'; deepWaterBomberRow  ? planesSlotsList[2].itemsInSlot[0].id : null;  'aviations'"/>
			<bind name="watch" value="'deepWaterTorpedoRow'; (parent.nameIDS == 'IDS_SHIP_PARAM_TORPEDY') &amp;&amp; (id == 'listTorpedoes0')"/>
			<bind name="watch" value="'deepWaterBomberRow'; 	(parent.nameIDS == 'IDS_SHIP_PARAM_AVIATION') &amp;&amp; (id == 'tbomber_squadrons')"/>
			<bind name="watch" value="'deepWaterTorpedoes'; 		(parent.nameIDS == 'IDS_SHIP_PARAM_TORPEDY') &amp;&amp; (id == 'listTorpedoes0') &amp;&amp; (torpedoes.params.torpedoes.isDeepWater == true)"/>
			<bind name="watch" value="'deepWaterTorpedoBombers'; (parent.nameIDS == 'IDS_SHIP_PARAM_AVIATION') &amp;&amp; (id == 'tbomber_squadrons') &amp;&amp; (aviations.params.torpedoIsDeepWater == true)"/>
			<bind name="visible" value="deepWaterTorpedoes == true"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$Fullsize"/>
				<styleClass value="$MouseDisable"/>
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<position value="absolute"/>
				</style>
				<bind name="visible" value="!(isRoot)"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="32px"/>
					<marginRight value="12px"/>
					<marginTop value="1px"/>
					<marginBottom value="3px"/>
				</style>
				<bind name="instance" value="'TorpedoAffectedShipsParamRow'; (deepWaterTorpedoes == true) ? { _torpedoId: torpedoes.params.torpedoes.ammoName, _isTooltip: true } : null"/>
			</block>
		</block>
		<block className="button_expand" type="native">
			<bind name="selected" value="state.active"/>
			<bind name="visible" value="expandable"/>
			<params>
				<param name="toggle" value="true"/>
				<param name="soundSet" value="dropmenu_button"/>
				<param name="focusable" value="false"/>
			</params>
			<style>
				<position value="absolute"/>
				<height value="24px"/>
				<width value="100%"/>
				<marginLeft value="8px"/>
			</style>
		</block>
	</block>
	<block className="ShipDescription">
		<styleClass value="$InfoBlockIndent"/>
		<block>
			<bind name="visible" value="_peculiarity == 'default' &amp;&amp; _needShowProjectYear == true"/>
			<style>
				<width value="100%"/>
				<marginTop value="-3px"/>
			</style>
			<block>
				<block type="text">
					<styleClass value="$TextSecondary"/>
					<bind name="text" value="(_isPaperShip ? tr('IDS_PROJECT_YEAR') : tr('IDS_RELEASE_YEAR')) + tr('IDS_COLON')"/>
				</block>
				<block type="text">
					<styleClass value="$TextSecondaryBold"/>
					<bind name="text" value="_shipNameIDS + '_YEAR'"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<styleClass value="$AlignRight"/>
				<bind name="visible" value="_isPaperShip != true"/>
				<block type="text">
					<styleClass value="$TextSecondary"/>
					<bind name="text" value="tr('IDS_SHIPS_IN_SERIES') + tr('IDS_COLON')"/>
				</block>
				<block type="text">
					<styleClass value="$TextSecondaryBold"/>
					<bind name="text" value="_shipNameIDS + '_NUMBER'"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block type="text">
			<bind name="style" value="'marginTop'; (_peculiarity == 'default') ? '3px' : '-2px' "/>
			<styleClass value="$TextSecondaryBold"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="text" value="_shipNameIDS + '_DESCR'"/>
		</block>
	</block>
	<block className="ShipParamsList">
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerParams"/>
		<style>
			<width value="100%"/>
		</style>
		<bind name="repeat" value="viewParams.list; 'ShipInfoTabRow'; {secondLevelTooltip: secondLevelTooltip, viewParams: viewParams, _excursionOff: _excursionOff}"/>
	</block>
	<block className="ShipParamsListView">
		<style>
			<width value="100%"/>
		</style>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="appear" value="'hideParams'; 0.45; 0.0; {alpha: 1.0}; {alpha: 0.0}"/>
			<bind name="appear" value="'showParams'; 0.3; 0.10; {alpha: 0.0}; {alpha: 1.0}"/>
			<block className="stat_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="appear" value="'hideParams'; 0.45; 0.0; {alpha: 1.0, top: 0}; {alpha: 0.0, top: -10}"/>
			<bind name="appear" value="'showParams'; 0.3; 0.10; {alpha: 0.0, top: 10}; {alpha: 1.0, top: 0}"/>
			<bind name="repeat" value="viewParams.list; 'ShipInfoTabRow'; {secondLevelTooltip: secondLevelTooltip, viewParams: viewParams, _armourOff: _armourOff, _armorEnabled: _armorEnabled}"/>
		</block>
	</block>
	<block className="ShipSilhouetteRightAligned">
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; _shipID; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<style>
			<width value="122px"/>
			<height value="22px"/>
		</style>
		<bind name="style" value="'right'; (shipInfo.subtype == ShipTypes.Destroyer)	? '-26px'
																		:	(shipInfo.subtype ==  ShipTypes.Cruiser)	? '-12px'
																														: '0px'"/>
		<bind name="style" value="'backgroundImage'; 'url:' + shipInfo.pathTinyIcon"/>
	</block>
	<block className="ShipPanel">
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; shipId"/>
		<bind name="watchDH" value="'crewId';		['shipOwnEntity.ownShip.evCrewChanged'];	shipOwnEntity.ownShip.crewId"/>
		<bind name="watchDH" value="'ownShipExp';	['shipOwnEntity.ownShip.evUpdateConfig'];	shipOwnEntity.ownShip.exp"/>
		<bind name="primaryEntityDH" value="'compareItemEntity'; CC.compareItem; 'testShipParams'"/>
		<bind name="watchDH" value="'testShipParams'; ['compareItemEntity.compareItem.evUpdate']; compareItemEntity.dataComponent.data"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; crewId"/>
		<bind name="watchDH" value="'crew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'crew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'inset'; ['dockEntity.insetComponent.evUpdate']; dockEntity.insetComponent.inset"/>
		<bind name="watchDH" value="'playerShipParams';	['shipOwnEntity.ownShip.evShipParamsUpdate'];	shipOwnEntity.ownShip.params"/>
		<bind name="watchDH" value="'isLocked';			['shipOwnEntity.ownShip.evUpdateLock'];			shipOwnEntity.ownShip.isLocked"/>
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerParams; 450.0; shipId; 'fullShipParams'; shipOwnEntity != null ? playerShipParams : shipInfo.params; testShipParams; 1; 0; null; 0; 1; 1; excursionOff"/>
		<bind name="watch" value="'isOwned'; shipOwnEntity != null"/>
		<bind name="watch" value="'showPanel';	(isOwned &amp;&amp; (inset == LobbyConstants.DOCK)) ||
								inset == LobbyConstants.SHIP_MODULES ||
								inset == LobbyConstants.SHIP_EXTERIOR"/>
		<bind name="watch" value="'carouselRows'; (userPrefs.curRowCountIndex == null) ? 0 : userPrefs.curRowCountIndex"/>
		<bind name="watch" value="'isSmallCarouselView'; (userPrefs.isSmallCarouselView == null) ? false : userPrefs.isSmallCarouselView"/>
		<bind name="watch" value="'excursionOff'; (testShipParams != null || (isOwned &amp;&amp; isLocked) || !(shipInfoSlim.isDownloaded) || (shipInfo.subtype == ShipTypes.Submarine))"/>
		<bind name="watch" value="'expandUnavailable';	inset == LobbyConstants.SHIP_MODULES ||
										inset == LobbyConstants.SHIP_EXTERIOR"/>
		<bind name="watch" value="'isExpanded'; (userPrefs.shipPanelExpanded == null)	? true :
								expandUnavailable						? true
																		: userPrefs.shipPanelExpanded"/>
		<bind name="fade" value="showPanel; showPanel ? 0.3 : 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
		<bind name="updateAllStates!" value="showPanel"/>
		<params>
			<param name="name" value="panelShipStats"/>
		</params>
		<style>
			<width value="320px"/>
			<height value="100%"/>
		</style>
		<bind name="style" value="'marginBottom'; isSmallCarouselView	?	(carouselRows == 1) ? '353px' :
															(carouselRows == 2) ? '416px'
																				: '290px'
														: '290px'"/>
		<block>
			<style>
				<height value="100%f"/>
				<width value="100%"/>
			</style>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<block className="notification_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="stat_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="tooltip" value="'ShipExtendedTooltip'; isExpanded ? null : { shipId: shipId }"/>
					<block className="button_expand_right_aligned" type="native">
						<bind name="visible" value="!(expandUnavailable)"/>
						<bind name="var" value="{isExpandClickable: true}"/>
						<bind name="catch" value="'click'; {isExpandClickable: false}; 'expandClickDisabledEv'"/>
						<bind name="dispatch" value="'expandClickDisabledEv'; 'expandClickEnabledEv'; null; 2; 0.12"/>
						<bind name="catch" value="'expandClickEnabledEv'; {isExpandClickable: true}"/>
						<bind name="style" value="'hitTest'; isExpandClickable"/>
						<style>
							<position value="absolute"/>
							<top value="11px"/>
							<width value="100%"/>
							<marginRight value="3px"/>
						</style>
						<params>
							<param name="toggle" value="true"/>
							<param name="soundSet" value="dropmenu_button"/>
							<param name="focusable" value="false"/>
						</params>
						<bind name="selected" value="isExpanded"/>
						<bind name="action" value="'click'; 'setUserPref'; {value: !isExpanded, name: 'shipPanelExpanded'}"/>
					</block>
					<block>
						<style>
							<hitTest value="false"/>
						</style>
						<bind name="instance" value="'ShipInfoTabHeader'; {shipId: shipId, _isNotExpanded: !(isExpanded), _fromShipPanel: true}"/>
					</block>
				</block>
				<block>
					<bind name="fade" value="isExpanded &amp;&amp; inset == LobbyConstants.DOCK;
					0.15;
					{alpha: 0, height: 0, ubScaleY: 0};
					{alpha: 1, height: 52, ubScaleY: 1};
					{alpha: 0, height: 0, ubScaleY: 0}"/>
					<style>
						<height value="52px"/>
					</style>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_SHIP_EXPERIENCE_USAGE'}; 0"/>
					<block>
						<style>
							<marginTop value="2px"/>
							<marginLeft value="12px"/>
						</style>
						<bind name="instance" value="'CurrentXPLarge'; isOwned ? { _exp: ownShipExp, _label: 'IDS_SHIP_EXPERIENCE'} : null "/>
					</block>
				</block>
				<bind name="feature" value="13; ''"/>
				<block>
					<bind name="visible" value="isOwned &amp;&amp; (feature_13 != 'locked')"/>
					<style>
						<width value="100%"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<block className="HorizontalDivider">
							<styleClass value="$PxHorizontalCorrection"/>
							<style>
								<width value="100%"/>
								<height value="3px"/>
							</style>
							<block className="divider_h" type="native">
								<styleClass value="$Fullsize"/>
							</block>
						</block>
					</block>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<bind name="instance" value="'ShipInfoCrewBlock'; isOwned &amp;&amp; (feature_13 != 'locked')	? {	_crewId: crewId,
																									_isNotExpanded: !(isExpanded)}
																								: null"/>
					</block>
				</block>
				<bind name="watch" value="'isArmourVisible'; isExpanded &amp;&amp;
											shipInfo.subtype != ShipTypes.Submarine &amp;&amp;
											(inset != LobbyConstants.SHIP_EXTERIOR)"/>
				<bind name="changeDispatch" value="isArmourVisible; 'hideArmourEv'; {}; 2; false"/>
				<bind name="action" value="'hideArmourEv'; 'hideArmour'"/>
				<block>
					<bind name="fade" value="isArmourVisible; 0.15;	{alpha: 0, ubScaleY: 0, scaleY: 0};
													{alpha: 1, ubScaleY: 1, scaleY: 1};
													{alpha: 0, ubScaleY: 0, scaleY: 0}"/>
					<style>
						<width value="100%"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
							<height value="32px"/>
						</style>
						<bind name="instance" value="'ArmourDisplaySwitcher'; {}"/>
					</block>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<bind name="instance" value="'ShipInfoArmourBlock'; {shipId: shipId}"/>
					</block>
					<block>
						<style>
							<position value="absolute"/>
							<bottom value="0"/>
							<width value="100%"/>
						</style>
						<block className="HorizontalDivider">
							<styleClass value="$PxHorizontalCorrection"/>
							<style>
								<width value="100%"/>
								<height value="3px"/>
							</style>
							<block className="divider_h" type="native">
								<styleClass value="$Fullsize"/>
							</block>
						</block>
					</block>
				</block>
			</block>
			<bind name="watch" value="'showStats'; !(shipInfo.isEventLike) || isOwned)"/>
			<bind name="watch" value="'showLabelComingSoon'; shipInfo.isEventLike &amp;&amp; (shipInfo.group != 'event')"/>
			<block>
				<bind name="fade" value="isExpanded; 0.15;	{alpha: 0, ubScaleY: 0, scaleY: 0};
											{alpha: 1, ubScaleY: 1, scaleY: 1};
											{alpha: 0, ubScaleY: 0, scaleY: 0}"/>
				<style>
					<width value="100%"/>
					<height value="100%f"/>
				</style>
				<block>
					<style>
						<height value="100%f"/>
						<width value="100%"/>
						<overflow value="scroll"/>
					</style>
					<styleClass value="$DefaultScrollBar"/>
					<bind name="instance" value="'ShipParamsListView'; showStats ? { viewParams: viewParams, _armorEnabled: armorEnabled } : null"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="fade" value="isExpanded &amp;&amp; showLabelComingSoon; 0.15;	{alpha: 0, ubScaleY: 0, scaleY: 0};
																{alpha: 1, ubScaleY: 1, scaleY: 1};
																{alpha: 0, ubScaleY: 0, scaleY: 0}"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'LabelComingSoon'; { _showTestSampleLabel: showStats }"/>
		</block>
	</block>
	<block className="LabelComingSoon">
		<block>
			<style>
				<width value="100%"/>
				<height value="80px"/>
			</style>
			<block className="icon_issued" type="native">
				<style>
					<marginLeft value="150px"/>
					<marginTop value="40px"/>
				</style>
				<bind name="rotation" value="-3"/>
				<innerBind elementName="item.item" name="text" value="_showTestSampleLabel ? toUpperCase(tr('IDS_TEST_SAMPLE')) : toUpperCase(tr('IDS_UNAVAILABLE_TO_DISPLAY_SOON')) : "/>
				<bind name="gotoAndPlay!" value="'issued'"/>
			</block>
		</block>
	</block>
	<css name="$TextPriceDefault">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="15"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextPriceDefaultGold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="15"/>
		<selectable value="false"/>
		<textColor value="0xFFCC66"/>
	</css>
	<css name="$TextPriceDefaultFreeExp">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="15"/>
		<selectable value="false"/>
		<textColor value="0xCCFF99"/>
	</css>
	<css name="$TextPriceDefaultDeficit">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="15"/>
		<selectable value="false"/>
		<textColor value="0x08222a"/>
	</css>
	<css name="$TextPriceLarge">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="25"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextPriceLargeGold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="25"/>
		<selectable value="false"/>
		<textColor value="0xFFCC66"/>
	</css>
	<css name="$TextPriceLargeFreeExp">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="25"/>
		<selectable value="false"/>
		<textColor value="0xCCFF99"/>
	</css>
	<css name="$TextPriceMedium">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="17"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextPriceMediumGold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="17"/>
		<selectable value="false"/>
		<textColor value="0xFFCC66"/>
	</css>
	<css name="$TextPriceMediumFreeExp">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="17"/>
		<selectable value="false"/>
		<textColor value="0xCCFF99"/>
	</css>
	<css name="$TextPriceMediumDeficit">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="17"/>
		<selectable value="false"/>
		<textColor value="0x08222a"/>
	</css>
	<css name="$TextPriceLargeDeficit">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="25"/>
		<selectable value="false"/>
		<textColor value="0x08222a"/>
	</css>
	<css name="$TextPriceSmall">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="13"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextPriceSmallGold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<selectable value="false"/>
		<textColor value="0xFFCC66"/>
	</css>
	<css name="$TextPriceSmallFreeExp">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<selectable value="false"/>
		<textColor value="0xCCFF99"/>
	</css>
	<css name="$TextPriceSmallDeficit">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<selectable value="false"/>
		<textColor value="0x08222a"/>
	</css>
	<block className="PriceTag">
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<bind name="visible" value="priceInfo.basePrice != null &amp;&amp; (priceInfo.finalPrice != priceInfo.basePrice) &amp;&amp; (_showDiscountTag == true)"/>
			<bind name="tooltip" value="'DiscountTooltip'; { priceInfo: priceInfo, _customLabel: _customLabel, _isExternal: _isExternal }"/>
			<bind name="name" value="'icon_discount_' + priceInfo.id"/>
			<block className="icon_discount" type="native">
				<style>
					<marginTop value="4px"/>
					<marginRight value="-3px"/>
				</style>
				<bind name="gotoAndStop!" value="_large || _medium ? 'large' : 'normal'"/>
			</block>
		</block>
		<block>
			<bind name="name" value="'price_' + priceInfo.id"/>
			<bind name="instance" value="'InvertableTextLine'; { _name: _name,
												_text: (_isNextPriceInARow ? (tr('IDS_AND') + ' ') : '') + format(priceInfo.finalPrice, -1) + (priceInfo.currency == 'money' ? ' ' + tr(priceInfo.currencyIds) : ''), 
												_invert: _deficit &gt; 0, 
												_normalClass:
															_customClass	?	_customClass
															: _large		?	(priceInfo.currency == 'gold' ? '$TextPriceLargeGold' : priceInfo.currency == 'freexp' ? '$TextPriceLargeFreeExp' : '$TextPriceLarge')
															: _medium 		? 	(priceInfo.currency == 'gold' ? '$TextPriceMediumGold' : priceInfo.currency == 'freexp' ? '$TextPriceMediumFreeExp' : '$TextPriceMedium')
															: _small		?	(priceInfo.currency == 'gold' ? '$TextPriceSmallGold' : priceInfo.currency == 'freexp' ? '$TextPriceSmallFreeExp' : '$TextPriceSmall')
															: (priceInfo.currency == 'gold' ? '$TextPriceDefaultGold' : priceInfo.currency == 'freexp' ? '$TextPriceDefaultFreeExp' :'$TextPriceDefault'), 
												_invertedClass:
															_customClass	?	_customClass
															:_large			?	'$TextPriceLargeDeficit'
															: _medium		?	'$TextPriceMediumDeficit'
															: _small		?	'$TextPriceSmallDeficit'
															: '$TextPriceDefaultDeficit' }"/>
		</block>
		<block>
			<bind name="visible" value="!_duplicateCurrency"/>
			<styleClass value="$MiddleVAligned"/>
			<bind name="instance" value="'Currency'; (priceInfo.currency == 'money')		? null : 
									(priceInfo.currency == 'accPoints')	? null 
																		: { _currency: priceInfo.currency, _large: _large, _medium: _medium }"/>
		</block>
		<block>
			<bind name="visible" value="_duplicateCurrency == true"/>
			<bind name="instance" value="'DuplicateCurrency'; { _large: _large }"/>
		</block>
	</block>
	<block className="Currency">
		<bind name="style" value="'marginBottom'; _large || _medium ? '1px' : '0px'"/>
		<block className="icon_currency" type="native">
			<bind name="gotoAndStop!" value="_large || _medium ? _currency + '_large' : _currency"/>
		</block>
	</block>
	<block className="DuplicateCurrency">
		<bind name="style" value="'marginTop'; _large ? '5px' : '0px'"/>
		<bind name="style" value="'backgroundImage'; 'url:../collections/duplicate_icons/duplicate_medium.png'"/>
	</block>
	<block className="AlterablePriceTag">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'accountGold';		['resourceEntity.accountResource.evChangedGold'];		resourceEntity.accountResource.gold"/>
		<bind name="watchDH" value="'accountCredits';	['resourceEntity.accountResource.evChangedCredit'];		resourceEntity.accountResource.credits"/>
		<bind name="watchDH" value="'accountFreeXP';		['resourceEntity.accountResource.evChangedFreeXP'];		resourceEntity.accountResource.freeXP"/>
		<bind name="watchDH" value="'eliteXP';			['resourceEntity.accountResource.evChangedEliteXP'];	resourceEntity.accountResource.eliteXP"/>
		<bind name="watch" value="'metaXP'; eliteXP + accountFreeXP"/>
		<bind name="watch" value="'curCurrency'; _prices[_selectedPriceIndex].currency"/>
		<bind name="watch" value="'curCurrencyResource'; curCurrency == 'gold'		? accountGold :
										curCurrency ==	'eliteXP'	? metaXP
																	: accountCredits"/>
		<bind name="dispatch" value="'isAlterablePriceMenuVisible' + varChanged; 'alterablePriceTagMenuVisibleChanged'; {isAlterablePriceMenuVisible: isAlterablePriceMenuVisible}; 0; isAlterablePriceMenuVisible ? 0 : 0.05"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<bind name="visible" value="(_prices[_selectedPriceIndex].basePrice != null) &amp;&amp; (_prices[_selectedPriceIndex].finalPrice != _prices[_selectedPriceIndex].basePrice) &amp;&amp; _showDiscountTag == true"/>
			<bind name="tooltip" value="'DiscountTooltip'; { priceInfo: _prices[_selectedPriceIndex] }"/>
			<block className="icon_discount" type="native">
				<style>
					<marginRight value="-6px"/>
				</style>
				<bind name="gotoAndStop!" value="_large || _medium ? 'large' : 'normal'"/>
			</block>
		</block>
		<block className="button_dock" type="native">
			<style>
				<flow value="horizontal"/>
			</style>
			<bind name="style" value="'hitTest'; _prices.length &gt; 1"/>
			<bind name="tooltip" value="'MouseInstructionTooltip'; ( _tooltipText != null )	? { _multiParagraphArray:  [{_paragraphText: _tooltipText}],
																				_mouseInstructions:	[{_type: 'left', _instructionText: 'IDS_HINT_CURRENCY_CHOICE'} ], _maxWidth: 250 }
																			: { _mouseInstructions:	[{_type: 'left', _instructionText: 'IDS_HINT_CURRENCY_CHOICE'} ], _maxWidth: 250 }"/>
			<bind name="tooltip" value="'PriceSelectionMenu'; {_prices: _prices, _showDiscountTag: _showDiscountTag, _selectedPriceIndex: _selectedPriceIndex, _small: _small, _medium: _medium, _large: _large,}; TooltipBehaviour.verticalInfoWidget; null; 'isAlterablePriceMenuVisible'"/>
			<block>
				<style>
					<marginTop value="0px"/>
					<marginBottom value="3px"/>
					<marginLeft value="3px"/>
					<marginRight value="1px"/>
					<hitTest value="false"/>
				</style>
				<bind name="instance" value="'AdjustablePriceTag'; { 	_prices: _prices[_selectedPriceIndex],
														_showDiscountTag: false, 
														_small: _small, _medium: _medium, _large: _large,
														_customLabel: _customLabel, _isExternal: _isExternal }"/>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$MouseDisable"/>
				<bind name="visible" value="_prices.length &gt; 1"/>
				<style>
					<marginRight value="3px"/>
					<hitTest value="false"/>
				</style>
				<block className="icon_navigate" type="native">
					<bind name="gotoAndStop!" value="'down'"/>
				</block>
			</block>
		</block>
	</block>
	<block className="AdjustablePriceTag">
		<style>
			<flow value="horizontal"/>
		</style>
		<bind name="watch" value="'_isMixedPrice'; _prices.mixPrice ? true : false"/>
		<bind name="instance" value="'PriceTagWithDeficit'; !_isMixedPrice 	? { priceInfo: _prices, 
																_showDiscountTag: _showDiscountTag, 
																_small: _small, _medium: _medium, _large: _large,
																_customLabel: _customLabel, _isExternal: _isExternal } 
															: null"/>
		<bind name="repeat" value="_isMixedPrice ? _prices.mixPrice : 0; 'MixedPriceTag'; {	_priceInfos: _prices.mixPrice, 
																			_large: _large, _medium: _medium, _small: _small, 
																			_showDiscountTag: _showDiscountTag, 
																			_customLabel: _customLabel, _isExternal: _isExternal } : null"/>
	</block>
	<block className="PriceTagWithDeficit">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'accountGold';		['resourceEntity.accountResource.evChangedGold'];		resourceEntity.accountResource.gold"/>
		<bind name="watchDH" value="'accountCredits';	['resourceEntity.accountResource.evChangedCredit'];		resourceEntity.accountResource.credits"/>
		<bind name="watchDH" value="'accountFreeXP';		['resourceEntity.accountResource.evChangedFreeXP'];		resourceEntity.accountResource.freeXP"/>
		<bind name="watchDH" value="'eliteXP';			['resourceEntity.accountResource.evChangedEliteXP'];	resourceEntity.accountResource.eliteXP"/>
		<bind name="watch" value="'metaXP'; eliteXP + accountFreeXP"/>
		<bind name="watch" value="'curCurrency'; priceInfo.currency"/>
		<bind name="watch" value="'curCurrencyResource'; curCurrency == 'gold'		? accountGold :
										curCurrency ==	'eliteXP'	? metaXP
																	: accountCredits"/>
		<bind name="watch" value="'_deficit'; (priceInfo.finalPrice - curCurrencyResource)"/>
		<block className="PriceTag">
			<style>
				<flow value="horizontal"/>
			</style>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<bind name="visible" value="priceInfo.basePrice != null &amp;&amp; (priceInfo.finalPrice != priceInfo.basePrice) &amp;&amp; (_showDiscountTag == true)"/>
				<bind name="tooltip" value="'DiscountTooltip'; { priceInfo: priceInfo, _customLabel: _customLabel, _isExternal: _isExternal }"/>
				<bind name="name" value="'icon_discount_' + priceInfo.id"/>
				<block className="icon_discount" type="native">
					<style>
						<marginTop value="4px"/>
						<marginRight value="-3px"/>
					</style>
					<bind name="gotoAndStop!" value="_large || _medium ? 'large' : 'normal'"/>
				</block>
			</block>
			<block>
				<bind name="name" value="'price_' + priceInfo.id"/>
				<bind name="instance" value="'InvertableTextLine'; { _name: _name,
												_text: (_isNextPriceInARow ? (tr('IDS_AND') + ' ') : '') + format(priceInfo.finalPrice, -1) + (priceInfo.currency == 'money' ? ' ' + tr(priceInfo.currencyIds) : ''), 
												_invert: _deficit &gt; 0, 
												_normalClass:
															_customClass	?	_customClass
															: _large		?	(priceInfo.currency == 'gold' ? '$TextPriceLargeGold' : priceInfo.currency == 'freexp' ? '$TextPriceLargeFreeExp' : '$TextPriceLarge')
															: _medium 		? 	(priceInfo.currency == 'gold' ? '$TextPriceMediumGold' : priceInfo.currency == 'freexp' ? '$TextPriceMediumFreeExp' : '$TextPriceMedium')
															: _small		?	(priceInfo.currency == 'gold' ? '$TextPriceSmallGold' : priceInfo.currency == 'freexp' ? '$TextPriceSmallFreeExp' : '$TextPriceSmall')
															: (priceInfo.currency == 'gold' ? '$TextPriceDefaultGold' : priceInfo.currency == 'freexp' ? '$TextPriceDefaultFreeExp' :'$TextPriceDefault'), 
												_invertedClass:
															_customClass	?	_customClass
															:_large			?	'$TextPriceLargeDeficit'
															: _medium		?	'$TextPriceMediumDeficit'
															: _small		?	'$TextPriceSmallDeficit'
															: '$TextPriceDefaultDeficit' }"/>
			</block>
			<block>
				<bind name="visible" value="!_duplicateCurrency"/>
				<styleClass value="$MiddleVAligned"/>
				<bind name="instance" value="'Currency'; (priceInfo.currency == 'money')		? null : 
									(priceInfo.currency == 'accPoints')	? null 
																		: { _currency: priceInfo.currency, _large: _large, _medium: _medium }"/>
			</block>
			<block>
				<bind name="visible" value="_duplicateCurrency == true"/>
				<bind name="instance" value="'DuplicateCurrency'; { _large: _large }"/>
			</block>
		</block>
	</block>
	<block className="MixedPriceTag">
		<bind name="instance" value="'PriceTagWithDeficit'; { priceInfo: _priceInfos[$index], 
											_showDiscountTag: _showDiscountTag, 
											_small: _small, _medium: _medium, _large: _large,
											_customLabel: _customLabel, _isExternal: _isExternal }"/>
	</block>
	<block className="PriceSelectionMenu">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
			</style>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap3" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
		</block>
		<block className="dock_panel" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
				<marginTop value="-9px"/>
				<marginRight value="-14px"/>
				<marginBottom value="-19px"/>
				<marginLeft value="-14px"/>
			</style>
		</block>
		<bind name="repeat" value="_prices; 'PriceSelectionMenuItem'; {_prices: _prices, _showDiscountTag: _showDiscountTag, _selectedPriceIndex: _selectedPriceIndex, _small: _small, _medium: _medium, _large: _large, }"/>
	</block>
	<block className="PriceSelectionMenuItem">
		<bind name="style" value="'width'; _large ? '140px' : '100px'"/>
		<bind name="style" value="'height'; _large ? '36px' : '24px'"/>
		<block className="dock_submenu_item" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<params>
				<param name="soundSet" value="dropmenu_button"/>
			</params>
			<bind name="selected" value="_selectedPriceIndex == $index"/>
			<bind name="dispatch" value="'buttonClick'; 'selectedPriceChanged'; { selectedPriceIndex: $index }"/>
			<bind name="name" value="'selectablePrice_' + $index"/>
			<bind name="tooltip" value="'DiscountTooltip'; (basePrice != null) &amp;&amp; (finalPrice != basePrice) ? { priceInfo: {	currency: currency, finalPrice: finalPrice,
																											basePrice: basePrice, till: till,
																											discountEventName: discountEventName}}
																							: null"/>
		</block>
		<block>
			<styleClass value="$MouseDisable"/>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<right value="3px"/>
			</style>
			<bind name="instance" value="'AdjustablePriceTag'; { _prices: _prices[$index],
												_showDiscountTag: _showDiscountTag, 
												_small: _small, _medium: _medium, _large: _large,
												_customLabel: _customLabel,
												_isExternal: _isExternal }"/>
		</block>
	</block>
	<block className="PriceDeficit">
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<block className="icon_warning_red" type="native">
				<bind name="style" value="'marginTop'; _large ? '5px' : '0px'"/>
			</block>
		</block>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextDefault"/>
			<bind name="class" value="	_large ? '$FontSizeHeader6':
						_medium ? '$FontSizeLarge' :
						_small ? '$FontSizeSmall' : '$None'"/>
			<bind name="class" value="'$FontColorCompareNegative'"/>
			<text value="IDS_NOT_ENOUGH"/>
		</block>
		<block type="text">
			<bind name="style" value="'marginLeft'; _large ? '2px' : '0px'"/>
			<styleClass value="$TextDefaultBold"/>
			<bind name="class" value="'$FontColorCompareNegative'"/>
			<bind name="class" value="	_large ? '$FontSizeHeader6':
						_medium ? '$FontSizeLarge' :
						_small ? '$FontSizeSmall' : '$None'"/>
			<bind name="text" value="format(_deficit, -1)"/>
		</block>
		<block>
			<bind name="visible" value="!_duplicateCurrency"/>
			<styleClass value="$MiddleVAligned"/>
			<bind name="style" value="'marginLeft'; _large ? '-2px' : '0px'"/>
			<bind name="instance" value="'Currency'; (priceInfo.currency != 'money') ? { _currency: priceInfo.currency, _large: _large, _medium: _medium } : null"/>
		</block>
		<block>
			<bind name="visible" value="_duplicateCurrency == true"/>
			<bind name="instance" value="'DuplicateCurrency'; { large: _large }"/>
		</block>
	</block>
	<block className="PriceInLine">
		<style>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$TextDefault"/>
				<bind name="class" value="	_large ? '$FontSizeHeader6':
							_medium ? '$FontSizeLarge' :
							_small ? '$FontSizeSmall' : '$None'"/>
				<bind name="text" value="	_customLabel 						? _customLabel :
							priceInfo.currency == 'credits' ||
							priceInfo.currency == 'gold' ||
							priceInfo.currency == 'eliteXP'		? 'IDS_PURCHASE_COST'
																: 'IDS_RESEARCH_COST'"/>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$AlignRight"/>
				<bind name="instance" value="'PriceTag'; { priceInfo: priceInfo, _deficit: _deficit, _showDiscountTag: _showDiscountTag, _medium: _medium }"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="priceInfo.finalPrice != priceInfo.basePrice "/>
			<bind name="countdown" value="priceInfo.till; 'timeLeft'; 'HIGHEST'; ''; ''; 'rawTimeLeft'"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<style>
					<width value="100%"/>
					<leading value="-3"/>
				</style>
				<styleClass value="$TextSecondary"/>
				<bind name="class" value="'$FontColorBlueish'"/>
				<bind name="text" value="priceInfo.type == 2 	? 'IDS_SHARE_FROM_CLAN_BUILDINGS_TIMING' :
										(rawTimeLeft &gt; 0) 		? tr('IDS_SHARE_ENDS_IN') + ' ' + priceInfo.timeLeft
																: tr('IDS_SHARE_IS_EXPIRING_WARNING')"/>
			</block>
			<block>
				<bind name="visible" value="priceInfo.basePrice != 0"/>
				<bind name="style" value="'marginRight'; _medium ? '23px' : '15px'"/>
				<block type="text">
					<styleClass value="$TextSecondaryBold"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<bind name="text" value="format(priceInfo.basePrice, -1)"/>
				</block>
				<block className="icon_price_strikethrough" type="native">
					<style>
						<width value="110%"/>
						<height value="40%"/>
						<top value="60%"/>
						<marginTop value="-50%"/>
						<position value="absolute"/>
					</style>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="PriceTagWithLabel">
		<block>
			<style>
				<flow value="horizontal"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="	_large ? '$FontSizeHeader6':
							_medium ? '$FontSizeLarge' :
							_small ? '$FontSizeSmall' : '$None'"/>
				<bind name="class" value="_techText ? '$FontColorBlueish' : '$None'"/>
				<bind name="class" value="_bold ? '$FontFamilyDefaultBold' : '$None'"/>
				<bind name="text" value="_label"/>
			</block>
			<block>
				<style>
					<marginLeft value="4px"/>
				</style>
				<styleClass value="$MiddleVAligned"/>
				<bind name="instance" value="'PriceTag'; { 	priceInfo: priceInfo, _deficit: _deficit , _showDiscountTag: _showDiscountTag,
											_large: _large, _medium: _medium, _small: _small, _duplicateCurrency: _duplicateCurrency}"/>
			</block>
		</block>
	</block>
	<block className="DiscountTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<styleClass value="$DefaultTooltipWidth"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<style>
				<position value="absolute"/>
			</style>
			<styleClass value="$Fullsize"/>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<block className="icon_discount" type="native">
				<styleClass value="$MiddleVAligned"/>
				<bind name="gotoAndStop!" value=" _large ? 'large':'normal'"/>
			</block>
			<block type="text">
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$TextDefaultBold"/>
				<bind name="class" value="'$FontColorGolden'"/>
				<bind name="text" value="(	priceInfo.discountEventName				? priceInfo.discountEventName : 
							priceInfo.type == 1	? 'IDS_EVENT_SHARE' : 
							priceInfo.type == 2	? 'IDS_SHARE_FROM_CLAN_BUILDINGS' : 
							priceInfo.isPrivate 					? 'IDS_PERSONAL_DISCOUNT' 
																	: 'IDS_PROMO_EVENT' )"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<style>
				<marginTop value="0px"/>
			</style>
			<bind name="instance" value="'PriceInLine'; { priceInfo: priceInfo, _showDiscountTag: _showDiscountTag, _customLabel: _customLabel }"/>
		</block>
		<block>
			<bind name="visible" value="(_isExternal == true)"/>
			<styleClass value="$InfoBlockIndent"/>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="-5px"/>
					<marginLeft value="-12px"/>
					<marginRight value="-12px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block type="text">
				<style>
					<width value="100%"/>
				</style>
				<styleClass value="$TextDefault"/>
				<bind name="text" value="'IDS_HINT_REDIRECT_TO_STORE'"/>
			</block>
		</block>
	</block>
	<css name="$ChatBoxDefaultSize">
		<width value="462px"/>
		<userData value="{
        minResizeWidth: 390,
        minResizeHeight: 260
    }"/>
		<height value="310px"/>
	</css>
	<css name="$ChatBoxDivisionSize">
		<width value="600px"/>
		<userData value="{
        minResizeWidth: 500,
        minResizeHeight: 300
    }"/>
		<height value="340px"/>
	</css>
	<css name="$ChatBoxDefaultPosition">
		<position value="absolute"/>
	</css>
	<css name="$FontSize14">
		<fontSize value="14"/>
	</css>
	<block className="ClanSquadSwitchMenuItem">
		<style>
			<width value="100%"/>
			<height value="100%f"/>
			<backgroundColor value="0x01000000"/>
		</style>
		<bind name="dataRefDH" value="'clanSquadEntity'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'squadId'; []; clanSquadEntity.clanSquadLadderInfo.squadId"/>
		<bind name="watch" value="'selected'; _currentSquad == squadId"/>
		<bind name="action" value="'click'; 'ClanProxy.setClanSquad'; !(selected) ? {newSquadId: squadId} : null"/>
		<block className="dock_submenu_item" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="selected" value="selected"/>
		</block>
		<block>
			<style>
				<hitTest value="false"/>
				<width value="100%"/>
				<height value="100%f"/>
			</style>
			<bind name="instance" value="'ClanSquadRatingInfo'; { _clanSquadEntityId: clanSquadEntity.id, _currentSquad: _currentSquad, _leadingSquadId: _leadingSquadId, _selected: selected }"/>
		</block>
	</block>
	<block className="SwitchClanSquadContextMenu">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<styleClass value="$RightSubMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<block className="MenuBg">
			<styleClass value="$FullsizeAbsolute"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<bind name="visible" value="optionData.contrast &amp;&amp; !(false)"/>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="!(false)"/>
				<block className="hint_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="false"/>
				<block className="dock_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginBottom value="-19px"/>
						<marginRight value="-14px"/>
						<marginLeft value="-14px"/>
						<marginTop value="-9px"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="collectionRepeatDH" value="CC.clanSquadLadderInfo; 'ClanSquadSwitchMenuItem'; ''; {_currentSquad: _currentSquad, _leadingSquadId: _leadingSquadId}"/>
		</block>
	</block>
	<block className="ChatDropDownMenu">
		<bind name="firstEntityDH" value="'dockStateEntity'; CC.dockState"/>
		<bind name="watchDH" value="'dockStateName'; ['dockStateEntity.dockState.evUpdate']; dockStateEntity.dockState.stateName"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'slimClientData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="entityDH" value="'channelEntity'; channelEntityId"/>
		<bind name="dataRefDH" value="'channel'; 'channelEntity.channel'"/>
		<bind name="watchDH" value="'isFavorite'; ['channel.evIsFavoriteChanged']; channel.isFavorite"/>
		<bind name="watchDH" value="'channelOpened'; ['channel.evOpenChanged']; channel.opened"/>
		<bind name="dataRefDH" value="'entityAccount'; 'channelEntity.channel.user.ref'"/>
		<bind name="watchDH" value="'nickName'; ['entityAccount.accountName.evChanged']; entityAccount.accountName.nickName"/>
		<bind name="watchDH" value="'pureName'; ['entityAccount.accountName.evChanged']; entityAccount.accountName.name"/>
		<bind name="watchDH" value="'accountOnline'; ['entityAccount.accountStatus.evOnlineChanged']; entityAccount.accountStatus.online"/>
		<bind name="watchDH" value="'groupIds'; ['channelEntity.elementInGroups.evGroupsChanged']; channelEntity.elementInGroups.groupIds"/>
		<bind name="watch" value="'isMyChannel'; isIn(ChannelGroup.MYCHANNELS, groupIds)"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'isSelfPlayerCommander'; ['selfPlayerEntity.preBattlePlayerSimple.evIsCommanderChanged']; selfPlayerEntity.preBattlePlayerSimple.isCommander"/>
		<bind name="watchDH" value="'selfPreBattleId'; ['selfPlayerEntity.preBattlePlayerSimple.evPreBattleIdChanged']; selfPlayerEntity.preBattlePlayerSimple.preBattleId"/>
		<bind name="watchDH" value="'hasClanSquadModifier'; ['selfPlayerEntity.clanmanSupplyInfo.evHasClanSquadModifierChanged']; selfPlayerEntity.clanmanSupplyInfo.hasClanSquadModifier"/>
		<bind name="watchDH" value="'role'; ['selfPlayerEntity.clanman.evRoleChanged']; selfPlayerEntity.clanman.role"/>
		<bind name="watchDH" value="'clanId'; ['selfPlayerEntity.clanman.evClanIdChanged']; selfPlayerEntity.clanman.clanId"/>
		<bind name="primaryEntityDH" value="'clanLadderInfoEntity'; CC.clanLadderInfo; clanId"/>
		<bind name="watchDH" value="'leadingSquadId'; []; clanLadderInfoEntity.clanLadderInfo.leadingSquadId"/>
		<bind name="primaryEntityDH" value="'clanTeamEntity'; CC.clanTeam; selfPreBattleId"/>
		<bind name="watchDH" value="'squadId'; ['clanTeamEntity.clanTeam.evSquadIdChanged'];	clanTeamEntity.clanTeam.squadId"/>
		<bind name="firstEntityDH" value="'clanCurrentSeasonEntity'; CC.clanBattleSeason; 'current'"/>
		<bind name="watchDH" value="'isBrawl'; ['clanCurrentSeasonEntity.clanBattleSeason.evChanged']; clanCurrentSeasonEntity.clanBattleSeason.isBrawl"/>
		<styleClass value="$DefaultMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<block className="MenuBg">
			<styleClass value="$FullsizeAbsolute"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<bind name="visible" value="optionData.contrast &amp;&amp; !(_dropDown)"/>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="!(_dropDown)"/>
				<block className="hint_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="_dropDown"/>
				<block className="dock_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginBottom value="-19px"/>
						<marginRight value="-14px"/>
						<marginLeft value="-14px"/>
						<marginTop value="-9px"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="(_dropDown &amp;&amp; isMyChannel)"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_CHANNEL_RENAME'"/>
				</block>
			</block>
			<bind name="dispatch" value="'click'; 'chatChannelRenameStart'"/>
		</block>
		<block>
			<bind name="visible" value="(channel.typeIdent != 'common') &amp;&amp; !(_isDivision) &amp;&amp; !(isMyChannel)"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="!isFavorite ? 'IDS_ADD_TO_FAVORITES' : 'IDS_REMOVE_FROM_FAVORITES'"/>
				</block>
			</block>
			<bind name="action" value="'click'; 'setChannelFavorite'; {channelId: channel.channelId, favorite: !(isFavorite)}"/>
		</block>
		<block>
			<bind name="visible" value="channelOpened &amp;&amp; !(_isDivision) "/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItemWithAction">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_CHANNEL_CLOSE'"/>
				</block>
				<bind name="action" value="'click'; 'leaveChannel'; {channelId: channel.channelId}"/>
			</block>
		</block>
		<block>
			<params>
				<param name="name" value="menuDismissDivision"/>
			</params>
			<bind name="visible" value="!!(_isDivision) &amp;&amp; isSelfPlayerCommander"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItemWithRequest">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_DISMISS_DIVISION'"/>
				</block>
				<bind name="request" value="'click'; 'dismissDivision'; {subtitle : 'IDS_DISMISS_DIVISION_QUESTION'}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!!(_isDivision)"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItemWithRequest">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_LEAVE_DIVISION'"/>
				</block>
				<bind name="request" value="'click'; 'leaveDivision'; {subtitle : 'IDS_LEAVE_DIVISION_QUESTION'}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="hasClanSquadModifier &amp;&amp; _isClanDivision &amp;&amp; !isBrawl &amp;&amp; isSelfPlayerCommander &amp;&amp;
					(role == 'commander' || role == 'executive_officer' || role == 'recruitment_officer') &amp;&amp;
					(dockStateName != 'balancer')"/>
			<styleClass value="$ContextMenuListItem"/>
			<bind name="tooltip" value="'SwitchClanSquadContextMenu'; { _currentSquad: squadId, _leadingSquadId: leadingSquadId }; 13; null; 'switchClanSquadContextMenu'"/>
			<block className="dock_submenu_item" type="native">
				<styleClass value="$Fullsize"/>
				<bind name="selected" value="switchClanSquadContextMenu"/>
				<block>
					<style>
						<width value="100%"/>
						<height value="100%"/>
						<hitTest value="false"/>
					</style>
					<styleClass value="$ContextMenuListItemContent"/>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<styleClass value="$MiddleVAligned"/>
						<bind name="text" value="'IDS_SWITCH_CLAN_SQUAD'"/>
					</block>
					<block className="button_expand_h" type="native">
						<style>
							<position value="absolute"/>
							<right value="3px"/>
						</style>
						<styleClass value="$MouseDisable"/>
						<styleClass value="$MiddleVAligned"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInDivision'; 'playersInDivision'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInvitedToDivision'; 'playersInvitedToDivision'"/>
		<bind name="watch" value="'freePlaces'; (divisionData.maxPlayersInDivision - playersInDivision.length - playersInvitedToDivision.length)"/>
		<block>
			<bind name="visible" value="(channel.typeIdent == 'private') &amp;&amp;
						accountOnline &amp;&amp;
						!(isInDivision) &amp;&amp;
						(dockStateName != 'balancer') &amp;&amp;
						!(isSelfInParty) &amp;&amp;
						slimClientData.isFull &amp;&amp;
						(freePlaces &gt; 0)"/>
			<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInDivision'; 'name'; nickName; 'playerInDivision'"/>
			<bind name="watch" value="'isInDivision'; (playerInDivision.length == 0) ? false : true"/>
			<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInvitedToDivision'; 'name'; nickName; 'sentInvitationData'"/>
			<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'invitationsToDivision'; 'playerName'; nickName; 'receivedInvitationData'"/>
			<bind name="style" value="'alpha'; ((sentInvitationData.length == 0) &amp;&amp; (receivedInvitationData.length == 0)) ? 1 : 0.5 "/>
			<bind name="style" value="'hitTest'; ((sentInvitationData.length == 0) &amp;&amp; (receivedInvitationData.length == 0))"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItemWithAction">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_INVITE_IN_DIVISION'"/>
				</block>
				<bind name="action" value="'click'; 'inviteToDivision'; {playerId: entityAccount.accountSimple.dbId, playerName: pureName, inviteType: InviteType.COMMON}"/>
			</block>
		</block>
		<bind name="dataRefDH" value="'accountDbId'; 'entityAccount.accountSimple.dbId'"/>
		<bind name="dataRefDH" value="'contactsGroups'; 'dataHub.chat.ref.chat.contactsGroups.ref.items'"/>
		<bind name="dataRefDH" value="'chat'; 'dataHub.chat.ref.chat'"/>
		<bind name="watchDH" value="'groupIdsOfAccount'; ['entityAccount.elementInGroups.evGroupsChanged']; entityAccount.elementInGroups.groupIds"/>
		<bind name="watchDH" value="'isIgnored';['entityAccount.contact.evIsIgnoredChanged']; !!entityAccount.contact.isIgnored"/>
		<bind name="watchDH" value="'canAddGroupEntitiesId'; ['entityAccount.elementInGroups.evCanAddGroupEntitiesChanged', 'dataHub.chat.ref.chat.evRosterChanged']; (entityAccount.elementInGroups) ? entityAccount.elementInGroups.canAddGroupEntitiesId : chat.canAddGroupEntitiesId"/>
		<block>
			<styleClass value="$ContextMenuListItem"/>
			<bind name="visible" value="((groupIdsOfAccount==null) &amp;&amp; !(isIgnored) &amp;&amp; (channel.typeIdent == 'private'))"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_ADD_TO_CONTACTS'"/>
				</block>
			</block>
			<bind name="action" value="'click'; 'addContact'; {dbId: accountDbId}"/>
		</block>
		<block>
			<bind name="visible" value="!(isIgnored) &amp;&amp; ((canAddGroupEntitiesId.length &gt; 0) &amp;&amp; (contactsGroups.length &gt; 1)) &amp;&amp; (channel.typeIdent == 'private')"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_ADD_TO_GROUP'"/>
				</block>
			</block>
			<block className="button_expand_h" type="native">
				<style>
					<position value="absolute"/>
					<right value="6px"/>
				</style>
				<styleClass value="$MouseDisable"/>
				<styleClass value="$MiddleVAligned"/>
			</block>
			<bind name="tooltip" value="'MoveToGroupContextSubMenu'; {_entityAccountId: entityAccount.id, canAddGroupEntitiesId: canAddGroupEntitiesId, _dropDown: _dropDown}; 7"/>
		</block>
		<block>
			<bind name="visible" value="channel.typeIdent == 'private'"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="(!isIgnored) ? 'IDS_IGNORE_PLAYER' : 'IDS_NOT_IGNORE_PLAYER'"/>
				</block>
			</block>
			<bind name="action" value="'click'; 'userIgnoreContact'; {dbId: accountDbId, ignore: !(isIgnored)}"/>
		</block>
		<block>
			<bind name="visible" value="((groupIdsOfAccount!=null) &amp;&amp; !(isIgnored) &amp;&amp; (channel.typeIdent == 'private'))"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItemWithAction">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_REMOVE_FROM_CONTACTS'"/>
				</block>
				<bind name="action" value="'click'; 'removeContact'; {dbId: accountDbId}"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
		<block>
			<bind name="visible" value="realmConstants.showProfileInBrowser &amp;&amp; (dockStateName != 'balancer') &amp;&amp; (channel.typeIdent == 'private')"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_PROFILE'"/>
				</block>
			</block>
			<bind name="request" value="'click'; 'showPlayerStats'; { playerId: accountDbId + '',  url: 'playerStats' }"/>
		</block>
	</block>
	<block className="ChatBoxHeader">
		<style>
			<width value="100%"/>
			<height value="37px"/>
			<align value="middle"/>
		</style>
		<bind name="entityDH" value="'channelEntity'; _channelEntityId"/>
		<bind name="dispatch" value="'draggingChangedEv'; 'Tooltip.Close'; null; 2"/>
		<bind name="watch" value="'contentType'; _isDivision ? 'division' : 'common'"/>
		<bind name="childParentScope" value="contentType; { _channelEntityId: _channelEntityId, _isClanChat:_isClanChat }; { division: 	'ChatBoxHeaderDivisionCommon',
																											common:		'ChatBoxHeaderCommon' }"/>
	</block>
	<block className="ChatBoxHeaderCommon">
		<style>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="visible" value="!(_isEditing)"/>
			<block>
				<style>
					<height value="100%f"/>
				</style>
				<bind name="style" value="'hitTest'; !(_isPasswordNeeded) &amp;&amp; !(_isInvitation)"/>
				<block className="button_dock" type="native">
					<params>
						<param name="name" value="ChatBoxHeader"/>
					</params>
					<bind name="style" value="'hitTest'; !(_isSteadyChannel)"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginTop value="-4px"/>
						<marginBottom value="-7px"/>
						<marginRight value="-4px"/>
						<marginLeft value="2px"/>
					</style>
					<bind name="tooltip" value="'ChatDropDownMenu'; {_dropDown: true, channelEntityId: _channelEntityId}; 6"/>
				</block>
				<block>
					<style>
						<hitTest value="false"/>
						<marginLeft value="8px"/>
					</style>
					<bind name="instance" value="'ChannelTitleWithIcon'; {channelEntityId: _channelEntityId, _bold: true, _maxWidth: 350, _channelHeader: true}"/>
				</block>
				<block className="icon_navigate" type="native">
					<bind name="visible" value="!(_isPasswordNeeded || _isSteadyChannel || _isInvitation)"/>
					<style>
						<hitTest value="false"/>
						<marginRight value="2px"/>
						<top value="60%"/>
					</style>
					<styleClass value="$MiddleVAligned"/>
					<bind name="gotoAndStop!" value="'down'"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<styleClass value="$MiddleVAlignedAbsolutely"/>
				<style>
					<right value="12px"/>
				</style>
				<bind name="instance" value="'ChatBoxHeaderControls'; {_channelEntityId: _channelEntityId, _showCloseButton: !(_isTrainingRoom || _isClanChat)}"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="_isEditing"/>
			<style>
				<width value="100%"/>
				<height value="37px"/>
			</style>
			<bind name="instance" value="'ChannelHeaderEditing'; _isEditing ? {channelEntityId: _channelEntityId} : null"/>
		</block>
	</block>
	<block className="ChatBoxHeaderDivisionCommon">
		<style>
			<width value="100%"/>
		</style>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPreBattleId'; ['selfPlayerEntity.preBattlePlayerSimple.evPreBattleIdChanged']; selfPlayerEntity.preBattlePlayerSimple.preBattleId"/>
		<bind name="watchDH" value="'selfIsInBattle'; ['selfPlayerEntity.preBattlePlayerSimple.evStateChanged']; selfPlayerEntity.preBattlePlayerSimple.isInBattle"/>
		<bind name="primaryEntityDH" value="'preBattleEntity'; CC.preBattle; selfPreBattleId"/>
		<bind name="watchDH" value="'isFormationInBattle'; ['preBattleEntity.preBattle.evStatusChanged']; preBattleEntity.preBattle.isInBattle"/>
		<bind name="watch" value="'isActiveDivisionControls'; !(_isSteadyChannel || (isFormationInBattle &amp;&amp; selfIsInBattle))"/>
		<bind name="childParentScope" value="_isClanDivision ? 0 : 1; {}; 'ChatBoxHeaderClanDivision'; 'ChatBoxHeaderDivision'"/>
		<block>
			<styleClass value="$MiddleVAlignedAbsolutely"/>
			<style>
				<right value="12px"/>
			</style>
			<bind name="instance" value="'ChatBoxHeaderControls'; {_channelEntityId: _channelEntityId, _showCloseButton: isActiveDivisionControls}"/>
		</block>
	</block>
	<block className="ChatBoxHeaderDivision">
		<style>
			<width value="100%"/>
			<height value="100%f"/>
		</style>
		<bind name="instance" value="'DivisionHeaderButton'; {_channelEntityId: _channelEntityId, 
		_isClanDivision: false, _isActive: isActiveDivisionControls}"/>
	</block>
	<block className="ChatBoxHeaderClanDivision">
		<bind name="firstEntityDH" value="'chosenPrimeTimeEntity'; CC.clanBattlePrimeTime; 'chosen'"/>
		<bind name="firstEntityDH" value="'fixedPrimeTimeEntity'; CC.clanBattlePrimeTime; 'fixed'"/>
		<bind name="watch" value="'currentEntityId'; !!(fixedPrimeTimeEntity) ? fixedPrimeTimeEntity.id : chosenPrimeTimeEntity.id"/>
		<bind name="watch" value="'showPrimeTimeInfo'; !!(chosenPrimeTimeEntity) || !!(fixedPrimeTimeEntity)"/>
		<style>
			<width value="100%"/>
			<paddingLeft value="12px"/>
		</style>
		<block>
			<bind name="visible" value="showPrimeTimeInfo"/>
			<block>
				<style>
					<width value="100%f"/>
				</style>
				<bind name="instance" value="'PrimeTimeStereotype'; showPrimeTimeInfo 	? {	_entityId: currentEntityId, _isBig: true, _isBold: true,
																			_textColor: '$FontColorWhite', _showCountdown: true} : null"/>
			</block>
			<block>
				<style>
					<width value="100%f"/>
					<marginLeft value="32px"/>
				</style>
				<bind name="instance" value="'PrimeTimeTillTimeInfo'; showPrimeTimeInfo ? { _entityId: currentEntityId, _textClass: '$TextDefault17NM'} : null"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block type="text">
			<bind name="visible" value="!showPrimeTimeInfo"/>
			<style>
				<width value="100%f"/>
				<multiline value="false"/>
			</style>
			<styleClass value="$TextDefault17NM"/>
			<bind name="class" value="'$FontColorUnready'"/>
			<bind name="text" value="'IDS_CLAN_BATTLES_NO_CHOSEN_PRIMETIME'"/>
		</block>
	</block>
	<block className="DivisionHeaderButton">
		<style>
			<width value="100%f"/>
			<height value="36px"/>
			<flow value="horizontal"/>
		</style>
		<block>
			<style>
				<marginLeft value="4px"/>
				<marginTop value="3px"/>
			</style>
			<bind name="instance" value="'DivisionHeaderLock'; {}"/>
		</block>
		<block>
			<block className="button_dock" type="native">
				<params>
					<param name="name" value="ChatBoxHeader"/>
				</params>
				<style>
					<width value="100%"/>
					<height value="32px"/>
					<position value="absolute"/>
					<marginRight value="-3px"/>
					<marginTop value="3px"/>
				</style>
				<bind name="style" value="'hitTest'; _isActive"/>
				<bind name="tooltip" value="'DivisionHeaderTooltip'; {_isClanDivision: _isClanDivision}"/>
				<bind name="tooltip" value="'ChatDropDownMenu'; {_dropDown: true, channelEntityId: _channelEntityId, _isDivision: true, _isClanDivision: _isClanDivision}; 6"/>
			</block>
			<block>
				<style>
					<hitTest value="false"/>
					<marginBottom value="4px"/>
					<marginTop value="10px"/>
					<marginLeft value="2px"/>
					<marginRight value="3px"/>
				</style>
				<bind name="instance" value="'FormationHeader'; {_isClanDivision: _isClanDivision}"/>
			</block>
			<block className="icon_navigate" type="native">
				<bind name="visible" value="_isActive"/>
				<style>
					<hitTest value="false"/>
					<marginRight value="2px"/>
					<marginTop value="11px"/>
				</style>
				<bind name="gotoAndStop!" value="'down'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ChatBoxContentInvitation">
		<styleClass value="$Fullsize"/>
		<block className="inner_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<marginBottom value="30px"/>
			</style>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'InvitationToChatItem'; { _channelEntityId: _channelEntityId }"/>
			</block>
		</block>
	</block>
	<block className="ChatBoxContentEnterPassword">
		<styleClass value="$Fullsize"/>
		<block className="inner_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<marginBottom value="48px"/>
			</style>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'EnterPasswordChatItem'; { _channelEntityId: _channelEntityId }"/>
			</block>
		</block>
	</block>
	<block className="ChatBoxContentCommon">
		<bind name="entityDH" value="'channelEntity'; _channelEntityId"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="dataRefDH" value="'participants'; 'channelEntity.channel.participants.ref.items'"/>
		<styleClass value="$Fullsize"/>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'ClanChatDaylyMessage'; (channelEntity.channel.typeIdent == 'clan') ? {} : null"/>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<block>
				<styleClass value="$Fullsize"/>
				<bind name="instance" value="'MessageBoxPanel'; { _channelEntityId: _channelEntityId }"/>
			</block>
			<block>
				<style>
					<height value="100%"/>
				</style>
				<bind name="visible" value="(participants.length != 0)"/>
				<block className="VerticalDivider">
					<style>
						<height value="100%"/>
						<width value="3px"/>
					</style>
					<block className="divider_v" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<style>
					<height value="100%"/>
				</style>
				<bind name="instance" value="'ParticipantsPanel'; { _channelEntityId: _channelEntityId }"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ChatBoxContentDivision">
		<styleClass value="$Fullsize"/>
		<block>
			<bind name="visible" value="!!(_isClanDivision)"/>
			<style>
				<width value="100%"/>
				<height value="37px"/>
				<align value="middle"/>
			</style>
			<bind name="instance" value="'DivisionHeaderButton'; _isClanDivision ? {
			_channelEntityId: _channelEntityId, 
			_isClanDivision: true,
			_isActive: isActiveDivisionControls} : null"/>
			<block>
				<style>
					<width value="100%"/>
					<position value="absolute"/>
					<bottom value="0"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<block>
				<style>
					<height value="100%"/>
				</style>
				<bind name="instance" value="'FormationResizableMainElement'; {}"/>
			</block>
			<block className="VerticalDivider">
				<style>
					<height value="100%"/>
					<width value="3px"/>
				</style>
				<block className="divider_v" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$Fullsize"/>
				<bind name="instance" value="'MessageBoxPanel'; { _channelEntityId: _channelEntityId }"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ChatBoxContent">
		<styleClass value="$Fullsize"/>
		<bind name="entityDH" value="'channelEntity'; _channelEntityId"/>
		<bind name="watch" value="'contentType'; _isInvitation 		? 'invite' :
								_isPasswordNeeded 	? 'password' :
								_isDivision 		? 'division'
													: 'common'"/>
		<bind name="childParentScope" value="contentType; { _channelEntityId: _channelEntityId }; { 	invite: 	'ChatBoxContentInvitation', 
																					password: 	'ChatBoxContentEnterPassword',
																					division:	'ChatBoxContentDivision',
																					common:		'ChatBoxContentCommon' }"/>
	</block>
	<block className="ChatBox">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<bind name="entityDH" value="'channelEntity'; channelEntityId"/>
		<bind name="actionIsDisplay" value="'setChannelChatBoxIsDisplay'; {entityId: channelEntityId}"/>
		<bind name="draggableWindow" value="'chatBoxDragZone'; 'chatBoxPosition'; channelEntity.channel.channelId"/>
		<bind name="changeDispatch" value="dragging; 'draggingChangedEv'; null; true"/>
		<bind name="appear" value="'addedToStage'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="stageSize"/>
		<bind name="watch" value="'subKey'; channelEntity.channel.channelId"/>
		<bind name="watch" value="'chatBoxPositionX';	(userPrefs.chatBoxPositionX &amp;&amp; userPrefs.chatBoxPositionX[subKey])		?	userPrefs.chatBoxPositionX[subKey]	: undefined"/>
		<bind name="watch" value="'chatBoxPositionY';	(userPrefs.chatBoxPositionY &amp;&amp; userPrefs.chatBoxPositionY[subKey])		?	userPrefs.chatBoxPositionY[subKey]	: undefined"/>
		<bind name="watch" value="'dragPositionsWasSet'; (userPrefs.chatBoxPositionX &amp;&amp; userPrefs.chatBoxPositionX[subKey]) &amp;&amp; (userPrefs.chatBoxPositionY &amp;&amp; userPrefs.chatBoxPositionY[subKey])"/>
		<bind name="changeDispatch" value="chatBoxPositionX &amp;&amp; dragPositionsWasSet;	'chatBoxPositionXchanged'; {}; true"/>
		<bind name="changeDispatch" value="chatBoxPositionY &amp;&amp; dragPositionsWasSet;	'chatBoxPositionYchanged'; {}; true"/>
		<bind name="action" value="'chatBoxPositionXchanged' ; 'setUserPref' ; {value : chatBoxPositionX, name : 'chatBoxPositionX', subName: subKey}"/>
		<bind name="action" value="'chatBoxPositionYchanged' ; 'setUserPref' ; {value : chatBoxPositionY, name : 'chatBoxPositionY', subName: subKey}"/>
		<bind name="left" value="chatBoxPositionX"/>
		<bind name="top" value="chatBoxPositionY"/>
		<bind name="watch" value="'chatBoxWidth';	(userPrefs.chatBoxWidth &amp;&amp; userPrefs.chatBoxWidth[subKey])		?	userPrefs.chatBoxWidth[subKey]	: undefined"/>
		<bind name="watch" value="'chatBoxHeight';	(userPrefs.chatBoxHeight &amp;&amp; userPrefs.chatBoxHeight[subKey])	?	userPrefs.chatBoxHeight[subKey]	: undefined"/>
		<bind name="width" value="chatBoxWidth"/>
		<bind name="height" value="chatBoxHeight"/>
		<bind name="var" value="{isEditing: false}"/>
		<bind name="catch" value="'chatChannelRenameStart';		{isEditing : true}"/>
		<bind name="catch" value="'chatChannelRenameCancelled';	{isEditing : false}"/>
		<bind name="catch" value="'chatChannelRenameSuccessed';	{isEditing: false}"/>
		<bind name="watchDH" value="'isInvitation'; ['channelEntity.channel.evOpenChanged', 'channelEntity.channel.evInvitationRefused']; channelEntity.channel.isInvitation"/>
		<bind name="watchDH" value="'isPasswordNeeded'; ['channelEntity.channel.evOpenChanged']; channelEntity.channel.isWaitingPassword"/>
		<bind name="watch" value="'isSteadyChannel'; (channelEntity.channel.typeIdent == 'clan') || (channelEntity.channel.typeIdent == 'training_room')"/>
		<bind name="watch" value="'isDivision'; channelEntity.channel.typeIdent == 'division'"/>
		<bind name="watch" value="'isClanChat'; channelEntity.channel.typeIdent == 'clan'"/>
		<bind name="watch" value="'isTrainingRoom'; channelEntity.channel.typeIdent == 'training_room'"/>
		<bind name="firstEntityDH" value="'enterBattleEntity'; CC.enterBattle"/>
		<bind name="watchDH" value="'selectedBattle'; ['enterBattleEntity.enterBattle.evBattleTypesChanged']; enterBattleEntity.enterBattle.selectedBattle"/>
		<bind name="watch" value="'isClanDivision'; selectedBattle.type == BattleTypes.CLAN_BATTLE"/>
		<bind name="class" value="isDivision ? '$ChatBoxDivisionSize' : '$ChatBoxDefaultSize'"/>
		<styleClass value="$ChatBoxDefaultPosition"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block className="notification_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<marginTop value="2px"/>
				<marginBottom value="2px"/>
				<marginLeft value="2px"/>
				<marginRight value="2px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<marginBottom value="-2px"/>
				</style>
				<block>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<backgroundColor value="0x01000000"/>
					</style>
					<params>
						<param name="name" value="chatBoxDragZone"/>
					</params>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="instance" value="'ChatBoxHeader'; { 	_channelEntityId: channelEntityId, 
													_isInvitation: isInvitation, 
													_isPasswordNeeded: isPasswordNeeded, 
													_isDivision: isDivision,
													_isTrainingRoom: isTrainingRoom,
													_isClanDivision: isClanDivision,
													_isClanChat:isClanChat,
													_isEditing: isEditing,
													_isSteadyChannel: isSteadyChannel }"/>
				</block>
			</block>
			<block>
				<style>
					<marginLeft value="-1px"/>
					<marginRight value="-1px"/>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<styleClass value="$Fullsize"/>
				<bind name="instance" value="'ChatBoxContent'; { _channelEntityId: channelEntityId, _isPasswordNeeded: isPasswordNeeded, _isInvitation: isInvitation, _isDivision: isDivision, _isClanDivision: isClanDivision }"/>
			</block>
		</block>
		<block className="dock_panel_pin" type="native">
			<params>
				<param name="name" value="pinTop"/>
			</params>
			<style>
				<position value="absolute"/>
				<bottom value="0px"/>
			</style>
			<bind name="gotoAndStop!" value="'down'"/>
		</block>
		<bind name="watch" value="'restrict'; chatBoxState != WindowTooltipState.pinned ? {} : { down: true, left: true }"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="ResizeFrame">
				<styleClass value="$FullsizeAbsolute"/>
				<block>
					<bind name="visible" value="!(restrict.up)"/>
					<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_UP'"/>
					<style>
						<position value="absolute"/>
						<width value="100%"/>
						<height value="6px"/>
						<top value="-3px"/>
						<backgroundColor value="0x01ff0000"/>
					</style>
					<params>
						<param name="name" value="grip_top"/>
					</params>
				</block>
				<block>
					<bind name="visible" value="!(restrict.down)"/>
					<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_DOWN'"/>
					<style>
						<position value="absolute"/>
						<width value="100%"/>
						<height value="6px"/>
						<bottom value="-3px"/>
						<backgroundColor value="0x01ff0000"/>
					</style>
					<params>
						<param name="name" value="grip_bottom"/>
					</params>
				</block>
				<block>
					<bind name="visible" value="!(restrict.left)"/>
					<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_LEFT'"/>
					<style>
						<position value="absolute"/>
						<width value="6px"/>
						<height value="100%"/>
						<left value="-3px"/>
						<backgroundColor value="0x01ff0000"/>
					</style>
					<params>
						<param name="name" value="grip_left"/>
					</params>
				</block>
				<block>
					<bind name="visible" value="!(restrict.right)"/>
					<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_RIGHT'"/>
					<style>
						<position value="absolute"/>
						<width value="6px"/>
						<height value="100%"/>
						<right value="-3px"/>
						<backgroundColor value="0x01ff0000"/>
					</style>
					<params>
						<param name="name" value="grip_right"/>
					</params>
				</block>
				<block>
					<bind name="visible" value="!(restrict.up || restrict.left)"/>
					<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_UP_LEFT'"/>
					<style>
						<position value="absolute"/>
						<width value="12px"/>
						<height value="12px"/>
						<top value="-5px"/>
						<left value="-5px"/>
						<backgroundColor value="0x0100ff00"/>
					</style>
					<params>
						<param name="name" value="grip_top_left"/>
					</params>
				</block>
				<block>
					<bind name="visible" value="!(restrict.up || restrict.right)"/>
					<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_UP_RIGHT'"/>
					<style>
						<position value="absolute"/>
						<width value="12px"/>
						<height value="12px"/>
						<top value="-5px"/>
						<right value="-5px"/>
						<backgroundColor value="0x0100ff00"/>
					</style>
					<params>
						<param name="name" value="grip_top_right"/>
					</params>
				</block>
				<block>
					<bind name="visible" value="!(restrict.down || restrict.left)"/>
					<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_DOWN_LEFT'"/>
					<style>
						<position value="absolute"/>
						<width value="12px"/>
						<height value="12px"/>
						<bottom value="-5px"/>
						<left value="-5px"/>
						<backgroundColor value="0x0100ff00"/>
					</style>
					<params>
						<param name="name" value="grip_bottom_left"/>
					</params>
				</block>
				<block>
					<bind name="visible" value="!(restrict.down || restrict.right)"/>
					<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_DOWN_RIGHT'"/>
					<style>
						<position value="absolute"/>
						<width value="12px"/>
						<height value="12px"/>
						<bottom value="-5px"/>
						<right value="-5px"/>
						<backgroundColor value="0x0100ff00"/>
					</style>
					<params>
						<param name="name" value="grip_bottom_right"/>
					</params>
				</block>
			</block>
		</block>
		<bind name="resize" value="'grip_top';			'up'; 'chatBoxWidth'; 'chatBoxHeight'; subKey"/>
		<bind name="resize" value="'grip_bottom';		'down'; 'chatBoxWidth'; 'chatBoxHeight'; subKey"/>
		<bind name="resize" value="'grip_left';			'left'; 'chatBoxWidth'; 'chatBoxHeight'; subKey"/>
		<bind name="resize" value="'grip_right';			'right'; 'chatBoxWidth'; 'chatBoxHeight'; subKey"/>
		<bind name="resize" value="'grip_top_left';		'up,left'; 'chatBoxWidth'; 'chatBoxHeight'; subKey"/>
		<bind name="resize" value="'grip_top_right';		'up,right'; 'chatBoxWidth'; 'chatBoxHeight'; subKey"/>
		<bind name="resize" value="'grip_bottom_left';	'down,left'; 'chatBoxWidth'; 'chatBoxHeight'; subKey"/>
		<bind name="resize" value="'grip_bottom_right';	'down,right'; 'chatBoxWidth'; 'chatBoxHeight'; subKey"/>
	</block>
	<block className="ParticipantsPanel">
		<bind name="entityDH" value="'channelEntity'; _channelEntityId"/>
		<bind name="watchDH" value="'channelTypeIdent'; ['channelEntity.channel.evTypeChanged']; channelEntity.channel.typeIdent"/>
		<bind name="dataRefDH" value="'participants'; 'channelEntity.channel.participants.ref.items'"/>
		<bind name="visible" value="(participants.length != 0)"/>
		<bind name="watch" value="'isSteadyChannel'; (channelTypeIdent == 'division') || (channelTypeIdent == 'club') || (channelTypeIdent == 'clan' || channelTypeIdent == 'training_room')"/>
		<style>
			<width value="186px"/>
			<height value="100%"/>
		</style>
		<block className="inner_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<block>
				<bind name="visible" value="!(isSteadyChannel)"/>
				<style>
					<width value="100%"/>
					<height value="30px"/>
				</style>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$Fullsize"/>
					<block>
						<styleClass value="$MiddleVAligned"/>
						<style>
							<hitTest value="false"/>
							<marginLeft value="5px"/>
						</style>
						<block>
							<styleClass value="$MiddleVAligned"/>
							<block className="icon_plus" type="native">
								<style>
									<marginTop value="1px"/>
								</style>
							</block>
						</block>
						<block type="text">
							<styleClass value="$TextDefaultBold"/>
							<style>
								<marginLeft value="1px"/>
							</style>
							<bind name="class" value="'$FontColorBlueish'"/>
							<bind name="text" value="'IDS_INVITE_PLAYER'"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<bind name="changeDispatch" value="contactsInfotipIsVIsible; 'sendClearSearch'; {}; 2; false"/>
					<bind name="action" value="'sendClearSearch'; 'clearSearchResult'"/>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_INVITE_PLAYERS'}"/>
					<bind name="tooltip" value="'ContactsAndChannelsInfotip'; {_playerContext: {	type:	'inviteToChannel',
																				channelId: 	channelEntity.channel.channelId}}; 9; null; 'contactsInfotipIsVIsible'"/>
					<bind name="selected" value="contactsInfotipIsVIsible"/>
				</block>
			</block>
			<block>
				<styleClass value="$DefaultScrollBar"/>
				<style>
					<height value="100%f"/>
					<width value="100%"/>
					<overflow value="scroll"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="repeat" value="participants; 'ChatParticipantItem';  {_playerContext: {type: 'channelParticipants', clubId: entityClub.club.id, channelTypeIdent: channelEntity.channel.typeIdent, clubEntityId: clubEntityId, clubLeaderDbId: leaderDbId}}"/>
				</block>
			</block>
		</block>
	</block>
	<block className="MessageBoxPanel">
		<styleClass value="$Fullsize"/>
		<block className="inner_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<scrollbar value="ModernScrollBar"/>
				<scrollbarAlign value="right"/>
				<scrollbarController value="lesta.unbound.style.UbScrollingControllerChat"/>
				<scrollArea value="ModernScrollArea"/>
				<scrollbarTrackMode value="scrollToCursor"/>
				<wheelScrollSpeed value="30"/>
				<overflow value="scroll"/>
				<layout value="lesta.unbound.layout.measure.CarouselVariableItemSizeLayout"/>
				<itemWidth value="260px"/>
				<itemHeight value="22px"/>
			</style>
			<bind name="controller" value="lesta.unbound.controls.ControllerAutoScroll"/>
			<bind name="event" value="'addedToStage'; instantScrollToLastItem"/>
			<bind name="generatorDH" value="CC.channelMessage; 'ChannelMessageRenderer'; 'byChannel.' + _channelEntityId; {}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="2px"/>
				<marginRight value="2px"/>
				<marginBottom value="2px"/>
			</style>
			<bind name="instance" value="'InputTextPanel'; { _channelEntityId: _channelEntityId, _isFocused: _isFocused }"/>
		</block>
	</block>
	<block className="InputTextPanel">
		<bind name="entityDH" value="'channelEntity'; _channelEntityId"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
				<height value="37px"/>
				<marginRight value="4px"/>
				<marginLeft value="4px"/>
			</style>
			<block className="text_input_caps_enter" type="native">
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="100%"/>
				</style>
				<params>
					<param name="actAsButton" value="true"/>
					<param name="maxChars" value="512"/>
				</params>
				<bind name="focus" value="0; _isFocused != false"/>
				<bind name="sync" value="'text'; 'change'; inputText"/>
				<bind name="action" value="'textInputEnter'; (inputText.length &gt; 0) ? 'sendMessage' : null; {channelId: channelEntity.channel.channelId, message:inputText}"/>
				<bind name="catch" value="'textInputEnter'; {inputText : ''}"/>
				<bind name="catch" value="'sendButtonEnter'; {inputText : ''}"/>
			</block>
			<block className="button_dock" type="native">
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_SEND_MESSAGE'}"/>
				<styleClass value="$TextInputEnterButton"/>
				<bind name="enabled" value="inputText.length &gt; 0"/>
				<bind name="action" value="'buttonClick'; 'sendMessage'; {channelId: channelEntity.channel.channelId, message:inputText}"/>
				<bind name="dispatch" value="'buttonClick'; 'sendButtonEnter'"/>
			</block>
		</block>
	</block>
	<block className="ClanChatDaylyMessage">
		<style>
			<width value="100%"/>
			<marginTop value="8px"/>
			<marginBottom value="8px"/>
			<marginLeft value="8px"/>
			<marginRight value="8px"/>
		</style>
		<bind name="visible" value="messageOfTheDay || (role == 'commander' || role == 'executive_officer')"/>
		<bind name="dataRefDH" value="'messageEntity'; '$dataRef.ref'"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; clanId"/>
		<bind name="watchDH" value="'clanTag'; ['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
		<bind name="watchDH" value="'clanName'; ['clanEntity.clanExtended.evNameChanged']; clanEntity.clanExtended.name"/>
		<bind name="watchDH" value="'clanId'; ['selfPlayerEntity.clanman.evClanIdChanged']; selfPlayerEntity.clanman.clanId"/>
		<bind name="watchDH" value="'role'; ['selfPlayerEntity.clanman.evRoleChanged']; selfPlayerEntity.clanman.role"/>
		<bind name="watchDH" value="'messageOfTheDay'; ['clanEntity.clanExtended.evMessageOfTheDayChanged']; clanEntity.clanExtended.messageOfTheDay"/>
		<bind name="var" value="{InputFieldVisibility: false}"/>
		<bind name="catch" value="'changeFieldVisibility'"/>
		<block>
			<bind name="visible" value="!InputFieldVisibility &amp;&amp; messageOfTheDay || (!InputFieldVisibility &amp;&amp; (role == 'commander' || role == 'executive_officer'))"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; null"/>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="4px"/>
					<marginBottom value="4px"/>
					<marginLeft value="4px"/>
				</style>
				<bind name="transition" value="rollOver &amp;&amp; (role == 'commander' || role == 'executive_officer'); 0.15; {alpha: 1}; {alpha: 1.3}"/>
				<bind name="dispatch" value="'click'; role == 'commander' || role == 'executive_officer' ? 'changeFieldVisibility' : null; {InputFieldVisibility: true}"/>
				<block type="text">
					<style>
						<width value="100%"/>
						<leading value="-3"/>
					</style>
					<styleClass value="$TextDefaultNM"/>
					<bind name="class" value="messageOfTheDay ? null : '$FontColorBlueish'"/>
					<bind name="text" value="messageOfTheDay.length &gt; 0 ? messageOfTheDay : 'IDS_CLAN_CHAT_EDIT_MOTD_DEFAULT_TEXT'"/>
				</block>
			</block>
			<block className="button_pencil" type="native">
				<style>
					<marginLeft value="8px"/>
				</style>
				<bind name="visible" value="role == 'commander' || role == 'executive_officer' "/>
				<bind name="dispatch" value="'buttonClick';'changeFieldVisibility'; {InputFieldVisibility: true}"/>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLAN_CHAT_EDIT_MOTD_TOOLTIP'}"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="InputFieldVisibility"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="text_area_elastic_enter" type="native">
					<bind name="watch" value="'maxChars'; 180"/>
					<params>
						<param name="actAsButton" value="true"/>
						<param name="maxChars" value="180"/>
					</params>
					<bind name="controller" value="lesta.dialogs.dock.controllers.ElasticBlockController"/>
					<bind name="minNumLines" value="1"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="action" value="'textInputEnter'; 'ClanProxy.setMessageOfTheDay'; { message: txtMessage }"/>
					<bind name="dispatch" value="'textInputEnter';'changeFieldVisibility'; {InputFieldVisibility: false}"/>
					<bind name="text" value="messageOfTheDay"/>
					<bind name="focus" value="0; InputFieldVisibility"/>
					<bind name="sync" value="'text'; 'change'; txtMessage;"/>
					<block>
						<styleClass value="$TextAreaEnterButton"/>
						<bind name="tooltip" value="'SimpleWarningTooltip'; (txtMessage.length &gt; maxChars) ? {_text: 'IDS_MAX_STATUS_LENGTH'} : null"/>
						<bind name="tooltip" value="'SimpleTooltip'; (txtMessage.length &lt;= maxChars) ? {tooltipText: 'IDS_HINT_ADD_SEEKER_STATUS'} : null"/>
						<block className="button_dock" type="native">
							<styleClass value="$FullsizeAbsolute"/>
							<bind name="action" value="'click'; 'ClanProxy.setMessageOfTheDay'; { message: txtMessage }"/>
							<bind name="dispatch" value="'buttonClick';'changeFieldVisibility'; {InputFieldVisibility: false}"/>
							<bind name="style" value="'hitTest'; (divisionEntranceData.commentStatus == 'submitted') &amp;&amp; (txtMessage.length &lt;= maxChars) ? false : true"/>
							<bind name="enabled" value="(txtMessage.length &lt;= maxChars)"/>
						</block>
					</block>
					<block>
						<style>
							<position value="absolute"/>
							<bottom value="3"/>
							<right value="56"/>
						</style>
						<bind name="fade" value="(divisionEntranceData.banned || (divisionEntranceData.commentStatus != 'submitted')); 0.1;
								{top: 10, alpha: 0}; {top: 0, alpha: 1}; {top: 10, alpha: 0}"/>
						<bind name="instance" value="'CharCounter'; { _string: txtMessage, _maxChars: maxChars}"/>
					</block>
				</block>
			</block>
			<block className="button_close" type="native">
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLAN_CHAT_EDIT_MOTD_EXIT_TOOLTIP'}"/>
				<style>
					<marginLeft value="6px"/>
					<marginRight value="7px"/>
				</style>
				<bind name="dispatch" value="'buttonClick';'changeFieldVisibility'; {InputFieldVisibility: false}"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ChannelHeaderEditing">
		<bind name="entityDH" value="'channelEntity'; channelEntityId"/>
		<bind name="watchDH" value="'channelName'; ['channelEntity.channel.evNameChanged', 'channelEntity.channel.user', 'channelEntity.channel.user.ref.accountName.evChanged']; (channelEntity.channel.nameIds != null)	? tr(channelEntity.channel.nameIds) :
																																									 (channelEntity.channel.user.ref != null)	? channelEntity.channel.user.ref.accountName.nickName
																																									 											: channelEntity.channel.name"/>
		<bind name="var" value="{ textInput: channelName,
				 isWrongName: false,
				 isRenameComplete: false }"/>
		<bind name="handleEventDH" value="'channelEntity.channel.evNameChanged'; 'evRenameChannelSuccessed'"/>
		<bind name="handleEventDH" value="'channelEntity.channel.evRenameChannelErrorNameExist'; 'evRenameChannelErrorNameExist'"/>
		<bind name="dispatch" value="'evRenameChannelErrorNameExist';  ((channelEntity.channel.name==textInput) || (textInput == '')) ? 'evRenameChannelSuccessed' : null"/>
		<bind name="catch" value="'evRenameChannelErrorNameExist'; { isWrongName :		true,
													isRenameComplete :	false}"/>
		<bind name="dispatch" value="'evRenameChannelSuccessed'; 'chatChannelRenameSuccessed'"/>
		<bind name="catch" value="'evRenameChannelSuccessed'; {	isWrongName :		false,
												isRenameComplete :	true}"/>
		<styleClass value="$Fullsize"/>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<marginTop value="9px"/>
			</style>
			<block>
				<styleClass value="$Fullsize"/>
				<style>
					<marginLeft value="8px"/>
					<marginRight value="5px"/>
				</style>
				<block className="icon_channel_types" type="native">
					<style>
						<marginTop value="1px"/>
					</style>
					<innerBind elementName="channel_icon" name="gotoAndStop!" value="	(channelEntity.channel.isSecured) ? 'group_closed' : channelEntity.channel.typeIdent"/>
					<bind name="gotoAndPlay!" value="'normal'"/>
				</block>
				<block>
					<styleClass value="$Fullsize"/>
					<style>
						<marginTop value="-5px"/>
						<marginRight value="9px"/>
						<marginLeft value="7px"/>
					</style>
					<block>
						<styleClass value="$Fullsize"/>
						<block className="text_input_caps_enter" type="native">
							<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_ENTER_CHANNEL_NAME'}"/>
							<style>
								<height value="29px"/>
								<width value="100%"/>
							</style>
							<block>
								<style>
									<width value="100%"/>
								</style>
								<block>
									<style>
										<position value="absolute"/>
										<width value="100%"/>
										<bottom value="-6px"/>
									</style>
									<bind name="instance" value="'WrongTextInputNotification'; isWrongName	? 	{_maxWidth : 350, _startTop: 10,
																							 	 _text: (textInput.length &lt; 3)	? tr('IDS_HINT_TITLE_TOO_SHORT')
																																: (tr('IDS_WRONG_TITLE') + '. ' + tr('IDS_TRY_ANOTHER_TITLE'))}
																							:	null"/>
								</block>
							</block>
							<params>
								<param name="actAsButton" value="true"/>
								<param name="maxChars" value="32"/>
								<param name="restrict" value="^&lt;&gt;"/>
							</params>
							<bind name="focus" value="0; true"/>
							<bind name="text" value="channelName"/>
							<bind name="sync" value="'text'; 'change'; textInput"/>
							<bind name="catch" value="'change'; {isWrongName : false}"/>
							<bind name="action" value="'textInputEnter'; 'renameChannel';
														{channelId: channelEntity.channel.channelId,
														 newName: (textInput == '') ?	channelEntity.channel.name
																						  :	(textInput.length &gt; 2)  ? textInput 
																						 							: channelEntity.channel.name}"/>
							<block className="button_dock" type="native">
								<styleClass value="$TextInputEnterButton"/>
								<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CHANNEL_RENAME'}"/>
								<bind name="action" value="'buttonClick'; 'renameChannel';
														{channelId: channelEntity.channel.channelId,
														 newName: (textInput == '') ?	channelEntity.channel.name
																						  :	(textInput.length &gt; 2)  ? textInput 
																						 							: channelEntity.channel.name}"/>
							</block>
						</block>
						<block className="button_close" type="native">
							<style>
								<marginLeft value="11px"/>
								<marginTop value="9px"/>
							</style>
							<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CANCEL'}"/>
							<bind name="dispatch" value="'buttonClick'; 'chatChannelRenameCancelled'"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ChatParticipantItem">
		<bind name="dataRefDH" value="'participantEntity'; '$dataRef.ref'"/>
		<style>
			<width value="100%"/>
			<height value="30px"/>
		</style>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="instance" value="'PlayerContactItemWithRollover'; {_entityAccountId: participantEntity.id, _isShort: true, _playerContext: _playerContext }"/>
		</block>
	</block>
	<block className="OpenChannelElement">
		<bind name="entityDH" value="'channelEntity'; $dataRef.ref.id"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="watch" value="'_active'; chatBoxVisible"/>
		<bind name="watchDH" value="'groupExpanded'; ['parentGroup.groupViewElements.evStateChanged']; parentGroup.groupViewElements.expanded"/>
		<bind name="watchDH" value="'isInvitation';['$dataRef.ref.channel.evOpenChanged', '$dataRef.ref.channel.evInvitationRefused']; $dataRef.ref.channel.isInvitation"/>
		<bind name="watchDH" value="'isPasswordNeeded';['channelEntity.channel.evOpenChanged'];channelEntity.channel.isWaitingPassword"/>
		<bind name="watch" value="'isDivision'; channelEntity.channel.typeIdent == 'division'"/>
		<bind name="watch" value="'isTrainingRoom'; channelEntity.channel.typeIdent == 'training_room'"/>
		<bind name="firstEntityDH" value="'enterBattleEntity'; CC.enterBattle"/>
		<bind name="watchDH" value="'selectedBattle'; ['enterBattleEntity.enterBattle.evBattleTypesChanged']; enterBattleEntity.enterBattle.selectedBattle"/>
		<bind name="firstEntityDH" value="'clanCurrentSeasonEntity'; CC.clanBattleSeason; 'current'"/>
		<bind name="watch" value="'isClanDivision'; (selectedBattle.type == BattleTypes.CLAN_BATTLE)"/>
		<style>
			<height value="30px"/>
			<marginRight value="4px"/>
		</style>
		<bind name="clickSplit"/>
		<bind name="action" value="'left_click'; 'setChatBoxOpenedState'; {channelId: channelEntity.channel.channelId, opened: !(isChatBoxOpened)}"/>
		<bind name="handleEventDH" value="'$dataRef.ref.channel.evUpChannelWindow'; 'Tooltip.Open'; {behaviour: TooltipBehaviour.window}; true"/>
		<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 2"/>
		<bind name="dataRefDH" value="'channel'; 'channelEntity.channel'"/>
		<bind name="watchDH" value="'channelTypeIdent';['channel.evTypeChanged']; channel.typeIdent"/>
		<bind name="watch" value="'isSteadyChannel'; (channelTypeIdent == 'division') ||
									(channelTypeIdent == 'club') ||
									(channelTypeIdent == 'clan') ||
									(channelTypeIdent == 'training_room')"/>
		<block className="button_dock_bg" type="native">
			<bind name="name" value="'openChannel_' + channelTypeIdent"/>
			<style>
				<height value="100%"/>
			</style>
			<bind name="watchDH" value="'isChatBoxOpened';['$dataRef.ref.channel.evChatBoxOpenChanged']; $dataRef.ref.channel.isChatBoxOpened"/>
			<bind name="menu" value="!(isSteadyChannel) ? 'ChatDropDownMenu' : 'EmptyItem' ;
					!(isSteadyChannel) ? {_dropDown: false, channelEntityId: $dataRef.ref.id, _isDivision: isDivision} : null; null; 'chatDropDownMenuVisible'"/>
			<bind name="tooltip" value="'ChatBox'; {channelEntityId: $dataRef.ref.id}; TooltipBehaviour.window; null; 'chatBoxVisible'; 'chatBoxState'; isChatBoxOpened"/>
			<bind name="tooltip" value="'OpenedChannelHintTooltip';{	_isSteadyChannel: isSteadyChannel, _isChatBoxOpened: isChatBoxOpened, _isDivision: isDivision}"/>
			<bind name="gotoAndStop!" value="'down'"/>
			<bind name="transition" value="rollOver || _active || chatDropDownMenuVisible; 0.15; {alpha: _active ? 0.9 : 0}; {alpha: 1}"/>
			<block>
				<bind name="transition" value="rollOver || isInvitation; 0.15; {alpha: _active ? 0.8 : 0.65}; {alpha: 1.0}"/>
				<style>
					<height value="100%"/>
					<marginLeft value="8px"/>
					<marginRight value="8px"/>
					<marginTop value="1px"/>
				</style>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<bind name="instance" value="'ChannelTitleWithIcon'; {channelEntityId: $dataRef.ref.id, _bold: isDivision, _maxWidth: 120, _isClanDivision: isClanDivision}"/>
				</block>
				<block>
					<bind name="visible" value="!(isSteadyChannel)"/>
					<style>
						<marginTop value="9px"/>
						<marginLeft value="4px"/>
					</style>
					<block className="button_close" type="native">
						<style>
							<marginRight value="1px"/>
						</style>
						<bind name="transition" value="rollOver || _active; 0.15; {alpha: _active ? 1 : 0}; {alpha: 1.0}"/>
						<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: (isInvitation)	? 'IDS_HINT_REJECT_INVITE'
																					: 'IDS_CHANNEL_CLOSE'}"/>
						<bind name="action" value="'buttonClick'; ( !(isInvitation || isPasswordNeeded) )	? 'leaveChannel'
																							: isInvitation ? 'refuseInvitation'
																											: 'cancelEnterPassword';
																						 {channelId: $dataRef.ref.channel.channelId}"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ChannelTitleWithIcon">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionData'"/>
		<bind name="entityDH" value="'channelEntity'; channelEntityId"/>
		<bind name="dataRefDH" value="'channel'; 'channelEntity.channel'"/>
		<bind name="watchDH" value="'countNewMessages'; ['channel.evCountNewMessagesChanged']; channel.countNewMessages"/>
		<bind name="watchDH" value="'isInvitation';['channel.evOpenChanged', 'channel.evInvitationRefused']; channel.isInvitation"/>
		<bind name="watchDH" value="'accountOnline'; ['channel.user.ref.accountStatus.evOnlineChanged']; channel.user.ref.accountStatus.online"/>
		<bind name="watchDH" value="'inBattle'; ['channel.user.ref.accountStatus.evInBattleChanged']; channel.user.ref.accountStatus.inBattle"/>
		<bind name="watchDH" value="'channelTypeIdent'; ['channel.evTypeChanged']; channel.typeIdent"/>
		<bind name="watchDH" value="'rawChannelName'; ['channel.evNameChanged', 'channel.user', 'channel.user.ref.accountName.evChanged'];		(channel.nameIds != null)		? tr(channel.nameIds) :
																																(channel.user.ref != null)		? channel.user.ref.accountName.nickName
																																								: channel.name"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<bind name="watchDH" value="'selfPreBattleId'; ['selfPlayerEntity.preBattlePlayerSimple.evPreBattleIdChanged']; selfPlayerEntity.preBattlePlayerSimple.preBattleId"/>
		<bind name="primaryEntityDH" value="'preBattleEntity'; CC.preBattle; selfPreBattleId"/>
		<bind name="watchDH" value="'preBattleOwnerId'; ['preBattleEntity.preBattle.evOwnerIdChanged']; preBattleEntity.preBattle.ownerId"/>
		<bind name="primaryEntityDH" value="'preBattleOwnerPlayerEntity'; CC.preBattlePlayerSimple; preBattleOwnerId"/>
		<bind name="watchDH" value="'clanId'; ['preBattleOwnerPlayerEntity.clanman.evClanIdChanged']; preBattleOwnerPlayerEntity.clanman.clanId"/>
		<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; clanId"/>
		<bind name="watchDH" value="'clanTag'; ['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
		<bind name="watchDH" value="'clanName'; ['clanEntity.clanExtended.evNameChanged']; clanEntity.clanExtended.name"/>
		<bind name="primaryEntityDH" value="'clanTeamEntity'; CC.clanTeam; selfPreBattleId"/>
		<bind name="watchDH" value="'squadId'; ['clanTeamEntity.clanTeam.evSquadIdChanged']; clanTeamEntity.clanTeam.squadId"/>
		<bind name="primaryEntityDH" value="'clanLadderInfoEntity'; CC.clanLadderInfo; clanId"/>
		<bind name="watchDH" value="'leadingSquadId'; []; clanLadderInfoEntity.clanLadderInfo.leadingSquadId"/>
		<bind name="watch" value="'isLeadingSquad'; squadId == leadingSquadId"/>
		<bind name="watchDH" value="'hasClanSquadModifier'; ['selfPlayerEntity.clanmanSupplyInfo.evHasClanSquadModifierChanged']; selfPlayerEntity.clanmanSupplyInfo.hasClanSquadModifier"/>
		<bind name="watchDH" value="'selfClanId'; ['selfPlayerEntity.clanman.evClanIdChanged']; selfPlayerEntity.clanman.clanId"/>
		<bind name="primaryEntityDH" value="'selfClanEntity'; CC.clan; selfClanId"/>
		<bind name="watchDH" value="'selfClanTag'; ['selfClanEntity.clan.evTagChanged']; selfClanEntity.clan.tag"/>
		<bind name="watchDH" value="'selfClanName'; ['selfClanEntity.clanExtended.evNameChanged']; selfClanEntity.clanExtended.name"/>
		<bind name="firstEntityDH" value="'clanCurrentSeasonEntity'; CC.clanBattleSeason; 'current'"/>
		<bind name="watchDH" value="'isBrawl'; ['clanCurrentSeasonEntity.clanBattleSeason.evChanged']; clanCurrentSeasonEntity.clanBattleSeason.isBrawl"/>
		<bind name="watch" value="'isShowClanSquadModifier'; hasClanSquadModifier &amp;&amp; !isBrawl"/>
		<bind name="name" value="_channelHeader                                                                     ? '' :
            (channelTypeIdent == 'division' &amp;&amp; divisionEntranceData.divisionType == 'division')    ? ('channelTitle_' + channelTypeIdent) :
            (channelTypeIdent == 'clan')                                                           ? ('channelTitle_' + clanTag)
                                                                                                   : ''"/>
		<block>
			<style>
				<hitTest value="false"/>
			</style>
			<block className="icon_channel_types" type="native">
				<style>
					<hitTest value="false"/>
					<marginRight value="2px"/>
					<marginTop value="4px"/>
				</style>
				<bind name="style" value="'marginLeft'; channelTypeIdent == 'division' ? '-2px' : '0px'"/>
				<innerBind elementName="channel_icon" name="gotoAndStop!" value="	(isInvitation)						? 'group_open' :
													(channel.isSecured)					? 'group_closed' :
													(channelTypeIdent == 'division')	? 'division'
													: channelTypeIdent"/>
				<bind name="gotoAndPlay!" value="isInvitation ? 'flicker' : 'normal'"/>
			</block>
			<block>
				<bind name="style" value="'marginTop'; _bold ? '-1px' : 'auto'"/>
				<block>
					<bind name="visible" value="(!(accountOnline) || inBattle) &amp;&amp; (channel.user.ref != null)"/>
					<style>
						<marginLeft value="1px"/>
						<marginRight value="1px"/>
					</style>
					<bind name="style" value="'marginTop'; _bold ? '3px' : '2px'"/>
					<block className="icon_player_status" type="native">
						<bind name="gotoAndStop!" value="inBattle ? 'in_battle'
												 : 'not_ready'"/>
					</block>
				</block>
				<block type="text">
					<bind name="name" value="_channelHeader                                                                     ? '' :
						(channelTypeIdent == 'division' &amp;&amp; divisionEntranceData.divisionType == 'division')    ? ('channelName_' + channelTypeIdent) :
						(channelTypeIdent == 'clan')                                                           ? ('channelName_' + clanInfo.tag)
																												: ''"/>
					<style>
						<multiline value="false"/>
					</style>
					<styleClass value="$FontFamilyDefault"/>
					<bind name="style" value="'maxWidth'; _maxWidth"/>
					<bind name="style" value="'alpha'; (!(accountOnline)) &amp;&amp; _channelHeader &amp;&amp; (channel.user.ref != null) ? 0.6 : 1"/>
					<bind name="style" value="'marginTop'; ((_channelName.length &gt; 27) &amp;&amp; (_channelHeader)) ? '2px' : '0px'"/>
					<bind name="class" value="((_channelName.length &gt; 27) &amp;&amp; (_channelHeader)) ? '$FontSize14' : '$FontSizeLarge'"/>
					<bind name="class" value="_bold ? '$Bold' : '$None'"/>
					<bind name="class" value="(channel.typeIdent == 'division')	? (divisionEntranceData.divisionType == 'party') ? '$FontColorWhite'
																												 : '$FontColorGolden' :
							 (channel.typeIdent == 'club')	? '$FontColorWhite' :
							 (channel.typeIdent == 'clan')	? '$FontColorWhite' :
							 (_channelHeader)	? '$FontColorBlueish'
												: '$FontColorDefault'"/>
					<bind name="watch" value="'_channelName'; 	(channelTypeIdent == 'clan')														? 	'['+selfClanTag+'] ' + selfClanName :
												(channelTypeIdent == 'division') &amp;&amp; (_isClanDivision)								? 	'['+clanTag+'] ' + tr( isShowClanSquadModifier ? 'IDS_CLAN_SQUAD_' + squadId : 'IDS_DIVISION' ) :
											 	(channelTypeIdent == 'division')													? 	tr('IDS_DIVISION')
												: (rawChannelName + ((channel.ownerNickName != null &amp;&amp; _isSearch)	? ' (' + channel.ownerNickName + ')'
																													: ''))"/>
					<bind name="text" value="channelTypeIdent != 'clan'	?	_channelName :
							selfClanTag &amp;&amp; selfClanName	?	_channelName : 'IDS_CLAN_CHAT_HEADER'"/>
				</block>
				<block>
					<bind name="watch" value="'isLeadingIconVisible'; (channelTypeIdent == 'division') &amp;&amp; _isClanDivision &amp;&amp; isShowClanSquadModifier &amp;&amp; isLeadingSquad"/>
					<bind name="visible" value="isLeadingIconVisible"/>
					<style>
						<hitTest value="false"/>
						<marginRight value="4px"/>
						<marginLeft value="4px"/>
						<marginTop value="4px"/>
					</style>
					<bind name="instance" value="'LeadingClanSquadIcon'; isLeadingIconVisible ? { _isGolden: true } : null"/>
				</block>
				<block type="text">
					<bind name="fade" value="countNewMessages != 0; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
					<styleClass value="$TextDefault"/>
					<style>
						<marginTop value="2px"/>
					</style>
					<bind name="class" value="_bold ? '$Bold' : '$None'"/>
					<bind name="class" value="	(channelTypeIdent == 'division') ? '$FontColorGolden':
								(channelTypeIdent == 'club')	 ? '$FontColorWhite' :
								(channelTypeIdent == 'clan')	 ? '$FontColorWhite'
																 : '$None'"/>
					<bind name="class" value="_channelHeader ? '$FontColorBlueish' : '$None'"/>
					<bind name="style" value="'width'; countNewMessages &lt; 10 ? 7 : 16"/>
					<bind name="pureText" value="(countNewMessages==0) ? '' : '(' + countNewMessages + ')'"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="InvitationToChatItem">
		<bind name="entityDH" value="'channelEntity'; _channelEntityId"/>
		<bind name="dataRefDH" value="'channel'; 'channelEntity.channel'"/>
		<bind name="watchDH" value="'channelName'; ['channel.evNameChanged', 'channel.user', 'channel.user.ref.accountName.evChanged']; (channel.nameIds != null) ? tr(channel.nameIds) : (channel.user.ref != null) ? channel.user.ref.accountName.nickName : channel.name"/>
		<block>
			<styleClass value="$MiddleAligned"/>
			<bind name="instance" value="'PlayerContactItem'; (channel.invitationFromEntityId != -1) ? { _entityAccountId: channel.invitationFromEntityId, _notTrancated: true } : null"/>
			<block type="text">
				<bind name="visible" value="channel.invitationFromEntityId == -1"/>
				<styleClass value="$TextHeaderBigWhite"/>
				<bind name="text" value="channel.invitationFromNickName"/>
			</block>
		</block>
		<block type="text">
			<styleClass value="$TextHeaderBigDefault"/>
			<bind name="class" value="'$FontColorBlueish'"/>
			<style>
				<marginBottom value="2px"/>
			</style>
			<bind name="text" value="'IDS_INVITE_TO_THE_CHANNEL'"/>
		</block>
		<block type="text">
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$TextHeaderBigWhite"/>
			<style>
				<marginBottom value="4px"/>
			</style>
			<bind name="text" value="channelName"/>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginBottom value="12px"/>
			</style>
			<block type="text">
				<styleClass value="$TextHeader"/>
				<bind name="class" value="'$FontSizeHeader4'"/>
				<bind name="countdown" value="channel.refuseInvitationTimeExpiration; 'countdownText'; 'mm:ss'"/>
				<bind name="pureText" value="'-' + countdownText"/>
				<style>
					<width value="66px"/>
				</style>
			</block>
			<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_AUTOMATE_CANCEL'}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="button_default_small" type="native">
				<styleClass value="$MiddleAligned"/>
				<params>
					<param name="autoSize" value="left"/>
				</params>
				<bind name="label" value="toUpperCase(tr('IDS_ACCEPT_INVITATION'))"/>
				<bind name="action" value="'buttonClick'; 'joinChannel'; {channelId: channelEntity.channel.channelId}"/>
			</block>
		</block>
	</block>
	<block className="EnterPasswordChatItem">
		<bind name="entityDH" value="'channelEntity'; _channelEntityId"/>
		<bind name="handleEventDH" value="'channelEntity.channel.evWrongPassword'; 'evWrongPassword'; {}; true"/>
		<bind name="var" value="{_wrongPassword: false}"/>
		<bind name="catch" value="'evWrongPassword'; {_wrongPassword : true}"/>
		<bind name="action" value="'passwordInputComplete'; 'joinChannel'; {channelId: channelEntity.channel.channelId, password: channelPasswordInput}"/>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$TextCarouselShipStatus"/>
				<style>
					<marginBottom value="6px"/>
				</style>
				<bind name="text" value="toUpperCase(tr('IDS_CLOSED_CHANNEL'))"/>
			</block>
			<block type="text">
				<styleClass value="$TextHeaderBigDefault"/>
				<styleClass value="$MiddleAligned"/>
				<text value="IDS_HINT_ENTER_PASSWORD"/>
			</block>
			<block>
				<style>
					<width value="200px"/>
					<marginTop value="10px"/>
					<height value="30px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<block className="text_input_caps_enter" type="native">
					<styleClass value="$Fullsize"/>
					<block>
						<block>
							<style>
								<position value="absolute"/>
								<width value="200px"/>
								<bottom value="-6px"/>
							</style>
							<bind name="instance" value="'WrongTextInputNotification'; _wrongPassword	? 	{_maxWidth : 200, _startTop: 10,
																							_text: (tr('IDS_WRONG_PASSWORD') + '. ' + tr('IDS_TRY_AGAIN'))}
																						:	null"/>
						</block>
					</block>
					<params>
						<param name="actAsButton" value="true"/>
						<param name="maxChars" value="16"/>
					</params>
					<bind name="focus" value="0; true"/>
					<bind name="sync" value="'text'; 'change'; channelPasswordInput"/>
					<bind name="catch" value="'change'; {_wrongPassword : false}"/>
					<bind name="dispatch" value="'textInputEnter'; 'passwordInputComplete'"/>
					<block className="button_dock" type="native">
						<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_JOIN'}"/>
						<styleClass value="$TextInputEnterButton"/>
						<bind name="enabled" value="channelPasswordInput.length &gt; 0"/>
						<bind name="dispatch" value="'buttonClick'; 'passwordInputComplete'"/>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="ChatBoxHeaderControls">
		<bind name="entityDH" value="'channelEntity'; _channelEntityId"/>
		<style>
			<height value="100%f"/>
			<flow value="horizontal"/>
		</style>
		<block className="button_collapse" type="native">
			<bind name="name" value="'collapseChatWindow'"/>
			<params>
				<param name="name" value="None"/>
			</params>
			<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_COLLAPSE_WINDOW'}"/>
			<bind name="dispatch" value="'click'; 'Tooltip.Close'"/>
			<bind name="action" value="'click'; 'setChatBoxOpenedState'; {channelId: channelEntity.channel.channelId, opened: false}"/>
		</block>
		<block>
			<bind name="visible" value="!!(_showCloseButton)"/>
			<style>
				<marginLeft value="5px"/>
			</style>
			<bind name="instance" value="'ChatboxButtonClose'; {_channelEntityId: _channelEntityId}"/>
		</block>
	</block>
	<block className="ChatboxButtonClose">
		<bind name="entityDH" value="'channelEntity'; _channelEntityId"/>
		<bind name="watchDH" value="'isInvitation'; 		['channelEntity.channel.evOpenChanged', 'channelEntity.channel.evInvitationRefused']; channelEntity.channel.isInvitation"/>
		<bind name="watchDH" value="'isPasswordNeeded'; 	['channelEntity.channel.evOpenChanged']; channelEntity.channel.isWaitingPassword"/>
		<bind name="watch" value="'isDivision'; channelEntity.channel.typeIdent == 'division'"/>
		<bind name="watch" value="'isClan'; channelEntity.channel.typeIdent == 'clan'"/>
		<block className="button_close" type="native">
			<params>
				<param name="name" value="ChatboxButtonClose"/>
			</params>
			<bind name="tooltip" value="'SimpleTooltip';  {tooltipText: 	isInvitation	? 'IDS_HINT_REJECT_INVITE' :
														isDivision		? 'IDS_LEAVE_DIVISION'
																		: 'IDS_CHANNEL_CLOSE'}"/>
			<bind name="action" value="'buttonClick'; 	isInvitation		? 'refuseInvitation' :
										isPasswordNeeded 	? 'cancelEnterPassword' :
										!(isDivision)		? 'leaveChannel'
															: '';
															isDivision ? {} : {channelId: channelEntity.channel.channelId}"/>
			<bind name="request" value="'buttonClick'; isDivision ? 'leaveDivision' : ''; {subtitle : 'IDS_LEAVE_DIVISION_QUESTION'}"/>
		</block>
	</block>
	<block className="OpenedChannelHintTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="245px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="9px"/>
					<marginRight value="8px"/>
					<marginTop value="10px"/>
					<marginBottom value="5px"/>
				</style>
				<bind name="instance" value="'MouseInstruction'; {_type: 'left', _instructionText: _isChatBoxOpened ? 	'IDS_HINT_COLLAPSE_WINDOW' : 
	 																									_isDivision ? 'IDS_HINT_EXPAND_WINDOW'
	 																												: 'IDS_HINT_LEFT_CLICK_TO_OPEN_CHAT', _maxWidth: 220}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!(_isSteadyChannel)"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="9px"/>
					<marginRight value="8px"/>
					<marginBottom value="5px"/>
				</style>
				<bind name="instance" value="'MouseInstruction'; {_type: 'right', _instructionText: 'IDS_HINT_RIGHT_CLICK_FOR_CONTEXT_MENU', _maxWidth: 220}"/>
			</block>
		</block>
	</block>
	<block className="ChannelMessageRenderer">
		<style>
			<width value="100%"/>
			<position value="virtual"/>
		</style>
		<bind name="style" value="'hitTest'; ((messageEntity.channelMessage.extraData != null) || isSuspended ? false : true)"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<bind name="dataRefDH" value="'messageEntity'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'senderDBId'; []; messageEntity.channelMessage.senderDBId"/>
		<bind name="primaryEntityDH" value="'playerEntity'; CC.accountSimple; messageEntity.channelMessage.senderDBId"/>
		<bind name="watchDH" value="'isSuspended'; ['playerEntity.accountSimple.evSuspendedChanged']; playerEntity.accountSimple.suspended"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="menu" value="'ContactContextMenu';	senderDBId != selfPlayerDbId 	? {	_entityAccountId: playerEntity.id,
																			_playerContext: {type: 'startPrivateChat'}, _inviteType: InviteType.COMMON}
																			: null; null; 'contactContextMenuVisible'"/>
		<block>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="transition" value="(mouseDown || contactContextMenuVisible || rollOver); 0.1; {alpha: 0}; {alpha: 1}"/>
			<block className="dock_submenu_item_bg" type="native">
				<bind name="transition" value="contactContextMenuVisible; 0.1; {alpha: 1}; {alpha: 0.7}"/>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="visible" value="messageEntity.channelMessage.extraData == null"/>
			<block type="text">
				<style>
					<marginLeft value="8px"/>
					<marginTop value="2px"/>
					<width value="36px"/>
					<fontSize value="13"/>
					<fontFamily value="$ZurichCondensed"/>
				</style>
				<bind name="text" value="messageEntity.channelMessage.time"/>
			</block>
			<block type="text">
				<bind name="visible" value="!isSuspended"/>
				<style>
					<width value="100%"/>
					<marginRight value="10px"/>
					<leading value="-3"/>
					<fontSize value="15"/>
					<selectable value="true"/>
				</style>
				<styleClass value="$FontFamilyDefault"/>
				<bind name="text" value="messageEntity.channelMessage.message"/>
			</block>
			<block type="text">
				<bind name="visible" value="isSuspended"/>
				<style>
					<width value="100%"/>
					<marginRight value="10px"/>
					<leading value="-3"/>
					<selectable value="false"/>
					<alpha value="0.4"/>
				</style>
				<styleClass value="$TextDefault"/>
				<bind name="text" value="'IDS_REMOVED_CHAT_MESSAGE'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'CVCMessageRenderer'; messageEntity.channelMessage.extraData != null ? {_entityId: messageEntity.id} : null"/>
		</block>
	</block>
	<block className="CVCMessageRenderer">
		<bind name="entityDH" value="'messageEntity'; _entityId"/>
		<style>
			<flow value="horizontal"/>
			<width value="100%"/>
		</style>
		<block type="text">
			<style>
				<marginLeft value="8px"/>
				<marginTop value="2px"/>
				<width value="36px"/>
				<alpha value="0.25"/>
				<fontSize value="13"/>
				<fontFamily value="$ZurichCondensed"/>
			</style>
			<bind name="class" value="'$FontColorDefault'"/>
			<bind name="text" value="messageEntity.channelMessage.time"/>
		</block>
		<bind name="watch" value="'battleResultText';	messageEntity.channelMessage.extraData.battleResult == 'defeat'		? tr('IDS_DEFEAT') :
										messageEntity.channelMessage.extraData.battleResult == 'victory'	? tr('IDS_VICTORY')
																											: tr('IDS_DRAW')"/>
		<bind name="watch" value="'rating';			messageEntity.channelMessage.extraData.ratingDelta"/>
		<bind name="watch" value="'battleResult';	messageEntity.channelMessage.extraData.battleResult"/>
		<bind name="watch" value="'rating';			messageEntity.channelMessage.extraData.rating"/>
		<bind name="watch" value="'league';			messageEntity.channelMessage.extraData.league"/>
		<bind name="watch" value="'division';		messageEntity.channelMessage.extraData.division"/>
		<bind name="watch" value="'stage';			messageEntity.channelMessage.extraData.stage"/>
		<bind name="watch" value="'toLeagueId';		messageEntity.channelMessage.extraData.toLeagueId"/>
		<bind name="watch" value="'toDivisionId';	messageEntity.channelMessage.extraData.toDivisionId"/>
		<bind name="watch" value="'progress';		messageEntity.channelMessage.extraData.progress"/>
		<bind name="watch" value="'ratingDelta';		messageEntity.channelMessage.extraData.ratingDelta"/>
		<bind name="watch" value="'stageResult';		messageEntity.channelMessage.extraData.stageResult"/>
		<bind name="watch" value="'squadId';			messageEntity.channelMessage.extraData.squadId"/>
		<bind name="watch" value="'ratingDeltaStr';	ratingDelta &gt; 0 ? ('+' + ratingDelta) : ratingDelta"/>
		<bind name="watch" value="'clanLeagueStr';	(stageResult == 'division_victory') 	? 'IDS_CLAN_BATTLE_RAISED_DIVISION' :
									(stageResult == 'division_defeat') 		? 'IDS_CLAN_BATTLE_DESCENDED_DIVISION' :
									(stageResult == 'promotion_victory') 	? 'IDS_CLAN_BATTLE_RAISED_LEAGUE' :
									(stageResult == 'promotion_defeat') 	? 'IDS_CLAN_PROMOTION_LOSE_BATTLE_FOR_LEAGUE' :
									(stageResult == 'demotion_victory') 	? 'IDS_CLAN_DEMOTION_WON_BATTLE_FOR_LEAGUE' :
									(stageResult == 'demotion_defeat') 		? 'IDS_CLAN_BATTLE_DESCENDED_LEAGUE':
									(stage == 'promotion')					? subst('IDS_CLAN_PROMOTION_BATTLE_FOR_LEAGUE', [], {leagueIndex: toLeagueId}) :
									(stage == 'demotion')					? subst('IDS_CLAN_DEMOTION_BATTLE_FOR_LEAGUE', [], {leagueIndex: toLeagueId})
																			: ''"/>
		<bind name="watch" value="'isBrawl';			messageEntity.channelMessage.extraData.isBrawl"/>
		<bind name="watch" value="'place';			messageEntity.channelMessage.extraData.place"/>
		<block>
			<bind name="visible" value="isBrawl"/>
			<style>
				<width value="100%"/>
				<marginTop value="1px"/>
				<marginBottom value="3px"/>
			</style>
			<bind name="watch" value="'placeText'; place ? subst('IDS_CLAN_CHAT_PLACE_IN_RATING', [], {place: place})
										: tr('IDS_CLAN_CHAT_PLACE_IN_RATING_UNDEFINED')"/>
			<block type="text">
				<style>
					<marginRight value="4px"/>
					<marginBottom value="0px"/>
					<leading value="-3"/>
					<fontSize value="15"/>
				</style>
				<bind name="class" value="	(battleResult == 'defeat') 	? '$FontColorCompareNegative':
							(battleResult == 'draw') 	? '$FontColorBlueish'
														: '$FontColorComparePositive'"/>
				<styleClass value="$FontFamilyDefaultBold"/>
				<bind name="text" value="battleResultText"/>
			</block>
			<block type="text">
				<style>
					<marginTop value="-3px"/>
					<marginRight value="4px"/>
					<leading value="-3"/>
					<fontSize value="15"/>
				</style>
				<bind name="class" value="'$FontColorDefault'"/>
				<styleClass value="$FontFamilyDefault"/>
				<bind name="text" value="placeText"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!isBrawl"/>
			<style>
				<width value="100%"/>
				<marginTop value="1px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<marginBottom value="-3px"/>
				</style>
				<block type="text">
					<style>
						<marginRight value="4px"/>
						<leading value="-3"/>
						<fontSize value="15"/>
					</style>
					<bind name="class" value="	(battleResult == 'defeat') 	? '$FontColorCompareNegative':
								(battleResult == 'draw') 	? '$FontColorBlueish'
															: '$FontColorComparePositive'"/>
					<styleClass value="$FontFamilyDefaultBold"/>
					<bind name="text" value="battleResultText"/>
				</block>
				<block type="text">
					<bind name="visible" value="ratingDeltaStr != 0 "/>
					<style>
						<marginRight value="4px"/>
						<leading value="-3"/>
						<fontSize value="15"/>
					</style>
					<bind name="class" value="'$FontFamilyDefaultBold'"/>
					<bind name="class" value="	(battleResult == 'defeat') 	? '$FontColorCompareNegative':
								(battleResult == 'draw') 	? '$FontColorBlueish'
															: '$FontColorComparePositive'"/>
					<bind name="text" value="ratingDeltaStr"/>
				</block>
				<block>
					<bind name="visible" value="progress != null"/>
					<style>
						<marginTop value="-4px"/>
					</style>
					<bind name="repeat" value="progress; 'ClanBattleResultsStarStatic'; { _width: '30px', _height: '30px', _smallSize: true }"/>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block type="text">
				<style>
					<marginRight value="4px"/>
					<leading value="-2"/>
					<fontSize value="15"/>
				</style>
				<bind name="class" value="(stage == 'league') 	? '$FontFamilyDefaultBold' 		: '$FontFamilyDefault'"/>
				<bind name="class" value="(stage == 'league') 	? 	(battleResult == 'defeat') 	? '$FontColorCompareNegative':
												  	(battleResult == 'draw') 	? '$FontColorBlueish'
																				: '$FontColorComparePositive'
												: '$FontColorDefault'"/>
				<bind name="text" value="clanLeagueStr"/>
			</block>
			<block>
				<style>
					<marginTop value="-3px"/>
				</style>
				<block type="text">
					<style>
						<marginRight value="4px"/>
						<leading value="-3"/>
						<fontSize value="15"/>
					</style>
					<bind name="class" value="'$FontColorDefault'"/>
					<styleClass value="$FontFamilyDefault"/>
					<bind name="text" value="tr('IDS_CLAN_SQUAD_' + squadId) + ','"/>
				</block>
				<block type="text">
					<style>
						<marginRight value="4px"/>
						<leading value="-3"/>
						<fontSize value="15"/>
					</style>
					<bind name="class" value="'$FontColorDefault'"/>
					<styleClass value="$FontFamilyDefault"/>
					<bind name="text" value="tr('IDS_CLAN_LEAGUE_' + league))"/>
				</block>
				<block type="text">
					<style>
						<marginRight value="4px"/>
						<leading value="-3"/>
						<fontSize value="15"/>
						<alpha value="0.8"/>
					</style>
					<styleClass value="$FontFamilyDefaultBold"/>
					<bind name="class" value="'$FontColorDefault'"/>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLAN_BATTLES_LOGO_DIVISION'}; 0"/>
					<bind name="text" value="RDigits.rdigits[division]"/>
				</block>
				<block type="text">
					<style>
						<marginRight value="4px"/>
						<leading value="-3"/>
						<fontSize value="15"/>
					</style>
					<styleClass value="$FontFamilyDefault"/>
					<bind name="class" value="'$FontColorDefault'"/>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLAN_BATTLES_LOGO_RATING'}; 0"/>
					<bind name="text" value="rating"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ClanSquadRatingInfo">
		<bind name="entityDH" value="'clanSquadEntity'; _clanSquadEntityId ? _clanSquadEntityId : $dataRef.ref.id"/>
		<bind name="watchDH" value="'league'; 	['clanSquadEntity.clanSquadLadderInfo.evLeagueIdChanged']; 		clanSquadEntity.clanSquadLadderInfo.leagueId"/>
		<bind name="watchDH" value="'division'; 	['clanSquadEntity.clanSquadLadderInfo.evDivisionIdChanged']; 	clanSquadEntity.clanSquadLadderInfo.divisionId"/>
		<bind name="watchDH" value="'rating'; 	['clanSquadEntity.clanSquadLadderInfo.evRatingChanged'];		clanSquadEntity.clanSquadLadderInfo.rating"/>
		<bind name="watch" value="'isLeading'; clanSquadEntity.clanSquadLadderInfo.squadId == _leadingSquadId"/>
		<bind name="watch" value="'selected'; _selected || _currentSquad == clanSquadEntity.clanSquadLadderInfo.squadId"/>
		<style>
			<width value="100%"/>
		</style>
		<bind name="style" value="'alpha'; selected ? 1.0 : 0.8"/>
		<block>
			<style>
				<marginTop value="12px"/>
				<marginLeft value="12px"/>
				<marginBottom value="12px"/>
			</style>
			<block>
				<block type="text">
					<styleClass value="$TextDefaultBold17NM"/>
					<bind name="class" value="selected ? '$FontColorGolden' : '$FontColorDefault'"/>
					<bind name="text" value="tr('IDS_CLAN_SQUAD_' + clanSquadEntity.clanSquadLadderInfo.squadId)"/>
				</block>
				<block>
					<bind name="visible" value="isLeading"/>
					<style>
						<marginLeft value="8px"/>
						<marginTop value="-3px"/>
						<marginBottom value="-4px"/>
					</style>
					<bind name="instance" value="'LeadingClanSquadIcon'; isLeading ? { _isGolden: selected } : null"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<style>
					<marginTop value="12px"/>
				</style>
				<block type="text">
					<style>
						<marginRight value="8px"/>
						<leading value="-3"/>
					</style>
					<styleClass value="$TextDefault17NM"/>
					<bind name="text" value="tr('IDS_CLAN_LEAGUE_' + league))"/>
				</block>
				<block type="text">
					<style>
						<marginRight value="8px"/>
						<leading value="-3"/>
						<alpha value="0.8"/>
					</style>
					<styleClass value="$TextDefaultBold17NM"/>
					<bind name="text" value="RDigits.rdigits[division]"/>
				</block>
				<block type="text">
					<style>
						<leading value="-3"/>
					</style>
					<styleClass value="$TextDefault17NM"/>
					<bind name="text" value="rating"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block type="text">
				<bind name="visible" value="isLeading"/>
				<style>
					<marginTop value="12px"/>
				</style>
				<styleClass value="$TextDefault17NM"/>
				<bind name="text" value="'IDS_LEADING_CLAN_SQUAD'"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="selected"/>
			<style>
				<right value="12px"/>
				<top value="12px"/>
				<position value="absolute"/>
			</style>
			<block className="icon_check" type="native"/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
	</block>
	<block className="DivisionHeaderTooltip">
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPreBattleId'; ['selfPlayerEntity.preBattlePlayerSimple.evPreBattleIdChanged']; selfPlayerEntity.preBattlePlayerSimple.preBattleId"/>
		<bind name="watchDH" value="'hasClanSquadModifier'; ['selfPlayerEntity.clanmanSupplyInfo.evHasClanSquadModifierChanged']; selfPlayerEntity.clanmanSupplyInfo.hasClanSquadModifier"/>
		<bind name="firstEntityDH" value="'clanCurrentSeasonEntity'; CC.clanBattleSeason; 'current'"/>
		<bind name="watchDH" value="'isBrawl'; ['clanCurrentSeasonEntity.clanBattleSeason.evChanged']; clanCurrentSeasonEntity.clanBattleSeason.isBrawl"/>
		<bind name="watchDH" value="'clanId'; ['selfPlayerEntity.clanman.evClanIdChanged']; selfPlayerEntity.clanman.clanId"/>
		<bind name="primaryEntityDH" value="'clanLadderInfoEntity'; CC.clanLadderInfo; clanId"/>
		<bind name="watchDH" value="'leadingSquadId'; []; clanLadderInfoEntity.clanLadderInfo.leadingSquadId"/>
		<bind name="primaryEntityDH" value="'clanTeamEntity'; CC.clanTeam; selfPreBattleId"/>
		<bind name="watchDH" value="'squadId'; ['clanTeamEntity.clanTeam.evSquadIdChanged'];	clanTeamEntity.clanTeam.squadId"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="250px"/>
			<hitTest value="false"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<style>
				<position value="absolute"/>
			</style>
			<styleClass value="$Fullsize"/>
		</block>
		<block>
			<bind name="visible" value="_isClanDivision &amp;&amp; hasClanSquadModifier &amp;&amp; !isBrawl"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="collectionRepeatDH" value="CC.clanSquadLadderInfo; 'ClanSquadRatingInfo'; ''; {_currentSquad: squadId, _leadingSquadId: leadingSquadId}"/>
		</block>
		<block>
			<style>
				<marginTop value="12px"/>
				<marginLeft value="10px"/>
				<marginBottom value="12px"/>
			</style>
			<bind name="instance" value="'MouseInstruction'; { _type: 'left', _instructionText: 'IDS_HINT_CLICK_TO_CHOOSE_ACTION', _maxWidth: 220 }"/>
		</block>
	</block>
	<css name="$DefaultContactsSize">
		<width value="330px"/>
		<height value="350px"/>
	</css>
	<block className="ResizableContactsAndChannelsInfotip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<styleClass value="$DefaultContactsSize"/>
		<bind name="actionIsDisplay" value="'setChannelsAndContactsIsDisplay'"/>
		<style>
			<userData value="{
			minResizeHeight: 240,
			maxResizeHeight: 620
		}"/>
		</style>
		<bind name="resize" value="'grip';'up';null; 'contactsAndChannelsHeight'"/>
		<block className="ContactsAndChannelsInfotip">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
			<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
			<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
			<styleClass value="$VerticalInfotipBehaviourCenter"/>
			<bind name="class" value="_isFromDockChatBtn ? '$Fullsize' : '$DefaultContactsSize'"/>
			<block>
				<styleClass value="$Fullsize"/>
				<style>
					<position value="absolute"/>
					<marginLeft value="13px"/>
					<marginRight value="13px"/>
					<marginTop value="9px"/>
					<marginBottom value="11px"/>
				</style>
				<block className="DeclareBlurLayer">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="transparentPixel" type="native">
						<bind name="blurLayer" value="0"/>
					</block>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block className="BlurMapCustom">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap3" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
			</block>
			<block className="dock_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<marginBottom value="-6px"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="!(_isFromDockChatBtn)"/>
				<block className="dock_panel_pin" type="native">
					<bind name="gotoAndStop!" value="'up'"/>
					<params>
						<param name="name" value="pinTop"/>
					</params>
					<style>
						<position value="absolute"/>
						<alpha value="0.5"/>
					</style>
				</block>
			</block>
			<block>
				<styleClass value="$Fullsize"/>
				<style>
					<marginLeft value="14px"/>
					<marginRight value="14px"/>
					<marginTop value="7px"/>
				</style>
				<bind name="var" value="{isServerAvailable: false}"/>
				<bind name="dataRefDH" value="'chat'; 'dataHub.chat.ref.chat'"/>
				<bind name="watchDH" value="'isServerAvailable'; ['chat.evConnected', 'chat.evDisConnected']; chat.isConnected"/>
				<bind name="child" value="isServerAvailable; {_playerContext: _playerContext, _isFromDockChatBtn: _isFromDockChatBtn}; 'ServerIsUnavailable'; 'ContactsAndChannels'"/>
			</block>
			<block>
				<bind name="visible" value="!(_isFromDockChatBtn)"/>
				<block className="dock_panel_pin" type="native">
					<bind name="gotoAndStop!" value="'down'"/>
					<params>
						<param name="name" value="pinBottom"/>
					</params>
					<style>
						<marginBottom value="3px"/>
						<alpha value="0.5"/>
					</style>
				</block>
			</block>
			<block className="dock_panel_pin_h" type="native">
				<style>
					<position value="absolute"/>
					<width value="9px"/>
					<left value="13px"/>
					<height value="16px"/>
					<alpha value="0.6"/>
				</style>
				<bind name="gotoAndStop!" value="'left'"/>
				<params>
					<param name="name" value="pinLeft"/>
				</params>
			</block>
			<block className="dock_panel_pin_h" type="native">
				<style>
					<position value="absolute"/>
					<width value="9px"/>
					<right value="4px"/>
					<height value="16px"/>
					<alpha value="0.6"/>
				</style>
				<bind name="gotoAndStop!" value="'right'"/>
				<params>
					<param name="name" value="pinRight"/>
				</params>
			</block>
			<block>
				<bind name="visible" value="_isFromDockChatBtn == true"/>
				<block className="dock_panel_pin" type="native">
					<bind name="gotoAndStop!" value="'down'"/>
					<style>
						<marginLeft value="20px"/>
						<marginBottom value="3px"/>
						<alpha value="0.5"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_VERTICAL_OVER'"/>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<style>
				<position value="absolute"/>
				<top value="7px"/>
				<height value="8px"/>
				<backgroundColor value="0x01000000"/>
			</style>
			<bind name="transition" value="(rollOver || resizing); 0.06; {alpha: 0}; {alpha: 1}; {alpha: 0}"/>
			<params>
				<param name="name" value="grip"/>
			</params>
			<block className="gripper_horizontal_over" type="native">
				<style>
					<alpha value="0.7"/>
					<marginTop value="3px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
			</block>
		</block>
	</block>
	<block className="ContactsAndChannelsInfotip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<styleClass value="$VerticalInfotipBehaviourCenter"/>
		<bind name="class" value="_isFromDockChatBtn ? '$Fullsize' : '$DefaultContactsSize'"/>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
				<marginLeft value="13px"/>
				<marginRight value="13px"/>
				<marginTop value="9px"/>
				<marginBottom value="11px"/>
			</style>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap3" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
		</block>
		<block className="dock_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginBottom value="-6px"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="!(_isFromDockChatBtn)"/>
			<block className="dock_panel_pin" type="native">
				<bind name="gotoAndStop!" value="'up'"/>
				<params>
					<param name="name" value="pinTop"/>
				</params>
				<style>
					<position value="absolute"/>
					<alpha value="0.5"/>
				</style>
			</block>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<marginLeft value="14px"/>
				<marginRight value="14px"/>
				<marginTop value="7px"/>
			</style>
			<bind name="var" value="{isServerAvailable: false}"/>
			<bind name="dataRefDH" value="'chat'; 'dataHub.chat.ref.chat'"/>
			<bind name="watchDH" value="'isServerAvailable'; ['chat.evConnected', 'chat.evDisConnected']; chat.isConnected"/>
			<bind name="child" value="isServerAvailable; {_playerContext: _playerContext, _isFromDockChatBtn: _isFromDockChatBtn}; 'ServerIsUnavailable'; 'ContactsAndChannels'"/>
		</block>
		<block>
			<bind name="visible" value="!(_isFromDockChatBtn)"/>
			<block className="dock_panel_pin" type="native">
				<bind name="gotoAndStop!" value="'down'"/>
				<params>
					<param name="name" value="pinBottom"/>
				</params>
				<style>
					<marginBottom value="3px"/>
					<alpha value="0.5"/>
				</style>
			</block>
		</block>
		<block className="dock_panel_pin_h" type="native">
			<style>
				<position value="absolute"/>
				<width value="9px"/>
				<left value="13px"/>
				<height value="16px"/>
				<alpha value="0.6"/>
			</style>
			<bind name="gotoAndStop!" value="'left'"/>
			<params>
				<param name="name" value="pinLeft"/>
			</params>
		</block>
		<block className="dock_panel_pin_h" type="native">
			<style>
				<position value="absolute"/>
				<width value="9px"/>
				<right value="4px"/>
				<height value="16px"/>
				<alpha value="0.6"/>
			</style>
			<bind name="gotoAndStop!" value="'right'"/>
			<params>
				<param name="name" value="pinRight"/>
			</params>
		</block>
		<block>
			<bind name="visible" value="_isFromDockChatBtn == true"/>
			<block className="dock_panel_pin" type="native">
				<bind name="gotoAndStop!" value="'down'"/>
				<style>
					<marginLeft value="20px"/>
					<marginBottom value="3px"/>
					<alpha value="0.5"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ContactsAndChannels">
		<bind name="var" value="{_searchState: 0}"/>
		<bind name="catch" value="'changeContactListInset'"/>
		<bind name="catch" value="'TextInputWithCancel.searchCancelled'; {_searchState : 0}"/>
		<bind name="catch" value="'addContact.searchButtonClicked'; 	{	_searchState : 1,
														_searchRequests: _isFromDockChatBtn ? [['contacts', 13], ['channels', null]]
																							: [['contacts', 13]]																												,
														_resultsDisplay: _isFromDockChatBtn ? ['myContacts', 'contacts', 'ignoredContacts', 'myChannels', 'channels']
																							: ['myContacts', 'contacts', 'ignoredContacts']
													}"/>
		<bind name="catch" value="'addContact.searchButtonClickedFromAddPlayer'; {	_searchState : 1,
																	_searchRequests:[['contacts', 13]],
																	_resultsDisplay:['contacts']}"/>
		<bind name="catch" value="'searchChannelsButtonClicked'; {	_searchState : 1,
													_searchRequests:[['channels', null], ['contacts', 13]],
													_resultsDisplay:['myChannels', 'channels', 'myContacts', 'contacts', 'ignoredContacts']
												}"/>
		<styleClass value="$Fullsize"/>
		<block>
			<bind name="visible" value="_isFromDockChatBtn == true"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="watch" value="'isAnyClubExisted'; false"/>
			<bind name="watch" value="'tabWidth'; isAnyClubExisted ? 98 : 150"/>
			<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
			<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
			<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
			<bind name="var" value="{inset: (userPrefs.contactsInset == null) || (!(isAnyClubExisted) &amp;&amp; userPrefs.contactsInset == 2)	? 0
																														: userPrefs.contactsInset }"/>
			<bind name="changeDispatch" value="inset; 'saveContactListInset'"/>
			<bind name="action" value="'saveContactListInset' ; 'setUserPref' ; {value: inset, name: 'contactsInset'}"/>
			<block className="tab_bar_bg" type="native">
				<style>
					<width value="100%"/>
					<height value="25px"/>
					<marginTop value="6px"/>
					<marginLeft value="-1px"/>
					<marginRight value="-1px"/>
				</style>
				<block>
					<style>
						<marginLeft value="1px"/>
					</style>
					<block>
						<bind name="instance" value="'MainTabSmallInstance'; {	_width: (tabWidth - 1), _selected: (inset == 0),
																_event: 'changeContactListInset', _eventParams: {inset: 0, _searchState: 0}, _label: 'IDS_CONTACTS', _tooltipIDS: 'IDS_TOOLTIP_TAB_CONTACTS',
																_name: 'contacts'}"/>
					</block>
					<block>
						<block className="divider_v" type="native">
							<style>
								<height value="21px"/>
								<marginTop value="2px"/>
							</style>
						</block>
					</block>
					<block>
						<bind name="instance" value="'MainTabSmallInstance'; {	_width: tabWidth, _selected: (inset == 1),
																_event: 'changeContactListInset', _eventParams: {inset: 1, _searchState: 0}, _label: 'IDS_CHANNELS', _tooltipIDS: 'IDS_TOOLTIP_TAB_CHANNELS',
																_name: 'channels'}"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block>
				<style>
					<marginTop value="9px"/>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="child" value="_isFromDockChatBtn ? inset : 0; {_searchState: _searchState, _searchRequests: _searchRequests, _resultsDisplay: _resultsDisplay, _playerContext: _playerContext, _isFromDockChatBtn: _isFromDockChatBtn}; 'Contacts'; 'Channels'; 'Contacts'"/>
		</block>
	</block>
	<block className="Contacts">
		<styleClass value="$Fullsize"/>
		<bind name="child" value="_searchState; {_searchRequests: _searchRequests, _resultsDisplay: _resultsDisplay, _playerContext: _playerContext, _isFromDockChatBtn: _isFromDockChatBtn}; 'ContactsList'; 'SearchResultsList'"/>
	</block>
	<block className="Channels">
		<styleClass value="$Fullsize"/>
		<bind name="child" value="_searchState; {_searchRequests:_searchRequests, _resultsDisplay: _resultsDisplay, _playerContext: _playerContext, _isFromDockChatBtn: _isFromDockChatBtn}; 'ChannelsList'; 'SearchResultsList'"/>
	</block>
	<block className="Clubs">
		<bind name="collectionDH" value="CC.clubsCommon; 'clubsCommonCollection'"/>
		<bind name="entityDH" value="'clubsCommonEntity'; clubsCommonCollection[0].id"/>
		<bind name="watchDH" value="'isClubServiceAvailable'; ['clubsCommonEntity.clubsCommon.evIsActiveChanged']; clubsCommonEntity.clubsCommon.isActive"/>
		<styleClass value="$Fullsize"/>
		<block className="inner_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<styleClass value="$DefaultScrollBar"/>
			<style>
				<height value="100%f"/>
				<width value="100%"/>
				<overflow value="scroll"/>
			</style>
			<block>
				<bind name="visible" value="isClubServiceAvailable"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'ClubMembersGroupsList'; {_playerContextType: 'contactsClubMembers'}"/>
			</block>
			<block>
				<bind name="visible" value="!(isClubServiceAvailable)"/>
				<style>
					<marginTop value="60px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'ServerIsUnavailable'; isClubServiceAvailable ? null : {_type: 'CLUB', _maxWidth: 220, _small: true }"/>
			</block>
		</block>
	</block>
	<block className="ClubMembersGroupsList">
		<bind name="collectionDH" value="CC.club; 'clubs'"/>
		<style>
			<width value="100%"/>
		</style>
		<bind name="repeat" value="clubs; 'ClubGroup'; {_playerContextType: _playerContextType}"/>
	</block>
	<block className="ClubGroup">
		<bind name="entityDH" value="'entityClub'; id"/>
		<bind name="watchDH" value="'name';['entityClub.club.evNameChanged']; entityClub.club.name"/>
		<bind name="watchDH" value="'isPartyMember'; ['entityClub.party.evUpdate']; entityClub.party.isMember"/>
		<bind name="watchDH" value="'leaderDbId';['entityClub.club.evleaderIdChanged']; entityClub.club.leaderId"/>
		<bind name="watchDH" value="'isPartyInBattle'; ['entityClub.party.evUpdate']; entityClub.party.isInBattle"/>
		<bind name="watchDH" value="'isCommander'; ['entityClub.party.evUpdate']; entityClub.party.isOwner"/>
		<bind name="watchDH" value="'isPartyCreated'; ['entityClub.club.evPartyCreatedChanged']; entityClub.club.partyCreated"/>
		<bind name="watchDH" value="'membersWithoutPlayer'; ['entityClub.club.evMembersChanged']; entityClub.club.membersWithoutPlayer"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
			<style>
				<width value="100%"/>
				<height value="33px"/>
			</style>
			<bind name="var" value="{groupExpanded: true}"/>
			<bind name="catch" value="'expandClubGroup'"/>
			<block>
				<style>
					<width value="100%"/>
					<height value="33px"/>
				</style>
				<bind name="instance" value="'SimpleListGroupHeader'; {	_expandGroupEvent: 'expandClubGroup', _groupLabel: name,
														_groupExpanded: groupExpanded, _stateOver: rollOver, _marginLeft: isPartyCreated ? '54px' : false}"/>
			</block>
			<block>
				<bind name="visible" value="isPartyCreated"/>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: isPartyInBattle ? 'IDS_IN_BATTLE' : 'IDS_PREPARING_FOR_BATTLE'}"/>
				<style>
					<width value="32px"/>
					<height value="29px"/>
					<top value="2px"/>
					<marginLeft value="22px"/>
					<backgroundSize value="cover"/>
					<position value="absolute"/>
				</style>
				<bind name="style" value="'backgroundImage'; isPartyInBattle ?	isPartyMember	? 'symbol:icon_club_status_in_battle_member_small'
																				: 'symbol:icon_club_status_in_battle_small' :
											isCommander		? 'symbol:icon_club_status_party_commander_small' :
											isPartyMember 	? 'symbol:icon_club_status_party_member_small'
															: 'symbol:icon_club_status_party_small'"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<marginBottom value="1px"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginBottom value="2px"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="fade" value="groupExpanded; 0.15; {scaleY: 0, ubScaleY: 0, alpha: 0}; {scaleY: 1, ubScaleY: 1, alpha: 1}; {scaleY: 0, ubScaleY: 0, alpha: 0}; 2; 0"/>
					<bind name="repeat" value="membersWithoutPlayer; 'ContactsClubMember'; {	_clubEntityId: id, groupExpanded: groupExpanded,
																			_playerContext: ((_playerContextType == 'contactsClubMembers')	? {	type: 'contactsClubMembers', clubId: entityClub.club.id, clubEntityId: id,
																																				clubLeaderDbId: leaderDbId} :
																							(_playerContextType == 'inviteToParty')			? {	type: 'inviteToParty', clubLeaderDbId: leaderDbId, clubEntityId: id}
																																			: {type: 'contactsClubMembers', clubLeaderDbId: leaderDbId})}"/>
				</block>
				<block>
					<bind name="visible" value="(groupExpanded &amp;&amp; membersWithoutPlayer.length != 0)"/>
					<style>
						<position value="absolute"/>
						<width value="100%"/>
						<bottom value="0px"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<height value="30px"/>
				</style>
				<bind name="fade" value="(groupExpanded &amp;&amp; membersWithoutPlayer.length == 0); 0.15; {alpha: 0, height: 0}; {alpha: 1, height: 30}"/>
				<block className="NoItemsInGroup">
					<style>
						<width value="100%"/>
						<height value="30px"/>
					</style>
					<block>
						<styleClass value="$MiddleAligned"/>
						<style>
							<marginTop value="2px"/>
						</style>
						<bind name="instance" value="'EmptyStatusParagraph'; {_text: 'IDS_INSTRUCTION_YOU_HAVE_NO_CLUB_MEMBERS', _maxWidth: 300}"/>
					</block>
					<block>
						<style>
							<position value="absolute"/>
							<width value="100%"/>
							<bottom value="0px"/>
						</style>
						<block className="HorizontalDivider">
							<styleClass value="$PxHorizontalCorrection"/>
							<style>
								<width value="100%"/>
								<height value="3px"/>
							</style>
							<block className="divider_h" type="native">
								<styleClass value="$Fullsize"/>
							</block>
						</block>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="ContactsClubMember">
		<style>
			<width value="100%"/>
			<height value="30px"/>
		</style>
		<bind name="fade" value="groupExpanded; 0.15; {alpha: 0, height: 0}; {alpha: 1, height: 30}"/>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="instance" value="'PlayerContactItemWithRollover'; {_entityAccountId: $value, _playerContext: _playerContext}"/>
		</block>
	</block>
	<block className="ContactsList">
		<bind name="controller" value="lesta.unbound.core.UbController"/>
		<bind name="handleEventDH" value="'dataHub.chat.ref.chat.evCreateContactsGroupErrorNameExist'; 'evCreateGroupErrorNameExist'"/>
		<bind name="var" value="{isCreatingGroup: false}"/>
		<bind name="watchDH" value="'isCreatingGroup'; ['dataHub.chat.ref.chat.contactsGroups.ref.items']; false"/>
		<styleClass value="$Fullsize"/>
		<block>
			<styleClass value="$Fullsize"/>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<marginBottom value="-2px"/>
				</style>
			</block>
			<block>
				<styleClass value="$DefaultScrollBar"/>
				<style>
					<height value="100%"/>
					<width value="100%"/>
					<overflow value="scroll"/>
					<marginBottom value="-2px"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="collectionRepeatDH" value="CC.contactsGroup; 'ContactsGroupElement'; 'sorted'; {_playerContext: _playerContext}"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<height value="40px"/>
					</style>
					<bind name="var" value="{isWrongName: false }"/>
					<bind name="catch" value="'ContactsList.addGroupButtonClicked'; {isCreatingGroup : true, isWrongName : false}"/>
					<bind name="catch" value="'TextInputWithCancel.groupCreationCancelled'; {isCreatingGroup : false, isWrongName : false}"/>
					<bind name="catch" value="'evCreateGroupErrorNameExist'; { 	isWrongName :		(inputStr=='') ? false : true,
																isCreatingGroup :	(inputStr=='') ? false : true}"/>
					<bind name="catch" value="'TextInputWithCancel.inputStrChanged'; {isWrongName : false}"/>
					<bind name="watch" value="'newGroupTitle'; inputStr"/>
					<bind name="catch" value="'TextInputWithCancel.groupCreationComplete'; null;'readyToExecuteGroupCreation'"/>
					<bind name="action" value="'readyToExecuteGroupCreation'; 'addContactsGroup'; {name: inputStr}"/>
					<block>
						<bind name="visible" value="isCreatingGroup"/>
						<style>
							<marginLeft value="6px"/>
							<marginTop value="20px"/>
						</style>
						<block>
							<styleClass value="$Fullsize"/>
							<bind name="instance" value="'TextInputWithCancel'; isCreatingGroup 	? {	onEnterEvent: 'groupCreationComplete',
																					onCancelEvent: 'groupCreationCancelled',
																					onInputStrChangedEvent: 'inputStrChanged',
																					defaultText: 'IDS_ENTER_GROUP_TITLE',
																					_onEnterTooltipText: 'IDS_ADD_GROUP',
																					_defaultInputValue: tr('IDS_NEW_GROUP')}
																				: null"/>
						</block>
						<block>
							<block>
								<style>
									<position value="absolute"/>
									<width value="270px"/>
									<bottom value="8px"/>
								</style>
								<bind name="instance" value="'WrongTextInputNotification'; isWrongName	? 	{_maxWidth : 270, _startTop: 10,
																							_text: (tr('IDS_WRONG_GROUP_TITLE') + '. ' + tr('IDS_TRY_ANOTHER_TITLE'))}
																						:	null"/>
							</block>
						</block>
					</block>
					<block>
						<bind name="visible" value="(!(isCreatingGroup) &amp;&amp; (_isFromDockChatBtn == true))"/>
						<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_ADD_GROUP'}"/>
						<style>
							<width value="100%"/>
						</style>
						<block className="dock_submenu_item" type="native">
							<styleClass value="$FullsizeAbsolute"/>
							<bind name="dispatch" value="'click'; 'ContactsList.addGroupButtonClicked'"/>
							<params>
								<param name="soundSet" value="dropmenu_button"/>
							</params>
						</block>
						<block>
							<styleClass value="$MiddleAligned"/>
							<style>
								<hitTest value="false"/>
								<marginTop value="9px"/>
								<marginBottom value="9px"/>
							</style>
							<block className="icon_plus" type="native">
								<style>
									<marginTop value="5px"/>
								</style>
							</block>
							<block type="text">
								<styleClass value="$TextDefaultBold"/>
								<bind name="class" value="'$FontColorBlueish'"/>
								<text value="IDS_ADD_GROUP"/>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
					</block>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<height value="42px"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$Fullsize"/>
				<style>
					<marginRight value="6px"/>
					<marginLeft value="4px"/>
				</style>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<width value="100%"/>
					</style>
					<block className="dock_submenu_item" type="native">
						<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_ADD_PLAYERS'}"/>
						<style>
							<height value="30px"/>
						</style>
						<block>
							<styleClass value="$MiddleVAligned"/>
							<bind name="visible" value="(_isFromDockChatBtn == true)"/>
							<style>
								<hitTest value="false"/>
							</style>
							<block className="icon_plus" type="native">
								<style>
									<marginLeft value="3px"/>
								</style>
								<styleClass value="$MiddleVAligned"/>
							</block>
							<block type="text">
								<style>
									<marginRight value="3px"/>
								</style>
								<styleClass value="$TextDefaultBold"/>
								<bind name="class" value="'$FontColorBlueish'"/>
								<text value="IDS_ADD_PLAYER"/>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
						<bind name="dispatch" value="'click'; 'addContact.searchButtonClickedFromAddPlayer'"/>
					</block>
					<block className="button_search" type="native">
						<bind name="name" value="'searchPlayer'"/>
						<styleClass value="$MiddleVAligned"/>
						<style>
							<right value="4px"/>
							<position value="absolute"/>
						</style>
						<bind name="dispatch" value="'buttonClick';'addContact.searchButtonClicked'"/>
						<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_SEARCH_PLAYERS'}"/>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="SearchResultGroup">
		<bind name="visible" value="searchGroups[$value].elements.length &gt; 0"/>
		<bind name="watch" value="'groupExpanded'; searchGroups[$value].groupExpanded"/>
		<bind name="catch" value="'invertExpand'; {groupExpanded: !groupExpanded}"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
				<height value="33px"/>
			</style>
			<block className="ExpandedGroupTitle">
				<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
				<style>
					<width value="100%"/>
					<height value="33px"/>
				</style>
				<block className="dock_submenu_item_bg" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="transition" value="(rollOver); 0.15; {alpha: 0}; {alpha: 0.5}"/>
					<block className="button_expand" type="native">
						<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: (groupExpanded) ? 'IDS_HINT_COLLAPSE_GROUP' : 'IDS_HINT_EXPAND_GROUP'}"/>
						<bind name="menu" value="'GroupContextMenu'; (false) ? {groupId: group.groupOfElements.groupId, _isIgnoreList: group.groupOfElements.isIgnorList, _isLocal: group.groupOfElements.isLocal} : null"/>
						<style>
							<position value="absolute"/>
							<width value="100%"/>
							<marginTop value="5px"/>
							<marginLeft value="3px"/>
						</style>
						<params>
							<param name="toggle" value="true"/>
							<param name="soundSet" value="dropmenu_button"/>
							<param name="focusable" value="false"/>
						</params>
						<bind name="selected" value="groupExpanded"/>
						<bind name="action" value="'buttonClick'; group.id ? 'expandGroupElement' : ''; { entityId: group.id }"/>
						<bind name="dispatch" value="'buttonClick' ; !(group.id) ? 'invertExpand' : ''"/>
					</block>
					<block type="text">
						<styleClass value="$MiddleVAligned"/>
						<styleClass value="$FontColorBlueish"/>
						<styleClass value="$TextDefaultBold"/>
						<style>
							<marginLeft value="22px"/>
							<hitTest value="false"/>
						</style>
						<bind name="text" value="searchGroups[$value].groupTitle"/>
					</block>
					<block>
						<bind name="visible" value="( !(group.groupOfElements.isIgnorList) &amp;&amp; false )"/>
						<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: tr('IDS_ONLINE_PLAYERS') + ' / ' + tr('IDS_PLAYERS_IN_GROUP')}"/>
						<styleClass value="$FullsizeAbsolute"/>
						<block>
							<styleClass value="$MiddleVAligned"/>
							<style>
								<right value="9px"/>
							</style>
							<block type="text">
								<styleClass value="$TextDefaultBold"/>
								<bind name="style" value="'alpha'; (countOnline!=0) ? 1 : 0.5"/>
								<bind name="text" value="countOnline"/>
							</block>
							<block type="text">
								<styleClass value="$TextDefaultBold"/>
								<style>
									<alpha value="0.5"/>
								</style>
								<bind name="text" value="'/ ' + countTotal"/>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
					</block>
				</block>
			</block>
			<block>
				<style>
					<marginTop value="-1px"/>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<marginBottom value="1px"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginBottom value="2px"/>
				</style>
				<bind name="repeat" value="searchGroups[$value].elements; searchGroups[$value].elementName; {groupExpanded: groupExpanded, _isSearch: true, _playerContext: _playerContext, _teamId: _teamId}"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<width value="100%"/>
					<bottom value="0px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="SearchResultsList">
		<bind name="dataRefDH" value="'myContacts'; 'dataHub.chat.ref.searchResult.myContacts.ref.items'"/>
		<bind name="dataRefDH" value="'contacts'; 'dataHub.chat.ref.searchResult.contacts.ref.items'"/>
		<bind name="dataRefDH" value="'ignoredContacts'; 'dataHub.chat.ref.searchResult.ignoredContacts.ref.items'"/>
		<bind name="dataRefDH" value="'myChannels'; 'dataHub.chat.ref.searchResult.myChannels.ref.items'"/>
		<bind name="dataRefDH" value="'channels'; 'dataHub.chat.ref.searchResult.channels.ref.items'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
		<bind name="action" value="'removedFromStage'; 'clearSearchResult'"/>
		<bind name="var" value="{inputStr:''}"/>
		<styleClass value="$Fullsize"/>
		<block>
			<style>
				<width value="100%"/>
				<height value="30px"/>
			</style>
			<block type="text">
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$TextHeaderBold"/>
				<bind name="class" value="'$FontColorBlueish'"/>
				<text value="IDS_SEARCH_RESULTS"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="-2px"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block className="inner_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginBottom value="1px"/>
			</style>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<block>
				<styleClass value="$DefaultScrollBar"/>
				<style>
					<height value="100%"/>
					<width value="100%"/>
					<overflow value="scroll"/>
					<marginBottom value="-2px"/>
				</style>
				<bind name="repeat" value="_resultsDisplay; 'SearchResultGroup';  {	_playerContext: _playerContext,
																	_teamId: _teamId,
																	searchGroups:{
																		myContacts:		{elements:myContacts, 		elementName:'ContactElement', groupTitle:'IDS_SEARCH_GROUP_IN_FRIENDS',		groupExpanded:true},
																		contacts: 		{elements:contacts, 		elementName:'ContactElement', groupTitle:'IDS_SEARCH_GROUP_NOT_IN_FRIENDS',	groupExpanded:true},
																		ignoredContacts: {elements:ignoredContacts, elementName:'ContactElement', groupTitle:'IDS_SEARCH_GROUP_IN_IGNOR_LIST', 	groupExpanded:false},
																		myChannels: 	{elements:myChannels, 		elementName:'ChannelElement', groupTitle:'IDS_SEARCH_GROUP_IN_MY_CHANNELS',	groupExpanded:true},
																		channels: 		{elements:channels, 		elementName:'ChannelElement', groupTitle:'IDS_SEARCH_GROUP_NOT_IN_MY_CHANNELS', groupExpanded:true}}}"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<height value="42px"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$Fullsize"/>
				<style>
					<marginLeft value="6px"/>
					<marginTop value="0px"/>
				</style>
				<bind name="instance" value="'TextInputWithCancel'; {	onCancelEvent: 'searchCancelled', onInputStrChangedEvent: 'inputStrChanged', _onEnterTooltipText: 'IDS_HINT_FIND',
														restrict: (!(_isFromDockChatBtn) ? realmConstants.nicknameRestrict : null)}"/>
				<bind name="catch" value="'TextInputWithCancel.inputStrChanged'"/>
				<bind name="changeDispatch" value="inputStr; 'inputStrChanged'"/>
				<bind name="action" value="'inputStrChanged'; 'searchRequest'; {requests: _searchRequests, query: inputStr}"/>
			</block>
		</block>
	</block>
	<block className="ChannelsList">
		<style>
			<width value="100%"/>
			<height value="100%"/>
		</style>
		<bind name="dataRefDH" value="'channelsGroups'; 'dataHub.chat.ref.chat.channelsGroups.ref.items'"/>
		<block>
			<styleClass value="$Fullsize"/>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<marginBottom value="-2px"/>
				</style>
			</block>
			<block>
				<styleClass value="$DefaultScrollBar"/>
				<style>
					<height value="100%"/>
					<width value="100%"/>
					<overflow value="scroll"/>
					<marginBottom value="-2px"/>
				</style>
				<bind name="repeat" value="channelsGroups; 'ChannelsGroupElement'"/>
			</block>
		</block>
		<bind name="watchDH" value="'isCreatingChannel'; ['dataHub.chat.ref.chat.channels.ref.items']; false"/>
		<bind name="var" value="{isCreatingChannel: false}"/>
		<bind name="catch" value="'addChannelBtnClicked'; {isCreatingChannel : true}"/>
		<bind name="catch" value="'channelCreationCancelled'; {isCreatingChannel : false}"/>
		<block>
			<bind name="visible" value="isCreatingChannel"/>
			<style>
				<width value="100%"/>
				<height value="79px"/>
			</style>
			<bind name="instance" value="'ChannelCreator'; isCreatingChannel ? {} : null"/>
		</block>
		<block>
			<bind name="visible" value="!isCreatingChannel"/>
			<style>
				<width value="100%"/>
				<height value="42px"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$Fullsize"/>
				<style>
					<marginRight value="6px"/>
					<marginLeft value="4px"/>
				</style>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<width value="100%"/>
					</style>
					<block className="dock_submenu_item" type="native">
						<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_ADD_CHANNELS'}"/>
						<style>
							<height value="30px"/>
						</style>
						<block>
							<styleClass value="$MiddleVAligned"/>
							<style>
								<hitTest value="false"/>
							</style>
							<block className="icon_plus" type="native">
								<style>
									<marginLeft value="3px"/>
								</style>
								<styleClass value="$MiddleVAligned"/>
							</block>
							<block type="text">
								<style>
									<marginRight value="3px"/>
								</style>
								<styleClass value="$TextDefaultBold"/>
								<bind name="class" value="'$FontColorBlueish'"/>
								<text value="IDS_CREATE_CHANNEL"/>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
						<bind name="dispatch" value="'click'; 'addChannelBtnClicked'"/>
					</block>
					<block className="button_search" type="native">
						<styleClass value="$MiddleVAligned"/>
						<style>
							<right value="4px"/>
							<position value="absolute"/>
						</style>
						<bind name="dispatch" value="'buttonClick'; 'searchChannelsButtonClicked'"/>
						<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_SEARCH_CHANNELS'}"/>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="ChannelCreator">
		<style>
			<width value="100%"/>
		</style>
		<bind name="dataRefDH" value="'channelsGroups'; 'dataHub.chat.ref.chat.channelsGroups.ref.items'"/>
		<bind name="handleEventDH" value="'dataHub.chat.ref.chat.evCreateChannelErrorNameExist'; 'evCreateChannelErrorNameExist'"/>
		<bind name="var" value="{ channelTitleInput: tr('IDS_CHANNEL_NAME_DEFAULT'),
				 channelPasswordInput: '',
	 			 isWrongName: false}"/>
		<bind name="catch" value="'evCreateChannelErrorNameExist'; { isWrongName:	(channelTitleInput == '') ? false : true}"/>
		<bind name="action" value="'channelCreationComplete'; 'createChannel'; {	name: channelTitleInput,
																password: channelPasswordInput}"/>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="6px"/>
				<marginTop value="6px"/>
			</style>
			<block>
				<block className="text_input_caps_enter" type="native">
					<bind name="focus" value="1; true"/>
					<style>
						<width value="270px"/>
					</style>
					<params>
						<param name="actAsButton" value="true"/>
						<param name="maxChars" value="32"/>
						<param name="restrict" value="^&lt;&gt;"/>
					</params>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_ENTER_CHANNEL_NAME'}"/>
					<bind name="text" value="channelTitleInput"/>
					<bind name="sync" value="'text'; 'change'; channelTitleInput"/>
					<bind name="catch" value="'change'; {isWrongName : false}"/>
					<bind name="dispatch" value="'textInputEnter';	(channelTitleInput == '') ? 'channelCreationCancelled'
																			  : (channelTitleInput.length &gt; 2) 	? 'channelCreationComplete'
																												: 'evCreateChannelErrorNameExist'"/>
					<block>
						<style>
							<width value="100%"/>
							<position value="absolute"/>
						</style>
						<block>
							<style>
								<position value="absolute"/>
								<width value="100%"/>
								<bottom value="-6px"/>
							</style>
							<bind name="instance" value="'WrongTextInputNotification'; isWrongName	? 	{_maxWidth : 270, _startTop: 10,
																						 _text: (channelTitleInput.length &lt; 3)	? tr('IDS_HINT_ENTER_CHANNEL_NAME')
																																: (tr('IDS_WRONG_TITLE') + '. ' + tr('IDS_TRY_ANOTHER_TITLE'))}
																					:	null"/>
						</block>
					</block>
				</block>
				<block className="button_dock" type="native">
					<style>
						<marginLeft value="-17px"/>
					</style>
					<styleClass value="$TextInputEnterButton"/>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CREATE_CHANNEL'}"/>
					<bind name="dispatch" value="'buttonClick';	(channelTitleInput == '') ? 'channelCreationCancelled'
                                                                          : (channelTitleInput.length &gt; 2) 	? 'channelCreationComplete'
                                                                                                            : 'evCreateChannelErrorNameExist'"/>
				</block>
				<block className="button_close" type="native">
					<style>
						<marginLeft value="5px"/>
					</style>
					<styleClass value="$MiddleVAligned"/>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CANCEL'}"/>
					<bind name="dispatch" value="'buttonClick'; 'channelCreationCancelled'"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block className="text_input_caps" type="native">
				<style>
					<width value="270px"/>
					<marginTop value="4px"/>
				</style>
				<params>
					<param name="actAsButton" value="true"/>
					<param name="maxChars" value="16"/>
					<param name="defaultText" value="IDS_ENTER_NEW_CHANNEL_PWD"/>
				</params>
				<bind name="focus" value="2; false"/>
				<bind name="sync" value="'text'; 'change'; channelPasswordInput"/>
				<bind name="dispatch" value="'textInputEnter'; 'channelCreationComplete'"/>
			</block>
		</block>
	</block>
	<block className="TextInputWithCancel">
		<styleClass value="$Fullsize"/>
		<bind name="catch" value="'removedFromStage'; {textInput: ''}"/>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<block className="text_input_caps_enter" type="native">
				<bind name="name" value="'textFieldSearch'"/>
				<bind name="tooltip" value="'SimpleTooltip'; _tooltipText ? {tooltipText: _tooltipText} : null"/>
				<bind name="style" value="'width'; _tfWidth ? _tfWidth : '270px'"/>
				<params>
					<param name="actAsButton" value="true"/>
				</params>
				<bind name="maxChars" value="_maxChars ? _maxChars : 32"/>
				<bind name="defaultText" value="defaultText"/>
				<bind name="var" value="{textInput: _currentText ? _currentText : _defaultInputValue}"/>
				<bind name="focus" value="0; true"/>
				<bind name="restrict" value="restrict"/>
				<bind name="text" value="textInput"/>
				<bind name="sync" value="'text'; 'change'; textInput"/>
				<bind name="dispatch" value="'change'; 'TextInputWithCancel.'+ onInputStrChangedEvent; {inputStr: textInput}"/>
				<bind name="dispatch" value="'textInputEnter'; 'TextInputWithCancel.' + onEnterEvent; {inputStr: textInput}"/>
				<block className="button_dock" type="native">
					<bind name="tooltip" value="'SimpleTooltip'; _onEnterTooltipText ? {tooltipText: _onEnterTooltipText} : null"/>
					<styleClass value="$TextInputEnterButton"/>
					<bind name="enabled" value="textInput.length &gt; 0"/>
					<bind name="dispatch" value="'buttonClick'; 'TextInputWithCancel.' + onEnterEvent; {inputStr: textInput}"/>
				</block>
			</block>
			<block className="button_close" type="native">
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CANCEL'}"/>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<marginLeft value="6px"/>
				</style>
				<bind name="dispatch" value="'buttonClick'; 'TextInputWithCancel.' + onCancelEvent"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ContactElement">
		<bind name="dataRefDH" value="'entityAccount'; '$dataRef.ref'"/>
		<style>
			<width value="100%"/>
			<height value="30px"/>
		</style>
		<block>
			<bind name="name" value="'playerContact_' + entityAccount.accountName.nickName"/>
			<styleClass value="$Fullsize"/>
			<bind name="instance" value="'PlayerContactItemWithRollover'; {	_entityAccountId: entityAccount.id,
															_currentGroupId: _currentGroupId,
															_playerContext: _playerContext,
															_teamId: _teamId }"/>
		</block>
	</block>
	<block className="ChannelElement">
		<bind name="dataRefDH" value="'channelEntity'; '$dataRef.ref'"/>
		<style>
			<width value="100%"/>
			<height value="30px"/>
		</style>
		<bind name="fade" value="groupExpanded; 0.15; {alpha: 0, height: 0}; {alpha: 1, height: 30}"/>
		<bind name="var" value="{isChannelRenaming: false}"/>
		<bind name="catch" value="'TextInputWithCancel.channelRenameCancelled'; {isChannelRenaming : false}"/>
		<bind name="catch" value="'TextInputWithCancel.channelRenameComplete'; {isChannelRenaming : false}"/>
		<bind name="catch" value="'ChannelContextMenu.renameChannelClicked'; {isChannelRenaming : true}"/>
		<block>
			<bind name="visible" value="isChannelRenaming"/>
			<styleClass value="$Fullsize"/>
			<style>
				<marginLeft value="4px"/>
			</style>
			<bind name="instance" value="'TextInputWithCancel'; isChannelRenaming ? {	onEnterEvent: 'channelRenameComplete',
																		onCancelEvent: 'channelRenameCancelled',
																		_currentText: channelEntity.channel.name,
																		_onEnterTooltipText: 'IDS_CHANNEL_RENAME',
																		_tooltipText: 'IDS_HINT_ENTER_CHANNEL_NAME'}
																 :	null"/>
			<bind name="catch" value="'TextInputWithCancel.channelRenameComplete'"/>
			<bind name="action" value="'TextInputWithCancel.channelRenameComplete'; 'renameChannel'; {channelId: channelEntity.channel.channelId, newName: inputStr}"/>
		</block>
		<block>
			<bind name="visible" value="!(isChannelRenaming)"/>
			<styleClass value="$Fullsize"/>
			<bind name="instance" value="'ChannelElementWithRollover'; {channelEntityId: channelEntity.id, _isSearch: _isSearch}"/>
		</block>
	</block>
	<block className="ChannelInfoTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="250px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'ChannelTitleWithIcon'; {channelEntityId: _channelEntityId, _bold: true, _maxWidth: 216, _isSearch: _isSearch}"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<style>
					<marginTop value="9px"/>
					<marginBottom value="5px"/>
				</style>
				<bind name="instance" value="'MouseInstruction'; {_type: 'double_left', _instructionText: 'IDS_HINT_LEFT_CLICK_TO_OPEN_CHANNEL', _maxWidth: 220}"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<style>
					<marginBottom value="6px"/>
				</style>
				<bind name="instance" value="'MouseInstruction'; {_type: 'right', _instructionText: 'IDS_HINT_RIGHT_CLICK_FOR_CONTEXT_MENU', _maxWidth: 220}"/>
			</block>
		</block>
	</block>
	<block className="ChannelElementWithRollover">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="entityDH" value="'channelEntity'; channelEntityId"/>
		<bind name="dataRefDH" value="'channel'; 'channelEntity.channel'"/>
		<bind name="watchDH" value="'channelOpened'; ['channel.evOpenChanged']; channel.opened"/>
		<style>
			<width value="100%"/>
			<height value="30px"/>
		</style>
		<bind name="style" value="'alpha'; channelOpened ? 1: 0.7"/>
		<block className="dock_submenu_item_bg" type="native">
			<bind name="transition" value="(rollOver || channelContextMenuVisible); 0.15; {alpha: 0}; {alpha: 1.0}"/>
			<bind name="menu" value="'ChannelContextMenu'; {channelEntityId: channelEntity.id}: null; null; 'channelContextMenuVisible'"/>
			<bind name="tooltip" value="'ChannelInfoTooltip';{_channelEntityId: channelEntity.id, _isSearch: _isSearch}"/>
			<params>
				<param name="doubleClickEnabled" value="true"/>
			</params>
			<bind name="action" value="'doubleClick'; (!channelOpened) ? 'joinChannel' : 'upChannelWindow'; {channelId: channel.channelId}"/>
			<bind name="action" value="'doubleClick'; (channelOpened &amp;&amp; !(channel.isChatBoxOpened)) ? 'setChatBoxOpenedState' : null; {channelId: channel.channelId, opened: true}"/>
			<styleClass value="$PxHorizontalCorrection"/>
			<styleClass value="$FullsizeAbsolute"/>
			<block>
				<style>
					<marginLeft value="16px"/>
					<width value="100%"/>
				</style>
				<styleClass value="$MiddleVAligned"/>
				<bind name="instance" value="'ChannelTitleWithIcon'; {channelEntityId: channelEntityId, _bold: channelOpened, _maxWidth: 250, _isSearch: _isSearch}"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ContactsGroupElement">
		<bind name="dataRefDH" value="'group'; '$dataRef.ref'"/>
		<bind name="collectionDH" value="CC.contact; 'contacts'; 'group_' + group.contactsGroup.id + '.sorted'"/>
		<bind name="watchDH" value="'groupName'; ['group.groupOfElements.evNameChanged']; group.groupOfElements.name"/>
		<bind name="watchDH" value="'groupExpanded'; ['group.groupViewElements.evStateChanged']; group.groupViewElements.expanded"/>
		<bind name="watchDH" value="'countOnline'; ['group.contactsGroup.evCountOnlineChanged']; group.contactsGroup.countOnline"/>
		<bind name="watchDH" value="'countTotal'; ['group.contactsGroup.evCountTotalChanged']; group.contactsGroup.countTotal"/>
		<bind name="handleEventDH" value="'group.groupOfElements.evRenameErrorNameExist'; 'evRenameErrorNameExist'"/>
		<bind name="handleEventDH" value="'group.groupOfElements.evNameChanged'; 'groupNameChangedSuccessfully'"/>
		<bind name="var" value="{isRenaming: false,
				isWrongName: false}"/>
		<bind name="catch" value="'TextInputWithCancel.renameCancelled'; {	isRenaming : false,
															isWrongName : false}"/>
		<bind name="catch" value="'groupNameChangedSuccessfully'; {	isWrongName :		false,
													isRenaming : false}"/>
		<bind name="catch" value="'evRenameErrorNameExist'; { 	isWrongName :		true,
												isRenaming :	true}"/>
		<bind name="dispatch" value="'evRenameErrorNameExist';  (inputStr==groupName || inputStr=='') ? 'groupNameChangedSuccessfully' : null"/>
		<bind name="catch" value="'TextInputWithCancel.inputStrChanged'; {isWrongName : false}"/>
		<bind name="catch" value="'GroupContextMenu.renameGroupClicked'; {isRenaming : true}"/>
		<bind name="catch" value="'TextInputWithCancel.renameComplete'; null; 'renameCompleted'"/>
		<bind name="action" value="'renameCompleted'; 'renameContactsGroup'; {groupId: group.groupOfElements.groupId, newName: inputStr}"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<height value="33px"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
						<height value="33px"/>
					</style>
					<bind name="visible" value="!isRenaming"/>
					<block className="ExpandedGroupTitle">
						<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
						<style>
							<width value="100%"/>
							<height value="33px"/>
						</style>
						<block className="dock_submenu_item_bg" type="native">
							<styleClass value="$FullsizeAbsolute"/>
							<bind name="transition" value="(rollOver); 0.15; {alpha: 0}; {alpha: 0.5}"/>
							<block className="button_expand" type="native">
								<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: (groupExpanded) ? 'IDS_HINT_COLLAPSE_GROUP' : 'IDS_HINT_EXPAND_GROUP'}"/>
								<bind name="menu" value="'GroupContextMenu'; (true) ? {groupId: group.groupOfElements.groupId, _isIgnoreList: group.groupOfElements.isIgnorList, _isLocal: group.groupOfElements.isLocal} : null"/>
								<style>
									<position value="absolute"/>
									<width value="100%"/>
									<marginTop value="5px"/>
									<marginLeft value="3px"/>
								</style>
								<params>
									<param name="toggle" value="true"/>
									<param name="soundSet" value="dropmenu_button"/>
									<param name="focusable" value="false"/>
								</params>
								<bind name="selected" value="groupExpanded"/>
								<bind name="action" value="'buttonClick'; group.id ? 'expandGroupElement' : ''; { entityId: group.id }"/>
								<bind name="dispatch" value="'buttonClick' ; !(group.id) ? 'invertExpand' : ''"/>
							</block>
							<block type="text">
								<styleClass value="$MiddleVAligned"/>
								<styleClass value="$FontColorBlueish"/>
								<styleClass value="$TextDefaultBold"/>
								<style>
									<marginLeft value="22px"/>
									<hitTest value="false"/>
								</style>
								<bind name="text" value="groupName"/>
							</block>
							<block>
								<bind name="visible" value="( !(group.groupOfElements.isIgnorList) &amp;&amp; true )"/>
								<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: tr('IDS_ONLINE_PLAYERS') + ' / ' + tr('IDS_PLAYERS_IN_GROUP')}"/>
								<styleClass value="$FullsizeAbsolute"/>
								<block>
									<styleClass value="$MiddleVAligned"/>
									<style>
										<right value="9px"/>
									</style>
									<block type="text">
										<styleClass value="$TextDefaultBold"/>
										<bind name="style" value="'alpha'; (countOnline!=0) ? 1 : 0.5"/>
										<bind name="text" value="countOnline"/>
									</block>
									<block type="text">
										<styleClass value="$TextDefaultBold"/>
										<style>
											<alpha value="0.5"/>
										</style>
										<bind name="text" value="'/ ' + countTotal"/>
									</block>
									<style>
										<flow value="horizontal"/>
									</style>
								</block>
							</block>
						</block>
					</block>
				</block>
				<block>
					<bind name="visible" value="isRenaming"/>
					<styleClass value="$Fullsize"/>
					<style>
						<marginLeft value="3px"/>
					</style>
					<block>
						<styleClass value="$Fullsize"/>
						<bind name="instance" value="'TextInputWithCancel'; isRenaming 	? {	onEnterEvent: 'renameComplete',
																			onCancelEvent: 'renameCancelled',
																			_onEnterTooltipText: 'IDS_RENAME_GROUP',
																			_currentText: groupName,
																			onInputStrChangedEvent: 'inputStrChanged'}
																		: null"/>
					</block>
					<block>
						<block>
							<style>
								<position value="absolute"/>
								<width value="270px"/>
								<bottom value="25px"/>
							</style>
							<bind name="instance" value="'WrongTextInputNotification'; isWrongName	? 	{_maxWidth : 270, _startTop: 10,
																						_text: (tr('IDS_WRONG_GROUP_TITLE') + '. ' + tr('IDS_TRY_ANOTHER_TITLE'))}
																					:	null"/>
						</block>
					</block>
				</block>
				<block>
					<style>
						<marginTop value="-1px"/>
						<width value="100%"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginBottom value="1px"/>
					</style>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
							<marginBottom value="2px"/>
							<layout value="lesta.unbound.layout.measure.MaskedLayout"/>
							<itemWidth value="100%"/>
							<itemHeight value="30px"/>
						</style>
						<bind name="fade" value="groupExpanded; 0.15; {alpha: 0, ubScaleY: 0}; {alpha: 1, ubScaleY: 1}"/>
						<bind name="generator" value="contacts; 'ContactElement'; {_currentGroupId: ((group.groupOfElements.isLocal) ? null : group.groupOfElements.groupId),
																_playerContext: _playerContext}"/>
					</block>
					<block>
						<bind name="visible" value="(groupExpanded &amp;&amp; countTotal!=0)"/>
						<style>
							<position value="absolute"/>
							<width value="100%"/>
							<bottom value="0px"/>
						</style>
						<block className="HorizontalDivider">
							<styleClass value="$PxHorizontalCorrection"/>
							<style>
								<width value="100%"/>
								<height value="3px"/>
							</style>
							<block className="divider_h" type="native">
								<styleClass value="$Fullsize"/>
							</block>
						</block>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<height value="30px"/>
					</style>
					<bind name="fade" value="(groupExpanded &amp;&amp; countTotal==0); 0.15; {alpha: 0, height: 0}; {alpha: 1, height: 30}"/>
					<block className="NoItemsInGroup">
						<style>
							<width value="100%"/>
							<height value="30px"/>
						</style>
						<block>
							<styleClass value="$MiddleAligned"/>
							<style>
								<marginTop value="2px"/>
							</style>
							<bind name="instance" value="'EmptyStatusParagraph'; {_text: (group.groupOfElements.groupId == 1) ? 'IDS_NO_CONTACTS' : 'IDS_NO_CONTACTS_IN_GROUP', _maxWidth: 300}"/>
						</block>
						<block>
							<style>
								<position value="absolute"/>
								<width value="100%"/>
								<bottom value="0px"/>
							</style>
							<block className="HorizontalDivider">
								<styleClass value="$PxHorizontalCorrection"/>
								<style>
									<width value="100%"/>
									<height value="3px"/>
								</style>
								<block className="divider_h" type="native">
									<styleClass value="$Fullsize"/>
								</block>
							</block>
						</block>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="ChannelsGroupElement">
		<bind name="dataRefDH" value="'group'; '$dataRef.ref'"/>
		<bind name="dataRefDH" value="'channels'; 'group.groupOfElements.elements.ref.items'"/>
		<bind name="watchDH" value="'groupExpanded'; ['group.groupViewElements.evStateChanged']; group.groupViewElements.expanded"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<height value="33px"/>
				</style>
				<block className="ExpandedGroupTitle">
					<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
					<style>
						<width value="100%"/>
						<height value="33px"/>
					</style>
					<block className="dock_submenu_item_bg" type="native">
						<styleClass value="$FullsizeAbsolute"/>
						<bind name="transition" value="(rollOver); 0.15; {alpha: 0}; {alpha: 0.5}"/>
						<block className="button_expand" type="native">
							<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: (groupExpanded) ? 'IDS_HINT_COLLAPSE_GROUP' : 'IDS_HINT_EXPAND_GROUP'}"/>
							<bind name="menu" value="'GroupContextMenu'; (false) ? {groupId: group.groupOfElements.groupId, _isIgnoreList: group.groupOfElements.isIgnorList, _isLocal: group.groupOfElements.isLocal} : null"/>
							<style>
								<position value="absolute"/>
								<width value="100%"/>
								<marginTop value="5px"/>
								<marginLeft value="3px"/>
							</style>
							<params>
								<param name="toggle" value="true"/>
								<param name="soundSet" value="dropmenu_button"/>
								<param name="focusable" value="false"/>
							</params>
							<bind name="selected" value="groupExpanded"/>
							<bind name="action" value="'buttonClick'; group.id ? 'expandGroupElement' : ''; { entityId: group.id }"/>
							<bind name="dispatch" value="'buttonClick' ; !(group.id) ? 'invertExpand' : ''"/>
						</block>
						<block type="text">
							<styleClass value="$MiddleVAligned"/>
							<styleClass value="$FontColorBlueish"/>
							<styleClass value="$TextDefaultBold"/>
							<style>
								<marginLeft value="22px"/>
								<hitTest value="false"/>
							</style>
							<bind name="text" value="group.groupOfElements.nameIds"/>
						</block>
						<block>
							<bind name="visible" value="( !(group.groupOfElements.isIgnorList) &amp;&amp; false )"/>
							<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: tr('IDS_ONLINE_PLAYERS') + ' / ' + tr('IDS_PLAYERS_IN_GROUP')}"/>
							<styleClass value="$FullsizeAbsolute"/>
							<block>
								<styleClass value="$MiddleVAligned"/>
								<style>
									<right value="9px"/>
								</style>
								<block type="text">
									<styleClass value="$TextDefaultBold"/>
									<bind name="style" value="'alpha'; (countOnline!=0) ? 1 : 0.5"/>
									<bind name="text" value="countOnline"/>
								</block>
								<block type="text">
									<styleClass value="$TextDefaultBold"/>
									<style>
										<alpha value="0.5"/>
									</style>
									<bind name="text" value="'/ ' + countTotal"/>
								</block>
								<style>
									<flow value="horizontal"/>
								</style>
							</block>
						</block>
					</block>
				</block>
				<block>
					<style>
						<marginTop value="-1px"/>
						<width value="100%"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginBottom value="1px"/>
					</style>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
							<marginBottom value="2px"/>
						</style>
						<bind name="repeat" value="channels; 'ChannelElement'; {groupExpanded: groupExpanded}"/>
					</block>
					<block>
						<bind name="visible" value="(groupExpanded &amp;&amp; channels.length!=0)"/>
						<style>
							<position value="absolute"/>
							<width value="100%"/>
							<bottom value="0px"/>
						</style>
						<block className="HorizontalDivider">
							<styleClass value="$PxHorizontalCorrection"/>
							<style>
								<width value="100%"/>
								<height value="3px"/>
							</style>
							<block className="divider_h" type="native">
								<styleClass value="$Fullsize"/>
							</block>
						</block>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<height value="30px"/>
					</style>
					<bind name="fade" value="(groupExpanded &amp;&amp; channels.length==0); 0.15; {alpha: 0, height: 0}; {alpha: 1, height: 30}"/>
					<bind name="watchDH" value="'groupIds'; ['channelEntity.elementInGroups.evGroupsChanged']; channelEntity.elementInGroups.groupIds"/>
					<block className="NoItemsInGroup">
						<style>
							<width value="100%"/>
							<height value="30px"/>
						</style>
						<block>
							<styleClass value="$MiddleAligned"/>
							<style>
								<marginTop value="2px"/>
							</style>
							<bind name="instance" value="'EmptyStatusParagraph'; {_text: isIn(ChannelGroup.MYCHANNELS, groupIds) ? 'IDS_NO_CREATED_CHANNELS' : 'IDS_NO_CHANNELS_IN_GROUP', _maxWidth: 300}"/>
						</block>
						<block>
							<style>
								<position value="absolute"/>
								<width value="100%"/>
								<bottom value="0px"/>
							</style>
							<block className="HorizontalDivider">
								<styleClass value="$PxHorizontalCorrection"/>
								<style>
									<width value="100%"/>
									<height value="3px"/>
								</style>
								<block className="divider_h" type="native">
									<styleClass value="$Fullsize"/>
								</block>
							</block>
						</block>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="GroupContextMenu">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<styleClass value="$DefaultMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<block className="MenuBg">
			<styleClass value="$FullsizeAbsolute"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<bind name="visible" value="optionData.contrast &amp;&amp; !(false)"/>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="!(false)"/>
				<block className="hint_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="false"/>
				<block className="dock_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginBottom value="-19px"/>
						<marginRight value="-14px"/>
						<marginLeft value="-14px"/>
						<marginTop value="-9px"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="(_isLocal || _isIgnoreList)"/>
			<style>
				<width value="100%"/>
				<marginTop value="6px"/>
				<marginBottom value="6px"/>
				<marginRight value="6px"/>
				<marginLeft value="6px"/>
			</style>
			<bind name="instance" value="'InstructionWarning'; { _instructionText: 'IDS_HINT_DEFAULT_GROUP', _maxWidth: '160'}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="visible" value="!(_isLocal || _isIgnoreList)"/>
			<block>
				<styleClass value="$ContextMenuListItem"/>
				<block className="MenuItem">
					<styleClass value="$Fullsize"/>
					<block className="dock_submenu_item" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<styleClass value="$MiddleVAligned"/>
						<styleClass value="$ContextMenuListItemContent"/>
						<bind name="text" value="'IDS_RENAME_GROUP'"/>
					</block>
				</block>
				<bind name="dispatch" value="'click'; 'GroupContextMenu.renameGroupClicked'"/>
			</block>
			<block>
				<styleClass value="$ContextMenuListItem"/>
				<block className="MenuItemWithAction">
					<styleClass value="$Fullsize"/>
					<block className="dock_submenu_item" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<styleClass value="$MiddleVAligned"/>
						<styleClass value="$ContextMenuListItemContent"/>
						<bind name="text" value="'IDS_REMOVE_GROUP'"/>
					</block>
					<bind name="action" value="'click'; 'removeContactsGroup'; {groupId:groupId}"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ChannelContextMenu">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<bind name="entityDH" value="'channelEntity'; channelEntityId"/>
		<bind name="dataRefDH" value="'channel'; 'channelEntity.channel'"/>
		<bind name="watchDH" value="'channelOpened'; ['channel.evOpenChanged']; channel.opened"/>
		<bind name="watchDH" value="'isFavorite'; ['channel.evIsFavoriteChanged']; channel.isFavorite"/>
		<bind name="watchDH" value="'groupIds'; ['channelEntity.elementInGroups.evGroupsChanged']; channelEntity.elementInGroups.groupIds"/>
		<bind name="watch" value="'isMyChannel'; isIn(ChannelGroup.MYCHANNELS, groupIds)"/>
		<styleClass value="$DefaultMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<block className="MenuBg">
			<styleClass value="$FullsizeAbsolute"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<bind name="visible" value="optionData.contrast &amp;&amp; !(false)"/>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="!(false)"/>
				<block className="hint_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="false"/>
				<block className="dock_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginBottom value="-19px"/>
						<marginRight value="-14px"/>
						<marginLeft value="-14px"/>
						<marginTop value="-9px"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="!(channelOpened)"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItemWithAction">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_CHANNEL_OPEN'"/>
				</block>
				<bind name="action" value="'click'; 'joinChannel'; {channelId: channel.channelId}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="channelOpened"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItemWithAction">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_CHANNEL_CLOSE'"/>
				</block>
				<bind name="action" value="'click'; 'leaveChannel'; {channelId: channel.channelId}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="((channel.typeIdent != 'common') &amp;&amp; (channel.typeIdent != 'division') &amp;&amp; !(isMyChannel))"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="(!isFavorite) ? 'IDS_ADD_TO_FAVORITES' : 'IDS_REMOVE_FROM_FAVORITES'"/>
				</block>
			</block>
			<bind name="action" value="'click'; 'setChannelFavorite'; {channelId: channel.channelId, favorite: !(isFavorite)}"/>
		</block>
		<block>
			<bind name="visible" value="isMyChannel"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItemWithAction">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_CHANNEL_REMOVE'"/>
				</block>
				<bind name="action" value="'click'; 'deleteChannel'; {channelId: channel.channelId}"/>
			</block>
		</block>
	</block>
	<css name="$FontSize18">
		<fontSize value="18"/>
	</css>
	<css name="$FontSize20">
		<fontSize value="20"/>
	</css>
	<css name="$AttributePositive">
		<textColor value="0x4CE8AA"/>
	</css>
	<css name="$AttributeNegative">
		<textColor value="0xFF6600"/>
	</css>
	<block className="ExteriorsMainInset">
		<styleClass value="$Fullsize"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; shipId"/>
		<bind name="watchDH" value="'canEquipCamouflage';	['shipOwnEntity.ownShip.evUpdateConfig'];	shipOwnEntity.ownShip.canEquipCamouflage"/>
		<bind name="feature" value="'15'; ''"/>
		<bind name="feature" value="16; ''"/>
		<bind name="watch" value="'defaultExteriorInset'; canEquipCamouflage &amp;&amp; feature_15 != 'locked' ? LobbyConstants.SHIP_EXTERIOR_CAMOUFLAGE : LobbyConstants.SHIP_EXTERIOR_SIGNALS"/>
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'inset'; ['dockEntity.insetComponent.evUpdate']; dockEntity.insetComponent.inset"/>
		<bind name="primaryEntityDH" value="'pageEntity'; CC.insetPage; LobbyConstants.SHIP_EXTERIOR"/>
		<bind name="watchDH" value="'page'; ['pageEntity.insetPage.evUpdate']; pageEntity.insetPage.page"/>
		<bind name="watch" value="'exteriorPage'; 	(page == null)
									|| (page == LobbyConstants.SHIP_EXTERIOR_CAMOUFLAGE &amp;&amp; (feature_15 == 'locked' || canEquipCamouflage == false))
									|| (page == LobbyConstants.SHIP_EXTERIOR_ENSIGN &amp;&amp; feature_16 == 'locked')
									? defaultExteriorInset
									: page"/>
		<bind name="catch" value="'exteriorInsetChangeDown'"/>
		<bind name="instance" value="'ExteriorInsetContent'; {shipId: shipId, exteriorPage: ((exteriorPage == LobbyConstants.SHIP_EXTERIOR_CAMOUFLAGE) &amp;&amp;
																			(canEquipCamouflage == false))	? defaultExteriorInset
																															: exteriorPage }"/>
	</block>
	<block className="SignalAndCamouflageHeader">
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'shipId'; ['dockEntity.shipSelection.evShipUpdate']; dockEntity.shipSelection.currentShipId"/>
		<bind name="watchDH" value="'shipIdForModuleInset'; ['dockEntity.shipSelection.evShipViewUpdate']; dockEntity.shipSelection.currentShipIdForModuleInset"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ownShip; shipId"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="watchDH" value="'upgradableShipInfo'; ['shipEntity.upgradableShipInfo.evUpdate']; shipEntity.upgradableShipInfo"/>
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'accountGold';		['resourceEntity.accountResource.evChangedGold'];	resourceEntity.accountResource.gold"/>
		<bind name="watchDH" value="'accountCredits';	['resourceEntity.accountResource.evChangedCredit'];	resourceEntity.accountResource.credits"/>
		<style>
			<flow value="horizontal"/>
			<width value="100%"/>
			<height value="31px"/>
		</style>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
				<marginTop value="-5px"/>
			</style>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap_h_no_right" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
			<block className="inner_panel" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="tooltip" value="'ShipExtendedTooltip'; { shipId: shipId }; 0"/>
			<style>
				<marginTop value="4px"/>
				<marginLeft value="3px"/>
			</style>
			<block className="icon_wreath" type="native">
				<styleClass value="$MouseDisable"/>
				<style>
					<position value="absolute"/>
					<top value="-6px"/>
				</style>
				<bind name="visible" value="upgradableShipInfo.isElite || shipInfo.isPremium || shipInfo.uiSpecial"/>
				<bind name="gotoAndStop!" value="(shipInfo.isPremium || shipInfo.uiSpecial) 	? 'premium' : 'elite'"/>
			</block>
			<block className="icon_ship" type="native">
				<styleClass value="$MouseDisable"/>
				<style>
					<marginLeft value="5px"/>
					<marginTop value="2px"/>
				</style>
				<bind name="gotoAndStop!" value="shipInfo.isPremium || shipInfo.uiSpecial 	? shipInfo.subtype + '_P'
																			: shipInfo.subtype"/>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<marginLeft value="3px"/>
				</style>
				<block type="text">
					<styleClass value="$FontShipnameWhite"/>
					<bind name="class" value="'$LetterSpacingSmall'"/>
					<bind name="class" value="shipInfo.isPremium || shipInfo.uiSpecial	? '$FontShipnameGolden'
																		: '$FontShipnameWhite'"/>
					<bind name="text" value="shipInfo.levelRome + ' ' + toUpperCase(tr(shipInfo.nameIDS + '_FULL'))"/>
				</block>
			</block>
			<block className="icon_check" type="native">
				<style>
					<marginLeft value="-2px"/>
					<marginTop value="-4px"/>
				</style>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="!(shipInfoSlim.isDownloaded)"/>
			<style>
				<marginTop value="-4px"/>
			</style>
			<bind name="instance" value="'IconSlimClient'; !(shipInfoSlim.isDownloaded) ? { _isEventLike: shipInfo.isEventLike } : null"/>
		</block>
	</block>
	<block className="SignalsGroup">
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ownShip; _shipId"/>
		<bind name="watchDH" value="'signalsAll';		['shipEntity.ownShip.evUpdateSignals'];		shipEntity.ownShip.signalsAll"/>
		<style>
			<width value="100%"/>
			<marginTop value="20px"/>
		</style>
		<bind name="visible" value="signalsAll[_groupName].length &gt; 0"/>
		<block>
			<styleClass value="$MiddleAligned"/>
			<bind name="instance" value="'BranchTypeLabelDark'; {nameIDS: 'IDS_SIGNAL_GROUP_' + toUpperCase(tr(_groupName))}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<flow value="htile"/>
				<align value="center"/>
				<marginTop value="10px"/>
			</style>
			<bind name="repeat" value="signalsAll[_groupName]; 'ExteriorItem'; {shipId: _shipId}"/>
		</block>
	</block>
	<block className="Signals">
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ownShip; shipId"/>
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'accountGold';		['resourceEntity.accountResource.evChangedGold'];	resourceEntity.accountResource.gold"/>
		<bind name="watchDH" value="'accountCredits';	['resourceEntity.accountResource.evChangedCredit'];	resourceEntity.accountResource.credits"/>
		<style>
			<width value="100%"/>
			<height value="100%f"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
				<overflow value="scroll"/>
				<height value="100%f"/>
				<marginTop value="-20px"/>
				<paddingBottom value="20px"/>
			</style>
			<styleClass value="$DefaultScrollBar"/>
			<bind name="instance" value="'SignalsGroup'; {_shipId: shipId, _groupName: 'battle'}"/>
			<bind name="instance" value="'SignalsGroup'; {_shipId: shipId, _groupName: 'eco'}"/>
			<bind name="instance" value="'SignalsGroup'; {_shipId: shipId, _groupName: 'special'}"/>
		</block>
		<bind name="watchDH" value="'maxPriceCR';		['shipEntity.ownShip.evUpdateAutorecharge']; 	shipEntity.ownShip.autorechargeExteriorSummPrice[ExteriorTypes.FLAGS][0]"/>
		<bind name="watchDH" value="'maxPriceGold';		['shipEntity.ownShip.evUpdateAutorecharge']; 	shipEntity.ownShip.autorechargeExteriorSummPrice[ExteriorTypes.FLAGS][1]"/>
		<bind name="watchDH" value="'nextPriceCR';		['shipEntity.ownShip.evUpdateAutorecharge']; 	shipEntity.ownShip.autorechargeExteriorEstimatePrice[ExteriorTypes.FLAGS][0]"/>
		<bind name="watchDH" value="'nextPriceGold';		['shipEntity.ownShip.evUpdateAutorecharge']; 	shipEntity.ownShip.autorechargeExteriorEstimatePrice[ExteriorTypes.FLAGS][1]"/>
		<bind name="watchDH" value="'camouflageOn';		['shipEntity.ownShip.evUpdateAutorecharge']; 	shipEntity.ownShip.autorechargeCamouflage"/>
		<bind name="watchDH" value="'camouflageOff';		['shipEntity.ownShip.evUpdateAutorecharge']; 	shipEntity.ownShip.autorechargeCamouflage"/>
		<bind name="watchDH" value="'autorechargeOn';	['shipEntity.ownShip.evUpdateAutorecharge'];	shipEntity.ownShip.autorechargeFlags"/>
		<bind name="watchDH" value="'sigInstalled';		['shipEntity.ownShip.evUpdateSignals'];			shipEntity.ownShip.sigInstalled"/>
		<bind name="watchDH" value="'canBuySomeSignal';	['shipEntity.ownShip.evUpdateSignals'];			shipEntity.ownShip.canBuySomeSignal"/>
		<bind name="watch" value="'goldDeficit';	-(accountGold - nextPriceGold)"/>
		<bind name="watch" value="'creditsDeficit';	-(accountCredits - nextPriceCR)"/>
		<bind name="instance" value="'Autoreplenishment'; { 	shipId: shipId,
											exteriorPage: exteriorPage,
											_itemsInstalled: sigInstalled,
											_maxPriceCR: maxPriceCR,
											_maxPriceGold : maxPriceGold,
											_nextPriceCR: nextPriceCR,
											_nextPriceGold: nextPriceGold,
											_canBuySomeExterior: canBuySomeSignal,
											_tooltipHeader: 'IDS_AUTOREPLENISHMENT_SIGNALS',
											_camouflageOn: camouflageOn,
											_camouflageOff: camouflageOff,
											_signalsOn: true,
											_signalsOff: false,
											_isSignal: true,
											_autorechargeOn: autorechargeOn,
											_goldDeficit: goldDeficit,
											_creditsDeficit: creditsDeficit,
											_multiParagraphArrayHint: [ {_paragraphText: 'IDS_SIGNALS_REPLENISH_AUTOMATICALLY_HINT_1'}, {_paragraphText: 'IDS_SIGNALS_REPLENISH_AUTOMATICALLY_HINT_2'}, {_paragraphText: 'IDS_SIGNALS_REPLENISH_AUTOMATICALLY_HINT_3'}],
											_multiParagraphArrayPriceHint: [{_paragraphText: 'IDS_SIGNALS_MAX_REPLENISHMENT_HINT_1'}, {_paragraphText: 'IDS_SIGNALS_REPLENISH_AUTOMATICALLY_HINT_4'}]
											} "/>
	</block>
	<block className="Camouflage">
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ownShip; shipId"/>
		<bind name="watchDH" value="'camouflageAll';			['shipEntity.ownShip.evUpdateCamouflages'];		shipEntity.ownShip.camouflageAll"/>
		<bind name="watchDH" value="'camInstalled';			['shipEntity.ownShip.evUpdateCamouflages'];		shipEntity.ownShip.camInstalled"/>
		<bind name="watchDH" value="'canBuySomeCamouflage';	['shipEntity.ownShip.evUpdateCamouflages'];		shipEntity.ownShip.canBuySomeCamouflage"/>
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'accountGold';		['resourceEntity.accountResource.evChangedGold'];	resourceEntity.accountResource.gold"/>
		<bind name="watchDH" value="'accountCredits';	['resourceEntity.accountResource.evChangedCredit'];	resourceEntity.accountResource.credits"/>
		<style>
			<width value="100%"/>
			<height value="100%f"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
				<overflow value="scroll"/>
				<height value="100%f"/>
				<marginTop value="-20px"/>
			</style>
			<styleClass value="$DefaultScrollBar"/>
			<block>
				<style>
					<flow value="htile"/>
					<align value="center"/>
					<width value="100%"/>
					<marginBottom value="20px"/>
					<marginTop value="20px"/>
				</style>
				<bind name="repeat" value="camouflageAll; 'CamouflageExteriorItemAdapter'; { _shipId: shipId }"/>
			</block>
		</block>
		<bind name="watchDH" value="'maxPriceCR';		['shipEntity.ownShip.evUpdateAutorecharge'];	shipEntity.ownShip.autorechargeExteriorSummPrice[ExteriorTypes.CAMOUFLAGE][0]"/>
		<bind name="watchDH" value="'maxPriceGold';		['shipEntity.ownShip.evUpdateAutorecharge'];	shipEntity.ownShip.autorechargeExteriorSummPrice[ExteriorTypes.CAMOUFLAGE][1]"/>
		<bind name="watchDH" value="'nextPriceCR';		['shipEntity.ownShip.evUpdateAutorecharge'];	shipEntity.ownShip.autorechargeExteriorEstimatePrice[ExteriorTypes.CAMOUFLAGE][0]"/>
		<bind name="watchDH" value="'nextPriceGold';		['shipEntity.ownShip.evUpdateAutorecharge'];	shipEntity.ownShip.autorechargeExteriorEstimatePrice[ExteriorTypes.CAMOUFLAGE][1]"/>
		<bind name="watchDH" value="'signalsOn';			['shipEntity.ownShip.evUpdateAutorecharge'];	shipEntity.ownShip.autorechargeFlags"/>
		<bind name="watchDH" value="'signalsOff';		['shipEntity.ownShip.evUpdateAutorecharge'];	shipEntity.ownShip.autorechargeFlags"/>
		<bind name="watchDH" value="'autorechargeOn';	['shipEntity.ownShip.evUpdateAutorecharge'];	shipEntity.ownShip.autorechargeCamouflage"/>
		<bind name="watch" value="'goldDeficit';	-(accountGold - nextPriceGold)"/>
		<bind name="watch" value="'creditsDeficit';	-(accountCredits - nextPriceCR)"/>
		<bind name="instance" value="'Autoreplenishment'; { 	shipId: shipId,
											exteriorPage: exteriorPage,
											_itemsInstalled: camInstalled,
											_maxPriceCR: maxPriceCR,
											_maxPriceGold : maxPriceGold,
											_nextPriceCR: nextPriceCR,
											_nextPriceGold: nextPriceGold,
											_canBuySomeExterior: canBuySomeCamouflage,
											_tooltipHeader: 'IDS_AUTOREPLENISHMENT_CAMO',
											_signalsOn: signalsOn,
											_signalsOff: signalsOff,
											_camouflageOn: true,
											_camouflageOff: false,
											_isCamouflage: true,
											_autorechargeOn: autorechargeOn,
											_goldDeficit: goldDeficit,
											_creditsDeficit: creditsDeficit,
											_multiParagraphArrayHint: [ {_paragraphText: 'IDS_CAMO_REPLENISH_AUTOMATICALLY_HINT_1'}, {_paragraphText: 'IDS_CAMO_REPLENISH_AUTOMATICALLY_HINT_2'}, {_paragraphText: 'IDS_CAMO_REPLENISH_AUTOMATICALLY_HINT_3'}],
											_multiParagraphArrayPriceHint: [{_paragraphText: 'IDS_CAMO_MAX_REPLENISHMENT_HINT_1'}, {_paragraphText: 'IDS_CAMO_REPLENISH_AUTOMATICALLY_HINT_4'}]
											} "/>
	</block>
	<block className="Flag">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'ensigns'; 'ensigns'"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="watch" value="'navalFlags'; shipInfo.availableNavalFlags"/>
		<style>
			<width value="100%"/>
			<height value="100%f"/>
		</style>
		<block>
			<bind name="visible" value="(ensigns.length &gt; 0)"/>
			<styleClass value="$DefaultScrollBar"/>
			<style>
				<overflow value="scroll"/>
				<marginTop value="-20px"/>
				<width value="100%"/>
				<height value="100%f"/>
			</style>
			<block>
				<style>
					<flow value="htile"/>
					<align value="center"/>
					<width value="100%"/>
				</style>
				<bind name="repeat" value="ensigns; 'FlagItem'; {shipId: shipId}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!(ensigns.length)"/>
			<style>
				<marginBottom value="16px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<block type="text">
					<styleClass value="$TextDefaultBold17NM"/>
					<bind name="class" value="'$FontColorUnready'"/>
					<bind name="text" value="toUpperCase(tr('IDS_NO_ENSIGNS_AVAILABLE'))"/>
				</block>
			</block>
			<block>
				<style>
					<marginTop value="3px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'InstructionBigTech'; { _instructionText: 'IDS_PARTICIPATE_IN_RANKED_BATTLES', _type: 'info', _maxWidth: '480' }"/>
			</block>
		</block>
		<block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
			<bind name="visible" value="(realmConstants.currentRealm != 'CN') &amp;&amp; (navalFlags.length &gt; 1)"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<width value="100%"/>
					<height value="32px"/>
					<position value="absolute"/>
				</style>
				<block className="BlurMapCustom">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap_h_no_right" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
				<block className="contrast_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="visible" value="optionData.contrast"/>
				</block>
				<block className="inner_panel" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
					<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
					<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
					<bind name="watch" value="'isExpanded'; (userPrefs.navalFlagAccordeonExpanded == null) ? false : userPrefs.navalFlagAccordeonExpanded"/>
					<bind name="action" value="'saveNavalFlagAccordeonExpanded'; 'setUserPref' ; {value: isExpanded, name: 'navalFlagAccordeonExpanded'}"/>
					<bind name="dispatch" value="'click' ; 'invertExpand'"/>
					<bind name="catch" value="'invertExpand'; {isExpanded: !isExpanded}; 'saveNavalFlagAccordeonExpanded'"/>
					<block type="text">
						<styleClass value="$TextMetaHeader"/>
						<style>
							<marginLeft value="32px"/>
							<marginTop value="4px"/>
						</style>
						<bind name="text" value="'IDS_NAVAL_FLAGS'"/>
					</block>
					<block className="button_expand" type="native">
						<style>
							<position value="absolute"/>
							<height value="24px"/>
							<width value="100%"/>
							<marginLeft value="8px"/>
							<marginTop value="4px"/>
						</style>
						<params>
							<param name="toggle" value="true"/>
							<param name="soundSet" value="dropmenu_button"/>
							<param name="focusable" value="false"/>
						</params>
						<bind name="selected" value="isExpanded"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<bind name="fade" value="isExpanded; 0.15; {alpha: 0, top: 10, ubScaleY: 0}; {alpha: 1, top: 0, ubScaleY: 1}; {alpha: 0, top: 10, ubScaleY: 0}; 3"/>
					<style>
						<flow value="htile"/>
						<width value="100%"/>
						<marginBottom value="16px"/>
					</style>
					<bind name="repeat" value="navalFlags; 'FlagItem'; {shipId: shipId}"/>
				</block>
			</block>
		</block>
	</block>
	<block className="CamouflageExteriorItemAdapter">
		<bind name="entityDH" value="'camouflageEntity'; $value"/>
		<bind name="watchDH" value="'camouflageID'; 	[]; camouflageEntity.camouflage.camouflageID"/>
		<bind name="instance" value="'ExteriorItem'; { shipId: _shipId, $value: camouflageID, _camouflageEntityId: $value }"/>
	</block>
	<block className="ExteriorItem">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ownShip; shipId"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="primaryEntityDH" value="'exteriorEntity'; CC.exteriorConfig; $value"/>
		<bind name="watchDH" value="'exteriorConfig'; []; exteriorEntity.exteriorConfig"/>
		<bind name="watchDH" value="'count'; 				['exteriorEntity.countComponent.evUpdate'];		exteriorEntity.countComponent.value"/>
		<bind name="watchDH" value="'exteriors';				['shipEntity.ownShip.evExteriorsChanged'];		shipEntity.ownShip.exteriors"/>
		<bind name="watchDH" value="'permoflagePurchased';	['shipEntity.ownShip.evUpdateCamouflages'];		shipEntity.ownShip.permoflagePurchased"/>
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'accountGold';		['resourceEntity.accountResource.evChangedGold'];	resourceEntity.accountResource.gold"/>
		<bind name="watchDH" value="'accountCredits';	['resourceEntity.accountResource.evChangedCredit'];	resourceEntity.accountResource.credits"/>
		<bind name="watch" value="'curCurrencyResource'; ((prices[currentIndex].currency == 'gold') ? accountGold : accountCredits)"/>
		<bind name="name" value="'ExteriorItemDock_' + exteriorConfig.name"/>
		<bind name="catch" value="'selectedPriceChanged'"/>
		<bind name="entityDH" value="'camouflageEntity'; _camouflageEntityId"/>
		<bind name="watchDH" value="'camoColorSchemes'; 	['shipEntity.ownShip.evUpdateCamouflages']; camouflageEntity.camouflage.camoColorSchemes"/>
		<bind name="watchDH" value="'isUseless'; ['exteriorEntity.attributes.evUsefulChanged']; !(exteriorEntity.attributes.useful)"/>
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerPriceListSelector;
						$value;
						exteriors[$value].goldAutorecharge ? 'gold' : 'credits';
						exteriorConfig.canBuy;
						'selectedPriceIndex';
						(!(exteriors[$value])) ? null : 'installExterior';
						{
							exteriorName: exteriorConfig.name,
							shipName: shipInfo.fullName,
							goldAutorecharge: prices[currentIndex].currency == 'gold'
						}"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; null; 'ct_'"/>
		<bind name="var" value="{ 
		ctRollOver: {
			redMultiplier: 1,
			greenMultiplier: 1,
			blueMultiplier: 1,
			alphaMultiplier: 1,
			redOffset: 30,
			greenOffset: 30,
			blueOffset: 30,
			alphaOffset: 0
		}
	}"/>
		<bind name="var" value="{ 
		ctMouseDown: {
			redMultiplier: 1,
			greenMultiplier: 1,
			blueMultiplier: 1,
			alphaMultiplier: 1,
			redOffset: -30,
			greenOffset: -30,
			blueOffset: -30,
			alphaOffset: 0
		}
	}"/>
		<bind name="colorTransform" value="	!(isExteriorInfotipVisible) &amp;&amp; (ct_mouseDown)	? ctMouseDown :
							!(isExteriorInfotipVisible) &amp;&amp; (ct_rollOver)	? ctRollOver
														: {}"/>
		<block>
			<bind name="tooltip" value="'ExteriorInfotip'; {	_exteriorId: $value, camouflageEntityId: _camouflageEntityId }; TooltipBehaviour.infotip; null; 'isExteriorInfotipVisible'"/>
			<bind name="tooltip" value="'ExteriorTooltip'; { _exteriorId: $value, camouflageEntityId: _camouflageEntityId }"/>
			<style>
				<height value="80px"/>
			</style>
			<bind name="soundOn" value="'click'; 'press'; 'exterior_item'"/>
			<bind name="style" value="'width'; (exteriorConfig.type == ExteriorTypes.FLAGS) ? '80px' : '95px'"/>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="name" value="'ExteriorItem_' +  exteriorConfig.name"/>
				<block className="BlurMapCustom">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap5_feather" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$MiddleVAligned"/>
				<bind name="style" value="'alpha';	(!!(exteriors[$value]))		? 1 :
									isExteriorInfotipVisible	? 0.75
																: 0.55"/>
				<bind name="instance" value="'ExteriorIconWithAmount'; { _exteriorId: $value,
														_exteriors: exteriors,
														_amount: count,
														_shipId: shipId,
														_camouflageEntityId: _camouflageEntityId,
														_needPNG: false,
														_isDesaturated: (count == 0 &amp;&amp; !(exteriors[$value])) &amp;&amp; !(permoflagePurchased[$value])
														}"/>
			</block>
			<block>
				<bind name="visible" value="camoColorSchemes.length &gt; 1"/>
				<style>
					<position value="absolute"/>
					<marginTop value="10px"/>
					<marginLeft value="10px"/>
				</style>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CAMO_HAS_COLOR_SCHEME_INFO'}"/>
				<bind name="style" value="'backgroundImage'; (count == 0 &amp;&amp; !(exteriors[$value])) &amp;&amp; !(permoflagePurchased[$value]) ?
											'url:../camouflages/icon_color_camo_des.png' :
											'url:../camouflages/icon_color_camo.png'"/>
			</block>
			<block>
				<bind name="visible" value="isUseless"/>
				<styleClass value="$MiddleAlignedAbsolutely"/>
				<style>
					<hitTest value="false"/>
					<top value="10px"/>
					<width value="60px"/>
					<height value="60px"/>
				</style>
				<bind name="style" value="'backgroundImage'; (!!(exteriors[$value]))		?	'url:../service_kit/icons/icon_useless_big.png'
																		:	'url:../service_kit/icons/icon_useless_inactive_big.png'"/>
			</block>
			<block className="icon_check" type="native">
				<style>
					<hitTest value="false"/>
					<right value="2px"/>
					<top value="2px"/>
					<position value="absolute"/>
				</style>
				<bind name="visible" value="!!(exteriors[$value])"/>
				<bind name="name" value="!!(exteriors[$value]) ? ('IconCheck_' + exteriorConfig.name) : (' ')"/>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<block>
				<style>
					<marginTop value="-12px"/>
				</style>
				<bind name="instance" value="'PriceTag'; !!(permoflagePurchased[$value])					? null :
										!( exteriors[$value] ) &amp;&amp; count &lt;= 0 &amp;&amp; exteriorConfig.canBuy	? {	priceInfo: prices[currentIndex],
																											_deficit: (prices[currentIndex].finalPrice - curCurrencyResource),
																											_showDiscountTag: true}
																										: null"/>
			</block>
		</block>
	</block>
	<block className="FlagItem">
		<bind name="primaryEntityDH" value="'exteriorEntity'; CC.exteriorConfig; id"/>
		<bind name="watchDH" value="'exteriorConfig'; []; exteriorEntity.exteriorConfig"/>
		<bind name="primaryEntityDH" value="'playerShipEntity'; CC.ownShip; shipId"/>
		<bind name="watchDH" value="'isLocked';		['playerShipEntity.ownShip.evUpdateLock'];	playerShipEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'isInFormation';	['playerShipEntity.ownShip.evUpdateLock'];	playerShipEntity.ownShip.isInFormation"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'availableNavalFlags'; ['shipEntity.ship.evAvailableFlagsChanged']; shipEntity.ship.availableNavalFlags"/>
		<bind name="watchDH" value="'currentNavalFlag'; ['shipEntity.ship.evCurrentFlagChanged']; shipEntity.ship.currentNavalFlag"/>
		<bind name="primaryEntityDH" value="'navalFlagEntity'; CC.navalFlag; $value"/>
		<bind name="watchDH" value="'navalFlag'; 	['navalFlagEntity.navalFlag.evCurrentFlagChanged']; navalFlagEntity.navalFlag"/>
		<bind name="watch" value="'flagName'; name ? name : navalFlag.nameIDS"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; null; 'ct_'"/>
		<bind name="var" value="{ 
		ctRollOver: {
			redMultiplier: 1,
			greenMultiplier: 1,
			blueMultiplier: 1,
			alphaMultiplier: 1,
			redOffset: 30,
			greenOffset: 30,
			blueOffset: 30,
			alphaOffset: 0
		}
	}"/>
		<bind name="var" value="{ 
		ctMouseDown: {
			redMultiplier: 1,
			greenMultiplier: 1,
			blueMultiplier: 1,
			alphaMultiplier: 1,
			redOffset: -30,
			greenOffset: -30,
			blueOffset: -30,
			alphaOffset: 0
		}
	}"/>
		<bind name="colorTransform" value="	!(isFlagInfotipVisible) &amp;&amp; (ct_mouseDown)	? ctMouseDown :
							!(isFlagInfotipVisible) &amp;&amp; (ct_rollOver)	? ctRollOver
														: {}"/>
		<bind name="tooltip" value="'FlagInfotip'; 
					{	_installed: installed || (currentNavalFlag == $value), 
						id: id, 
						name: flagName, 
						shipId: shipId, 
						canUse: canUse, 
						isRankSeasonTemp: isRankSeasonTemp, 
						isLeague: isLeague, 
						_enableExterior: (!isLocked &amp;&amp; !isInFormation),
						_iconPath: (navalFlag ? navalFlag.iconPath : exteriorConfig.iconPath),
						_isNaval: !!navalFlag,
						_navalFlagName: $value }; 
					TooltipBehaviour.infotip; null; 'isFlagInfotipVisible'"/>
		<bind name="popup" value="'FlagTooltipUB2'; 
					{	_installed: installed || (currentNavalFlag == $value),
						_id: navalFlag ? 0 : id,
						_name: flagName,
						_shipId: shipId,
						_canUse: navalFlag ? false : canUse,
						_isRankSeasonTemp: navalFlag ? false : isRankSeasonTemp,
						_isLeague: navalFlag ? false :isLeague,
						_iconPath: (navalFlag ? navalFlag.iconPath : exteriorConfig.iconPath),
						_isNaval: !!navalFlag };

					1;{type:'lesta.unbound.bindings.popup.MousePopupSpacingComponent',params:{mouseOffsetTop:5,mouseOffsetBottom:10,mouseOffsetLeft:5,mouseOffsetRight:10,screenOffsetBottom:10,screenOffsetTop:10}};{reason:{mouseOver:{action:'show',params:{duration:0.1,startProps:{alpha:0,x:0,y:5},finishProps:{alpha:1,x:0,y:0},delay:0.5}},mouseOut:{action:'hide',params:{duration:0.05,startProps:{alpha:1,x:0,y:0},finishProps:{alpha:0,x:0,y:-5}}},removedFromStage:{action:'hide',params:{duration:0.05,startProps:{alpha:1,x:0,y:0},finishProps:{alpha:0,x:0,y:-5}}},popup_opened:{action:'hideByPriority',params:{duration:0.05,startProps:{alpha:1,x:0,y:0},finishProps:{alpha:0,x:0,y:-5}}}},reasonScope:{onLostTop:{action:'hide',params:{duration:0.1,startProps:{alpha:1,x:0,y:0},finishProps:{alpha:0,x:0,y:-5}}}}}
					"/>
		<bind name="soundOn" value="'click'; 'press'; 'exterior_item'"/>
		<block>
			<style>
				<height value="60px"/>
				<width value="100px"/>
				<marginTop value="16px"/>
			</style>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="BlurMapCustom">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap5_feather" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="75px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<bind name="style" value="'alpha';	(navalFlag	? (currentNavalFlag == $value)
												: installed)			? 1 :
												isFlagInfotipVisible	? 0.75
																		: 0.55"/>
				<bind name="style" value="'backgroundImage'; navalFlag ? ('url:' + navalFlag.iconPath) : !canUse ? ('url:' + exteriorConfig.desaturatedIconPath)
																: ('url:' + exteriorConfig.iconPath)"/>
			</block>
			<block className="icon_check" type="native">
				<bind name="visible" value="navalFlag ? (currentNavalFlag == $value) : installed"/>
				<styleClass value="$MouseDisable"/>
				<style>
					<position value="absolute"/>
					<right value="18px"/>
					<top value="8px"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ExteriorInsetContent">
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ownShip; shipId"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="collectionDH" value="CC.ownShip; 'playerShips'"/>
		<bind name="watchDH" value="'crewId';				['shipEntity.ownShip.evCrewChanged'];			shipEntity.ownShip.crewId"/>
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; crewId"/>
		<bind name="watchDH" value="'crew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'crew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<bind name="watchDH" value="'sigInstalled';			['shipEntity.ownShip.evUpdateSignals'];			shipEntity.ownShip.sigInstalled"/>
		<bind name="watchDH" value="'ensignInstalled';		['shipEntity.ownShip.evUpdateEnsigns'];			shipEntity.ownShip.ensignInstalled"/>
		<bind name="watchDH" value="'sigLimit';				['shipEntity.ownShip.evUpdateConfig'];			shipEntity.ownShip.sigLimit"/>
		<bind name="watchDH" value="'ensignLimit';			['shipEntity.ownShip.evUpdateConfig'];			shipEntity.ownShip.ensignLimit"/>
		<bind name="watchDH" value="'canEquipCamouflage';	['shipEntity.ownShip.evUpdateConfig'];			shipEntity.ownShip.canEquipCamouflage"/>
		<styleClass value="$Fullsize"/>
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="watch" value="'carouselRows'; (userPrefs.curRowCountIndex == null) ? 0 : userPrefs.curRowCountIndex"/>
		<bind name="watch" value="'isSmallCarouselView'; (userPrefs.isSmallCarouselView == null) ? false : userPrefs.isSmallCarouselView"/>
		<bind name="style" value="'marginBottom'; isSmallCarouselView	?	(carouselRows == 1) ? '283px' :
													(carouselRows == 2) ? '346px'
																		: '220px'
												: '220px'"/>
		<block>
			<bind name="visible" value="shipInfo.subtype == ShipTypes.Submarine"/>
			<style>
				<marginTop value="64px"/>
			</style>
			<bind name="instance" value="'DockTabLockedPlug'; shipInfo.subtype == ShipTypes.Submarine ? {_text: 'IDS_EXTERIOR_UNAVAILABLE'} : null"/>
		</block>
		<block>
			<style>
				<marginLeft value="0px"/>
				<marginTop value="44px"/>
				<width value="500px"/>
				<height value="100%"/>
			</style>
			<bind name="fade" value="(shipInfo.subtype != ShipTypes.Submarine) &amp;&amp; (shipId &gt; 0); 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<block>
				<bind name="appear" value="'addedToStage'; 0.3; 0.2; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
				<style>
					<width value="500px"/>
					<height value="100%"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="instance" value="'SignalAndCamouflageHeader'; { exteriorPage: exteriorPage, shipId: shipId }"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<height value="31px"/>
					</style>
					<block className="inner_panel" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
					<block>
						<bind name="visible" value="feature_15 != 'locked'"/>
						<styleClass value="$MiddleAligned"/>
						<block className="tab_bar_bg" type="native">
							<style>
								<height value="25"/>
								<marginTop value="3px"/>
							</style>
							<block>
								<style>
									<marginLeft value="2px"/>
									<marginRight value="2px"/>
								</style>
								<block>
									<bind name="visible" value="canEquipCamouflage"/>
									<bind name="feature" value="15; 'rollOver'"/>
									<bind name="action" value="'buttonClick'; 'setCameraDefaultPosition'; {alias: 'camou'}"/>
									<bind name="instance" value="'MainTabSmallInstance'; { 	_label: 'IDS_CAMOUFLAGE',
																			_tooltipIDS: 'IDS_TOOLTIP_CAMOUFLAGE',
																			_selected: exteriorPage == LobbyConstants.SHIP_EXTERIOR_CAMOUFLAGE,
																			_width: 164,
																			_action: 'changeInset',
																			_actionParams: { inset: LobbyConstants.SHIP_EXTERIOR, page: LobbyConstants.SHIP_EXTERIOR_CAMOUFLAGE },
																			_name: 'camouflage' }"/>
									<block>
										<bind name="fade" value="(feature_15 == 'new'); 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
										<style>
											<position value="absolute"/>
											<top value="1px"/>
											<right value="0px"/>
										</style>
										<bind name="instance" value="'MarkerNewAttention'; { }"/>
									</block>
								</block>
								<block>
									<bind name="visible" value="canEquipCamouflage"/>
									<style>
										<marginTop value="2px"/>
									</style>
									<block className="divider_v" type="native">
										<style>
											<height value="23px"/>
										</style>
									</block>
								</block>
								<block>
									<bind name="action" value="'buttonClick'; 'setCameraDefaultPosition'; {alias: 'flag'}"/>
									<bind name="instance" value="'MainTabSmallInstance'; { 	_label: tr('IDS_SIGNALS') + ' ' + sigInstalled + '/' + sigLimit,
																			_tooltipIDS: 'IDS_TOOLTIP_SIGNALS',
																			_selected: exteriorPage == LobbyConstants.SHIP_EXTERIOR_SIGNALS,
																			_width: 164,
																			_action: 'changeInset',
																			_actionParams: { inset: LobbyConstants.SHIP_EXTERIOR, page: LobbyConstants.SHIP_EXTERIOR_SIGNALS },
																			_name: 'signal' }"/>
								</block>
								<block>
									<bind name="visible" value="feature_16 != 'locked'"/>
									<style>
										<marginTop value="2px"/>
									</style>
									<block className="divider_v" type="native">
										<style>
											<height value="23px"/>
										</style>
									</block>
								</block>
								<block>
									<bind name="feature" value="'16'; ''"/>
									<bind name="visible" value="feature_16 != 'locked'"/>
									<bind name="action" value="'buttonClick'; 'setCameraDefaultPosition'; {alias: 'ensign'}"/>
									<bind name="instance" value="'MainTabSmallInstance'; { 	_label: (ensignLimit &gt; 1) ? (tr('IDS_FLAG') + ' ' + ensignInstalled + '/' + ensignLimit) : 'IDS_FLAG',
																			_tooltipIDS: 'IDS_TOOLTIP_ENSIGN',
																			_selected: exteriorPage == LobbyConstants.SHIP_EXTERIOR_ENSIGN,
																			_width: 164,
																			_action: 'changeInset',
																			_actionParams: { inset: LobbyConstants.SHIP_EXTERIOR, page: LobbyConstants.SHIP_EXTERIOR_ENSIGN },
																			_name: 'ensign' }"/>
								</block>
								<style>
									<flow value="horizontal"/>
								</style>
							</block>
						</block>
					</block>
					<block>
						<bind name="visible" value="feature_15 == 'locked'"/>
						<styleClass value="$MiddleAligned"/>
						<block type="text">
							<bind name="tooltip" value="'SimpleTooltip';{tooltipText: 'IDS_TOOLTIP_SIGNALS'}"/>
							<style>
								<marginTop value="4px"/>
							</style>
							<styleClass value="$TextHeaderBigDefault"/>
							<bind name="text" value="toUpperCase(tr('IDS_SIGNALS')) + ' ' + sigInstalled + '/' + sigLimit"/>
						</block>
					</block>
				</block>
				<block>
					<styleClass value="$Fullsize"/>
					<style>
						<marginTop value="20px"/>
					</style>
					<block>
						<styleClass value="$Fullsize"/>
						<bind name="child" value="exteriorPage; {shipId: shipId, exteriorPage: exteriorPage}; 'Camouflage'; 'Signals'; 'Flag'"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<position value="absolute"/>
				<width value="900px"/>
				<bottom value="0px"/>
			</style>
			<block>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'ShipStatusDockHeader'; (playerShips.length == 0)		? { _texts: [ {_paragraphText: 'IDS_NO_SHIPS'}] } :
													!(shipInfoSlim.isDownloaded)	? { _texts: [ {_paragraphText: 'IDS_NOT_AVAILABLE_MESSAGE'}] }
																				: null"/>
			</block>
		</block>
	</block>
	<block className="ExteriorInfotip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'shipId'; ['dockEntity.shipSelection.evShipUpdate']; dockEntity.shipSelection.currentShipId"/>
		<bind name="watchDH" value="'shipIdForModuleInset'; ['dockEntity.shipSelection.evShipViewUpdate']; dockEntity.shipSelection.currentShipIdForModuleInset"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ownShip; shipId"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="primaryEntityDH" value="'exteriorEntity'; CC.exteriorConfig; _exteriorId"/>
		<bind name="watchDH" value="'exteriorConfig'; []; exteriorEntity.exteriorConfig"/>
		<bind name="primaryEntityDH" value="'compareItemEntity'; CC.compareItem; 'exterior_' + _exteriorId"/>
		<bind name="watchDH" value="'exteriorCompare'; ['compareItemEntity.compareItem.evUpdate']; compareItemEntity.dataComponent.data"/>
		<bind name="watchDH" value="'attributes'; ['exteriorEntity.attributes.evChanged']; exteriorEntity.attributes"/>
		<bind name="watchDH" value="'isUseless'; ['exteriorEntity.attributes.evUsefulChanged']; !(exteriorEntity.attributes.useful)"/>
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'count'; ['exteriorEntity.countComponent.evUpdate']; exteriorEntity.countComponent.value"/>
		<bind name="watchDH" value="'accountGold';		['resourceEntity.accountResource.evChangedGold'];	resourceEntity.accountResource.gold"/>
		<bind name="watchDH" value="'accountCredits';	['resourceEntity.accountResource.evChangedCredit'];	resourceEntity.accountResource.credits"/>
		<bind name="watchDH" value="'exteriors'; 				['shipEntity.ownShip.evExteriorsChanged'];	shipEntity.ownShip.exteriors"/>
		<bind name="watchDH" value="'permoflagePurchased';		['shipEntity.ownShip.evUpdateCamouflages'];	shipEntity.ownShip.permoflagePurchased"/>
		<bind name="watchDH" value="'isLocked';					['shipEntity.ownShip.evUpdateLock'];		shipEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'isInFormation';				['shipEntity.ownShip.evUpdateLock'];		shipEntity.ownShip.isInFormation"/>
		<bind name="watchDH" value="'playerShipParams';			['shipEntity.ownShip.evShipParamsUpdate'];	shipEntity.ownShip.params"/>
		<bind name="watchDH" value="'sigInstalled';				['shipEntity.ownShip.evUpdateSignals'];		shipEntity.ownShip.sigInstalled"/>
		<bind name="watchDH" value="'sigLimit';					['shipEntity.ownShip.evUpdateConfig'];		shipEntity.ownShip.sigLimit"/>
		<bind name="watchDH" value="'camouflgeAvailables';		['shipEntity.ownShip.evUpdateConfig'];		shipEntity.ownShip.camouflgeAvailables"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerParams; 0; null; 'tooltipShipParams'; playerShipParams; shipWithExterior.testShipParams; 1; 0; null; 1; 1; 0"/>
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerPriceListSelector;
					_exteriorId;
					exteriors[_exteriorId].goldAutorecharge ? 'gold' : 'credits';
					exteriorConfig.canBuy;
					'selectedPriceIndex';
					(!(exteriors[_exteriorId])) ? null : 'installExterior';
					{
						exteriorName: exteriorConfig.name,
						shipName: shipInfo.fullName,
						goldAutorecharge: prices[currentIndex].currency == 'gold'
					}"/>
		<bind name="dispatch" value="'Tooltip.selfOpened'; 'evTooltipOpened'; null; false; 0.05"/>
		<bind name="action" value="'Tooltip.selfOpened'; 'getShipWithUpgrade'; {id: _exteriorId, type : 'exterior'}"/>
		<bind name="action" value="'evTooltipOpened'; 'setCompareInfo'; {id: _exteriorId, type : 'exterior'}"/>
		<bind name="action" value="'Tooltip.selfClosed'; 'setCompareInfo'; { clear: true }"/>
		<bind name="watch" value="'curCurrencyResource'; ((prices[_selectedPriceIndex].currency == 'gold') ? accountGold : accountCredits)"/>
		<bind name="watch" value="'_isPermoflage'; exteriorConfig.type == ExteriorTypes.CAMOUFLAGE &amp;&amp; exteriorConfig.isPermanent"/>
		<bind name="watch" value="'_canBuy'; exteriorConfig.canBuy"/>
		<bind name="watch" value="'_isSignal'; exteriorConfig.type == ExteriorTypes.FLAGS"/>
		<bind name="watch" value="'_isCamouflage'; (exteriorConfig.type == ExteriorTypes.CAMOUFLAGE) &amp;&amp; !(exteriorConfig.isPermanent)"/>
		<bind name="watch" value="'_installedItemCount'; !!(exteriors[_exteriorId]) ? 1 : 0"/>
		<bind name="watch" value="'_exteriorName'; exteriorConfig.name"/>
		<bind name="watch" value="'_storageItemCount'; count"/>
		<bind name="watch" value="'_enableExterior'; (!isLocked &amp;&amp; !isInFormation)"/>
		<bind name="watch" value="'_isPermoflagePurchased'; !!(permoflagePurchased[_exteriorId])"/>
		<bind name="watch" value="'_selectedPriceIndex'; currentIndex)"/>
		<bind name="watch" value="'_canPutToStorage'; exteriorConfig.canPutToStorage"/>
		<bind name="entityDH" value="'pickedColorSchemeEntity'; pickedCamoColorScheme"/>
		<bind name="entityDH" value="'previewColorSchemeEntity'; previewCamoColorScheme"/>
		<bind name="watchDH" value="'pickedIndex'; 	[]; pickedColorSchemeEntity.colorScheme.index"/>
		<bind name="watchDH" value="'previewIndex'; 	[]; previewColorSchemeEntity.colorScheme.index"/>
		<bind name="entityDH" value="'camouflageEntity'; camouflageEntityId"/>
		<bind name="entityDH" value="'shipCamoRestrictionEntity'; camouflgeAvailables[shipEntity.ship.country]"/>
		<bind name="watchDH" value="'camoColorSchemes'; 			['shipEntity.ownShip.evUpdateCamouflages']; camouflageEntity.camouflage.camoColorSchemes"/>
		<bind name="watchDH" value="'pickedCamoColorScheme'; 	['shipEntity.ownShip.evUpdateCamouflages']; camouflageEntity.camouflage.pickedCamoColorScheme"/>
		<bind name="watchDH" value="'previewCamoColorScheme'; 	['shipEntity.ownShip.evUpdateCamouflages']; camouflageEntity.camouflage.previewCamoColorScheme"/>
		<styleClass value="$HorizontalInfotipBehaviour"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block className="dock_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginTop value="-10px"/>
				<marginRight value="-14px"/>
				<marginBottom value="-16px"/>
				<marginLeft value="-14px"/>
			</style>
		</block>
		<bind name="action" value="'Tooltip.selfClosed'; 'disableExteriorPreview'; { exteriorName:_exteriorId, shipName: shipInfo.id }"/>
		<bind name="action" value="'Tooltip.selfOpened'; 'previewExterior'; { shipId: shipInfo.id, exteriorName: _exteriorId, colorScheme: !!(exteriors[_exteriorId]) ? pickedIndex : 0 }"/>
		<block>
			<style>
				<width value="300px"/>
			</style>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<bind name="instance" value="'ExteriorTooltipHeader'; {	_exteriorId: _exteriorId, _shipId: shipId, _camouflageEntityId: camouflageEntityId }"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="!!(exteriors[_exteriorId])"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$InfoBlockIndent"/>
					<block className="icon_check" type="native">
						<styleClass value="$MiddleVAligned"/>
					</block>
					<block type="text">
						<style>
							<marginLeft value="4px"/>
						</style>
						<styleClass value="$TextDefault"/>
						<bind name="class" value="'$FontColorGolden'"/>
						<text value="IDS_INSTALLED"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="0px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="(_storageItemCount + _installedItemCount == 0)|| (_storageItemCount + _installedItemCount != 0) &amp;&amp; !(exteriors[_exteriorId]) "/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$InfoBlockIndent"/>
					<block className="icon_warning_orange" type="native">
						<styleClass value="$MiddleVAligned"/>
					</block>
					<block type="text">
						<style>
							<marginLeft value="4px"/>
						</style>
						<styleClass value="$TextDefault"/>
						<bind name="class" value="'$FontColorUnready'"/>
						<bind name="text" value="_isPermoflagePurchased ? 'IDS_NOT_INSTALLED' : 
								(_storageItemCount + _installedItemCount == 0) &amp;&amp; _canBuy 	?  'IDS_NOT_PURCHASED' 
																							: (_storageItemCount + _installedItemCount == 0) &amp;&amp; !(_canBuy) 	?  'IDS_NOT_ACHIEVED'
																							: (_storageItemCount + _installedItemCount != 0) &amp;&amp; !(exteriors[_exteriorId]) ?  'IDS_NOT_INSTALLED'
																							: ''"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="0px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="visible" value="isUseless"/>
				<block>
					<styleClass value="$InfoBlockIndent"/>
					<bind name="instance" value="'MouseInstructionRepeater'; isUseless	?	{	_type: 'restriction',
																				_instructionText:	_isPermoflage	?	'IDS_WARNING_USELESS_PERMOFLAGE' :
																									_isCamouflage	?	'IDS_WARNING_USELESS_CAMOUFLAGE'	:
																														'IDS_WARNING_USELESS_SIGNAL',
																				_maxWidth: 270}
																		: 	null"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="0px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="_isPermoflage"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
						<marginLeft value="3px"/>
						<marginRight value="3px"/>
						<marginBottom value="3px"/>
						<marginTop value="3px"/>
					</style>
					<block className="notification_frame_orange" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
					<block>
						<style>
							<marginLeft value="7px"/>
							<marginBottom value="3px"/>
							<marginTop value="3px"/>
						</style>
						<block>
							<styleClass value="$MiddleVAligned"/>
							<block className="icon_warning_orange" type="native"/>
						</block>
						<block type="text">
							<style>
								<maxWidth value="250"/>
								<marginLeft value="6px"/>
							</style>
							<styleClass value="$TextDefault"/>
							<bind name="class" value="'$FontColorUnready'"/>
							<bind name="text" value="!_isPermoflagePurchased ? 'IDS_WARNING_PERMOUFLAGE_BEFORE_BUY' : 'IDS_WARNING_PERMOUFLAGE_AFTER_BUY'"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="-2px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="_isPermoflagePurchased ? false : _canBuy"/>
				<bind name="catch" value="'selectedPriceChanged'"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$InfoBlockIndent"/>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<bind name="text" value="(_storageItemCount + _installedItemCount == 0) ? 'IDS_PURCHASE_COST' : 'IDS_REINFORCEMENT'"/>
					</block>
					<block>
						<bind name="instance" value="'AlterablePriceTag'; {_prices: prices, _showDiscountTag: true, _selectedPriceIndex: _selectedPriceIndex}"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="0px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="camoColorSchemes.length &gt; 0"/>
				<styleClass value="$InfoBlockIndent"/>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<style>
						<maxWidth value="250"/>
					</style>
					<bind name="text" value="'IDS_ALTERNATIVE_COLOR_SCHEME'"/>
				</block>
				<block>
					<style>
						<marginTop value="8px"/>
						<marginLeft value="2px"/>
						<marginBottom value="8px"/>
					</style>
					<bind name="repeat" value="camoColorSchemes; 'CamoColorPreview'; { 	_shipId: shipInfo.id, _pickedCamoColorScheme: pickedCamoColorScheme, 
																		_camouflageEntityId: camouflageEntityId, _exteriors: exteriors,
																		_exteriorId: _exteriorId, _previewCamoColorScheme: previewCamoColorScheme }"/>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block>
				<bind name="visible" value="camoColorSchemes.length &gt; 0"/>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<bind name="watch" value="'isShipRestrictionsVisible'; (shipCamoRestrictionEntity) &amp;&amp; (shipCamoRestrictionEntity.shipRestrictions.selectedFilters.length) &amp;&amp; (camoColorSchemes.length &gt; 0)"/>
			<block>
				<bind name="visible" value="isShipRestrictionsVisible"/>
				<styleClass value="$InfoBlockIndent"/>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<style>
						<maxWidth value="270"/>
					</style>
					<bind name="text" value="'IDS_INSTALL_RESTRICTION_CAMO'"/>
				</block>
				<block>
					<style>
						<marginTop value="6px"/>
					</style>
					<bind name="instance" value="'ShipRestrictions'; isShipRestrictionsVisible ? { _restrictionsEntityId: shipCamoRestrictionEntity.id } : null"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="isShipRestrictionsVisible"/>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block type="text">
				<style>
					<width value="100%"/>
					<alpha value="0.9"/>
					<marginLeft value="12px"/>
					<marginRight value="12px"/>
					<marginTop value="15px"/>
					<marginBottom value="11px"/>
					<leading value="-3"/>
				</style>
				<styleClass value="$TextDefaultNM"/>
				<bind name="text" value="'IDS_' + toUpperCase(exteriorConfig.name) + '_DESCRIPTION'"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="((attributes.positive.length + attributes.negative.length + attributes.neutral.length) &gt; 0)"/>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<styleClass value="$PxHorizontalCorrection"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<paddingTop value="16px"/>
						<paddingLeft value="12px"/>
						<paddingRight value="12px"/>
					</style>
					<bind name="instance" value="'ParamsModifierList'; { _attributesPositive: attributes.positive,
														_attributesNegative: attributes.negative,
														_attributesNeutral: attributes.neutral}"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="-1px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerParams; 0; null; 'tooltipShipParams'; playerShipParams; exteriorCompare; 1; 0; null; 1; 1; 0"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'ParamsAfterMount'; _installedItemCount == 0 &amp;&amp; viewParams.hasDiff ? { _viewParams: viewParams,
																									_title: 'IDS_AFTER_MOUNT'}
																								 : null"/>
			</block>
			<block>
				<bind name="visible" value="_achievements.length &gt; 0"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$InfoBlockIndent"/>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<bind name="class" value="'$FontColorBlueish'"/>
						<bind name="text" value="tr('IDS_GET_FOR_ACHIEVEMENTS') + tr('IDS_COLON')"/>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="repeat" value="_achievements; 'AchievementIconWithTitleForFlags'"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="0px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="buyAndInstall || itemInstalled || itemTakeAway"/>
				<styleClass value="$InfoBlockIndent"/>
				<bind name="watch" value="'buyAndInstall'; 			(installedAndInStorage == 0) &amp;&amp; ((_canBuy &amp;&amp; enoughResources) || (_isPermoflagePurchased))"/>
				<bind name="watch" value="'itemInstalled'; 			(installedAndInStorage &gt; 0) &amp;&amp; !(exteriors[_exteriorId])"/>
				<bind name="watch" value="'itemTakeAway'; 			!!(exteriors[_exteriorId])"/>
				<bind name="watch" value="'installedAndInStorage'; 	(_storageItemCount + _installedItemCount)"/>
				<bind name="watch" value="'enoughResources'; 		(curCurrencyResource &gt;= prices[_selectedPriceIndex].finalPrice)"/>
				<bind name="name" value="buyAndInstall ? _isPermoflagePurchased ? 'ButtonInstall' : 'ButtonBuyAndInstall' :
                                        itemInstalled                            ? 'ButtonInstall' :
                                        itemTakeAway                             ? 'ButtonTakeAway'
                                                                                 : ''"/>
				<bind name="instance" value="'DefaultButtonCostMedium'; 	  buyAndInstall		? { _label: _isPermoflagePurchased ? toUpperCase(tr('IDS_INSTALL')) : toUpperCase(tr('IDS_DO_PURCHASE_AND_INSTALL')) , priceInfo: _isPermoflagePurchased ? null : prices[_selectedPriceIndex],
																				_request: (_isPermoflage &amp;&amp; !_isPermoflagePurchased) || (_isCamouflage &amp;&amp; _storageItemCount == 0) || (_canBuy &amp;&amp; !_isPermoflagePurchased) ? 'buyAndInstallExteriorModal' : null,
																				_requestParams: { _previewIndex: previewIndex, _camouflageEntityId : camouflageEntityId, shipName: shipInfo.fullName, _shipId: shipInfo.id, exteriorName: _exteriorName, useGold: prices[_selectedPriceIndex].currency == 'gold', _exteriorId: _exteriorId, _selectedPriceIndex: _selectedPriceIndex, _isPermoflagePurchased: _isPermoflagePurchased, _isPermoflage : _isPermoflage},
																				_action: _isPermoflagePurchased ? 'installExterior' : null,
																				_actionParams: { exteriorName: _exteriorName, shipName: shipInfo.fullName, goldAutorecharge: prices[_selectedPriceIndex].currency == 'gold', viewParams: viewParams, colorsSchemeIndex: previewIndex }, _enabled: _enableExterior, _dispatchEvent: 'Tooltip.Close'}
														: itemInstalled		? { _label: toUpperCase(tr('IDS_INSTALL')), priceInfo: null, _request: null, _action: 'installExterior', _actionParams: { exteriorName: _exteriorName, shipName: shipInfo.fullName, goldAutorecharge: prices[_selectedPriceIndex].currency == 'gold', viewParams: viewParams, colorsSchemeIndex: previewIndex }, _enabled: _enableExterior, _dispatchEvent: 'Tooltip.Close'}
														: itemTakeAway 		? { _label: toUpperCase(tr('IDS_TAKE_AWAY')), priceInfo: null, _request: null, _action: 'uninstallExterior', _actionParams: {exteriorName: _exteriorName, shipName: shipInfo.fullName }, _enabled: _enableExterior, _dispatchEvent: 'Tooltip.Close'}
														: null"/>
			</block>
			<block>
				<bind name="visible" value="!(_enableExterior)"/>
				<styleClass value="$InfoBlockIndent"/>
				<bind name="instance" value="'StatusLineWithIcon';  {_text: isInFormation ? (divisionEntranceData.divisionType == 'party') 	?	_isSignal	? 'IDS_SET_UNREADY_PARTY_FIRST_TO_OPERATE_FLAGS'
																																			: 'IDS_SET_UNREADY_PARTY_FIRST_TO_OPERATE_CAMO'
																															:	_isSignal	? 'IDS_SET_UNREADY_DIVISION_FIRST_TO_OPERATE_FLAGS'
																																			: 'IDS_SET_UNREADY_DIVISION_FIRST_TO_OPERATE_CAMO'
																						:	_isSignal 	? 'IDS_LEAVE_BATTLE_FIRST_TO_OPERATE_FLAGS' 
																										: 'IDS_LEAVE_BATTLE_FIRST_TO_OPERATE_CAMOUFLAGE',
													_positive: false}"/>
			</block>
			<block>
				<bind name="visible" value="_canBuy &amp;&amp; (!(_isPermoflagePurchased) &amp;&amp; (installedAndInStorage == 0) &amp;&amp; !(enoughResources))"/>
				<styleClass value="$InfoBlockIndent"/>
				<block>
					<bind name="instance" value="'PriceTagWithLabel'; { priceInfo: prices[_selectedPriceIndex], _label: 'IDS_PURCHASE_COST', _medium : true}"/>
				</block>
				<block>
					<bind name="instance" value="'PriceDeficit'; { _deficit: prices[_selectedPriceIndex].finalPrice - curCurrencyResource, priceInfo: prices[_selectedPriceIndex], _tooltipText: prices[_selectedPriceIndex].currency == 'credits' ? 'IDS_TOOLTIP_NO_CREDITS' : 'IDS_TOOLTIP_NO_GOLD' }"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<bind name="visible" value="_isSignal &amp;&amp; (sigInstalled == sigLimit) &amp;&amp; (_storageItemCount &gt; 0) &amp;&amp; !(exteriors[_exteriorId])"/>
				<block>
					<bind name="instance" value="'StatusLineWithIcon';  { _text: 'IDS_MAXIMUM_FLAGS_IS_INSTALLED', _positive: false}"/>
				</block>
				<block>
					<style>
						<marginTop value="6px"/>
						<width value="100%"/>
					</style>
					<bind name="instance" value="'InstructionParagraph'; { _text: 'IDS_INSTRUCTION_REINSTALL_FLAG', _maxWidth: 262}"/>
				</block>
			</block>
			<block className="dock_panel_pin_h" type="native">
				<style>
					<position value="absolute"/>
				</style>
				<bind name="gotoAndStop!" value="'left'"/>
				<params>
					<param name="name" value="pinLeft"/>
				</params>
			</block>
		</block>
	</block>
	<block className="ExteriorTooltip">
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'shipId'; ['dockEntity.shipSelection.evShipUpdate']; dockEntity.shipSelection.currentShipId"/>
		<bind name="watchDH" value="'shipIdForModuleInset'; ['dockEntity.shipSelection.evShipViewUpdate']; dockEntity.shipSelection.currentShipIdForModuleInset"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; shipId"/>
		<bind name="primaryEntityDH" value="'compareItemEntity'; CC.compareItem; 'exterior_' + _exteriorId"/>
		<bind name="watchDH" value="'exteriorCompare'; ['compareItemEntity.compareItem.evUpdate']; compareItemEntity.dataComponent.data"/>
		<bind name="primaryEntityDH" value="'exteriorEntity'; CC.exteriorConfig; _exteriorId"/>
		<bind name="watchDH" value="'exteriorConfig'; []; exteriorEntity.exteriorConfig"/>
		<bind name="watchDH" value="'attributes'; ['exteriorEntity.attributes.evChanged']; exteriorEntity.attributes"/>
		<bind name="watchDH" value="'isUseless'; ['exteriorEntity.attributes.evUsefulChanged']; !(exteriorEntity.attributes.useful)"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'shipWithExterior'; _exteriorId; 'shipWithExterior'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY + _exteriorId; 'priceInfoSet'"/>
		<bind name="action" value="'Tooltip.selfOpened'; 'getShipWithUpgrade'; {id: _exteriorId, type: 'exterior'}"/>
		<bind name="watchDH" value="'count'; ['exteriorEntity.countComponent.evUpdate']; exteriorEntity.countComponent.value"/>
		<bind name="watchDH" value="'exteriors';				['shipOwnEntity.ownShip.evExteriorsChanged'];	shipOwnEntity.ownShip.exteriors"/>
		<bind name="watchDH" value="'permoflagePurchased';	['shipOwnEntity.ownShip.evUpdateCamouflages'];	shipOwnEntity.ownShip.permoflagePurchased"/>
		<bind name="watchDH" value="'playerShipParams';		['shipOwnEntity.ownShip.evShipParamsUpdate'];	shipOwnEntity.ownShip.params"/>
		<bind name="watchDH" value="'camouflgeAvailables';	['shipOwnEntity.ownShip.evUpdateConfig'];		shipOwnEntity.ownShip.camouflgeAvailables"/>
		<bind name="watch" value="'_isPermoflage'; exteriorConfig.type == ExteriorTypes.CAMOUFLAGE &amp;&amp; exteriorConfig.isPermanent"/>
		<bind name="watch" value="'_canBuy'; exteriorConfig.canBuy"/>
		<bind name="watch" value="'_isSignal'; exteriorConfig.type == ExteriorTypes.FLAGS"/>
		<bind name="watch" value="'_isCamouflage'; exteriorConfig.type == ExteriorTypes.CAMOUFLAGE"/>
		<bind name="watch" value="'_isPermoflagePurchased'; !!(permoflagePurchased[_exteriorId])"/>
		<bind name="watch" value="'_installedItemCount'; !!(exteriors[_exteriorId]) ? 1 : 0"/>
		<bind name="entityDH" value="'camouflageEntity'; camouflageEntityId"/>
		<bind name="entityDH" value="'shipCamoRestrictionEntity'; camouflgeAvailables[shipOwnEntity.ship.country]"/>
		<bind name="watchDH" value="'camoColorSchemes'; 			['shipOwnEntity.ownShip.evUpdateCamouflages']; camouflageEntity.camouflage.camoColorSchemes"/>
		<bind name="watchDH" value="'pickedCamoColorScheme'; 	['shipOwnEntity.ownShip.evUpdateCamouflages']; camouflageEntity.camouflage.pickedCamoColorScheme"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<styleClass value="$MouseDisable"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<style>
				<width value="300px"/>
			</style>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<style>
					<marginTop value="12px"/>
				</style>
				<bind name="instance" value="'ExteriorTooltipHeader'; {	_exteriorId: _exteriorId, _shipId: shipId, _camouflageEntityId: camouflageEntityId }"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="!!(exteriors[_exteriorId])"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$InfoBlockIndent"/>
					<block className="icon_check" type="native">
						<styleClass value="$MiddleVAligned"/>
					</block>
					<block type="text">
						<style>
							<marginLeft value="4px"/>
						</style>
						<styleClass value="$TextDefault"/>
						<bind name="class" value="'$FontColorGolden'"/>
						<text value="IDS_INSTALLED"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="0px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="((count + _installedItemCount) == 0)|| ((count + _installedItemCount) != 0) &amp;&amp; !(exteriors[_exteriorId]) "/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$InfoBlockIndent"/>
					<block className="icon_warning_orange" type="native">
						<styleClass value="$MiddleVAligned"/>
					</block>
					<block type="text">
						<style>
							<marginLeft value="4px"/>
						</style>
						<styleClass value="$TextDefault"/>
						<bind name="class" value="'$FontColorUnready'"/>
						<bind name="text" value="_isPermoflagePurchased ? 'IDS_NOT_INSTALLED' : 
								(count + _installedItemCount == 0) &amp;&amp; _canBuy 	?  'IDS_NOT_PURCHASED'
																							: ((count + _installedItemCount) == 0) &amp;&amp; !(_canBuy) 	?  'IDS_NOT_ACHIEVED'
																							: ((count + _installedItemCount) != 0) &amp;&amp; !(exteriors[_exteriorId])  ? 'IDS_NOT_INSTALLED'
																							: ''"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="0px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="visible" value="isUseless"/>
				<block>
					<styleClass value="$InfoBlockIndent"/>
					<bind name="instance" value="'MouseInstructionRepeater'; isUseless	?	{	_type: 'restriction',
																				_instructionText:	_isPermoflage	?	'IDS_WARNING_USELESS_PERMOFLAGE' :
																									_isCamouflage	?	'IDS_WARNING_USELESS_CAMOUFLAGE'	:
																														'IDS_WARNING_USELESS_SIGNAL',
																				_maxWidth: 270}
																		: 	null"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="0px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="_isPermoflage"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
						<marginLeft value="3px"/>
						<marginRight value="3px"/>
						<marginBottom value="3px"/>
						<marginTop value="3px"/>
					</style>
					<block className="notification_frame_orange" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
					<block>
						<style>
							<marginLeft value="7px"/>
							<marginBottom value="3px"/>
							<marginTop value="3px"/>
						</style>
						<block>
							<styleClass value="$MiddleVAligned"/>
							<block className="icon_warning_orange" type="native"/>
						</block>
						<block type="text">
							<style>
								<maxWidth value="250"/>
								<marginLeft value="6px"/>
							</style>
							<styleClass value="$TextDefault"/>
							<bind name="class" value="'$FontColorUnready'"/>
							<bind name="text" value="!_isPermoflagePurchased ? 'IDS_WARNING_PERMOUFLAGE_BEFORE_BUY' : 'IDS_WARNING_PERMOUFLAGE_AFTER_BUY'"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="-2px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="_isPermoflagePurchased ? false : _canBuy"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$InfoBlockIndent"/>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<bind name="text" value="(count + _installedItemCount == 0) ? 'IDS_PURCHASE_COST' : 'IDS_REINFORCEMENT'"/>
					</block>
					<block>
						<bind name="visible" value="priceInfoSet.prices[0].finalPrice &gt; 0"/>
						<styleClass value="$MiddleVAligned"/>
						<bind name="instance" value="'PriceTag'; { priceInfo: priceInfoSet.prices[0], _showDiscountTag: true }"/>
					</block>
					<block type="text">
						<bind name="visible" value="(priceInfoSet.prices.length &gt; 1) &amp;&amp; (priceInfoSet.prices[1].finalPrice &gt; 0)"/>
						<styleClass value="$TextDefault"/>
						<styleClass value="$MiddleVAligned"/>
						<text value="IDS_OR"/>
					</block>
					<block>
						<bind name="visible" value="(priceInfoSet.prices.length &gt; 1) &amp;&amp; (priceInfoSet.prices[1].finalPrice &gt; 0)"/>
						<styleClass value="$MiddleVAligned"/>
						<bind name="instance" value="'PriceTag'; { priceInfo: priceInfoSet.prices[1], _showDiscountTag:true }"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="0px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="(camoColorSchemes.length &gt; 0) &amp;&amp; !(_isInModalWindow)"/>
				<styleClass value="$InfoBlockIndent"/>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<style>
						<maxWidth value="250"/>
					</style>
					<bind name="class" value="'$FontcolorDefault'"/>
					<bind name="text" value="'IDS_ALTERNATIVE_COLOR_SCHEME'"/>
				</block>
				<block>
					<style>
						<marginTop value="8px"/>
						<marginLeft value="2px"/>
						<marginBottom value="8px"/>
					</style>
					<bind name="repeat" value="camoColorSchemes; 'CamoColorPreview'; { 	_shipId: shipId, _pickedCamoColorScheme: pickedCamoColorScheme, 
																		_camouflageEntityId: camouflageEntityId, _exteriors: exteriors,
																		_exteriorId: _exteriorId }"/>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block>
				<bind name="visible" value="(camoColorSchemes.length &gt; 0) &amp;&amp; !(_isInModalWindow)"/>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<bind name="watch" value="'isShipRestrictionsVisible'; (shipCamoRestrictionEntity) &amp;&amp; (shipCamoRestrictionEntity.shipRestrictions.selectedFilters.length) &amp;&amp; (camoColorSchemes.length &gt; 0)"/>
			<block>
				<bind name="visible" value="isShipRestrictionsVisible"/>
				<styleClass value="$InfoBlockIndent"/>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<style>
						<maxWidth value="270"/>
					</style>
					<bind name="text" value="'IDS_INSTALL_RESTRICTION_CAMO'"/>
				</block>
				<block>
					<style>
						<marginTop value="6px"/>
					</style>
					<bind name="instance" value="'ShipRestrictions'; isShipRestrictionsVisible ? { _restrictionsEntityId: shipCamoRestrictionEntity.id } : null"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="isShipRestrictionsVisible"/>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block type="text">
				<style>
					<width value="100%"/>
					<alpha value="0.9"/>
					<marginLeft value="12px"/>
					<marginRight value="12px"/>
					<marginTop value="15px"/>
					<marginBottom value="11px"/>
					<leading value="-2"/>
				</style>
				<styleClass value="$TextDefaultNM"/>
				<bind name="text" value="'IDS_' + toUpperCase(exteriorConfig.name) + '_DESCRIPTION'"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="((attributes.positive.length + attributes.negative.length + attributes.neutral.length) &gt; 0)"/>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<styleClass value="$PxHorizontalCorrection"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<paddingTop value="16px"/>
						<paddingLeft value="12px"/>
						<paddingRight value="12px"/>
					</style>
					<bind name="instance" value="'ParamsModifierList'; { _attributesPositive: attributes.positive,
														_attributesNegative: attributes.negative,
														_attributesNeutral: attributes.neutral}"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="-1px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerParams; 0; null; 'tooltipShipParams'; playerShipParams; exteriorCompare; 1; 0; null; 1; 1; 0"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'ParamsAfterMount'; _installedItemCount == 0 &amp;&amp; viewParams.hasDiff ? { _viewParams: viewParams,
																									_title: 'IDS_AFTER_MOUNT'}
																								 : null"/>
			</block>
			<block>
				<bind name="visible" value="exteriorConfig.achievements.length &gt; 0"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$InfoBlockIndent"/>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<bind name="class" value="'$FontColorBlueish'"/>
						<bind name="text" value="tr('IDS_GET_FOR_ACHIEVEMENTS') + tr('IDS_COLON')"/>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="repeat" value="exteriorConfig.achievements; 'AchievementIconWithTitleForFlags'"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="0px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="!(_canBuy) &amp;&amp; ((count + _installedItemCount) == 0) &amp;&amp; !(_isPermoflage)"/>
				<style>
					<width value="100%"/>
				</style>
				<styleClass value="$InfoBlockIndent"/>
				<bind name="instance" value="'InstructionParagraph'; !(_canBuy) ? { _text: _isSignal ? 'IDS_INSTRUCTION_GET_SIGNAL': 'IDS_INSTRUCTION_GET_CAMO', _maxWidth: '270'}: null"/>
			</block>
			<block>
				<bind name="visible" value="	(_canBuy ||
							(!(_canBuy) &amp;&amp; (count + _installedItemCount) != 0) ||
							(_isPermoflagePurchased &amp;&amp; _installedItemCount == 0)) &amp;&amp; !(_noMouseInstructions)"/>
				<style>
					<width value="100%"/>
				</style>
				<styleClass value="$InfoBlockIndent"/>
				<bind name="instance" value="'MouseInstruction'; _isSignal		? {_type: 'left', _instructionText: ((count + _installedItemCount) == 0) &amp;&amp; _canBuy ? 'IDS_INSTRUCTION_BUY_SIGNAL'
																																					: 'IDS_INSTRUCTION_INSTALL_OR_TAKE_AWAY_SIGNAL', _maxWidth: 270} :
												_isCamouflage	? {_type: 'left', _instructionText: (_installedItemCount &gt; 0)																			? 'IDS_INSTRUCTION_TAKE_AWAY_CAMO' :
																									(_isPermoflagePurchased || count &gt; 0)																? 'IDS_INSTALL' :
																									((((count + _installedItemCount) == 0) || (_isPermoflage &amp;&amp; !(_isPermoflagePurchased))) &amp;&amp; _canBuy)	? 'IDS_INSTRUCTION_BUY_CAMO'
																																																		: 'IDS_INSTRUCTION_INSTALL_OR_TAKE_AWAY_BUY_CAMO',
												_maxWidth: 270}: null"/>
			</block>
		</block>
	</block>
	<block className="ExteriorTooltipHeader">
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; _shipId"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; _shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="primaryEntityDH" value="'exteriorEntity'; CC.exteriorConfig; _exteriorId"/>
		<bind name="watchDH" value="'exteriorConfig'; []; exteriorEntity.exteriorConfig"/>
		<bind name="watchDH" value="'exteriors';			['shipOwnEntity.ownShip.evExteriorsChanged'];		shipOwnEntity.ownShip.exteriors"/>
		<bind name="entityDH" value="'camouflageEntity'; _camouflageEntityId"/>
		<bind name="watchDH" value="'camoColorSchemes'; 	['shipOwnEntity.ownShip.evUpdateCamouflages'];		camouflageEntity.camouflage.camoColorSchemes"/>
		<bind name="watchDH" value="'count'; ['exteriorEntity.countComponent.evUpdate']; exteriorEntity.countComponent.value"/>
		<bind name="watch" value="'_isPermoflage'; exteriorConfig.type == ExteriorTypes.CAMOUFLAGE &amp;&amp; exteriorConfig.isPermanent"/>
		<block>
			<bind name="watch" value="'_installedItemCount'; !!(exteriors[_exteriorId]) ? 1 : 0"/>
			<bind name="watch" value="'_storageItemCount'; count"/>
			<block>
				<bind name="instance" value="'ExteriorIconWithAmount'; { _exteriorId: _exteriorId,
														_exteriors: exteriors,
														_amount: _amount != null ? _amount : (_installedItemCount + _storageItemCount),
														_shipId: _shipId,
														_camouflageEntityId: _camouflageEntityId,
														_needPNG: _needPNG,
														_isDesaturated: false
														}"/>
			</block>
			<block>
				<bind name="visible" value="camoColorSchemes.length &gt; 1"/>
				<style>
					<position value="absolute"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:../camouflages/icon_color_camo.png'"/>
			</block>
			<block>
				<style>
					<marginLeft value="3px"/>
				</style>
				<block type="text">
					<styleClass value="$TextHeaderBold"/>
					<bind name="class" value="(_installedItemCount &gt; 0 || _isInstalled) ? '$FontColorGolden' : '$FontColorWhite'"/>
					<bind name="style" value="'maxWidth'; (exteriorConfig.type == ExteriorTypes.FLAGS) ? '208' : '190'"/>
					<style>
						<marginBottom value="5px"/>
						<leading value="-3"/>
					</style>
					<bind name="text" value="_isPermoflage 	? subst('IDS_EXTERIOR_NAME_WITH_SHIP', [], {exteriorName: tr('IDS_' + toUpperCase(exteriorConfig.name)), shipName: tr(shipInfo.nameIDS + '_FULL')})
											: tr('IDS_' + toUpperCase(exteriorConfig.name))})"/>
				</block>
				<bind name="watch" value="'exteriorTypeIDS'; exteriorConfig.isPermanent		?	'IDS_EXTARIOR_CAT_NAME_PERMOFLAGE' :
											exteriorConfig.type == 'Ensign'	?	'IDS_SEASON_ENSIGN' 
																			:	toUpperCase('IDS_EXTARIOR_CAT_NAME_' + exteriorConfig.type)"/>
				<block type="text">
					<bind name="style" value="'maxWidth'; (exteriorConfig.type == ExteriorTypes.FLAGS) ? '202' : '190'"/>
					<style>
						<marginTop value="-7px"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="text" value="exteriorTypeIDS"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ExteriorPositiveParams">
		<style>
			<width value="100%"/>
			<marginTop value="3px"/>
			<marginBottom value="3px"/>
			<leading value="-3"/>
		</style>
		<block type="text">
			<styleClass value="$TextDefault"/>
			<style>
				<leading value="-4"/>
				<maxWidth value="200"/>
			</style>
			<bind name="text" value="attributeIDS"/>
		</block>
		<block type="text">
			<styleClass value="$TextDefaultBold"/>
			<styleClass value="$AttributePositive"/>
			<styleClass value="$AlignRight"/>
			<bind name="text" value="measuredValue"/>
		</block>
	</block>
	<block className="ExteriorNegativeParams">
		<style>
			<width value="100%"/>
			<marginTop value="3px"/>
			<marginBottom value="3px"/>
			<leading value="-3"/>
		</style>
		<block type="text">
			<styleClass value="$TextDefault"/>
			<style>
				<leading value="-4"/>
				<maxWidth value="200"/>
			</style>
			<bind name="text" value="attributeIDS"/>
		</block>
		<block type="text">
			<styleClass value="$TextDefaultBold"/>
			<styleClass value="$AttributeNegative"/>
			<styleClass value="$AlignRight"/>
			<bind name="text" value="measuredValue"/>
		</block>
	</block>
	<block className="ExteriorParams">
		<bind name="controller" value="lesta.unbound.core.UbController"/>
		<style>
			<width value="100%"/>
		</style>
		<block type="text">
			<style>
				<width value="100%"/>
			</style>
			<styleClass value="$TextDefault"/>
			<bind name="text" value="percent == 0 ? ids :
					percent &gt; 0 ? '+' + percent + (isPlain ? ' ': '% ') + ids :
					percent &lt; 0 ? percent + (isPlain ? ' ': '% ') + ids : ' '"/>
		</block>
	</block>
	<block className="ExteriorIconWithAmount">
		<bind name="primaryEntityDH" value="'exteriorEntity'; CC.exteriorConfig; _exteriorId"/>
		<bind name="watchDH" value="'exteriorConfig'; []; exteriorEntity.exteriorConfig"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; _shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="entityDH" value="'camouflageEntity'; _camouflageEntityId"/>
		<bind name="watchDH" value="'camoColorSchemes'; 	['shipEntity.ownShip.evUpdateCamouflages']; camouflageEntity.camouflage.camoColorSchemes"/>
		<bind name="primaryEntityDH" value="'navalFlagEntity'; CC.navalFlag; _exteriorId"/>
		<bind name="watchDH" value="'navalFlag'; ['navalFlagEntity.navalFlag.evCurrentFlagChanged']; navalFlagEntity.navalFlag"/>
		<bind name="watch" value="'name'; toUpperCase(exteriorConfig.name)"/>
		<bind name="style" value="'width'; (exteriorConfig.type == ExteriorTypes.FLAGS) ? '60px' : '75px'"/>
		<style>
			<height value="60px"/>
		</style>
		<block>
			<bind name="visible" value="(exteriorConfig.type != ExteriorTypes.CAMOUFLAGE) || (camoColorSchemes.length == 0) || _needPNG || _isDesaturated"/>
			<bind name="style" value="'backgroundImage'; _isDesaturated	? ('url:' + exteriorConfig.desaturatedIconPath) : exteriorConfig.iconPath ? ('url:' + exteriorConfig.iconPath) : ('url:' + navalFlag.iconPath)"/>
		</block>
		<block>
			<bind name="instance" value="'CamouflageRepaint';
						(exteriorConfig.type == ExteriorTypes.CAMOUFLAGE) &amp;&amp; (camoColorSchemes.length != 0) &amp;&amp; !(_needPNG) &amp;&amp; !(_isDesaturated)		? 
						{ _shipId: _shipId, _camouflageEntityId: _camouflageEntityId, _exteriorId: _exteriorId, _exteriors: _exteriors } 			: null"/>
		</block>
		<block>
			<bind name="name" value="'ExteriorWithAmount_' + exteriorConfig.name"/>
			<style>
				<right value="0px"/>
				<bottom value="-4px"/>
				<position value="absolute"/>
			</style>
			<bind name="visible" value="_amount &gt; 0 &amp;&amp; !(exteriorConfig.type == ExteriorTypes.CAMOUFLAGE &amp;&amp; exteriorConfig.isPermanent)"/>
			<block type="text">
				<style>
					<position value="absolute"/>
				</style>
				<bind name="name" value="_amount"/>
				<styleClass value="$TextHeaderBigWhite"/>
				<bind name="class" value="'$Bold'"/>
				<bind name="class" value="	(_amount &lt; 5) ? '$None'  :
							(_amount &lt; 10) ? '$FontSize18' :
							(_amount &lt; 20) ? '$FontSizeHeader6' : '$FontSize20'"/>
				<bind name="text" value="_amount"/>
			</block>
			<block type="text">
				<styleClass value="$TextHeaderBigWhite"/>
				<bind name="class" value="'$Bold'"/>
				<bind name="class" value="	(_amount &lt; 5) ? '$None'  :
							(_amount &lt; 10) ? '$FontSize18' :
							(_amount &lt; 20) ? '$FontSizeHeader6' : '$FontSize20'"/>
				<bind name="text" value="_amount"/>
			</block>
		</block>
	</block>
	<block className="Autoreplenishment">
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; shipId"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="watchDH" value="'isLocked';			['shipOwnEntity.ownShip.evUpdateLock'];		shipOwnEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'isInFormation';		['shipOwnEntity.ownShip.evUpdateLock'];		shipOwnEntity.ownShip.isInFormation"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap_h_no_right" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
			<block className="inner_panel" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<margin value="0|3px"/>
			</style>
			<block>
				<style>
					<marginLeft value="6px"/>
					<marginTop value="3px"/>
				</style>
				<bind name="tooltip" value="'MultiParagraphHelpTooltip'; {_tooltipHeader: _tooltipHeader, _multiParagraphArray: _multiParagraphArrayHint, _paragraphText: _paragraphText}"/>
				<block className="icon_question_mark" type="native"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$MiddleAligned"/>
					<block>
						<style>
							<marginRight value="5px"/>
						</style>
						<bind name="tooltip" value="'AutoreplenishmentPriceTooltip'; { 	_maxPriceCR: _maxPriceCR, 
																		_maxPriceGold : _maxPriceGold, 
																		_nextPriceCR: _nextPriceCR, 
																		_nextPriceGold: _nextPriceGold,
																		_multiParagraphArray: _multiParagraphArrayPriceHint
																		} "/>
						<block>
							<bind name="style" value="'alpha'; (_itemsInstalled == 0) ? 0.6 : 1"/>
							<bind name="instance" value="'InvertableTextLine'; { _text: 'IDS_AUTOREPLANISHMENT',
																_invert: (_goldDeficit &gt; 0 || _creditsDeficit &gt; 0),
																_normalClass: '$TextPriceMedium',
																_invertedClass: '$TextPriceMediumDeficit' }"/>
						</block>
						<block>
							<bind name="watch" value="'iconWarningVisible'; (_autorechargeOn) &amp;&amp; ((_maxPriceCR != _nextPriceCR) || (_maxPriceGold != _nextPriceGold))"/>
							<bind name="fade" value="iconWarningVisible; 0.3; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 1; 0.1"/>
							<block className="icon_warning_orange" type="native">
								<style>
									<marginTop value="8px"/>
									<marginLeft value="2px"/>
								</style>
							</block>
						</block>
						<block>
							<block>
								<bind name="visible" value="_nextPriceCR &gt; 0"/>
								<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: _nextPriceCR, currency: 'credits' }, _medium: true, _deficit: _creditsDeficit}"/>
							</block>
							<block>
								<bind name="visible" value="(_nextPriceCr &gt; 0) &amp;&amp; (_nextPriceGold &gt; 0)"/>
								<bind name="instance" value="'InvertableTextLine'; { _text: 'IDS_AND', 
																	_invert: (_goldDeficit &gt; 0 || _creditsDeficit &gt; 0), 
																	_normalClass: '$TextPriceMedium', 
																	_invertedClass: '$TextPriceMediumDeficit' }"/>
							</block>
							<block>
								<bind name="visible" value="_nextPriceGold &gt; 0"/>
								<style>
									<marginLeft value="3px"/>
								</style>
								<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: _nextPriceGold, currency: 'gold' }, _medium: true, _deficit: _goldDeficit}"/>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<style>
							<marginRight value="5px"/>
							<backgroundColor value="0x01000000"/>
						</style>
						<bind name="tooltip" value="'SimpleWarningTooltip';	isInFormation	? {_text: (exteriorPage == LobbyConstants.SHIP_EXTERIOR_SIGNALS	? tr('IDS_SET_UNREADY_' + toUpperCase(tr(divisionEntranceData.divisionType)) + '_FIRST_TO_OPERATE_FLAGS')
																																			: tr('IDS_SET_UNREADY_' + toUpperCase(tr(divisionEntranceData.divisionType)) + '_FIRST_TO_OPERATE_CAMO'))} :
															isLocked		? {_text: tr('IDS_LEAVE_BATTLE_FIRST_TO_CHANGE_AUTOREPLENISHMENT_STATUS')}
																			: null"/>
						<block>
							<bind name="class" value="isLocked || isInFormation ? '$MouseDisable' : '$MouseEnable'"/>
							<bind name="style" value="'alpha'; (!isLocked &amp;&amp; !isInFormation) ? 1 : 0.5"/>
							<block className="tab_bar_bg" type="native">
								<block>
									<style>
										<marginLeft value="2px"/>
										<marginRight value="2px"/>
									</style>
									<block>
										<style>
											<position value="absolute"/>
										</style>
										<bind name="instance" value="'AutoreplenishmentTransition'; { _autorechargeOn: _autorechargeOn }"/>
									</block>
									<block>
										<style>
											<width value="100px"/>
											<height value="27px"/>
										</style>
										<bind name="tooltip" value="'SimpleTooltip'; (_itemsInstalled == 0)	? {tooltipText: (exteriorPage == LobbyConstants.SHIP_EXTERIOR_SIGNALS)	? 'IDS_AUTOREPLANISHMENT_TURN_ON_HINT_NO_FLAGS'
																																							: 'IDS_AUTOREPLANISHMENT_TURN_ON_HINT_NO_CAMO'}
																							:	null; 0"/>
										<block className="status_ready_item" type="native">
											<styleClass value="$Fullsize"/>
											<bind name="style" value="'colorMatrixFilter'; (_goldDeficit &gt; 0 || _creditsDeficit &gt; 0 || _itemsInstalled == 0) ? '0 -100 0 -40' : '0 0 0 0'"/>
											<bind name="label" value="_autorechargeOn ? toUpperCase(tr('IDS_IS_TURNED_ON')) : toUpperCase(tr('IDS_TURN_ON'))"/>
											<bind name="action" value="'buttonClick'; 'autorechargeExterior'; {shipId: shipInfo.id, signals: _signalsOn, camouflage: _camouflageOn}"/>
											<bind name="selected" value="_autorechargeOn"/>
											<bind name="enabled" value="_itemsInstalled &gt; 0"/>
											<bind name="tooltip" value="'SimpleTooltip'; (_itemsInstalled == 0) 	? null
																								: {tooltipText: (_goldDeficit &gt; 0 || _creditsDeficit &gt; 0) ? 'IDS_AUTOREPLANISHMENT_TURN_ON_HINT_DEFICIT' : 'IDS_AUTOREPLANISHMENT_TURN_ON_HINT'}; 0"/>
										</block>
									</block>
									<block className="divider_v" type="native">
										<style>
											<height value="27px"/>
										</style>
									</block>
									<block className="status_not_ready_item" type="native">
										<style>
											<width value="100px"/>
											<height value="27px"/>
										</style>
										<bind name="label" value="_autorechargeOn ? toUpperCase(tr('IDS_TURN_OFF')): toUpperCase(tr('IDS_IS_TURNED_OFF'))"/>
										<bind name="action" value="'buttonClick'; 'autorechargeExterior'; {shipId: shipInfo.id, signals: _signalsOff, camouflage: _camouflageOff}"/>
										<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_AUTOREPLANISHMENT_TURN_OFF_HINT'}; 0"/>
										<bind name="selected" value="!(_autorechargeOn)"/>
									</block>
									<style>
										<flow value="horizontal"/>
									</style>
								</block>
							</block>
						</block>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<styleClass value="$MiddleAligned"/>
					<bind name="tooltip" value="'SimpleWarningTooltip';	isInFormation	? {_text: (exteriorPage == LobbyConstants.SHIP_EXTERIOR_SIGNALS	? tr('IDS_SET_UNREADY_' + toUpperCase(tr(divisionEntranceData.divisionType)) + '_FIRST_TO_OPERATE_FLAGS')
																																		: tr('IDS_SET_UNREADY_' + toUpperCase(tr(divisionEntranceData.divisionType)) + '_FIRST_TO_OPERATE_CAMO'))} :
														isLocked		? {_text: tr('IDS_LEAVE_BATTLE_FIRST_TO_CHANGE_AUTOPURCHASE_STATUS')}
																		: null"/>
					<bind name="instance" value="'AutoPurchase'; _canBuySomeExterior ? { shipId: shipInfo.id, _autorechargeOn: _autorechargeOn,
																		_isCamouflage: _isCamouflage, _isSignal: _isSignal, _isConsumables: _isConsumables}
																	: null"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<bind name="visible" value="(_goldDeficit &gt; 0 || _creditsDeficit &gt; 0) &amp;&amp; _autorechargeOn"/>
			<bind name="instance" value="'CrAndGoldDeficit'; { _goldDeficit: _goldDeficit , _creditsDeficit: _creditsDeficit, _medium: true, _bold: true}"/>
		</block>
	</block>
	<block className="AutoPurchase">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; shipId"/>
		<bind name="fade" value="_autorechargeOn; 0.3; {alpha: 0, ubScaleY: 0}; {alpha: 1, ubScaleY: 1}; {alpha: 0, ubScaleY: 0}; 0; 0.3"/>
		<bind name="watchDH" value="'autopurchaseCamouflage';	['shipOwnEntity.ownShip.evUpdateAutorecharge'];	shipOwnEntity.ownShip.autopurchaseCamouflage"/>
		<bind name="watchDH" value="'autopurchaseFlags';			['shipOwnEntity.ownShip.evUpdateAutorecharge'];	shipOwnEntity.ownShip.autopurchaseFlags"/>
		<bind name="watchDH" value="'autopurchaseAbilities';		['shipOwnEntity.ownShip.evUpdateAutorecharge'];	shipOwnEntity.ownShip.autopurchaseAbilities"/>
		<bind name="watchDH" value="'isLocked';					['shipOwnEntity.ownShip.evUpdateLock'];			shipOwnEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'isInFormation';				['shipOwnEntity.ownShip.evUpdateLock'];			shipOwnEntity.ownShip.isInFormation"/>
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="watch" value="'validatedShownHintFirstTime'; shownHintFirstTime != null ? shownHintFirstTime : false"/>
		<bind name="watch" value="'shownHintFirstTime'; 	_isCamouflage	? userPrefs.shownHintAutoPurchaseExterior :
										_isSignal		? userPrefs.shownHintAutoPurchaseExterior :
										_isConsumables	? userPrefs.shownHintAutoPurchaseConsumables
														: userPrefs.shownHintAutoPurchaseExterior"/>
		<bind name="watch" value="'userPrefValueName'; 	_isCamouflage	? 'shownHintAutoPurchaseExterior' :
										_isSignal		? 'shownHintAutoPurchaseExterior' :
										_isConsumables	? 'shownHintAutoPurchaseConsumables'
														: 'shownHintAutoPurchaseExterior'"/>
		<bind name="dispatch" value="'addedToStage'; 'startWatchingAutochargeEv'; null; true; 0.1"/>
		<bind name="catch" value="'startWatchingAutochargeEv'; {startWatchingAutocharge: true}"/>
		<bind name="changeDispatch" value="_autorechargeOn; (startWatchingAutocharge &amp;&amp; _autorechargeOn == false) ? 'autorechargeOnChangedEv' : null"/>
		<bind name="action" value="'autorechargeOnChangedEv'; 'setUserPref'; { value: true, name: userPrefValueName}"/>
		<block>
			<bind name="fade" value="(validatedShownHintFirstTime == false) &amp;&amp; enableAutoPurschase; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: 10}; 1; 0.1"/>
			<style>
				<position value="absolute"/>
				<width value="290px"/>
				<bottom value="26px"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="mc_blurmap5" type="native">
				<bind name="fade" value="(validatedShownHintFirstTime == false) &amp;&amp; enableAutoPurschase; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: 10}; 1; 0.1"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="contrast_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
			<block className="notification_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block className="dock_panel_pin" type="native">
				<styleClass value="$MiddleAligned"/>
				<style>
					<position value="absolute"/>
					<bottom value="-7px"/>
				</style>
				<bind name="gotoAndStop!" value="'down'"/>
			</block>
			<block type="text">
				<styleClass value="$InfoBlockIndent"/>
				<styleClass value="$TextDefault"/>
				<bind name="text" value="_isCamouflage 	 ? 'IDS_AUTOPURCHASE_CAMOUFLAGE_ON' 
						: _isSignal 	 ? 'IDS_AUTOPURCHASE_SIGNALS_ON' 
						: _isConsumables ? 'IDS_AUTOPURCHASE_CONSUMABLES_ON'
						: ''"/>
			</block>
			<block>
				<style>
					<backgroundColor value="0x01000000"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="dispatch" value="'click'; 'autorechargeOnChangedEv'; null; true"/>
				<block className="button_close" type="native">
					<style>
						<top value="6px"/>
						<right value="6px"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<bind name="watch" value="'enableAutoPurschase'; _isCamouflage	? autopurchaseCamouflage :
											_isSignal		? autopurchaseFlags
															: autopurchaseAbilities"/>
			<bind name="tooltip" value="'MouseInstructionTooltip';	(isLocked || isInFormation) 				? null :
													{_multiParagraphArray: 	enableAutoPurschase ? [{ _paragraphText: 	_isCamouflage 	 ? 'IDS_AUTOPURCHASE_CAMOUFLAGE_ON' 
																														: _isSignal 	 ? 'IDS_AUTOPURCHASE_SIGNALS_ON' 
																														: _isConsumables ? 'IDS_AUTOPURCHASE_CONSUMABLES_ON'
																														: '' }] 
																								: [{ _paragraphText: 	_isCamouflage 	 ? 'IDS_AUTOPURCHASE_CAMOUFLAGE_OFF'
																														: _isSignal 	 ? 'IDS_AUTOPURCHASE_SIGNALS_OFF' 
																														: _isConsumables ? 'IDS_AUTOPURCHASE_CONSUMABLES_OFF'
																														: ''}],
													_mouseInstructions: 	enableAutoPurschase	? [{ _type:'left', _instructionText: 'IDS_AUTOPURCHASE_SWITCH_OFF' }] 
																								: [{ _type:'left', _instructionText: 'IDS_AUTOPURCHASE_SWITCH_ON' }]}"/>
			<bind name="action" value="'buttonClick'; _isConsumables	? 'autopurchaseAbilities':
									_isSignal		? 'autopurchaseFlags'
													: 'autopurchaseCamouflage'; {shipId: shipId, isAutoBuy: !(enableAutoPurschase)}"/>
			<style>
				<marginTop value="3px"/>
				<backgroundColor value="0x01000000"/>
			</style>
			<block>
				<bind name="style" value="'hitTest'; (!isLocked &amp;&amp; !isInFormation)"/>
				<bind name="style" value="'alpha'; (!isLocked &amp;&amp; !isInFormation) ? 1 : 0.5"/>
				<bind name="instance" value="'CheckBox'; {switchProperty: enableAutoPurschase, label: 'IDS_AUTOPURCHASE_FULL', _maxTfWidth: 400}"/>
			</block>
		</block>
	</block>
	<block className="AutoreplenishmentPriceTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="330px"/>
		</style>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<style>
				<marginTop value="10px"/>
			</style>
			<block>
				<bind name="visible" value="(_nextPriceCR == 0) &amp;&amp; (_nextPriceGold == 0)"/>
				<block type="text">
					<style>
						<alpha value="0.8"/>
					</style>
					<styleClass value="$TextHeaderBigWhite"/>
					<styleClass value="$MiddleVAligned"/>
					<bind name="text" value="tr('IDS_NEXT_REPLENISHMENT') + tr('IDS_COLON')+' '+toLowerCase(tr('IDS_FOR_FREE'))"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="(_nextPriceCR &gt; 0) || (_nextPriceGold &gt; 0)"/>
				<block type="text">
					<style>
						<alpha value="0.8"/>
					</style>
					<styleClass value="$TextHeaderBigWhite"/>
					<styleClass value="$MiddleVAligned"/>
					<bind name="text" value="tr('IDS_NEXT_REPLENISHMENT') + tr('IDS_COLON')"/>
				</block>
				<block>
					<bind name="visible" value="_nextPriceCR &gt; 0"/>
					<style>
						<marginTop value="1px"/>
					</style>
					<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: _nextPriceCR, currency: 'credits' }}"/>
				</block>
				<block type="text">
					<bind name="visible" value="(_nextPriceCr &gt; 0) &amp;&amp; (_nextPriceGold &gt; 0)"/>
					<style>
						<alpha value="0.8"/>
					</style>
					<styleClass value="$TextHeaderBigWhite"/>
					<styleClass value="$MiddleVAligned"/>
					<text value="IDS_AND"/>
				</block>
				<block>
					<bind name="visible" value="_nextPriceGold &gt; 0"/>
					<style>
						<marginLeft value="3px"/>
						<marginTop value="1px"/>
					</style>
					<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: _nextPriceGold, currency: 'gold' }}"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="(_maxPriceCR &gt; 0) || (_maxPriceGold &gt; 0)"/>
				<style>
					<marginTop value="4px"/>
				</style>
				<block type="text">
					<style>
						<alpha value="0.8"/>
					</style>
					<styleClass value="$TextHeaderBigWhite"/>
					<styleClass value="$MiddleVAligned"/>
					<bind name="text" value="tr('IDS_MAX_REPLENISHMENT') + tr('IDS_COLON')"/>
				</block>
				<block>
					<bind name="visible" value="_maxPriceCR &gt; 0"/>
					<style>
						<marginTop value="1px"/>
					</style>
					<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: _maxPriceCR, currency: 'credits' }}"/>
				</block>
				<block type="text">
					<bind name="visible" value="(_maxPriceCR &gt; 0) &amp;&amp; (_maxPriceGold &gt; 0)"/>
					<style>
						<alpha value="0.8"/>
					</style>
					<styleClass value="$TextHeaderBigWhite"/>
					<styleClass value="$MiddleVAligned"/>
					<text value="IDS_AND"/>
				</block>
				<block>
					<bind name="visible" value="_maxPriceGold &gt; 0"/>
					<style>
						<marginLeft value="3px"/>
						<marginTop value="1px"/>
					</style>
					<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: _maxPriceGold, currency: 'gold' }}"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<marginLeft value="12px"/>
				<marginRight value="12px"/>
				<marginTop value="9px"/>
				<marginBottom value="3px"/>
				<width value="100%"/>
			</style>
			<bind name="repeat" value="_multiParagraphArray; 'RepeatParagraphItem'"/>
		</block>
	</block>
	<block className="AutoreplenishmentTransition">
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="transition" value="_autorechargeOn == false; 0.2; {x: 0}; {x: 102}; {x: 0}; 2"/>
			<bind name="fade" value="_autorechargeOn == false; 0.3; {alpha: 1}; {alpha: 0}; {alpha: 0}; 0; 0.3"/>
			<block className="status_transition_element" type="native">
				<style>
					<marginTop value="2px"/>
					<position value="absolute"/>
					<height value="23px"/>
				</style>
			</block>
		</block>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="transition" value="_autorechargeOn; 0.2; {x: 102}; {x: 0}; {x: 102}; 2"/>
			<bind name="fade" value="_autorechargeOn; 0.3; {alpha: 1}; {alpha: 0}; {alpha: 0}; 0; 0.3"/>
			<block className="status_transition_element" type="native">
				<style>
					<marginTop value="2px"/>
					<position value="absolute"/>
					<height value="23px"/>
				</style>
			</block>
		</block>
	</block>
	<block className="FlagInfotip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ownShip; shipId"/>
		<bind name="primaryEntityDH" value="'exteriorEntity'; CC.exteriorConfig; id"/>
		<bind name="watchDH" value="'exteriorConfig'; []; exteriorEntity.exteriorConfig"/>
		<bind name="watchDH" value="'attributes';		['exteriorEntity.attributes.evChanged'];	exteriorEntity.attributes"/>
		<bind name="watchDH" value="'isInFormation';		['shipEntity.ownShip.evUpdateLock'];		shipEntity.ownShip.isInFormation"/>
		<bind name="watchDH" value="'ensignAvailables';	['shipEntity.ownShip.evUpdateConfig'];		shipEntity.ownShip.ensignAvailables"/>
		<bind name="entityDH" value="'shipEnsignRestrictionEntity'; ensignAvailables[shipEntity.ship.country]"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<bind name="action" value="'Tooltip.selfClosed'; !_navalFlagName ? 'disableExteriorPreview' : 'disableNavalFlagPreview'; {exteriorName:id}"/>
		<bind name="action" value="'Tooltip.selfOpened'; !_navalFlagName ? 'previewExterior' : 'previewNavalFlag'; !_navalFlagName ? { exteriorName: id, shipId: shipId } : {flagName: _navalFlagName}"/>
		<bind name="action" value="'Tooltip.selfOpened'; 'setCameraDefaultPosition'; _navalFlagName ? {alias: 'navalFlag'} : {alias: 'ensign'}"/>
		<styleClass value="$HorizontalInfotipBehaviour"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block className="dock_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginTop value="-10px"/>
				<marginRight value="-14px"/>
				<marginBottom value="-16px"/>
				<marginLeft value="-14px"/>
			</style>
		</block>
		<block>
			<style>
				<width value="300px"/>
			</style>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<bind name="instance" value="'FlagTooltipHeader'; {_name: name, _installed: _installed, _isLeague: isLeague, _iconPath: _iconPath, _isNaval: _isNaval}"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<bind name="visible" value="_installed"/>
					<styleClass value="$InfoBlockIndent"/>
					<block className="icon_check" type="native">
						<styleClass value="$MiddleVAligned"/>
					</block>
					<block type="text">
						<style>
							<marginLeft value="4px"/>
						</style>
						<styleClass value="$TextDefault"/>
						<bind name="class" value="'$FontColorGolden'"/>
						<bind name="text" value="'IDS_INSTALLED'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<bind name="visible" value="!(_installed)"/>
					<styleClass value="$InfoBlockIndent"/>
					<block className="icon_warning_orange" type="native">
						<styleClass value="$MiddleVAligned"/>
					</block>
					<block type="text">
						<style>
							<marginLeft value="4px"/>
						</style>
						<styleClass value="$TextDefault"/>
						<bind name="class" value="'$FontColorUnready'"/>
						<bind name="text" value="!canUse &amp;&amp; !_isNaval ? 'IDS_NOT_ACHIEVED' : 'IDS_NOT_INSTALLED'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<bind name="watch" value="'extraDescription'; tr('IDS_' + toUpperCase(name) + '_EXTRA_DESCRIPTION')"/>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<block type="text">
					<style>
						<maxWidth value="274"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="text" value="'IDS_' + toUpperCase(name) + '_DESCRIPTION'"/>
				</block>
				<block type="text">
					<bind name="visible" value="!(isLeague) &amp;&amp; !_isNaval &amp;&amp; extraDescription != ' '"/>
					<style>
						<maxWidth value="274"/>
						<marginTop value="16px"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="text" value="'IDS_' + toUpperCase(name) + '_EXTRA_DESCRIPTION'"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="!_installed &amp;&amp; _navalFlagName"/>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="((attributes.positive.length + attributes.negative.length + attributes.neutral.length) &gt; 0) &amp;&amp; !_isNaval"/>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<styleClass value="$PxHorizontalCorrection"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<paddingTop value="16px"/>
						<paddingLeft value="12px"/>
						<paddingRight value="12px"/>
					</style>
					<bind name="instance" value="'ParamsModifierList'; { _attributesPositive: attributes.positive,
														_attributesNegative: attributes.negative,
														_attributesNeutral:	attributes.neutral}"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="-1px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<bind name="watch" value="'isShipRestrictionsVisible'; (shipEnsignRestrictionEntity) &amp;&amp; (shipEnsignRestrictionEntity.shipRestrictions.selectedFilters.length)"/>
			<block>
				<bind name="visible" value="isShipRestrictionsVisible &amp;&amp; !_isNaval"/>
				<styleClass value="$InfoBlockIndent"/>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<style>
						<maxWidth value="270"/>
					</style>
					<bind name="text" value="'IDS_INSTALL_RESTRICTION_FLAGS'"/>
				</block>
				<block>
					<style>
						<marginTop value="6px"/>
					</style>
					<bind name="instance" value="'ShipRestrictions'; isShipRestrictionsVisible ? { _restrictionsEntityId: shipEnsignRestrictionEntity.id } : null"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="isShipRestrictionsVisible &amp;&amp; !_isNaval"/>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="((!canUse &amp;&amp; !isLeague) || isRankSeasonTemp) &amp;&amp; !_isNaval"/>
				<styleClass value="$InfoBlockIndent"/>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<style>
						<maxWidth value="260"/>
					</style>
					<bind name="text" value="(!canUse &amp;&amp; !isLeague) ? 'IDS_INSTRUCTION_ACHIEVE_SEASON_FLAG' : 'IDS_INSTRUCTION_IS_RANK_TEMP'"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="canUse"/>
				<bind name="class" value="_installed &amp;&amp; _navalFlagName ? '$None' : '$InfoBlockIndent'"/>
				<bind name="instance" value="'DefaultButtonCostMedium';  !(_installed) 	? { _label: toUpperCase(tr('IDS_INSTALL')), 
																			priceInfo: null,
																			_action: _navalFlagName ? 'DockProxy.changeNavalFlag' : 'installEnsign',
																			_request: null,
																			_actionParams: _navalFlagName ? {shipID: shipId, flagName: _navalFlagName} : {ensignName: id, shipId: shipId},
																			_enabled: _enableExterior,
																			_dispatchEvent: 'Tooltip.Close' }
																		: _navalFlagName 	? null
																							: { _label: toUpperCase(tr('IDS_TAKE_AWAY')), 
																								priceInfo: null, 
																								_action: 'uninstallEnsign', 
																								_request: null, 
																								_actionParams: {ensignName: id, shipId: shipId}, 
																								_enabled: _enableExterior,
																								_dispatchEvent: 'Tooltip.Close' }"/>
			</block>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<style>
					<marginTop value="0px"/>
				</style>
				<bind name="visible" value="!(_enableExterior)"/>
				<bind name="instance" value="'StatusLineWithIcon';  {_text: isInFormation				? (divisionEntranceData.divisionType == 'party') ?	'IDS_SET_UNREADY_PARTY_FIRST_TO_OPERATE_ENSIGN'
																																		 :	'IDS_SET_UNREADY_DIVISION_FIRST_TO_OPERATE_ENSIGN'
																						:	'IDS_LEAVE_BATTLE_FIRST_TO_OPERATE_CAMOUFLAGE',
												_positive: false}"/>
			</block>
			<block className="dock_panel_pin_h" type="native">
				<style>
					<position value="absolute"/>
				</style>
				<bind name="gotoAndStop!" value="'left'"/>
				<params>
					<param name="name" value="pinLeft"/>
				</params>
			</block>
		</block>
	</block>
	<block className="FlagTooltip">
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ownShip; shipId"/>
		<bind name="primaryEntityDH" value="'exteriorEntity'; CC.exteriorConfig; id"/>
		<bind name="watchDH" value="'exteriorConfig'; []; exteriorEntity.exteriorConfig"/>
		<bind name="watchDH" value="'attributes'; ['exteriorEntity.attributes.evChanged']; exteriorEntity.attributes"/>
		<bind name="watchDH" value="'ensignAvailables';	['shipEntity.ownShip.evUpdateConfig'];		shipEntity.ownShip.ensignAvailables"/>
		<bind name="entityDH" value="'shipEnsignRestrictionEntity'; ensignAvailables[shipEntity.ship.country]"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<styleClass value="$MouseDisable"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<style>
				<width value="300px"/>
			</style>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<bind name="instance" value="'FlagTooltipHeader'; {_name: name, _installed: _installed, _isLeague: isLeague, _iconPath: _iconPath, _isNaval: _isNaval}"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<bind name="visible" value="_installed"/>
					<styleClass value="$InfoBlockIndent"/>
					<block className="icon_check" type="native">
						<styleClass value="$MiddleVAligned"/>
					</block>
					<block type="text">
						<style>
							<marginLeft value="4px"/>
						</style>
						<styleClass value="$TextDefault"/>
						<bind name="class" value="'$FontColorGolden'"/>
						<bind name="text" value="'IDS_INSTALLED'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<bind name="visible" value="!_installed"/>
					<styleClass value="$InfoBlockIndent"/>
					<block className="icon_warning_orange" type="native">
						<styleClass value="$MiddleVAligned"/>
					</block>
					<block type="text">
						<style>
							<marginLeft value="4px"/>
						</style>
						<styleClass value="$TextDefault"/>
						<bind name="class" value="'$FontColorUnready'"/>
						<bind name="text" value="!canUse &amp;&amp; !_isNaval ? 'IDS_NOT_ACHIEVED' : 'IDS_NOT_INSTALLED'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<bind name="watch" value="'extraDescription'; tr('IDS_' + toUpperCase(name) + '_EXTRA_DESCRIPTION')"/>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<block type="text">
					<style>
						<maxWidth value="274"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="text" value="'IDS_' + toUpperCase(name) + '_DESCRIPTION'"/>
				</block>
				<block type="text">
					<bind name="visible" value="!(isLeague) &amp;&amp; extraDescription != ' ' &amp;&amp; !_isNaval"/>
					<style>
						<maxWidth value="274"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="text" value="extraDescription"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="((attributes.positive.length + attributes.negative.length + attributes.neutral.length) &gt; 0) &amp;&amp; !_isNaval"/>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<styleClass value="$PxHorizontalCorrection"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<paddingTop value="16px"/>
						<paddingLeft value="12px"/>
						<paddingRight value="12px"/>
					</style>
					<bind name="instance" value="'ParamsModifierList'; { _attributesPositive: attributes.positive,
														_attributesNegative: attributes.negative,
														_attributesNeutral:	attributes.neutral}"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="-1px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<bind name="watch" value="'isShipRestrictionsVisible'; (shipEnsignRestrictionEntity) &amp;&amp; (shipEnsignRestrictionEntity.shipRestrictions.selectedFilters.length)"/>
			<block>
				<bind name="visible" value="isShipRestrictionsVisible &amp;&amp; !_isNaval"/>
				<styleClass value="$InfoBlockIndent"/>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<style>
						<maxWidth value="270"/>
					</style>
					<bind name="text" value="'IDS_INSTALL_RESTRICTION_FLAGS'"/>
				</block>
				<block>
					<style>
						<marginTop value="6px"/>
					</style>
					<bind name="instance" value="'ShipRestrictions'; isShipRestrictionsVisible ? { _restrictionsEntityId: shipEnsignRestrictionEntity.id } : null"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="isShipRestrictionsVisible &amp;&amp; !_isNaval"/>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="((!canUse &amp;&amp; isLeague) || isRankSeasonTemp) &amp;&amp; !_isNaval"/>
				<styleClass value="$InfoBlockIndent"/>
				<block type="text">
					<bind name="visible" value="!canUse &amp;&amp; isLeague"/>
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<style>
						<maxWidth value="260"/>
					</style>
					<bind name="text" value="IDS_INSTRUCTION_ACHIEVE_LEAGUE_FLAG"/>
				</block>
				<block type="text">
					<bind name="visible" value="isRankSeasonTemp"/>
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<style>
						<maxWidth value="260"/>
					</style>
					<text value="IDS_INSTRUCTION_IS_RANK_TEMP"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="!(_installed) &amp;&amp; (canUse || _isNaval)"/>
				<styleClass value="$InfoBlockIndent"/>
				<bind name="instance" value="'MouseInstruction'; {_type: 'left', _instructionText: 'IDS_INSTRUCTION_INSTALL_ENSIGN', _maxWidth: 270}"/>
			</block>
		</block>
	</block>
	<block className="FlagTooltipUB2">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="mouseEnabled" value="false"/>
		<bind name="mouseChildren" value="false"/>
		<style>
			<hitTest value="false"/>
		</style>
		<block className="FlagTooltipUB2" type="ublock">
			<params>
				<param name="name" value="flag_tooltip_ub2"/>
			</params>
			<bind name="build!" value="$ubPlayerProxy; {	__installed: _installed,
                                        __id: _id,
                                        __name: _name,
                                        __shipId: _shipId,
                                        __canUse: _canUse,
                                        __isRankSeasonTemp: _isRankSeasonTemp,
                                        __isLeague: _isLeague,
                                        __iconPath: _iconPath,
                                        __isNaval: _isNaval,
                                        __optionData: optionData}"/>
			<bind name="externalArgs" value="{
						_installed: _installed,
						_id: _id,
						_name: _name,
						_shipId: _shipId,
						_canUse: _canUse,
						_isRankSeasonTemp: _isRankSeasonTemp,
						_isLeague: _isLeague,
						_iconPath: _iconPath,
						_isNaval: _isNaval,
						_optionData: optionData}"/>
		</block>
	</block>
	<block className="FlagTooltipHeader">
		<block>
			<block>
				<style>
					<height value="60px"/>
					<width value="75px"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:' + _iconPath"/>
			</block>
			<block>
				<block type="text">
					<style>
						<maxWidth value="200"/>
					</style>
					<styleClass value="$TextHeaderBold"/>
					<bind name="class" value="_installed ? '$FontColorGolden' :'$FontColorDefault'"/>
					<bind name="text" value="'IDS_' + toUpperCase(_name)"/>
				</block>
				<block type="text">
					<style>
						<maxWidth value="200"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="text" value="_isLeague ? 'IDS_LEAGUE_FLAG' : _isNaval ? 'IDS_NAVAL_FLAG' : 'IDS_SEASON_ENSIGN'"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="CamoColorPreview">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="entityDH" value="'colorSchemeEntity'; $value"/>
		<bind name="watchDH" value="'operationsAccountLocked'; ['resourceEntity.accountResource.evOperationsLockChanged']; resourceEntity.accountResource.operationsLocked"/>
		<bind name="watch" value="'isInstalled'; 		!!(_exteriors[_exteriorId])"/>
		<bind name="watch" value="'thisColorPicked'; 	(_pickedCamoColorScheme == $value)"/>
		<bind name="watch" value="'allowClick'; 			(_pickedCamoColorScheme != $value)"/>
		<bind name="watch" value="'thisColorPreviewed'; 	(_previewCamoColorScheme == $value)"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'shipId'; ['dockEntity.shipSelection.evShipUpdate']; dockEntity.shipSelection.currentShipId"/>
		<bind name="watchDH" value="'shipIdForModuleInset'; ['dockEntity.shipSelection.evShipViewUpdate']; dockEntity.shipSelection.currentShipIdForModuleInset"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; shipId"/>
		<bind name="watchDH" value="'isLocked';			['shipOwnEntity.ownShip.evUpdateLock'];		shipOwnEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'isInFormation';		['shipOwnEntity.ownShip.evUpdateLock'];		shipOwnEntity.ownShip.isInFormation"/>
		<style>
			<marginRight value="15px"/>
			<backgroundColor value="0x01FFFFFF"/>
		</style>
		<bind name="tooltip" value="'SimpleWarningTooltip';	isInFormation		? {_text: tr('IDS_SET_UNREADY_DIVISION_FIRST_TO_OPERATE_CAMO'), _maxWidth: 280} :
											isLocked			? {_text: tr('IDS_LEAVE_BATTLE_FIRST_TO_OPERATE_CAMOUFLAGE'), _maxWidth: 280}
																: null"/>
		<block>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
			<bind name="style" value="'hitTest'; operationsAccountLocked || isLocked ? false : true"/>
			<bind name="action" value="'click'; isInstalled 	? allowClick	? 'changeCamouflageColor'
															: null
											: 'previewExterior'; 
											{ 	shipId: _shipId, exteriorName: _exteriorId, 
												colorScheme: colorSchemeEntity.colorScheme.index }"/>
			<block>
				<style>
					<width value="28px"/>
					<height value="28px"/>
					<backgroundColor value="0xff000000"/>
				</style>
				<bind name="colorTransform" value="	{	redMultiplier: 0,
										greenMultiplier: 0,
										blueMultiplier: 0,
										alphaMultiplier: 1,
										redOffset: colorSchemeEntity.colorScheme.colorUI[0],
										greenOffset: colorSchemeEntity.colorScheme.colorUI[1],
										blueOffset: colorSchemeEntity.colorScheme.colorUI[2],
										alphaOffset: 0
									}"/>
			</block>
			<block className="hint_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block className="hint_panel_bold" type="native">
				<bind name="transition" value="isInstalled ? (rollOver || thisColorPicked) : (rollOver || thisColorPreviewed); 0.15; {alpha: 0}; {alpha: 0.6}"/>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="isInstalled &amp;&amp; thisColorPicked"/>
			<style>
				<position value="absolute"/>
				<right value="-3px"/>
				<top value="-3px"/>
			</style>
			<block className="icon_check" type="native"/>
		</block>
	</block>
	<block className="CamouflageRepaint">
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; _shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="primaryEntityDH" value="'exteriorEntity'; CC.exteriorConfig; _exteriorId"/>
		<bind name="watchDH" value="'exteriorConfig'; []; exteriorEntity.exteriorConfig"/>
		<bind name="entityDH" value="'camouflageEntity'; _camouflageEntityId"/>
		<bind name="watch" value="'colorSchemeEntityId'; isInstalled ? pickedCamoColorScheme : previewCamoColorScheme"/>
		<bind name="watchDH" value="'pickedCamoColorScheme';		['shipEntity.ownShip.evUpdateCamouflages'];	camouflageEntity.camouflage.pickedCamoColorScheme"/>
		<bind name="watchDH" value="'previewCamoColorScheme';	['shipEntity.ownShip.evUpdateCamouflages'];	camouflageEntity.camouflage.previewCamoColorScheme"/>
		<bind name="watch" value="'isInstalled'; !!(_exteriors[_exteriorId])"/>
		<bind name="watch" value="'name'; toUpperCase(exteriorConfig.name)"/>
		<bind name="watch" value="'isPermoflage'; exteriorConfig.isPermanent"/>
		<bind name="child" value="isPermoflage ? 0 : 1; { _name: name, _colorSchemeEntityId: colorSchemeEntityId }; 'ColoredPermoIcon'; 'ColoredCamoIcon'"/>
	</block>
	<block className="ColoredCamoIcon">
		<bind name="entityDH" value="'colorSchemeEntity'; _colorSchemeEntityId"/>
		<bind name="child" value="colorSchemeEntity.colorScheme.colorsNum; { _iconOverName: 'url:../camouflages/camo_over.png', _name: _name, colorSchemeEntity: colorSchemeEntity }; 
		'EmptyItem';
		'ColoredCamoIcon4'; 
		'ColoredCamoIcon4'; 
		'ColoredCamoIcon4'; 
		'ColoredCamoIcon4'"/>
	</block>
	<block className="ColoredCamoIcon4">
		<block className="FourColoredIcon">
			<block className="camouflage_icon" type="native">
				<innerBind elementName="color0" name="gotoAndStop!" value="_name"/>
				<innerBind elementName="color0" name="colorTransform" value="	{ 	redMultiplier:0,
												greenMultiplier:0,
												blueMultiplier:0,
												alphaMultiplier:1,
												redOffset:colorSchemeEntity.colorScheme.color0[0],
												greenOffset:colorSchemeEntity.colorScheme.color0[1],
												blueOffset:colorSchemeEntity.colorScheme.color0[2],
												alphaOffset:0
											}"/>
				<innerBind elementName="color1" name="gotoAndStop!" value="_name"/>
				<innerBind elementName="color1" name="colorTransform" value="	{ 	redMultiplier:0,
												greenMultiplier:0,
												blueMultiplier:0,
												alphaMultiplier:1,
												redOffset:colorSchemeEntity.colorScheme.color1[0],
												greenOffset:colorSchemeEntity.colorScheme.color1[1],
												blueOffset:colorSchemeEntity.colorScheme.color1[2],
												alphaOffset:0
											}"/>
				<innerBind elementName="color2" name="gotoAndStop!" value="_name"/>
				<innerBind elementName="color2" name="colorTransform" value="	{ 	redMultiplier:0,
												greenMultiplier:0,
												blueMultiplier:0,
												alphaMultiplier:1,
												redOffset:colorSchemeEntity.colorScheme.color2[0],
												greenOffset:colorSchemeEntity.colorScheme.color2[1],
												blueOffset:colorSchemeEntity.colorScheme.color2[2],
												alphaOffset:0
											}"/>
				<innerBind elementName="color3" name="gotoAndStop!" value="_name"/>
				<innerBind elementName="color3" name="colorTransform" value="	{ 	redMultiplier:0,
												greenMultiplier:0,
												blueMultiplier:0,
												alphaMultiplier:1,
												redOffset:colorSchemeEntity.colorScheme.color3[0],
												greenOffset:colorSchemeEntity.colorScheme.color3[1],
												blueOffset:colorSchemeEntity.colorScheme.color3[2],
												alphaOffset:0
											}"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
				</style>
				<bind name="style" value="'backgroundImage'; _iconOverName"/>
			</block>
		</block>
	</block>
	<block className="ColoredPermoIcon">
		<bind name="entityDH" value="'colorSchemeEntity'; _colorSchemeEntityId"/>
		<bind name="child" value="colorSchemeEntity.colorScheme.colorsNum; { _iconOverName: 'url:../permoflages/permo_over.png', _name: '', colorSchemeEntity: colorSchemeEntity };
		'EmptyItem';
		'ColoredPermoIcon1'; 
		'ColoredPermoIcon2'; 
		'ColoredPermoIcon3'; 
		'ColoredPermoIcon4'"/>
	</block>
	<block className="ColoredPermoIcon1">
		<block className="OneColoredIcon">
			<block className="permoflage_icon_1_colored" type="native">
				<innerBind elementName="color0" name="gotoAndStop!" value="_name"/>
				<innerBind elementName="color0" name="colorTransform" value="	{ 	redMultiplier:0,
												greenMultiplier:0,
												blueMultiplier:0,
												alphaMultiplier:1,
												redOffset:colorSchemeEntity.colorScheme.color0[0],
												greenOffset:colorSchemeEntity.colorScheme.color0[1],
												blueOffset:colorSchemeEntity.colorScheme.color0[2],
												alphaOffset:0
											}"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
				</style>
				<bind name="style" value="'backgroundImage'; _iconOverName"/>
			</block>
		</block>
	</block>
	<block className="ColoredPermoIcon2">
		<block className="TwoColoredIcon">
			<block className="permoflage_icon_2_colored" type="native">
				<innerBind elementName="color0" name="gotoAndStop!" value="_name"/>
				<innerBind elementName="color0" name="colorTransform" value="	{ 	redMultiplier:0,
												greenMultiplier:0,
												blueMultiplier:0,
												alphaMultiplier:1,
												redOffset:colorSchemeEntity.colorScheme.color0[0],
												greenOffset:colorSchemeEntity.colorScheme.color0[1],
												blueOffset:colorSchemeEntity.colorScheme.color0[2],
												alphaOffset:0
											}"/>
				<innerBind elementName="color1" name="gotoAndStop!" value="_name"/>
				<innerBind elementName="color1" name="colorTransform" value="	{ 	redMultiplier:0,
												greenMultiplier:0,
												blueMultiplier:0,
												alphaMultiplier:1,
												redOffset:colorSchemeEntity.colorScheme.color1[0],
												greenOffset:colorSchemeEntity.colorScheme.color1[1],
												blueOffset:colorSchemeEntity.colorScheme.color1[2],
												alphaOffset:0
											}"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
				</style>
				<bind name="style" value="'backgroundImage'; _iconOverName"/>
			</block>
		</block>
	</block>
	<block className="ColoredPermoIcon3">
		<block className="TriColoredIcon">
			<block className="permoflage_icon_3_colored" type="native">
				<innerBind elementName="color0" name="gotoAndStop!" value="_name"/>
				<innerBind elementName="color0" name="colorTransform" value="	{ 	redMultiplier:0,
												greenMultiplier:0,
												blueMultiplier:0,
												alphaMultiplier:1,
												redOffset:colorSchemeEntity.colorScheme.color0[0],
												greenOffset:colorSchemeEntity.colorScheme.color0[1],
												blueOffset:colorSchemeEntity.colorScheme.color0[2],
												alphaOffset:0
											}"/>
				<innerBind elementName="color1" name="gotoAndStop!" value="_name"/>
				<innerBind elementName="color1" name="colorTransform" value="	{ 	redMultiplier:0,
												greenMultiplier:0,
												blueMultiplier:0,
												alphaMultiplier:1,
												redOffset:colorSchemeEntity.colorScheme.color1[0],
												greenOffset:colorSchemeEntity.colorScheme.color1[1],
												blueOffset:colorSchemeEntity.colorScheme.color1[2],
												alphaOffset:0
											}"/>
				<innerBind elementName="color2" name="gotoAndStop!" value="_name"/>
				<innerBind elementName="color2" name="colorTransform" value="	{ 	redMultiplier:0,
												greenMultiplier:0,
												blueMultiplier:0,
												alphaMultiplier:1,
												redOffset:colorSchemeEntity.colorScheme.color2[0],
												greenOffset:colorSchemeEntity.colorScheme.color2[1],
												blueOffset:colorSchemeEntity.colorScheme.color2[2],
												alphaOffset:0
											}"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
				</style>
				<bind name="style" value="'backgroundImage'; _iconOverName"/>
			</block>
		</block>
	</block>
	<block className="ColoredPermoIcon4">
		<block className="FourColoredIcon">
			<block className="permoflage_icon_4_colored" type="native">
				<innerBind elementName="color0" name="gotoAndStop!" value="_name"/>
				<innerBind elementName="color0" name="colorTransform" value="	{ 	redMultiplier:0,
												greenMultiplier:0,
												blueMultiplier:0,
												alphaMultiplier:1,
												redOffset:colorSchemeEntity.colorScheme.color0[0],
												greenOffset:colorSchemeEntity.colorScheme.color0[1],
												blueOffset:colorSchemeEntity.colorScheme.color0[2],
												alphaOffset:0
											}"/>
				<innerBind elementName="color1" name="gotoAndStop!" value="_name"/>
				<innerBind elementName="color1" name="colorTransform" value="	{ 	redMultiplier:0,
												greenMultiplier:0,
												blueMultiplier:0,
												alphaMultiplier:1,
												redOffset:colorSchemeEntity.colorScheme.color1[0],
												greenOffset:colorSchemeEntity.colorScheme.color1[1],
												blueOffset:colorSchemeEntity.colorScheme.color1[2],
												alphaOffset:0
											}"/>
				<innerBind elementName="color2" name="gotoAndStop!" value="_name"/>
				<innerBind elementName="color2" name="colorTransform" value="	{ 	redMultiplier:0,
												greenMultiplier:0,
												blueMultiplier:0,
												alphaMultiplier:1,
												redOffset:colorSchemeEntity.colorScheme.color2[0],
												greenOffset:colorSchemeEntity.colorScheme.color2[1],
												blueOffset:colorSchemeEntity.colorScheme.color2[2],
												alphaOffset:0
											}"/>
				<innerBind elementName="color3" name="gotoAndStop!" value="_name"/>
				<innerBind elementName="color3" name="colorTransform" value="	{ 	redMultiplier:0,
												greenMultiplier:0,
												blueMultiplier:0,
												alphaMultiplier:1,
												redOffset:colorSchemeEntity.colorScheme.color3[0],
												greenOffset:colorSchemeEntity.colorScheme.color3[1],
												blueOffset:colorSchemeEntity.colorScheme.color3[2],
												alphaOffset:0
											}"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
				</style>
				<bind name="style" value="'backgroundImage'; _iconOverName"/>
			</block>
		</block>
	</block>
	<block className="RewardContainer">
		<bind name="tooltip" value="'RewardContainerTooltip'; { _rewards: _rewards, _rewardsSpecial: _rewardsSpecial, _tooltipHeader: _tooltipHeader }"/>
		<block className="icon_giftbox" type="native">
			<bind name="scaleX" value="_scale ? _scale: 0.85"/>
			<bind name="scaleY" value="_scale ? _scale: 0.85"/>
		</block>
	</block>
	<block className="RewardContainerTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="340px"/>
			<marginBottom value="12px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block type="text">
			<styleClass value="$InfoBlockIndent"/>
			<styleClass value="$TextHeaderBigDefaultTech"/>
			<bind name="text" value="_tooltipHeader"/>
		</block>
		<block>
			<bind name="visible" value="_rewards.length &gt; 0"/>
			<style>
				<width value="100%"/>
				<marginLeft value="16px"/>
				<marginRight value="12px"/>
			</style>
			<bind name="repeat" value="_rewards; _isDH20 ? 'RewardContainerTooltipItemAdapter' : 'RewardContainerTooltipItem'"/>
		</block>
		<block>
			<bind name="visible" value="_rewardsSpecial.length &gt; 0"/>
			<style>
				<width value="100%"/>
				<marginLeft value="16px"/>
				<marginRight value="12px"/>
			</style>
			<bind name="repeat" value="_rewardsSpecial; _isDH20 ? 'RewardContainerTooltipItemAdapter' : 'RewardContainerTooltipItem'"/>
		</block>
	</block>
	<block className="RewardContainerTooltipItemAdapter">
		<bind name="entityDH" value="'rewardEntity'; $value"/>
		<style>
			<width value="100%"/>
		</style>
		<bind name="instance" value="'RewardContainerTooltipItem'; rewardEntity.rewardComponent"/>
	</block>
	<css name="$GiftboxInfotipBehaviour">
		<userData value="{
		appearDelay: 0,
		appearDuration: 0.1,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.1,
		disappearOffset: -10.0,
		tinyOffset: 0,
		rightOffset: -67
	}"/>
	</css>
	<block className="GiftboxInfotip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<bind name="action" value="'Tooltip.selfClosed'; 'giftboxHideAnimationFinished'; {}; true"/>
		<styleClass value="$GiftboxInfotipBehaviour"/>
		<style>
			<width value="430px"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="MenuBg">
				<styleClass value="$FullsizeAbsolute"/>
				<block className="DeclareBlurLayer">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="transparentPixel" type="native">
						<bind name="blurLayer" value="0"/>
					</block>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block className="BlurMap">
					<bind name="visible" value="optionData.blurEnabled"/>
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<style>
						<hitTest value="false"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
					<block className="mc_blurmap_medium" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$FullsizeAbsolute"/>
						<bind name="blurMap" value="0"/>
					</block>
					<block className="inner_panel" type="native">
						<style>
							<alpha value="0.5"/>
						</style>
						<styleClass value="$FullsizeAbsolute"/>
					</block>
				</block>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<block className="contrast_panel" type="native">
					<bind name="visible" value="optionData.contrast &amp;&amp; !(true)"/>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="visible" value="!(true)"/>
					<block className="hint_panel" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
				</block>
				<block>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="visible" value="true"/>
					<block className="dock_panel" type="native">
						<styleClass value="$FullsizeAbsolute"/>
						<style>
							<marginBottom value="-19px"/>
							<marginRight value="-14px"/>
							<marginLeft value="-14px"/>
							<marginTop value="-9px"/>
						</style>
					</block>
				</block>
			</block>
			<block className="GiftBoxRewardsHeader">
				<block type="text">
					<styleClass value="$InfoBlockHorizontalIndentNoWidth"/>
					<style>
						<marginTop value="8px"/>
						<marginLeft value="12px"/>
						<marginBottom value="8px"/>
					</style>
					<styleClass value="$TextHeader"/>
					<bind name="text" value="'IDS_GIFTS_EARNED_AVAILABLE_INFO'"/>
				</block>
			</block>
			<block>
				<styleClass value="$DefaultScrollBar"/>
				<style>
					<width value="100%"/>
					<maxHeight value="620"/>
					<overflow value="scroll"/>
				</style>
				<bind name="var" value="{sliceRewards: false}"/>
				<block className="GiftboxRewardsContent">
					<style>
						<width value="430px"/>
					</style>
					<bind name="collectionDH" value="CC.rewardComponent; 'rewardsCollectionFull'; 'rewards.sorted'"/>
					<bind name="slice" value="'rewardsCollection'; DES_rewardsCollectionFull; 0; 18"/>
					<bind name="watch" value="'moreItemsCount'; rewardsCollectionFull.length - rewardsCollection.length"/>
					<bind name="name" value="'GiftboxRewardsWindow'"/>
					<block>
						<styleClass value="$InfoBlockHorizontalIndentNoWidth"/>
						<bind name="visible" value="rewardsCollectionFull.length &gt; 0"/>
						<style>
							<flow value="htile"/>
							<marginTop value="14px"/>
							<marginBottom value="18px"/>
							<width value="410px"/>
						</style>
						<bind name="repeat" value="sliceRewards ? rewardsCollection : rewardsCollectionFull; 'RewardItemEntity'"/>
					</block>
					<block>
						<bind name="visible" value="sliceRewards &amp;&amp; moreItemsCount &gt; 0"/>
						<style>
							<marginTop value="-13px"/>
							<marginBottom value="6px"/>
						</style>
						<bind name="instance" value="'MoreRewardsText'; moreItemsCount &gt; 0 ? {_count: moreItemsCount} : null"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<style>
				<height value="30px"/>
				<width value="100%"/>
				<hitTest value="false"/>
			</style>
		</block>
	</block>
	<block className="GiftboxTooltip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="GiftBoxRewardsHeader">
			<block type="text">
				<styleClass value="$InfoBlockHorizontalIndentNoWidth"/>
				<style>
					<marginTop value="8px"/>
					<marginLeft value="12px"/>
					<marginBottom value="8px"/>
				</style>
				<styleClass value="$TextHeader"/>
				<bind name="text" value="'IDS_GIFTS_EARNED_AVAILABLE_INFO'"/>
			</block>
		</block>
		<bind name="var" value="{sliceRewards: true}"/>
		<block className="GiftboxRewardsContent">
			<style>
				<width value="430px"/>
			</style>
			<bind name="collectionDH" value="CC.rewardComponent; 'rewardsCollectionFull'; 'rewards.sorted'"/>
			<bind name="slice" value="'rewardsCollection'; DES_rewardsCollectionFull; 0; 18"/>
			<bind name="watch" value="'moreItemsCount'; rewardsCollectionFull.length - rewardsCollection.length"/>
			<bind name="name" value="'GiftboxRewardsWindow'"/>
			<block>
				<styleClass value="$InfoBlockHorizontalIndentNoWidth"/>
				<bind name="visible" value="rewardsCollectionFull.length &gt; 0"/>
				<style>
					<flow value="htile"/>
					<marginTop value="14px"/>
					<marginBottom value="18px"/>
					<width value="410px"/>
				</style>
				<bind name="repeat" value="sliceRewards ? rewardsCollection : rewardsCollectionFull; 'RewardItemEntity'"/>
			</block>
			<block>
				<bind name="visible" value="sliceRewards &amp;&amp; moreItemsCount &gt; 0"/>
				<style>
					<marginTop value="-13px"/>
					<marginBottom value="6px"/>
				</style>
				<bind name="instance" value="'MoreRewardsText'; moreItemsCount &gt; 0 ? {_count: moreItemsCount} : null"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'MouseInstruction'; {_type: 'left', _instructionText: 'IDS_GIFTBOX_INSTRUCTION', _maxWidth: 425}"/>
		</block>
	</block>
	<block className="GiftBoxRewardsHeader">
		<block type="text">
			<styleClass value="$InfoBlockHorizontalIndentNoWidth"/>
			<style>
				<marginTop value="8px"/>
				<marginLeft value="12px"/>
				<marginBottom value="8px"/>
			</style>
			<styleClass value="$TextHeader"/>
			<bind name="text" value="'IDS_GIFTS_EARNED_AVAILABLE_INFO'"/>
		</block>
	</block>
	<block className="GiftboxRewardsContent">
		<style>
			<width value="430px"/>
		</style>
		<bind name="collectionDH" value="CC.rewardComponent; 'rewardsCollectionFull'; 'rewards.sorted'"/>
		<bind name="slice" value="'rewardsCollection'; DES_rewardsCollectionFull; 0; 18"/>
		<bind name="watch" value="'moreItemsCount'; rewardsCollectionFull.length - rewardsCollection.length"/>
		<bind name="name" value="'GiftboxRewardsWindow'"/>
		<block>
			<styleClass value="$InfoBlockHorizontalIndentNoWidth"/>
			<bind name="visible" value="rewardsCollectionFull.length &gt; 0"/>
			<style>
				<flow value="htile"/>
				<marginTop value="14px"/>
				<marginBottom value="18px"/>
				<width value="410px"/>
			</style>
			<bind name="repeat" value="sliceRewards ? rewardsCollection : rewardsCollectionFull; 'RewardItemEntity'"/>
		</block>
		<block>
			<bind name="visible" value="sliceRewards &amp;&amp; moreItemsCount &gt; 0"/>
			<style>
				<marginTop value="-13px"/>
				<marginBottom value="6px"/>
			</style>
			<bind name="instance" value="'MoreRewardsText'; moreItemsCount &gt; 0 ? {_count: moreItemsCount} : null"/>
		</block>
	</block>
	<block className="MoreRewardsText">
		<block type="text">
			<style>
				<marginLeft value="12px"/>
			</style>
			<styleClass value="$TextDefault"/>
			<bind name="text" value="subst('IDS_AND_MORE_REWARDS_COUNT', [], {count: _count}, _count)"/>
		</block>
	</block>
	<block className="RewardItemEntity">
		<bind name="instance" value="'RewardItem'; $dataRef.ref.rewardComponent"/>
	</block>
	<css name="$DefaultInboxSize">
		<width value="264px"/>
		<height value="350px"/>
	</css>
	<block className="ResizableNotificationsInfotip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<styleClass value="$DefaultInboxSize"/>
		<style>
			<userData value="{
			minResizeHeight: 240
		}"/>
		</style>
		<bind name="resize" value="'grip';'up';null; 'notificationsInboxHeight'"/>
		<block className="NotificationsInfotip">
			<bind name="var" value="{inset: 0}"/>
			<bind name="catch" value="'changeNotificationsInset'"/>
			<styleClass value="$VerticalInfotipBehaviourCenter"/>
			<styleClass value="$Fullsize"/>
			<block>
				<styleClass value="$Fullsize"/>
				<style>
					<position value="absolute"/>
					<marginBottom value="11px"/>
				</style>
				<block className="DeclareBlurLayer">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="transparentPixel" type="native">
						<bind name="blurLayer" value="0"/>
					</block>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block className="BlurMapCustom">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap3" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
			</block>
			<block className="dock_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<marginBottom value="-6px"/>
					<marginTop value="-9px"/>
					<marginRight value="-14px"/>
					<marginLeft value="-14px"/>
				</style>
			</block>
			<block>
				<styleClass value="$Fullsize"/>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block className="tab_bar_bg" type="native">
						<styleClass value="$Fullsize"/>
						<style>
							<height value="25px"/>
							<marginTop value="6px"/>
							<marginBottom value="6px"/>
						</style>
						<block>
							<style>
								<marginLeft value="2px"/>
								<marginRight value="2px"/>
							</style>
							<block>
								<bind name="name" value="'NotificationTabBattles'"/>
								<block className="MainTabSmall">
									<block className="tab_bar_item_small" type="native">
										<bind name="name" value="'DockSubMenuItemSmall' + 0"/>
										<style>
											<width value="129"/>
											<height value="25px"/>
										</style>
										<bind name="selected" value="inset == 0"/>
										<bind name="dispatch" value="'buttonClick'; 'changeNotificationsInset'; { inset: 0, _searchState: 0 }"/>
										<bind name="label" value="toUpperCase(tr('IDS_BATTLES'))"/>
									</block>
									<bind name="tooltip" value="'SimpleTooltip';{tooltipText: 'IDS_TOOLTIP_BATTLE_MESSAGES'}"/>
								</block>
							</block>
							<block>
								<block className="divider_v" type="native">
									<style>
										<height value="21px"/>
										<marginTop value="2px"/>
									</style>
								</block>
							</block>
							<block>
								<bind name="name" value="'NotificationTabOther'"/>
								<block className="MainTabSmall">
									<block className="tab_bar_item_small" type="native">
										<bind name="name" value="'DockSubMenuItemSmall' + 1"/>
										<style>
											<width value="128"/>
											<height value="25px"/>
										</style>
										<bind name="selected" value="inset == 1"/>
										<bind name="dispatch" value="'buttonClick'; 'changeNotificationsInset'; { inset: 1, _searchState: 0 }"/>
										<bind name="label" value="toUpperCase(tr('IDS_NOTIFICATIONS'))"/>
									</block>
									<bind name="tooltip" value="'SimpleTooltip';{tooltipText: 'IDS_TOOLTIP_OTHER_MESSAGES'}"/>
								</block>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
					</block>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
				<block>
					<styleClass value="$Fullsize"/>
					<bind name="child" value="inset; { dockGoToBattleMethod: dockGoToBattleMethod, dockSelectedBattleType: dockSelectedBattleType }; 'NotificationsBattle'; 'NotificationsOther'"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="dock_panel_pin" type="native">
					<bind name="gotoAndStop!" value="'down'"/>
					<style>
						<right value="8px"/>
						<marginBottom value="3px"/>
						<alpha value="0.5"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<width value="100%"/>
				<backgroundColor value="0x01000000"/>
			</style>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_VERTICAL_OVER'"/>
			<params>
				<param name="name" value="grip"/>
			</params>
			<block className="button_gripper_horizontal" type="native">
				<styleClass value="$MiddleAligned"/>
			</block>
		</block>
	</block>
	<block className="NotificationsInfotip">
		<bind name="var" value="{inset: 0}"/>
		<bind name="catch" value="'changeNotificationsInset'"/>
		<styleClass value="$VerticalInfotipBehaviourCenter"/>
		<styleClass value="$Fullsize"/>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
				<marginBottom value="11px"/>
			</style>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap3" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
		</block>
		<block className="dock_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginBottom value="-6px"/>
				<marginTop value="-9px"/>
				<marginRight value="-14px"/>
				<marginLeft value="-14px"/>
			</style>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="tab_bar_bg" type="native">
					<styleClass value="$Fullsize"/>
					<style>
						<height value="25px"/>
						<marginTop value="6px"/>
						<marginBottom value="6px"/>
					</style>
					<block>
						<style>
							<marginLeft value="2px"/>
							<marginRight value="2px"/>
						</style>
						<block>
							<bind name="name" value="'NotificationTabBattles'"/>
							<block className="MainTabSmall">
								<block className="tab_bar_item_small" type="native">
									<bind name="name" value="'DockSubMenuItemSmall' + 0"/>
									<style>
										<width value="129"/>
										<height value="25px"/>
									</style>
									<bind name="selected" value="inset == 0"/>
									<bind name="dispatch" value="'buttonClick'; 'changeNotificationsInset'; { inset: 0, _searchState: 0 }"/>
									<bind name="label" value="toUpperCase(tr('IDS_BATTLES'))"/>
								</block>
								<bind name="tooltip" value="'SimpleTooltip';{tooltipText: 'IDS_TOOLTIP_BATTLE_MESSAGES'}"/>
							</block>
						</block>
						<block>
							<block className="divider_v" type="native">
								<style>
									<height value="21px"/>
									<marginTop value="2px"/>
								</style>
							</block>
						</block>
						<block>
							<bind name="name" value="'NotificationTabOther'"/>
							<block className="MainTabSmall">
								<block className="tab_bar_item_small" type="native">
									<bind name="name" value="'DockSubMenuItemSmall' + 1"/>
									<style>
										<width value="128"/>
										<height value="25px"/>
									</style>
									<bind name="selected" value="inset == 1"/>
									<bind name="dispatch" value="'buttonClick'; 'changeNotificationsInset'; { inset: 1, _searchState: 0 }"/>
									<bind name="label" value="toUpperCase(tr('IDS_NOTIFICATIONS'))"/>
								</block>
								<bind name="tooltip" value="'SimpleTooltip';{tooltipText: 'IDS_TOOLTIP_OTHER_MESSAGES'}"/>
							</block>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<styleClass value="$Fullsize"/>
				<bind name="child" value="inset; { dockGoToBattleMethod: dockGoToBattleMethod, dockSelectedBattleType: dockSelectedBattleType }; 'NotificationsBattle'; 'NotificationsOther'"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="dock_panel_pin" type="native">
				<bind name="gotoAndStop!" value="'down'"/>
				<style>
					<right value="8px"/>
					<marginBottom value="3px"/>
					<alpha value="0.5"/>
				</style>
			</block>
		</block>
	</block>
	<block className="NotificationsBattle">
		<bind name="collectionDH" value="CC.sysMessage; 'battleResultCollection'; 'battleResults'"/>
		<styleClass value="$Fullsize"/>
		<block>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<styleClass value="$MiddleVAligned"/>
			<bind name="instance" value="'EmptyStatusParagraph'; battleResultCollection.length &gt; 0 ? null : {_text : 'IDS_NO_NEW_SYSTEM_MESSAGES', _maxWidth: '220'}"/>
		</block>
		<block>
			<styleClass value="$DefaultScrollBar"/>
			<style>
				<height value="100%f"/>
				<width value="100%"/>
				<overflow value="scroll"/>
				<marginBottom value="2px"/>
			</style>
			<bind name="repeat" value="battleResultCollection; 'SystemLogNotificationShortElement'; { dockGoToBattleMethod: dockGoToBattleMethod, dockSelectedBattleType: dockSelectedBattleType }; true"/>
		</block>
	</block>
	<block className="NotificationsOther">
		<bind name="collectionDH" value="CC.sysMessage; 'regularNotificationsCollection'; 'regularMessages'"/>
		<styleClass value="$Fullsize"/>
		<block>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<styleClass value="$MiddleVAligned"/>
			<bind name="instance" value="'EmptyStatusParagraph'; regularNotificationsCollection.length &gt; 0 ? null : {_text : 'IDS_NO_NEW_SYSTEM_MESSAGES', _maxWidth: '220'}"/>
		</block>
		<block>
			<styleClass value="$DefaultScrollBar"/>
			<style>
				<height value="100%f"/>
				<width value="100%"/>
				<overflow value="scroll"/>
				<marginBottom value="2px"/>
			</style>
			<bind name="repeat" value="regularNotificationsCollection; 'SystemLogNotificationShortElement'; { dockGoToBattleMethod: dockGoToBattleMethod, dockSelectedBattleType: dockSelectedBattleType }; true"/>
		</block>
	</block>
	<block className="SelectAccountRenderer">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesStats'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'accountLevelInfo'"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'isSyncedWithWallet'; ['resourceEntity.accountResource.evChangedIsSyncedWithWallet']; resourceEntity.accountResource.isSyncedWithWallet"/>
		<bind name="watchDH" value="'walletAvailable'; ['resourceEntity.accountResource.evChangedWalletStatus']; resourceEntity.accountResource.walletStatus"/>
		<bind name="watch" value="'showWGWalletWarning'; ((isSyncedWithWallet == false) || (walletAvailable == false))"/>
		<bind name="watch" value="'playerInfotipItem'; rankedBattlesStats.participated &amp;&amp; !(rankedBattlesSeason.denyReason &amp; RBDeny.NO_SEASON) ? 0 : 1"/>
		<style>
			<width value="260px"/>
			<marginLeft value="15px"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'PlayerInfotipItemAccount'; {}"/>
		</block>
		<bind name="firstEntityDH" value="'loginEntity'; CC.loginData"/>
		<bind name="firstEntityDH" value="'AccountSelfEntity'; CC.accountSelf"/>
		<bind name="firstEntityDH" value="'steamLoginEntity'; CC.steamLoginData"/>
		<bind name="watchDH" value="'shouldRedirectOnCompletion'; []; AccountSelfEntity.accountSelf.shouldRedirectOnCompletion"/>
		<bind name="watchDH" value="'isSteamClient'; ['loginEntity.loginData.evUpdate']; loginEntity.loginData.isSteam"/>
		<bind name="watchDH" value="'isExternalPlatformClient'; ['loginEntity.loginData.evUpdate']; loginEntity.loginData.isExternalPlatformClient"/>
		<bind name="watchDH" value="'isWinstoreClient'; ['loginEntity.loginData.evUpdate']; loginEntity.loginData.isWinStore"/>
		<bind name="watchDH" value="'accountCompleted'; ['steamLoginEntity.steamLoginData.evUpdate']; steamLoginEntity.steamLoginData.emailBind"/>
		<bind name="watchDH" value="'isDMMClient'; ['loginEntity.loginData.evUpdate']; loginEntity.loginData.isDMM"/>
		<bind name="watchDH" value="'isPmangKrClient'; ['loginEntity.loginData.evUpdate']; loginEntity.loginData.isPmangKr"/>
		<bind name="watch" value="'externalFeaturesEnabled'; (isSteamClient 		&amp;&amp; realmConstants.accountCompletion.steam) ||
											(isWinstoreClient 	&amp;&amp; realmConstants.accountCompletion.live)"/>
		<bind name="watch" value="'isAccountUncompleted'; externalFeaturesEnabled &amp;&amp; !(accountCompleted) &amp;&amp; !shouldRedirectOnCompletion"/>
		<bind name="collectionDH" value="CC.userTask; 'userTaskCollection'"/>
		<bind name="entityDH" value="'userTaskEntity'; userTaskCollection[0].id"/>
		<bind name="watchDH" value="'currentUserTaskFlag'; ['userTaskEntity.userTask.evFlagChanged']; userTaskEntity.userTask.flag"/>
		<block>
			<bind name="visible" value="isAccountUncompleted"/>
			<bind name="tooltip" value="'AccountCompletionRewardTooltip'; {	tooltipText: 'IDS_ACCOUNT_COMPLETION_TOOLTIP_SUBTEXT' }"/>
			<bind name="name" value="'buttonAccountCompletion'"/>
			<bind name="input"/>
			<bind name="instance" value="'AccountInfotipItem'; { _text: toUpperCase(tr('IDS_FINISH_ACCOUNT_COMPLETION')),
												_icon: 'account_checkin',
												_external: false,
												_logItemName: 'AccountCheckin',
												_isGolden: true,
												_markerNewVisible: isAccountUncompleted }"/>
		</block>
		<block>
			<bind name="visible" value="accountLevelInfo.accountLevel &gt;= 5"/>
			<block>
				<bind name="input"/>
				<bind name="request" value="'click'; 'buttonShowPremiumPeriods'"/>
				<bind name="style" value="'alpha'; showWGWalletWarning ? 0.5 : 1"/>
				<bind name="tooltip" value="'ButtonAccountTooltip'; { _extendedTooltip: true }"/>
				<bind name="action" value="'click'; 'ServerUIDataUSS.setUserTaskExecuted'; { taskId: UserTasksFlags.KNOWS_ABOUT_WOWS_PREM }"/>
				<block>
					<bind name="instance" value="'AccountInfotipItem'; { _text: 'IDS_BUY_PREMIUM_ACCOUNT',
														_icon: 'premium',
														_external: false,
														_logItemName: 'Premium',
														_isGolden: true,
														_markerNewVisible: (currentUserTaskFlag &amp; UserTasksFlags.KNOWS_ABOUT_WOWS_PREM) == 0 }"/>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="instance" value="'WGWalletServiceStatus'; showWGWalletWarning ? { _walletAvailable: walletAvailable, _isSyncedWithWallet: isSyncedWithWallet } : null"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="realmConstants.inviteRefferalFriendUIAvailable &amp;&amp; (accountLevelInfo.accountLevel &gt;= 3) &amp;&amp; (isDMMClient != true)"/>
			<bind name="name" value="'buttonPlaytogether'"/>
			<bind name="request" value="'click'; 'webBrowser'; {url: URL.PLAYTOGETHER_IN_GAME}"/>
			<bind name="action" value="'click'; 'ServerUIDataUSS.setUserTaskExecuted'; { taskId: UserTasksFlags.CONTROL_SEEN_PLAYTOGETHER }"/>
			<bind name="tooltip" value="'MouseInstructionTooltip'; { _multiParagraphArray: [{_paragraphText: 'IDS_HINT_INVITE_FRIEND'}], _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_INVITE_FRIEND'}]}"/>
			<bind name="instance" value="'AccountInfotipItem'; { _text: toUpperCase(tr('IDS_INVITE_FRIEND')),
												_icon: 'invite_friend',
												_external: false,
												_logItemName: 'InviteFriend',
												_markerNewVisible: (currentUserTaskFlag &amp; UserTasksFlags.CONTROL_SEEN_PLAYTOGETHER) == 0 }"/>
			<bind name="var" value="{inviteGuidingTipId : SC.Context_guiding_tip.TIP_TYPES.INVITE_USER_MENU_INVITE_BTN}"/>
			<bind name="dispatch" value="'click'; 'ContextGuidingTipComplete'; {_eventTooltipID: inviteGuidingTipId}; SC.Common.UBSCOPE_EVENT_DIRECTIONS.DOWN"/>
			<bind name="dispatch" value="'Tooltip.selfOpened'; 'ContextGuidingReasonOpen'; {_eventTooltipID: inviteGuidingTipId}; SC.Common.UBSCOPE_EVENT_DIRECTIONS.DOWN"/>
			<bind name="dispatch" value="'Tooltip.selfClosed'; 'ContextGuidingReasonClose'; {_eventTooltipID: inviteGuidingTipId}; SC.Common.UBSCOPE_EVENT_DIRECTIONS.DOWN"/>
			<bind name="instance" value="'ContextGuidingTipHub'; {
												_tooltipID: inviteGuidingTipId,
												_tipPositioning: 'right', 
												_extraCondition: true, 
												_offset: -3, 
												_screenOffset : 0, 
												_hideOnReasonClick: true,
												_customOnStageEvent: true,
												}"/>
		</block>
		<block>
			<bind name="feature" value="27; ''"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'accountLevelInfo'"/>
			<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
			<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
			<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
			<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
			<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; selfPlayerEntity.clanman.clanId"/>
			<bind name="watchDH" value="'clanTag'; ['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
			<bind name="watchDH" value="'clanName'; ['clanEntity.clanExtended.evNameChanged']; clanEntity.clanExtended.name"/>
			<bind name="visible" value="!(selfPlayerEntity.clanman) &amp;&amp; (feature_27 == 'locked')"/>
			<bind name="request" value="'click'; 'WebBrowserFull'; {url: 'clansInGame'}"/>
			<bind name="tooltip" value="'MouseInstructionTooltip'; { _multiParagraphArray: [{_paragraphText: 'IDS_HINT_CLANS'}], _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_GO_TO_CLANS'}]}"/>
			<block>
				<bind name="instance" value="'AccountInfotipItem'; { _text: toUpperCase(tr('IDS_CLANS')), _icon: 'clans', _external: false, _logItemName: 'Clans' }"/>
			</block>
		</block>
		<block>
			<bind name="feature" value="23; 'click'"/>
			<bind name="visible" value="feature_23 != 'locked'"/>
			<bind name="name" value="'buttonWarehouse'"/>
			<bind name="request" value="'click'; 'webBrowser'; {url: URL.WAREHOUSE_IN_GAME}"/>
			<bind name="tooltip" value="'MouseInstructionTooltip'; { _multiParagraphArray: [{_paragraphText: 'IDS_HINT_WAREHOUSE'}], _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_GO_TO_WAREHOUSE'}]}"/>
			<block>
				<bind name="instance" value="'AccountInfotipItem'; { _text: toUpperCase(tr('IDS_WAREHOUSE')),
													_icon: 'warehouse',
													_external: false,
													_logItemName: 'Warehouse',
													_markerNewVisible: (feature_23 == 'new') }"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="realmConstants.newsUIAvailable &amp;&amp; (accountLevelInfo.accountLevel &gt; 1)"/>
			<bind name="name" value="buttonNewsBrowser"/>
			<bind name="instance" value="'AccountButtonNewsBrowser'; realmConstants.newsUIAvailable ? {} : null"/>
		</block>
		<block>
			<bind name="visible" value="accountSelfEntity.accountSelf.replaysAvailable"/>
			<bind name="firstEntityDH" value="'accountSelfEntity'; CC.accountSelf"/>
			<bind name="request" value="'click'; 'showReplaysWindow'"/>
			<bind name="tooltip" value="'MouseInstructionTooltip'; { _multiParagraphArray: [{_paragraphText: 'IDS_HINT_REPLAYS'}], _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_GO_TO_REPLAYS'}]}"/>
			<bind name="instance" value="'AccountInfotipItem'; { _text: toUpperCase(tr('IDS_REPLAYS')), _icon: 'replays', _external: false}"/>
		</block>
	</block>
	<block className="PlayerInfotipItemAccount">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'accountLevelInfo'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesStats'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'isPremiumAccount';	['resourceEntity.accountResource.evChangedPrem'];	resourceEntity.accountResource.isPremium"/>
		<bind name="collectionDH" value="CC.dogTagComponentNew; 'dogTagCollectionNew'"/>
		<bind name="watch" value="'showSticker'; dogTagCollectionNew.length &gt; 0"/>
		<style>
			<width value="100%"/>
			<height value="92px"/>
		</style>
		<block className="dock_submenu_item" type="native">
			<bind name="watch" value="'isAbuseStatusConfirmed'; accountLevelInfo.abuseStatus &gt; 0"/>
			<bind name="tooltip" value="'AbuseStatusProfileTooltip'; !isAbuseStatusConfirmed ? 	null :	{_mouseInstructionText: 'IDS_GO_TO_PROFILE_ACCOUNT_MOUSE_INSTRUCTION'}"/>
			<bind name="tooltip" value="'MouseInstructionTooltip';	 isAbuseStatusConfirmed ? 	null :	{ _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_GO_TO_PROFILE_ACCOUNT_MOUSE_INSTRUCTION'}], _maxWidth: 250}"/>
			<bind name="action" value="'buttonClick'; 'changeInset'; {	inset: LobbyConstants.PLAYER_PROFILE,
														page: LobbyConstants.PLAYER_PROFILE_ACCOUNT,
														pageData: { isPortBannerClicked: false}
													}"/>
			<bind name="dispatch" value="'buttonClick'; 'Tooltip.Close'; {}"/>
			<params>
				<param name="soundSet" value="dropmenu_button"/>
			</params>
			<style>
				<width value="100%"/>
				<height value="100%"/>
				<position value="absolute"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<margin value="8px"/>
			</style>
			<bind name="instance" value="'PlayerStereotypeDogTag';	{_playerDbId: selfPlayerDbId,
													_abuseStatus: accountLevelInfo.abuseStatus,
													_isWithKarma: true,
													_isPlayerNameDisable: true,
													_isAccountButton: true,
													_isPremiumAccount: isPremiumAccount,
													_hitTest: true
													}"/>
		</block>
		<block className="divider_h" type="native">
			<style>
				<width value="100%"/>
				<bottom value="-2px"/>
				<position value="absolute"/>
				<hitTest value="false"/>
			</style>
		</block>
	</block>
	<block className="AccountInfotip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<block>
			<style>
				<position value="absolute"/>
				<width value="100%"/>
				<height value="100%"/>
				<marginLeft value="13px"/>
				<marginRight value="13px"/>
				<marginBottom value="18px"/>
				<marginTop value="9px"/>
			</style>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
		</block>
		<block>
			<block className="dock_panel" type="native">
				<style>
					<width value="290px"/>
				</style>
				<block className="dock_panel_pin" type="native">
					<style>
						<position value="absolute"/>
						<top value="0px"/>
						<left value="47%"/>
					</style>
				</block>
				<block>
					<style>
						<marginTop value="10px"/>
						<marginBottom value="18px"/>
						<width value="100%"/>
					</style>
					<block className="SelectAccountRenderer">
						<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesStats'"/>
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'accountLevelInfo'"/>
						<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
						<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
						<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
						<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
						<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
						<bind name="watchDH" value="'isSyncedWithWallet'; ['resourceEntity.accountResource.evChangedIsSyncedWithWallet']; resourceEntity.accountResource.isSyncedWithWallet"/>
						<bind name="watchDH" value="'walletAvailable'; ['resourceEntity.accountResource.evChangedWalletStatus']; resourceEntity.accountResource.walletStatus"/>
						<bind name="watch" value="'showWGWalletWarning'; ((isSyncedWithWallet == false) || (walletAvailable == false))"/>
						<bind name="watch" value="'playerInfotipItem'; rankedBattlesStats.participated &amp;&amp; !(rankedBattlesSeason.denyReason &amp; RBDeny.NO_SEASON) ? 0 : 1"/>
						<style>
							<width value="260px"/>
							<marginLeft value="15px"/>
						</style>
						<block>
							<style>
								<width value="100%"/>
							</style>
							<bind name="instance" value="'PlayerInfotipItemAccount'; {}"/>
						</block>
						<bind name="firstEntityDH" value="'loginEntity'; CC.loginData"/>
						<bind name="firstEntityDH" value="'AccountSelfEntity'; CC.accountSelf"/>
						<bind name="firstEntityDH" value="'steamLoginEntity'; CC.steamLoginData"/>
						<bind name="watchDH" value="'shouldRedirectOnCompletion'; []; AccountSelfEntity.accountSelf.shouldRedirectOnCompletion"/>
						<bind name="watchDH" value="'isSteamClient'; ['loginEntity.loginData.evUpdate']; loginEntity.loginData.isSteam"/>
						<bind name="watchDH" value="'isExternalPlatformClient'; ['loginEntity.loginData.evUpdate']; loginEntity.loginData.isExternalPlatformClient"/>
						<bind name="watchDH" value="'isWinstoreClient'; ['loginEntity.loginData.evUpdate']; loginEntity.loginData.isWinStore"/>
						<bind name="watchDH" value="'accountCompleted'; ['steamLoginEntity.steamLoginData.evUpdate']; steamLoginEntity.steamLoginData.emailBind"/>
						<bind name="watchDH" value="'isDMMClient'; ['loginEntity.loginData.evUpdate']; loginEntity.loginData.isDMM"/>
						<bind name="watchDH" value="'isPmangKrClient'; ['loginEntity.loginData.evUpdate']; loginEntity.loginData.isPmangKr"/>
						<bind name="watch" value="'externalFeaturesEnabled'; (isSteamClient 		&amp;&amp; realmConstants.accountCompletion.steam) ||
											(isWinstoreClient 	&amp;&amp; realmConstants.accountCompletion.live)"/>
						<bind name="watch" value="'isAccountUncompleted'; externalFeaturesEnabled &amp;&amp; !(accountCompleted) &amp;&amp; !shouldRedirectOnCompletion"/>
						<bind name="collectionDH" value="CC.userTask; 'userTaskCollection'"/>
						<bind name="entityDH" value="'userTaskEntity'; userTaskCollection[0].id"/>
						<bind name="watchDH" value="'currentUserTaskFlag'; ['userTaskEntity.userTask.evFlagChanged']; userTaskEntity.userTask.flag"/>
						<block>
							<bind name="visible" value="isAccountUncompleted"/>
							<bind name="tooltip" value="'AccountCompletionRewardTooltip'; {	tooltipText: 'IDS_ACCOUNT_COMPLETION_TOOLTIP_SUBTEXT' }"/>
							<bind name="name" value="'buttonAccountCompletion'"/>
							<bind name="input"/>
							<bind name="instance" value="'AccountInfotipItem'; { _text: toUpperCase(tr('IDS_FINISH_ACCOUNT_COMPLETION')),
												_icon: 'account_checkin',
												_external: false,
												_logItemName: 'AccountCheckin',
												_isGolden: true,
												_markerNewVisible: isAccountUncompleted }"/>
						</block>
						<block>
							<bind name="visible" value="accountLevelInfo.accountLevel &gt;= 5"/>
							<block>
								<bind name="input"/>
								<bind name="request" value="'click'; 'buttonShowPremiumPeriods'"/>
								<bind name="style" value="'alpha'; showWGWalletWarning ? 0.5 : 1"/>
								<bind name="tooltip" value="'ButtonAccountTooltip'; { _extendedTooltip: true }"/>
								<bind name="action" value="'click'; 'ServerUIDataUSS.setUserTaskExecuted'; { taskId: UserTasksFlags.KNOWS_ABOUT_WOWS_PREM }"/>
								<block>
									<bind name="instance" value="'AccountInfotipItem'; { _text: 'IDS_BUY_PREMIUM_ACCOUNT',
														_icon: 'premium',
														_external: false,
														_logItemName: 'Premium',
														_isGolden: true,
														_markerNewVisible: (currentUserTaskFlag &amp; UserTasksFlags.KNOWS_ABOUT_WOWS_PREM) == 0 }"/>
								</block>
							</block>
							<block>
								<styleClass value="$FullsizeAbsolute"/>
								<bind name="instance" value="'WGWalletServiceStatus'; showWGWalletWarning ? { _walletAvailable: walletAvailable, _isSyncedWithWallet: isSyncedWithWallet } : null"/>
							</block>
						</block>
						<block>
							<bind name="visible" value="realmConstants.inviteRefferalFriendUIAvailable &amp;&amp; (accountLevelInfo.accountLevel &gt;= 3) &amp;&amp; (isDMMClient != true)"/>
							<bind name="name" value="'buttonPlaytogether'"/>
							<bind name="request" value="'click'; 'webBrowser'; {url: URL.PLAYTOGETHER_IN_GAME}"/>
							<bind name="action" value="'click'; 'ServerUIDataUSS.setUserTaskExecuted'; { taskId: UserTasksFlags.CONTROL_SEEN_PLAYTOGETHER }"/>
							<bind name="tooltip" value="'MouseInstructionTooltip'; { _multiParagraphArray: [{_paragraphText: 'IDS_HINT_INVITE_FRIEND'}], _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_INVITE_FRIEND'}]}"/>
							<bind name="instance" value="'AccountInfotipItem'; { _text: toUpperCase(tr('IDS_INVITE_FRIEND')),
												_icon: 'invite_friend',
												_external: false,
												_logItemName: 'InviteFriend',
												_markerNewVisible: (currentUserTaskFlag &amp; UserTasksFlags.CONTROL_SEEN_PLAYTOGETHER) == 0 }"/>
							<bind name="var" value="{inviteGuidingTipId : SC.Context_guiding_tip.TIP_TYPES.INVITE_USER_MENU_INVITE_BTN}"/>
							<bind name="dispatch" value="'click'; 'ContextGuidingTipComplete'; {_eventTooltipID: inviteGuidingTipId}; SC.Common.UBSCOPE_EVENT_DIRECTIONS.DOWN"/>
							<bind name="dispatch" value="'Tooltip.selfOpened'; 'ContextGuidingReasonOpen'; {_eventTooltipID: inviteGuidingTipId}; SC.Common.UBSCOPE_EVENT_DIRECTIONS.DOWN"/>
							<bind name="dispatch" value="'Tooltip.selfClosed'; 'ContextGuidingReasonClose'; {_eventTooltipID: inviteGuidingTipId}; SC.Common.UBSCOPE_EVENT_DIRECTIONS.DOWN"/>
							<bind name="instance" value="'ContextGuidingTipHub'; {
												_tooltipID: inviteGuidingTipId,
												_tipPositioning: 'right', 
												_extraCondition: true, 
												_offset: -3, 
												_screenOffset : 0, 
												_hideOnReasonClick: true,
												_customOnStageEvent: true,
												}"/>
						</block>
						<block>
							<bind name="feature" value="27; ''"/>
							<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'accountLevelInfo'"/>
							<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
							<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
							<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
							<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
							<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; selfPlayerEntity.clanman.clanId"/>
							<bind name="watchDH" value="'clanTag'; ['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
							<bind name="watchDH" value="'clanName'; ['clanEntity.clanExtended.evNameChanged']; clanEntity.clanExtended.name"/>
							<bind name="visible" value="!(selfPlayerEntity.clanman) &amp;&amp; (feature_27 == 'locked')"/>
							<bind name="request" value="'click'; 'WebBrowserFull'; {url: 'clansInGame'}"/>
							<bind name="tooltip" value="'MouseInstructionTooltip'; { _multiParagraphArray: [{_paragraphText: 'IDS_HINT_CLANS'}], _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_GO_TO_CLANS'}]}"/>
							<block>
								<bind name="instance" value="'AccountInfotipItem'; { _text: toUpperCase(tr('IDS_CLANS')), _icon: 'clans', _external: false, _logItemName: 'Clans' }"/>
							</block>
						</block>
						<block>
							<bind name="feature" value="23; 'click'"/>
							<bind name="visible" value="feature_23 != 'locked'"/>
							<bind name="name" value="'buttonWarehouse'"/>
							<bind name="request" value="'click'; 'webBrowser'; {url: URL.WAREHOUSE_IN_GAME}"/>
							<bind name="tooltip" value="'MouseInstructionTooltip'; { _multiParagraphArray: [{_paragraphText: 'IDS_HINT_WAREHOUSE'}], _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_GO_TO_WAREHOUSE'}]}"/>
							<block>
								<bind name="instance" value="'AccountInfotipItem'; { _text: toUpperCase(tr('IDS_WAREHOUSE')),
													_icon: 'warehouse',
													_external: false,
													_logItemName: 'Warehouse',
													_markerNewVisible: (feature_23 == 'new') }"/>
							</block>
						</block>
						<block>
							<bind name="visible" value="realmConstants.newsUIAvailable &amp;&amp; (accountLevelInfo.accountLevel &gt; 1)"/>
							<bind name="name" value="buttonNewsBrowser"/>
							<bind name="instance" value="'AccountButtonNewsBrowser'; realmConstants.newsUIAvailable ? {} : null"/>
						</block>
						<block>
							<bind name="visible" value="accountSelfEntity.accountSelf.replaysAvailable"/>
							<bind name="firstEntityDH" value="'accountSelfEntity'; CC.accountSelf"/>
							<bind name="request" value="'click'; 'showReplaysWindow'"/>
							<bind name="tooltip" value="'MouseInstructionTooltip'; { _multiParagraphArray: [{_paragraphText: 'IDS_HINT_REPLAYS'}], _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_GO_TO_REPLAYS'}]}"/>
							<bind name="instance" value="'AccountInfotipItem'; { _text: toUpperCase(tr('IDS_REPLAYS')), _icon: 'replays', _external: false}"/>
						</block>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="ShipTitleWithIconAndLevelWithDenyReason">
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; _shipID ? _shipID : shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="watchDH" value="'upgradableShipInfo'; ['shipEntity.upgradableShipInfo.evUpdate']; shipEntity.upgradableShipInfo"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<block>
			<bind name="visible" value="isReady"/>
			<block>
				<style>
					<marginBottom value="6px"/>
				</style>
				<block className="icon_wreath" type="native">
					<styleClass value="$MouseDisable"/>
					<style>
						<position value="absolute"/>
						<top value="1px"/>
					</style>
					<bind name="visible" value="upgradableShipInfo.isElite || shipInfo.isPremium || shipInfo.uiSpecial"/>
					<bind name="gotoAndStop!" value="(shipInfo.isPremium || shipInfo.uiSpecial) 	? 'premium' : 'elite'"/>
				</block>
				<block className="icon_ship" type="native">
					<bind name="style" value="'marginLeft'; upgradableShipInfo.isElite || shipInfo.isPremium || shipInfo.uiSpecial ? 5 : 2"/>
					<styleClass value="$MouseDisable"/>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<marginLeft value="6px"/>
					</style>
					<bind name="gotoAndStop!" value="shipInfo.isPremium || shipInfo.uiSpecial 	? shipInfo.subtype + '_P'
																				: shipInfo.subtype"/>
				</block>
				<block>
					<style>
						<marginLeft value="3px"/>
					</style>
					<block type="text">
						<styleClass value="$FontShipnameWhite"/>
						<bind name="class" value="'$LetterSpacingSmall'"/>
						<bind name="class" value="shipInfo.isPremium || shipInfo.uiSpecial	? '$FontShipnameGolden'
																			: '$FontShipnameWhite'"/>
						<bind name="text" value="shipInfo.levelRome + ' ' + toUpperCase(tr(shipInfo.nameIDS))"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="_battleType == BattleTypes.RANKED_BATTLE &amp;&amp; rankedBattlesSeason.denyReason"/>
				<style>
					<width value="100%"/>
					<marginTop value="-6px"/>
					<marginBottom value="6px"/>
				</style>
				<bind name="instance" value="'RankBattleNotAvailableReason'; rankedBattlesSeason.denyReason ? { _maxWidth: 224} : null"/>
			</block>
		</block>
	</block>
	<block className="RankBattleNotAvailableReason">
		<bind name="primaryEntityDH" value="'battleTypeEntity'; CC.battleType; BattleTypes.RANKED_BATTLE"/>
		<bind name="watchDH" value="'battleTypeDenyReasons'; ['battleTypeEntity.battleType.evDisableReasonChanged']; battleTypeEntity.battleType.battleTypeReasons"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<bind name="countdown" value="rankedBattlesSeason.startTime; 'seasonTimeStart'; 'HIGHEST'; ''; 'ACC'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesStats'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'rankedBattlesRanks';  rankedBattlesStats.rank; 'curRankInfo'"/>
		<style>
			<hitTest value="false"/>
		</style>
		<bind name="watch" value="'reasonText'; ((battleTypeDenyReasons[0] == 'IDS_RANK_BATTLES_SEASON_IS_NOT_ACTIVE_SEASON_STARTS_IN')	?	(tr(battleTypeDenyReasons[0]) + ' ' + seasonTimeStart)
																														:	battleTypeDenyReasons[0])"/>
		<bind name="instance" value="'BattletypeDenyReason'; (battleTypeDenyReasons.length &gt; 0)	? { _neutral: false,
																					_reasonText: reasonText,
																					_maxWidth: _maxWidth}
																				: { _neutral: true,
																					_reasonText: curRankInfo.allowedTheirsShipsDescription,
																					_maxWidth: _maxWidth}"/>
	</block>
	<block className="AccountButtonNewsBrowser">
		<bind name="request" value="'click'; 'webBrowser'; {url: URL.NEWS_IN_GAME}"/>
		<bind name="tooltip" value="'MouseInstructionTooltip'; { _multiParagraphArray: [{_paragraphText: 'IDS_HINT_NEWS_TOOLTIP_EXTENDED'}], _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_GO_TO_NEWS_TOOLTIP'}]}"/>
		<block>
			<bind name="instance" value="'AccountInfotipItem'; { _text: toUpperCase(tr('IDS_NEWS')),
												_icon: 'news',
												_external: false,
												_logItemName: 'News',
												_newMarkerType: SC.Common.CONTENT_CATEGORY.NEWS }"/>
		</block>
	</block>
	<block className="IconRankSmall">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<bind name="watch" value="'isSeasonJunior'; _seasonId &gt; 0 ? _seasonId &lt; 100 : (rankedBattlesSeason.isJuniorSeason != true)"/>
		<block>
			<style>
				<width value="28px"/>
				<height value="28px"/>
			</style>
			<bind name="style" value="'backgroundImage'; (isSeasonJunior &gt; 0) 	? 'url:../ranks/senior_season/icon_rank_small_' + _rankId + '.png'
																: 'url:../ranks/junior_season/icon_rank_small_' + _rankId + '.png'"/>
		</block>
	</block>
	<block className="RankStars">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesStats'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'rankedBattlesRanks'; _rankId; 'rankInfo'"/>
		<bind name="tooltip" value="'RankStarTooltip'; !(rankInfo.starLossPlace == 0 &amp;&amp; rankInfo.starEarnPlace == 0) ? {_rankId: _rankId} : null"/>
		<style>
			<flow value="htile"/>
			<align value="center"/>
		</style>
		<bind name="style" value="'width'; _noWidth ? 'auto' : '100%'"/>
		<bind name="repeat" value="rankInfo.starsToNext; (_size ? 'RankStarIconSmall' : 'RankStarIcon'); {_starState: (rankedBattlesStats.rank &lt; rankInfo.id)	? 'earned'
																																				: (rankedBattlesStats.rank &gt; rankInfo.id)	? 'not_earned'
																																															: 'unknown', _size: _size}"/>
	</block>
	<block className="TotalEarnedStars">
		<style>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
				<flow value="htile"/>
				<align value="center"/>
			</style>
			<bind name="repeat" value="_starsCount; 'RankStarIconSmall'; {_starState: 'earned'}"/>
		</block>
	</block>
	<block className="RankStarIcon">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesStats'"/>
		<block className="icon_rank_star" type="native">
			<style>
				<marginLeft value="5px"/>
				<marginRight value="5px"/>
			</style>
			<bind name="gotoAndStop!" value="(_starState != 'unknown')	? _starState
														: ( $index + 1 &lt;= rankedBattlesStats.stars)	? 'earned'
																									: 'not_earned'"/>
		</block>
	</block>
	<block className="RankStarIconSmall">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesStats'"/>
		<block className="icon_rank_star_small" type="native">
			<style>
				<marginLeft value="2px"/>
				<marginRight value="2px"/>
				<marginTop value="1px"/>
				<marginBottom value="1px"/>
			</style>
			<bind name="style" value="'width'; _size == 'small' ? '27px' : 'auto'"/>
			<bind name="style" value="'height'; _size == 'small' ? '27px' : 'auto'"/>
			<bind name="gotoAndStop!" value="(_starState != 'unknown')	? _starState
														: ( $index + 1 &lt;= rankedBattlesStats.stars)	? 'earned'
																									: 'not_earned'"/>
		</block>
	</block>
	<block className="RankStarLostNotice">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'rankedBattlesRanks';  _rankId; 'rankInfo'"/>
		<bind name="visible" value="rankInfo.starLossPlace != 0"/>
		<style>
			<width value="100%"/>
		</style>
		<bind name="watch" value="'additionalCondition'; rankInfo.starLossPlace == 2 ? 'IDS_RANKED_BATTLE_STAR_LOSS_PLACE_CONDITION' :
										rankInfo.starLossPlace &gt; 2	? subst('IDS_RANKED_BATTLE_STAR_LOSS_PLACE_RANGE_CONDITION', [], {starLossPlace: rankInfo.starLossPlace})
																	: null"/>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="icon_star_earn_condition_small" type="native">
				<style>
					<marginLeft value="-2px"/>
				</style>
				<bind name="gotoAndStop!" value="2"/>
			</block>
			<block>
				<style>
					<marginLeft value="6px"/>
					<marginTop value="1px"/>
				</style>
				<block type="text">
					<style>
						<maxWidth value="228"/>
					</style>
					<styleClass value="$TextHeaderBigWhite"/>
					<bind name="text" value="rankInfo.lossCondition"/>
				</block>
				<block type="text">
					<bind name="visible" value="additionalCondition != null"/>
					<style>
						<maxWidth value="228"/>
						<marginTop value="-6px"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="text" value="additionalCondition"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="RankStarEarnCondition">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'rankedBattlesRanks';  _rankId; 'rankInfo'"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="icon_star_earn_condition_small" type="native">
				<style>
					<marginLeft value="-2px"/>
				</style>
				<bind name="gotoAndStop!" value="1"/>
			</block>
			<block>
				<style>
					<marginLeft value="6px"/>
					<marginTop value="1px"/>
				</style>
				<block type="text">
					<style>
						<maxWidth value="228"/>
					</style>
					<styleClass value="$TextHeaderBigWhite"/>
					<bind name="text" value="rankInfo.earnCondition"/>
				</block>
				<block type="text">
					<bind name="visible" value="rankInfo.starLossPlace == 0"/>
					<style>
						<maxWidth value="228"/>
						<marginTop value="-6px"/>
					</style>
					<styleClass value="$TextDefault"/>
					<text value="IDS_YOU_WILL_NOT_LOSE_STAR"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="RankStarTooltip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesStats'"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="300px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<block>
				<style>
					<width value="100%"/>
					<marginBottom value="6px"/>
				</style>
				<bind name="instance" value="'RankStarEarnCondition'; {_rankId: _rankId}"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'RankStarLostNotice'; {_rankId: _rankId}"/>
			</block>
		</block>
	</block>
	<block className="PlayerRankIcon">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'rankedBattlesRanks'; _rankId; 'rankInfo'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<bind name="watch" value="'anchorPlateIcon'; 	rankInfo.id == 1 		? 'top' :
										rankInfo.leagueId == 1 	? 'big' :
										rankInfo.leagueId == 2 	? 'medium':
										rankInfo.leagueId == 3 	? 'normal'
																: 'small'"/>
		<block className="icons_rank_outer" type="native">
			<style>
				<width value="70px"/>
				<height value="70px"/>
			</style>
			<bind name="gotoAndStop!" value="anchorPlateIcon"/>
		</block>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<style>
				<width value="28px"/>
				<height value="28px"/>
				<backgroundSize value="cover"/>
			</style>
			<bind name="style" value="'backgroundImage'; (rankedBattlesSeason.isJuniorSeason != true)  	? 'url:../ranks/senior_season/icon_rank_medium_' + (rankInfo.id) + '.png'
																						: 'url:../ranks/junior_season/icon_rank_medium_' + (rankInfo.id) + '.png'"/>
		</block>
	</block>
	<block className="PlayerRankIconBig">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'rankedBattlesRanks';  _rankId; 'rankInfo'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<bind name="watch" value="'anchorPlateIcon'; 	rankInfo.id == 1 		? 'top' :
										rankInfo.leagueId == 1 	? 'big' :
										rankInfo.leagueId == 2 	? 'medium':
										rankInfo.leagueId == 3 	? 'normal'
																: 'small'"/>
		<block className="icons_rank_outer_big" type="native">
			<style>
				<width value="146px"/>
				<height value="146px"/>
			</style>
			<bind name="gotoAndStop!" value="anchorPlateIcon"/>
			<block>
				<styleClass value="$MiddleAlignedAbsolutely"/>
				<style>
					<top value="45px"/>
					<width value="54px"/>
					<height value="54px"/>
				</style>
				<bind name="style" value="'backgroundImage'; (rankedBattlesSeason.isJuniorSeason != true) 	? 'url:../ranks/senior_season/icon_rank_big_' + (rankInfo.id) + '.png'
																							: 'url:../ranks/junior_season/icon_rank_big_' + (rankInfo.id) + '.png'"/>
			</block>
		</block>
	</block>
	<block className="InformerWindow">
		<styleClass value="$MiddleAligned"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'informer'"/>
		<bind name="instance" value="'InformerMain'; (informer.visible == true) ? {informer: informer} : null"/>
	</block>
	<block className="InformerMain">
		<bind name="appear" value="'addedToStage'; 0.15; 2.0; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
		<bind name="dispatch" value="'addedToStage'; 'timeoutEvent'; null ; false; 30"/>
		<bind name="action" value="'click'; 'hideInformer'; {force: true}"/>
		<bind name="action" value="'timeoutEvent'; 'hideInformer';{}"/>
		<style>
			<minHeight value="80"/>
		</style>
		<bind name="style" value="'width'; informer.type == 0 ?  '400px' : '508px'"/>
		<block className="notification_panel" type="native">
			<bind name="visible" value="informer.type == 0"/>
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
				<marginBottom value="-1px"/>
				<marginTop value="-1px"/>
				<marginRight value="-1px"/>
				<marginLeft value="-1px"/>
			</style>
		</block>
		<block className="informer_panel" type="native">
			<bind name="visible" value="informer.type != 0"/>
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
				<marginBottom value="-1px"/>
				<marginTop value="-1px"/>
				<marginRight value="-1px"/>
				<marginLeft value="-1px"/>
			</style>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="style" value="'backgroundImage'; informer.type == 0	? 'symbol:informer_default_bg' : 'symbol:informer_season_bg'"/>
			<style>
				<backgroundSize value="cover"/>
				<position value="absolute"/>
			</style>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginTop value="9px"/>
				<marginBottom value="9px"/>
			</style>
			<bind name="child" value="informer.type; {informer: informer}; 'InformerHello'; 'InformerRank'; 'InformerSeasonStarted'"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<right value="5px"/>
				<top value="5px"/>
			</style>
			<block className="button_close" type="native">
				<params>
					<param name="focusable" value="false"/>
				</params>
			</block>
		</block>
	</block>
	<block className="InformerRank">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<block>
			<block type="text">
				<style>
					<maxWidth value="490"/>
					<textAlign value="center"/>
				</style>
				<styleClass value="$TextLargeHeader"/>
				<styleClass value="$MiddleAligned"/>
				<bind name="class" value="'$Bold'"/>
				<bind name="text" value="tr('IDS_HELLO') + ' ' + selfPlayerName"/>
			</block>
			<block>
				<bind name="visible" value="rankedBattlesSeason.denyReason &amp; RBDeny.SEASON_NOT_STARTED"/>
				<bind name="countdown" value="rankedBattlesSeason.startTime; 'seasonTimeStart'; 'HIGHEST,WITH_DAYS'; 'timeoutEvent'"/>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<style>
						<maxWidth value="490"/>
						<textAlign value="center"/>
					</style>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$TextLargeHeader"/>
					<bind name="pureText" value="tr('IDS_SEASON_STARTS_IN') + ' ' + seasonTimeStart"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="rankedBattlesSeason.active"/>
				<bind name="countdown" value="rankedBattlesSeason.finishTime; 'seasonTimeEnd'; 'HIGHEST,WITH_DAYS'; 'timeoutEvent'"/>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<style>
						<maxWidth value="490"/>
						<textAlign value="center"/>
					</style>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$TextLargeHeader"/>
					<bind name="pureText" value="tr('IDS_TILL_SEASON_ENDS') + ' ' + seasonTimeEnd"/>
				</block>
			</block>
		</block>
	</block>
	<block className="InformerSeasonStarted">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<style>
					<maxWidth value="490"/>
					<textAlign value="center"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$TextLargeHeader"/>
				<bind name="text" value="informer.data.message"/>
			</block>
		</block>
	</block>
	<block className="InformerHello">
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="15px"/>
			</style>
			<block type="text">
				<style>
					<maxWidth value="390"/>
					<textAlign value="center"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$TextLargeHeader"/>
				<bind name="class" value="'$Bold'"/>
				<bind name="text" value="tr('IDS_HELLO') + ' ' + selfPlayerName"/>
			</block>
		</block>
	</block>
	<block className="NationFlagsBig">
		<style>
			<backgroundStretchY value="true"/>
			<backgroundStretchX value="true"/>
		</style>
		<bind name="style" value="'width'; _width ? _width : '694px' "/>
		<bind name="style" value="'height'; _height ? _height : '426px' "/>
		<bind name="style" value="'alpha'; _alpha ? _alpha : '1' "/>
		<bind name="style" value="'backgroundImage'; 'url:../nation_flags/big/flag_' + shipCountry + '.png'"/>
	</block>
	<block className="NationFlagsSmall">
		<style>
			<backgroundStretchY value="true"/>
			<backgroundStretchX value="true"/>
		</style>
		<bind name="style" value="'width'; _width ? _width : '117px' "/>
		<bind name="style" value="'height'; _height ? _height : '72px' "/>
		<bind name="style" value="'alpha'; _alpha ? _alpha : '1' "/>
		<bind name="style" value="'backgroundImage'; 'url:../nation_flags/small/flag_' + shipCountry + '.png'"/>
	</block>
	<block className="NationFlagsTiny">
		<style>
			<backgroundStretchY value="true"/>
			<backgroundStretchX value="true"/>
		</style>
		<bind name="style" value="'width'; _width ? _width : '33px' "/>
		<bind name="style" value="'height'; _height ? _height : '21px' "/>
		<bind name="style" value="'alpha'; _alpha ? _alpha : '1' "/>
		<bind name="style" value="'backgroundImage'; 'url:../nation_flags/tiny/flag_' + shipCountry + '.png'"/>
	</block>
	<block className="InformerLogNotificationElement">
		<bind name="appear" value="'addedToStage'; 0.2; 0; {alpha: 0, top: 15}; {alpha: 1, top: 0}; 1"/>
		<bind name="appear" value="'evHideMessage'; 0.2; 0; {alpha: 1, top: 0}; {alpha: 0, top: -15}; 1"/>
		<bind name="handleEventDH" value="'$dataRef.ref.show.evHide'; 'evHideMessage'"/>
		<bind name="dispatch" value="'click'; 'evHideMessage'"/>
		<bind name="dispatch" value="'evHideMessage'; 'evDelayedHide'; null; true; 0.15"/>
		<bind name="action" value="'evDelayedHide'; 'hideSystemMessage'; {id: $dataRef.ref.id}"/>
		<bind name="action" value="'removedFromStage'; 'hideSystemMessage'; {id: $dataRef.ref.id}"/>
		<bind name="instance" value="'InformerContainer' ; { data: $dataRef.ref.dataComponent.data.data}"/>
	</block>
	<block className="InformerContainer">
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap5_feather" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="notification_panel" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="child" value="data.idInGroup; {data: data}; 	'InformerClanBattlesPrimetime'; 
													'InformerServerRestart'; 
													'InformerArcEventPrePrimeTime'; 
													'InformerArcEventPrimeTime'; 
													'InformerPremDayLeft';
													'InformerEventPrePrimeTime';
                                                    'InformerEventPrimeTime'"/>
		</block>
	</block>
	<block className="InformerClanBattlesPrimetime">
		<style>
			<flow value="horizontal"/>
			<height value="94px"/>
		</style>
		<bind name="entityDH" value="'primeTimeEntity'; data.messageId"/>
		<bind name="watchDH" value="'primeTimeRealm'; 		['primeTimeEntity.clanBattlePrimeTime.evChanged']; primeTimeEntity.clanBattlePrimeTime.realm"/>
		<bind name="watchDH" value="'primeTimeStartTime'; 	['primeTimeEntity.clanBattlePrimeTime.evChanged']; primeTimeEntity.clanBattlePrimeTime.primeTimeStartTime"/>
		<bind name="watchDH" value="'primeTimeFinishTime'; 	['primeTimeEntity.clanBattlePrimeTime.evChanged']; primeTimeEntity.clanBattlePrimeTime.primeTimeFinishTime"/>
		<bind name="watchDH" value="'primeTimeIsChosen'; 	['primeTimeEntity.clanBattlePrimeTime.evChanged']; primeTimeEntity.clanBattlePrimeTime.isChosen"/>
		<bind name="firstEntityDH" value="'clanCurrentSeasonEntity'; CC.clanBattleSeason; 'current'"/>
		<bind name="watchDH" value="'isBrawl'; ['clanCurrentSeasonEntity.clanBattleSeason.evChanged']; clanCurrentSeasonEntity.clanBattleSeason.isBrawl"/>
		<bind name="watch" value="'suffix'; isBrawl ? '_BRAWL' : ''"/>
		<bind name="countdown" value="primeTimeStartTime; 'startPrimeTimeText'; 'HIGHEST,WITH_DAYS'; 'timeoutEvent'"/>
		<bind name="countdown" value="primeTimeFinishTime; 'finishPrimeTimeText'; 'HIGHEST,WITH_DAYS'; 'timeoutEvent'"/>
		<bind name="timeFormat" value="primeTimeStartTime; 'hh:mm'; 'localStartTime'; true"/>
		<bind name="timeFormat" value="primeTimeFinishTime; 'hh:mm'; 'localFinishTime'; true"/>
		<bind name="watch" value="'message'; data.messageType == 'soon_start' 	? subst('IDS_CLAN_BATTLES_PRIMETIME_STARTS_IN_INFORMER' + suffix, [], {timeLeft: startPrimeTimeText, realm: primeTimeRealm}) :
							data.messageType == 'start'			? subst('IDS_CLAN_BATTLES_PRIMETIME_START_INFORMER' + suffix, [], {startTime: localStartTime, endTime: localFinishTime, realm: primeTimeRealm}) :
							data.messageType == 'soon_end'		? subst('IDS_CLAN_BATTLES_PRIMETIME_ENDS_IN_INFORMER' + suffix, [], {timeLeft: finishPrimeTimeText, realm: primeTimeRealm}):
							data.messageType == 'end'			? subst('IDS_CLAN_BATTLES_PRIMETIME_END_INFORMER' + suffix, [], {startTime: localStartTime, endTime: localFinishTime, realm: primeTimeRealm}) :
							data.messageType == 'chosen'		? subst('IDS_CLAN_BATTLES_PRIMETIME_CHOSEN_INFORMER' + suffix, [], {startTime: localStartTime, endTime: localFinishTime, realm: primeTimeRealm}) :
							data.messageType == 'fixed'			? subst('IDS_CLAN_BATTLES_PRIMETIME_FIXED_INFORMER' + suffix, [], {startTime: localStartTime, endTime: localFinishTime, realm: primeTimeRealm})
																: 'STAGE_UNKNOWN'"/>
		<block>
			<style>
				<height value="100%"/>
				<marginLeft value="8px"/>
			</style>
			<block className="icon_battletypes" type="native">
				<styleClass value="$MiddleVAligned"/>
				<bind name="gotoAndStop!" value="isBrawl	? 'ClanBrawl'
										: 'ClanBattle'"/>
			</block>
		</block>
		<block>
			<style>
				<marginLeft value="8px"/>
				<marginRight value="32px"/>
			</style>
			<styleClass value="$MiddleVAligned"/>
			<block type="text">
				<style>
					<textAlign value="center"/>
					<leading value="-1"/>
					<styleSheet value="h3 {font-size: 25;}"/>
				</style>
				<styleClass value="$TextDefaultBold21NM"/>
				<bind name="text" value="message"/>
			</block>
		</block>
		<block className="button_close" type="native">
			<style>
				<position value="absolute"/>
				<right value="12px"/>
				<top value="11px"/>
			</style>
			<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_CLOSE'}"/>
		</block>
	</block>
	<block className="InformerClubBattlesPrimetime">
		<style>
			<flow value="horizontal"/>
			<height value="94px"/>
		</style>
		<bind name="timeFormat" value="data.timeToPrimeTime; 'HIGHEST'; 'timeToPrimeTime'; true"/>
		<bind name="watch" value="'message'; data.clubBattlesStage == 'soon' 	? subst('IDS_TILL_CLUB_BATTLES_START_IN', [], {timeLeft: timeToPrimeTime}) :
							data.clubBattlesStage == 'started'	? subst('IDS_TILL_CLUB_BATTLES_END_IN', [], {timeLeft: timeToPrimeTime}) :
							data.clubBattlesStage == 'finished'	? ('&lt;body&gt;'+tr('IDS_CLUB_BATTLES_ENDED')+'&lt;/body&gt;')
																: 'STAGE_UNKNOWN'"/>
		<block>
			<style>
				<position value="absolute"/>
				<height value="100%"/>
				<marginLeft value="8"/>
			</style>
			<block className="icon_battletypes" type="native">
				<styleClass value="$MiddleVAligned"/>
				<style>
					<alpha value="0.45"/>
				</style>
				<bind name="gotoAndStop!" value="data.clubBattlesStage == 'finished' ? 'ClubBattle_disabled' : 'ClubBattle'"/>
			</block>
		</block>
		<block type="text">
			<style>
				<marginLeft value="38px"/>
				<marginRight value="38px"/>
				<textAlign value="center"/>
				<leading value="-1"/>
				<styleSheet value="h3{font-size: 25;}"/>
			</style>
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextLargeHeaderBold"/>
			<bind name="class" value="'$Bold'"/>
			<bind name="text" value="message"/>
		</block>
		<block className="button_close" type="native">
			<style>
				<position value="absolute"/>
				<right value="12px"/>
				<top value="11px"/>
			</style>
			<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_CLOSE'}"/>
		</block>
	</block>
	<block className="InformerServerRestart">
		<bind name="timeFormat" value="(data.timeLeft - data.timeNow); 'HIGHEST'; 'timeToRestart'; true"/>
		<bind name="watch" value="'messageTimeToRestart'; subst('&lt;body&gt;' + tr('IDS_SERVER_WILL_RESTART_DOCK') + '&lt;/body&gt;', [], {timeLeft: timeToRestart})"/>
		<bind name="watch" value="'messagetimeToRestartCount'; subst('&lt;body&gt;' + tr('IDS_SERVER_WILL_RESTART_DOCK')+ '&lt;/body&gt;', [], {timeLeft: timeToRestartCount})"/>
		<bind name="watch" value="'messageRestartServer'; subst('&lt;body&gt;' + tr('IDS_SERVER_RESTART_TIME_DOCK')+ '&lt;/body&gt;', [], {timeRestart: data.hoursToRestart})"/>
		<bind name="watch" value="'messageRestartServerCanceled'; '&lt;body&gt;' + ' &lt;h3&gt;' + tr('IDS_SERVER_RESTART_CANCEL') + ' &lt;h3&gt;' + '&lt;/body&gt;'"/>
		<bind name="countdown" value="data.timeLeft; 'timeToRestartCount'; 'mm:ss'"/>
		<style>
			<flow value="horizontal"/>
			<height value="140px"/>
			<width value="700px"/>
		</style>
		<block>
			<style>
				<position value="absolute"/>
				<height value="100%"/>
				<marginLeft value="8"/>
			</style>
			<block className="icon_warning_orange_huge" type="native">
				<styleClass value="$MiddleVAligned"/>
				<style>
					<alpha value="0.45"/>
				</style>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$MiddleAligned"/>
				<style>
					<textAlign value="center"/>
					<maxWidth value="620"/>
					<leading value="-1"/>
					<styleSheet value="h3 {font-size: 25;}"/>
				</style>
				<styleClass value="$TextHeaderBold"/>
				<bind name="text" value=" data.timeLeft == 0 ?  messageRestartServerCanceled 
											: ((data.timeLeft - data.timeNow) &gt; 60) ? messageTimeToRestart 
											: messagetimeToRestartCount"/>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<marginTop value="6px"/>
				</style>
				<bind name="visible" value="data.hoursToRestart != ''"/>
				<block type="text">
					<style>
						<textAlign value="center"/>
						<maxWidth value="620"/>
						<leading value="-1"/>
						<styleSheet value="h3 {font-size: 25;}"/>
					</style>
					<styleClass value="$TextLargeHeaderBold"/>
					<bind name="text" value="messageRestartServer"/>
				</block>
			</block>
		</block>
		<block className="button_close" type="native">
			<style>
				<position value="absolute"/>
				<right value="12px"/>
				<top value="11px"/>
			</style>
			<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_CLOSE'}"/>
		</block>
	</block>
	<block className="InformerEventPrimeTime">
		<bind name="timeFormat" value="data.data.dt; 'm'; 'formattedPrimeTime'; true"/>
		<bind name="watch" value="'messagePrimeTime'; formattedPrimeTime &lt; 1 ? 'IDS_MILESTONE_EVENT_TIME_TO_FREEZE_END_NOW'
															: subst('IDS_PL_MILESTONE_INFORMER_TIME_TO_FREEZE_END', [], {_timecounter: numberFormattedPrimeTime}, numberFormattedPrimeTime)"/>
		<bind name="watch" value="'numberFormattedPrimeTime'; Number(formattedPrimeTime))"/>
		<style>
			<width value="470px"/>
			<height value="100px"/>
		</style>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<width value="100%"/>
				<marginLeft value="12px"/>
				<marginRight value="12px"/>
			</style>
			<block>
				<style>
					<width value="74px"/>
					<height value="74px"/>
					<marginRight value="12px"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:../events/british_event/reskin/bg_milestone_informers.png'"/>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<block type="text">
					<style>
						<maxWidth value="360"/>
						<leading value="-1"/>
					</style>
					<styleClass value="$TextLargeHeaderBold"/>
					<bind name="text" value="'IDS_SYS_MESSAGE_HEADER_MS_ACC_MILESTONE_STAGE_PAUSED'"/>
				</block>
				<block type="text">
					<style>
						<maxWidth value="360"/>
						<alpha value="0.8"/>
						<leading value="-1"/>
					</style>
					<styleClass value="$TextHeaderBold"/>
					<bind name="text" value="messagePrimeTime"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="button_close" type="native">
			<style>
				<position value="absolute"/>
				<right value="12px"/>
				<top value="11px"/>
			</style>
			<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLOSE'}"/>
		</block>
	</block>
	<block className="InformerEventPrePrimeTime">
		<bind name="timeFormat" value="data.data.dt; 'm'; 'formattedPrimeTime'; true"/>
		<bind name="watch" value="'messagePrePrimeTime'; formattedPrimeTime &lt; 1 ? 'IDS_MILESTONE_EVENT_TIME_TO_FREEZE_NOW'
															: subst('IDS_PL_MILESTONE_INFORMER_TIME_TO_FREEZE', [], { _timecounter: numberFormattedPrePrimeTime }, numberFormattedPrePrimeTime)"/>
		<bind name="watch" value="'numberFormattedPrePrimeTime'; Number(formattedPrimeTime))"/>
		<style>
			<width value="470px"/>
			<height value="100px"/>
		</style>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<width value="100%"/>
				<marginLeft value="12px"/>
				<marginRight value="12px"/>
			</style>
			<block>
				<style>
					<width value="74px"/>
					<height value="74px"/>
					<marginRight value="12px"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:../events/british_event/reskin/bg_milestone_informers.png'"/>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<block type="text">
					<style>
						<maxWidth value="360"/>
						<leading value="-1"/>
					</style>
					<styleClass value="$TextLargeHeaderBold"/>
					<bind name="text" value="'IDS_SYS_MESSAGE_HEADER_MS_ACC_MILESTONE_STAGE_PRE_PAUSED'"/>
				</block>
				<block type="text">
					<style>
						<maxWidth value="360"/>
						<alpha value="0.8"/>
						<leading value="-1"/>
					</style>
					<styleClass value="$TextHeaderBold"/>
					<bind name="text" value="messagePrePrimeTime"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="button_close" type="native">
			<style>
				<position value="absolute"/>
				<right value="12px"/>
				<top value="11px"/>
			</style>
			<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLOSE'}"/>
		</block>
	</block>
	<block className="InformerPremDayLeft">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'premiumAccountTimeStr';	['resourceEntity.accountResource.evChangedPrem']; resourceEntity.accountResource.premiumTimeStr"/>
		<bind name="watchDH" value="'wowsPremiumTimeStr';	['resourceEntity.accountResource.evChangedPrem']; resourceEntity.accountResource.wowsPremiumTimeStr"/>
		<bind name="watch" value="'logoUrl';  (data.data.showCommon == true) ? 'url:../premium_account/wg_premium_logo_small.png'
															: 'url:../premium_account/wows_premium_logo_small.png'"/>
		<style>
			<height value="110px"/>
			<marginLeft value="16"/>
			<marginRight value="16"/>
		</style>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="75px"/>
					<height value="75px"/>
					<backgroundSize value="cover"/>
				</style>
				<bind name="style" value="'backgroundImage'; logoUrl"/>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<marginLeft value="16"/>
					<marginRight value="16"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefaultBold19NM"/>
					<bind name="text" value="'IDS_PREMIUM_ACCOUNT_ENDS'"/>
				</block>
				<block>
					<bind name="visible" value="(data.data.showWOWS == true)"/>
					<style>
						<marginTop value="12"/>
					</style>
					<block type="text">
						<style>
							<styleSheet value="h3
							{
								font-size: 19;
								font-family: $WWSDefaultFontBold
							}"/>
						</style>
						<styleClass value="$TextDefault17NM"/>
						<bind name="text" value="('&lt;body&gt;' + subst('IDS_WOWS_PREMIUM_ACCOUNT_ENDS_TIME', [], {timeLeft: '&lt;h3&gt;' + wowsPremiumTimeStr + '&lt;/h3&gt;'}) + '&lt;/body&gt;')"/>
					</block>
				</block>
				<block>
					<bind name="visible" value="(data.data.showCommon == true)"/>
					<style>
						<marginTop value="12"/>
					</style>
					<block type="text">
						<style>
							<styleSheet value="h3
							{
								font-size: 19;
								font-family: $WWSDefaultFontBold
							}"/>
						</style>
						<styleClass value="$TextDefault17NM"/>
						<bind name="text" value="('&lt;body&gt;' + subst('IDS_WG_PREMIUM_ACCOUNT_ENDS_TIME', [], {timeLeft: '&lt;h3&gt;' + premiumAccountTimeStr + '&lt;/h3&gt;'}) + '&lt;/body&gt;')"/>
					</block>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="button_close" type="native">
			<style>
				<position value="absolute"/>
				<right value="0px"/>
				<top value="11px"/>
			</style>
			<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLOSE'}"/>
		</block>
	</block>
	<block className="InformerArcEventPrePrimeTime">
		<bind name="timeFormat" value="data.data.dt; 'm'; 'formattedPrimeTime'; true"/>
		<bind name="watch" value="'messagePrePrimeTime'; formattedPrimeTime &lt; 1 ? 'IDS_ARC_EVENT_TIME_TO_FREEZE_NOW'
															: subst('IDS_PL_ARC_INFORMER_TIME_TO_FREEZE', [], { _timecounter: numberFormattedPrePrimeTime }, numberFormattedPrePrimeTime)"/>
		<bind name="watch" value="'numberFormattedPrePrimeTime'; Number(formattedPrimeTime))"/>
		<style>
			<width value="470px"/>
			<height value="100px"/>
		</style>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="74px"/>
					<height value="74px"/>
					<margin value="16px|0px"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:../events/arc_event/common/event_icon.png'"/>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<block type="text">
					<style>
						<maxWidth value="360"/>
						<leading value="-1"/>
					</style>
					<styleClass value="$TextLargeHeaderBold"/>
					<bind name="text" value="'IDS_SYS_MESSAGE_HEADER_MS_ACC_ARC_STAGE_PRE_PAUSED'"/>
				</block>
				<block type="text">
					<style>
						<maxWidth value="360"/>
						<alpha value="0.8"/>
						<leading value="-1"/>
					</style>
					<styleClass value="$TextHeaderBold"/>
					<bind name="text" value="messagePrePrimeTime"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="button_close" type="native">
			<style>
				<position value="absolute"/>
				<right value="12px"/>
				<top value="11px"/>
			</style>
			<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_CLOSE' }"/>
		</block>
	</block>
	<block className="InformerArcEventPrimeTime">
		<bind name="timeFormat" value="data.data.dt; 'm'; 'formattedPrimeTime'; true"/>
		<bind name="watch" value="'messagePrimeTime'; formattedPrimeTime &lt; 1 ? 'IDS_EVENT_TIME_TO_FREEZE_END_NOW'
															: subst('IDS_PL_ARC_INFORMER_TIME_TO_FREEZE_END', [], { _timecounter: numberFormattedPrimeTime }, numberFormattedPrimeTime)"/>
		<bind name="watch" value="'numberFormattedPrimeTime'; Number(formattedPrimeTime))"/>
		<style>
			<width value="470px"/>
			<height value="100px"/>
		</style>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="74px"/>
					<height value="74px"/>
					<margin value="16px|0px"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:../events/arc_event/common/event_icon.png'"/>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<block type="text">
					<style>
						<maxWidth value="360"/>
						<leading value="-1"/>
					</style>
					<styleClass value="$TextLargeHeaderBold"/>
					<bind name="text" value="'IDS_SYS_MESSAGE_HEADER_MS_ACC_ARC_STAGE_PAUSED'"/>
				</block>
				<block type="text">
					<style>
						<maxWidth value="360"/>
						<alpha value="0.8"/>
						<leading value="-1"/>
					</style>
					<styleClass value="$TextHeaderBold"/>
					<bind name="text" value="messagePrimeTime"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="button_close" type="native">
			<style>
				<position value="absolute"/>
				<right value="12px"/>
				<top value="11px"/>
			</style>
			<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_CLOSE' }"/>
		</block>
	</block>
	<block className="CoachScreenBattleType">
		<styleClass value="$Fullsize"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMapCustom">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
			</style>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap3" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<block className="modal_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<bind name="var" value="{expectedActionDone: false}"/>
		<bind name="catch" value="'evChooseSomeBattleType'; {expectedActionDone: true}"/>
		<bind name="catch" value="'evShow'; {expectedActionDone: false}"/>
		<bind name="collectionDH" value="CC.battleType; 'selectedBattleTypes'; 'selected'"/>
		<bind name="entityDH" value="'battleTypeEntity'; selectedBattleTypes[0].id"/>
		<bind name="watch" value="'isRandomBattleSelected'; (battleTypeEntity.battleType.type == BattleTypes.RANDOM_BATTLE)"/>
		<bind name="dispatch" value="'isRandomBattleSelected' + varChanged; 'evHideCoachScreen'; null; 0; 0"/>
		<block>
			<style>
				<left value="50%"/>
				<marginLeft value="73px"/>
				<top value="4px"/>
			</style>
			<block>
				<style>
					<position value="absolute"/>
				</style>
				<bind name="instance" value="'BattleTypeChooser'; {_fromDock: true}"/>
				<bind name="dispatch" value="'click'; 'evChooseSomeBattleType'"/>
				<block className="icon_mouse_big_left" type="native">
					<style>
						<position value="absolute"/>
						<right value="12px"/>
						<bottom value="-12px"/>
						<hitTest value="false"/>
					</style>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<width value="420px"/>
					<top value="66px"/>
					<marginLeft value="-100px"/>
				</style>
				<block className="arrow_coach_green" type="native">
					<styleClass value="$MiddleAligned"/>
					<bind name="gotoAndStop!" value="'up'"/>
				</block>
				<block>
					<styleClass value="$MiddleAligned"/>
					<bind name="instance" value="'CoachScreenHeader'; {_iconUrl: 'url:../coach_screens/icon_random_battle.png', _headerText: 'IDS_COACH_BATTLETYPE_HEADER'}"/>
				</block>
				<block type="text">
					<styleClass value="$TextLargeHeader"/>
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
						<marginBottom value="9px"/>
					</style>
					<text value="IDS_COACH_BATTLETYPE_HINT_0"/>
				</block>
				<block type="text">
					<styleClass value="$TextLargeHeader"/>
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
						<marginBottom value="9px"/>
					</style>
					<text value="IDS_COACH_BATTLETYPE_HINT_1"/>
				</block>
				<block type="text">
					<styleClass value="$TextLargeHeader"/>
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
					</style>
					<text value="IDS_COACH_BATTLETYPE_HINT_2"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<position value="absolute"/>
				<width value="800px"/>
				<bottom value="15%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block className="button_default" type="native">
				<bind name="fade" value="expectedActionDone; expectedActionDone ? 0.15 : 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 1"/>
				<styleClass value="$MiddleAligned"/>
				<style>
					<marginTop value="18px"/>
				</style>
				<bind name="label" value="toUpperCase(tr('IDS_I_GOT_IT'))"/>
				<bind name="focus" value="1; false"/>
				<bind name="dispatch" value="'buttonClick'; 'evHideCoachScreen'"/>
			</block>
		</block>
	</block>
	<block className="CoachScreenHeader">
		<style>
			<flow value="horizontal"/>
			<height value="60px"/>
			<marginTop value="12px"/>
			<marginBottom value="12px"/>
		</style>
		<block>
			<style>
				<backgroundSize value="cover"/>
				<width value="60px"/>
				<height value="60px"/>
				<marginRight value="6px"/>
			</style>
			<bind name="style" value="'backgroundImage'; _iconUrl"/>
		</block>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextAccentWhiteBold"/>
			<bind name="text" value="_headerText"/>
		</block>
	</block>
	<block className="CoachScreenResearch">
		<styleClass value="$Fullsize"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMapCustom">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
			</style>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap3" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<block className="modal_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<bind name="var" value="{expectedActionDone: false}"/>
		<bind name="transition" value="stageYmoduleTabBlock &gt; 0 &amp;&amp; stageXmoduleTabBlock &gt; 0; 0.05; {alpha: 0}; {alpha :1}"/>
		<block>
			<bind name="style" value="'top'; stageYmoduleTabBlock"/>
			<bind name="style" value="'left'; stageXmoduleTabBlock"/>
			<block className="tab_bar_bg" type="native">
				<style>
					<width value="146px"/>
					<height value="29px"/>
				</style>
				<block>
					<style>
						<marginLeft value="2px"/>
						<marginRight value="2px"/>
					</style>
					<block>
						<bind name="feature" value="'17'; 'rollOver'"/>
						<bind name="dispatch" value="'click'; 'evHideCoachScreen'"/>
						<block>
							<bind name="instance" value="'MainTabButton'; { _label: 'IDS_MODULES',
															_paragraphText: 'IDS_TOOLTIP_TAB_MODULES',
															_activeInset: inset,
															_action: 'changeInset',
															_actionParams: { inset: LobbyConstants.SHIP_MODULES },
															_dispatch: 'hideCrew',
															_isNewMarker: (feature_17 == 'new')
															}"/>
						</block>
						<block className="icon_mouse_big_left" type="native">
							<style>
								<position value="absolute"/>
								<right value="12px"/>
								<bottom value="-12px"/>
								<hitTest value="false"/>
							</style>
						</block>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<width value="410px"/>
					<top value="50px"/>
					<marginLeft value="-130px"/>
				</style>
				<block>
					<styleClass value="$MiddleAligned"/>
					<block className="arrow_coach_green" type="native">
						<bind name="gotoAndStop!" value="'up'"/>
					</block>
				</block>
				<block>
					<styleClass value="$MiddleAligned"/>
					<bind name="instance" value="'CoachScreenHeader'; {_iconUrl: 'url:../coach_screens/icon_modules.png', _headerText: 'IDS_COACH_RESEARCH_HEADER'}"/>
				</block>
				<block type="text">
					<styleClass value="$TextLargeHeader"/>
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
						<marginBottom value="9px"/>
					</style>
					<text value="IDS_COACH_RESEARCH_HINT_0"/>
				</block>
				<block type="text">
					<styleClass value="$TextLargeHeader"/>
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
						<marginBottom value="9px"/>
					</style>
					<text value="IDS_COACH_RESEARCH_HINT_1"/>
				</block>
				<block type="text">
					<styleClass value="$TextLargeHeader"/>
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
					</style>
					<text value="IDS_COACH_RESEARCH_HINT_2"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<position value="absolute"/>
				<width value="800px"/>
				<bottom value="15%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<marginBottom value="12px"/>
					<marginTop value="12px"/>
				</style>
				<block className="icon_sticker_new" type="native">
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$MouseDisable"/>
					<style>
						<marginRight value="3px"/>
					</style>
				</block>
				<block type="text">
					<styleClass value="$TextDefaultTech"/>
					<text value="IDS_COACH_COMMON_HINT_STICKER_NEW"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<block className="CoachScreenCrew">
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'shipId'; ['dockEntity.shipSelection.evShipUpdate']; dockEntity.shipSelection.currentShipId"/>
		<bind name="watchDH" value="'shipIdForModuleInset'; ['dockEntity.shipSelection.evShipViewUpdate']; dockEntity.shipSelection.currentShipIdForModuleInset"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; shipId"/>
		<bind name="watchDH" value="'exp';		['shipOwnEntity.ownShip.evUpdateConfig'];		shipOwnEntity.ownShip.exp"/>
		<bind name="watchDH" value="'crewId';	['shipOwnEntity.ownShip.evCrewChanged'];		shipOwnEntity.ownShip.crewId"/>
		<styleClass value="$Fullsize"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMapCustom">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
			</style>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap3" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<block className="modal_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<height value="174px"/>
				<width value="312px"/>
				<right value="10px"/>
				<marginTop value="92px"/>
			</style>
			<block className="stat_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'ShipInfoTabHeader'; shipOwnEntity != null ? { _fromCrew: true, shipId: shipId } : null"/>
			</block>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<style>
					<marginTop value="-6px"/>
				</style>
				<block>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_SHIP_EXPERIENCE_USAGE'}; 0"/>
					<bind name="instance" value="'CurrentXPLarge'; shipOwnEntity != null ? { _exp: exp, _label: 'IDS_SHIP_EXPERIENCE' } : null"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="dispatch" value="'click'; 'evHideCoachScreen'"/>
				<bind name="action" value="'buttonClick'; 'changeInset'; {inset: LobbyConstants.CREW}"/>
				<bind name="instance" value="'ShipInfoCrewBlock'; {_crewId: crewId}"/>
			</block>
			<block className="icon_mouse_big_left" type="native">
				<style>
					<position value="absolute"/>
					<left value="10px"/>
					<bottom value="-12px"/>
					<hitTest value="false"/>
				</style>
			</block>
		</block>
		<block>
			<style>
				<right value="340px"/>
				<top value="200px"/>
				<position value="absolute"/>
			</style>
			<block className="arrow_coach_green" type="native">
				<bind name="gotoAndStop!" value="'right'"/>
			</block>
			<block>
				<style>
					<width value="410px"/>
					<position value="absolute"/>
					<right value="100px"/>
					<marginTop value="-15%"/>
				</style>
				<block>
					<styleClass value="$MiddleAligned"/>
					<bind name="instance" value="'CoachScreenHeader'; {_iconUrl: 'url:../coach_screens/icon_crew_perks.png', _headerText: 'IDS_COACH_CREW_HEADER'}"/>
				</block>
				<block type="text">
					<styleClass value="$TextLargeHeader"/>
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
						<marginBottom value="9px"/>
					</style>
					<text value="IDS_COACH_CREW_HINT_0"/>
				</block>
				<block type="text">
					<styleClass value="$TextLargeHeader"/>
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
						<marginBottom value="9px"/>
					</style>
					<text value="IDS_COACH_CREW_HINT_1"/>
				</block>
				<block type="text">
					<styleClass value="$TextLargeHeader"/>
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
						<marginBottom value="9px"/>
					</style>
					<text value="IDS_COACH_CREW_HINT_2"/>
				</block>
			</block>
		</block>
	</block>
	<block className="CoachScreenCamo">
		<bind name="action" value="'addedToStage'; 'changeInset'; { inset: LobbyConstants.SHIP_EXTERIOR }"/>
		<styleClass value="$Fullsize"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMapCustom">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
			</style>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap3" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<block className="modal_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<height value="270px"/>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<marginLeft value="81px"/>
					<marginTop value="134px"/>
				</style>
				<bind name="feature" value="16; ''"/>
				<bind name="style" value="'marginLeft'; feature_16 == 'locked' ? '81px' : '0px'"/>
				<block className="tab_bar_bg" type="native">
					<style>
						<height value="25px"/>
					</style>
					<block>
						<style>
							<marginLeft value="2px"/>
							<marginRight value="2px"/>
						</style>
						<bind name="dispatch" value="'click'; 'evHideCoachScreen'"/>
						<bind name="action" value="'click'; 'setCameraDefaultPosition'; {alias: 'camou'}"/>
						<bind name="instance" value="'MainTabSmallInstance'; { _label: 'IDS_CAMOUFLAGE', _tooltipIDS: 'IDS_TOOLTIP_CAMOUFLAGE', _width: 164, _action: 'changeInset', _actionParams: { inset: LobbyConstants.SHIP_EXTERIOR, page: LobbyConstants.SHIP_EXTERIOR_CAMOUFLAGE }, _name: 'camouflage' }"/>
					</block>
					<block className="icon_mouse_big_left" type="native">
						<style>
							<position value="absolute"/>
							<right value="12px"/>
							<top value="12px"/>
							<hitTest value="false"/>
						</style>
					</block>
				</block>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<marginLeft value="12px"/>
					</style>
					<block className="arrow_coach_green" type="native">
						<style>
							<marginTop value="-10px"/>
						</style>
						<bind name="gotoAndStop!" value="'left'"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="410px"/>
					<marginLeft value="12px"/>
				</style>
				<block>
					<styleClass value="$MiddleAligned"/>
					<bind name="instance" value="'CoachScreenHeader'; {_iconUrl: 'url:../coach_screens/icon_camo.png', _headerText: 'IDS_COACH_CAMO_HEADER'}"/>
				</block>
				<block type="text">
					<styleClass value="$TextLargeHeader"/>
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
						<marginBottom value="9px"/>
					</style>
					<text value="IDS_COACH_CAMO_HINT_0"/>
				</block>
				<block type="text">
					<styleClass value="$TextLargeHeader"/>
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
						<marginBottom value="9px"/>
					</style>
					<text value="IDS_COACH_CAMO_HINT_1"/>
				</block>
				<block type="text">
					<styleClass value="$TextLargeHeader"/>
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
					</style>
					<text value="IDS_COACH_CAMO_HINT_2"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="CoachScreenFlags">
		<bind name="action" value="'addedToStage'; 'changeInset'; { inset: LobbyConstants.SHIP_EXTERIOR }"/>
		<styleClass value="$Fullsize"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMapCustom">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
			</style>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap3" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<block className="modal_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<marginLeft value="332px"/>
				<marginTop value="134px"/>
			</style>
			<block className="tab_bar_bg" type="native">
				<style>
					<height value="25px"/>
				</style>
				<block>
					<style>
						<marginLeft value="2px"/>
						<marginRight value="2px"/>
					</style>
					<bind name="dispatch" value="'click'; 'evHideCoachScreen'"/>
					<bind name="action" value="'click'; 'setCameraDefaultPosition'; {alias: 'ensign'}"/>
					<bind name="instance" value="'MainTabSmallInstance'; { _label: 'IDS_FLAG', _tooltipIDS: 'IDS_TOOLTIP_ENSIGN', _width: 164, _action: 'changeInset', _actionParams: { inset: LobbyConstants.SHIP_EXTERIOR, page: LobbyConstants.SHIP_EXTERIOR_ENSIGN }, _name: 'ensign' }"/>
				</block>
				<block className="icon_mouse_big_left" type="native">
					<style>
						<position value="absolute"/>
						<right value="12px"/>
						<top value="12px"/>
						<hitTest value="false"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<marginTop value="170px"/>
				<marginLeft value="210px"/>
				<width value="410px"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<block className="arrow_coach_green" type="native">
					<bind name="gotoAndStop!" value="'up'"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$MiddleAligned"/>
					<bind name="instance" value="'CoachScreenHeader'; {_iconUrl: 'url:../coach_screens/icon_flags.png', _headerText: 'IDS_COACH_FLAGS_HEADER'}"/>
				</block>
				<block type="text">
					<styleClass value="$TextLargeHeader"/>
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
						<marginBottom value="9px"/>
					</style>
					<text value="IDS_COACH_FLAGS_HINT_0"/>
				</block>
				<block type="text">
					<styleClass value="$TextLargeHeader"/>
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
						<marginBottom value="9px"/>
					</style>
					<text value="IDS_COACH_FLAGS_HINT_1"/>
				</block>
				<block type="text">
					<styleClass value="$TextLargeHeader"/>
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
					</style>
					<text value="IDS_COACH_FLAGS_HINT_2"/>
				</block>
			</block>
		</block>
	</block>
	<block className="CoachScreenSignals">
		<styleClass value="$Fullsize"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMapCustom">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
			</style>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap3" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<block className="modal_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<bind name="transition" value="stageYsignalsTabBlock &gt; 0 &amp;&amp; stageXsignalsTabBlock &gt; 0; 0.05; {alpha: 0}; {alpha :1}"/>
		<block>
			<bind name="style" value="'top'; stageYsignalsTabBlock"/>
			<bind name="style" value="'left'; stageXsignalsTabBlock"/>
			<block className="tab_bar_bg" type="native">
				<style>
					<width value="146px"/>
					<height value="29px"/>
				</style>
				<block>
					<style>
						<marginLeft value="2px"/>
						<marginRight value="2px"/>
					</style>
					<bind name="dispatch" value="'click'; 'evHideCoachScreen'"/>
					<bind name="action" value="'click'; 'setCameraDefaultPosition'; {alias: 'flag'}"/>
					<bind name="instance" value="'MainTabButton'; { 	_label: 'IDS_EXTERIOR',
													_paragraphText: 'IDS_TOOLTIP_TAB_EXTERIOR',
													_activeInset: inset,
													_action: 'changeInset',
													_actionParams: {	inset: LobbyConstants.SHIP_EXTERIOR,
																		page: LobbyConstants.SHIP_EXTERIOR_SIGNALS
																	},
													_dispatch: 'hideCrew'
													}"/>
				</block>
				<block className="icon_mouse_big_left" type="native">
					<style>
						<position value="absolute"/>
						<right value="12px"/>
						<top value="12px"/>
						<hitTest value="false"/>
					</style>
				</block>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<position value="absolute"/>
					<width value="410px"/>
					<top value="50px"/>
				</style>
				<block>
					<styleClass value="$MiddleAligned"/>
					<block className="arrow_coach_green" type="native">
						<bind name="gotoAndStop!" value="'up'"/>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block>
						<styleClass value="$MiddleAligned"/>
						<bind name="instance" value="'CoachScreenHeader'; {_iconUrl: 'url:../coach_screens/icon_signals.png', _headerText: 'IDS_COACH_SIGNALS_HEADER'}"/>
					</block>
					<block type="text">
						<styleClass value="$TextLargeHeader"/>
						<style>
							<width value="100%"/>
							<textAlign value="center"/>
							<marginBottom value="9px"/>
						</style>
						<text value="IDS_COACH_SIGNALS_HINT_0"/>
					</block>
					<block type="text">
						<styleClass value="$TextLargeHeader"/>
						<style>
							<width value="100%"/>
							<textAlign value="center"/>
							<marginBottom value="9px"/>
						</style>
						<text value="IDS_COACH_SIGNALS_HINT_1"/>
					</block>
					<block type="text">
						<styleClass value="$TextLargeHeader"/>
						<style>
							<width value="100%"/>
							<textAlign value="center"/>
						</style>
						<text value="IDS_COACH_SIGNALS_HINT_2"/>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="CoachScreenModernizations">
		<bind name="transition" value="stageYmodernizationsTabBlock &gt; 0 &amp;&amp; stageXmodernizationsTabBlock &gt; 0; 0.05; {alpha: 0}; {alpha :1}"/>
		<bind name="action" value="'addedToStage'; 'changeInset'; { inset: LobbyConstants.SHIP_MODULES }"/>
		<styleClass value="$Fullsize"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMapCustom">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
			</style>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap3" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<block className="modal_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<bind name="style" value="'top'; stageYmodernizationsTabBlock"/>
			<bind name="style" value="'left'; stageXmodernizationsTabBlock"/>
			<block className="tab_bar_bg" type="native">
				<style>
					<height value="25px"/>
				</style>
				<block>
					<bind name="feature" value="'12'; 'rollOver'"/>
					<style>
						<marginLeft value="2px"/>
						<marginRight value="2px"/>
					</style>
					<bind name="dispatch" value="'click'; 'evHideCoachScreen'"/>
					<bind name="instance" value="'MainTabSmallInstance'; { _label: 'IDS_MODERNIZATION', _tooltipIDS: 'IDS_TOOLTIP_MODERNIZATION', _width: 164, _action: 'changeInset', _actionParams: { inset: LobbyConstants.SHIP_MODULES, page: LobbyConstants.SHIP_MODULES_MODERNIZATION }, _name: 'modernization' }"/>
				</block>
				<block className="icon_mouse_big_left" type="native">
					<style>
						<position value="absolute"/>
						<right value="12px"/>
						<top value="12px"/>
						<hitTest value="false"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="style" value="'top'; stageYmodernizationsTabBlock - 30"/>
			<bind name="style" value="'left'; stageXmodernizationsTabBlock + 212"/>
			<block className="arrow_coach_green" type="native">
				<bind name="gotoAndStop!" value="'left'"/>
			</block>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<width value="410px"/>
			</style>
			<bind name="style" value="'top'; stageYmodernizationsTabBlock - 120"/>
			<bind name="style" value="'left'; stageXmodernizationsTabBlock + 300"/>
			<block>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'CoachScreenHeader'; {_iconUrl: 'url:../coach_screens/icon_modernizations.png', _headerText: 'IDS_COACH_MODERNIZATIONS_HEADER'}"/>
			</block>
			<block type="text">
				<styleClass value="$TextLargeHeader"/>
				<style>
					<width value="100%"/>
					<textAlign value="center"/>
					<marginBottom value="9px"/>
				</style>
				<text value="IDS_COACH_MODERNIZATIONS_HINT_0"/>
			</block>
			<block type="text">
				<styleClass value="$TextLargeHeader"/>
				<style>
					<width value="100%"/>
					<textAlign value="center"/>
					<marginBottom value="9px"/>
				</style>
				<text value="IDS_COACH_MODERNIZATIONS_HINT_1"/>
			</block>
			<block type="text">
				<styleClass value="$TextLargeHeader"/>
				<style>
					<width value="100%"/>
					<textAlign value="center"/>
				</style>
				<text value="IDS_COACH_MODERNIZATIONS_HINT_2"/>
			</block>
		</block>
	</block>
	<block className="CoachScreenCompleteAccount">
		<styleClass value="$Fullsize"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMapCustom">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
			</style>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap3" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<block className="modal_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<bind name="var" value="{ windowAppearLag: 0.4 }"/>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$EyeLevelVAligned"/>
			<style>
				<width value="600px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 0 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
					<bind name="appear" value="'startHide'; 0.15; 0 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
					<style>
						<width value="100%"/>
					</style>
					<block>
						<styleClass value="$MiddleAligned"/>
						<bind name="instance" value="'ModalWindowHeaderNoEsc'; { _header: 'IDS_ACCOUNT_COMPLETION_START_HEADER', _headerWidth: '600px'}"/>
					</block>
				</block>
				<block>
					<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 1 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
					<bind name="appear" value="'startHide'; 0.15; 1 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
					<style>
						<width value="100%"/>
						<marginTop value="24px"/>
					</style>
					<bind name="repeat" value="[{_paragraphText: 'IDS_ACCOUNT_COMPLETION_PROMO_HINT_0'},
							   {_paragraphText: 'IDS_ACCOUNT_COMPLETION_PROMO_HINT_1'}]; 'RepeatParagraphItem'; {	_maxWidth: 580, _marginBottom: 32,
																												_middleAligned: true, _class: '$TextDefault19NM',
																												_textAlign: 'center', _leading: 0}"/>
				</block>
				<block>
					<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 1.5 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
					<bind name="appear" value="'startHide'; 0.15; 1.5 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
					<style>
						<width value="100%"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
				<block>
					<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
					<bind name="appear" value="'startHide'; 0.15; 2 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
					<styleClass value="$MiddleAligned"/>
					<style>
						<marginTop value="32px"/>
						<marginBottom value="12px"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefaultBold19NM"/>
						<styleClass value="$FontColorGolden"/>
						<bind name="text" value="toUpperCase(tr('IDS_ACCOUNT_COMPLETION_START_SUBHEADER'))"/>
					</block>
				</block>
				<block>
					<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 3 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
					<bind name="appear" value="'startHide'; 0.15; 3 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
					<styleClass value="$MiddleAligned"/>
					<style>
						<align value="center|middle"/>
						<marginBottom value="32px"/>
					</style>
					<bind name="firstEntityDH" value="'completionRewardsEntity'; CC.completionRewards"/>
					<bind name="watchDH" value="'rewards';[]; completionRewardsEntity.completionRewards.rewards"/>
					<bind name="repeat" value="rewards; 'CompleteAccountRewardItemAdapter'; {_openedLootboxRewards: rewards}"/>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<styleClass value="$MiddleAligned"/>
					<block>
						<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 4 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
						<bind name="appear" value="'startHide'; 0.15; 4 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
						<style>
							<width value="210px"/>
							<marginRight value="32px"/>
						</style>
						<block className="button_default" type="native">
							<styleClass value="$InfoLineBoundaries"/>
							<style>
								<width value="100%"/>
							</style>
							<bind name="label" value="toUpperCase(tr('IDS_ACCOUNT_COMPLETION_START_BTN'))"/>
							<bind name="focus" value="1; true"/>
							<bind name="request" value="'buttonClick'; 'openModalWindowCompleteAccount'"/>
							<bind name="dispatch" value="'buttonClick'; 'evHideCoachScreen'"/>
						</block>
					</block>
					<block>
						<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 3.5 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
						<bind name="appear" value="'startHide'; 0.15; 3.5 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
						<style>
							<width value="100px"/>
						</style>
						<block className="button_default" type="native">
							<styleClass value="$InfoLineBoundaries"/>
							<style>
								<width value="100%"/>
							</style>
							<bind name="label" value="toUpperCase(tr('IDS_CLOSE_UPPER_CASE'))"/>
							<bind name="focus" value="2; false"/>
							<bind name="dispatch" value="'buttonClick'; 'evHideCoachScreen'"/>
						</block>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="ArmourDisplay">
		<bind name="primaryEntityDH" value="'armorPick'; CC.shipArmorPick; shipId; 'evUpdate'"/>
		<styleClass value="$Fullsize"/>
		<block>
			<style>
				<position value="absolute"/>
				<top value="23px"/>
				<left value="10px"/>
			</style>
			<bind name="stageSize"/>
			<bind name="top" value="(armorPick.shipArmorPick.y + 123 &gt; stageHeight) ? (armorPick.shipArmorPick.y - 123) : armorPick.shipArmorPick.y"/>
			<bind name="left" value="(armorPick.shipArmorPick.x + 314 &gt; stageWidth) ? (armorPick.shipArmorPick.x - 314) : armorPick.shipArmorPick.x"/>
			<bind name="visible" value="armorPick.shipArmorPick.matId &gt; 0"/>
			<bind name="instance" value="'ArmourTooltip'; armorPick.shipArmorPick.matId &gt; 0 ? { _thickness: armorPick.shipArmorPick.thickness, _armorName: tr('IDS_' + toUpperCase(armorPick.shipArmorPick.armorName))} : null"/>
		</block>
	</block>
	<block className="ArmourRangePicker">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="action" value="'rollOver'; 'ShipArmor.setArmorRangeVisible'; {rangeIdx:index, visible:true}"/>
		<bind name="action" value="'rollOut'; 'ShipArmor.setArmorRangeVisible'; {rangeIdx:index, visible:false}"/>
		<bind name="alpha" value="!enabled ? 0.85 : 1"/>
		<style>
			<width value="31px"/>
			<height value="12px"/>
		</style>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="appear" value="'addedToStage'; 0.1; (3 - $index)*0.05*( $index &gt; 3 ? -1 : 1) + 0.15; {alpha:0, left: 5*(3-$index) }; {alpha: 1, left: 0}"/>
			<block>
				<bind name="tooltip" value="'MouseInstructionTooltip'; !enabled 	? {_multiParagraphArray: [{_paragraphText: 'IDS_SHIP_NO_ARMOUR_IN_RANGE'}], _maxWidth: 300}
																: {_multiParagraphArray: [{_paragraphText: tr('IDS_SHIP_ARMOUR_IN_RANGE') + ' ' + min + ' – ' + max + tr('IDS_MILLIMETER')}], _maxWidth: 300}"/>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="29px"/>
					<height value="10px"/>
				</style>
				<bind name="style" value="'backgroundColor'; 0xFF000000 + color"/>
				<bind name="transition" value="!(index == selected || (rollOver &amp;&amp; enabled)); 0.1; {alpha: 1.0, width: 31, height: 12}; {alpha: 0.8, width: 29, height: 10}"/>
			</block>
		</block>
	</block>
	<block className="ArmourModulePicker">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="watch" value="'selected'; (mask &amp; (1&lt;&lt;index)) != 0"/>
		<bind name="action" value="'click'; enabled ? 'ShipArmor.setShipPartVisible' : null; {index:index, visible:!selected}"/>
		<bind name="alpha" value="!enabled ? 0.5 : 1"/>
		<style>
			<width value="40px"/>
			<height value="40px"/>
			<marginLeft value="3px"/>
			<marginRight value="3px"/>
		</style>
		<bind name="tooltip" value="'MouseInstructionTooltip'; !enabled 	? {_multiParagraphArray: [{_paragraphText: 'IDS_NO_ARMOUR_' + type}], _mouseInstructions: null }
														: {_multiParagraphArray: null, _mouseInstructions: [{_type: 'left', _instructionText: (selected ? 'IDS_HIDE_ARMOUR_' : 'IDS_SHOW_ARMOUR_') + type}]}"/>
		<bind name="soundOn" value="'click'; 'press'; 'armour_pick_button'"/>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="appear" value="'addedToStage'; 0.1; (3 - $index)*0.05*( $index &gt; 3 ? -1 : 1) + 0.15; {alpha:0, left: 5*(-3+$index) }; {alpha: 1, left: 0}"/>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<backgroundImage value="symbol:armour_background"/>
					<alpha value="1.4"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="!selected"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="transition" value="rollOver; 0.15; {alpha: 0.3}; {alpha: enabled ? 0.7 : 0.3}"/>
				<bind name="style" value="'backgroundImage'; 'symbol:armour_' + toLowerCase(type) + '_up')"/>
			</block>
			<block>
				<bind name="visible" value="selected"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="transition" value="rollOver; 0.15; {alpha: 0.7}; {alpha: enabled ? 1 : 0.7}"/>
				<bind name="style" value="'backgroundImage'; 'symbol:armour_' + toLowerCase(type) + '_toggle')"/>
			</block>
		</block>
	</block>
	<block className="ArmourTooltip">
		<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<style>
			<width value="300px"/>
			<hitTest value="false"/>
		</style>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<style>
				<position value="absolute"/>
			</style>
			<styleClass value="$Fullsize"/>
		</block>
		<block type="text">
			<styleClass value="$TextHeaderWhiteBold"/>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="text" value="_armorName"/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<block type="text">
				<style>
					<width value="100%"/>
				</style>
				<styleClass value="$TextHeaderWhite"/>
				<style>
					<styleSheet value="h3
					{
						font-size: 21;
						font-family: $WWSDefaultFontBold;
					}"/>
				</style>
				<bind name="text" value="'&lt;body&gt;' + subst('IDS_SHIP_ARMOUR_THICKNESS', [], {thickness: _thickness + ' ' + tr('IDS_MILLIMETER')}) '&lt;/body&gt;'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ArmourTooltipOptimizer">
		<style>
			<width value="300px"/>
		</style>
		<block type="text">
			<styleClass value="$TextHeaderWhiteBold"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="text" value="'0123456789 ' + tr('IDS_ALPHABET')"/>
		</block>
		<block type="text">
			<styleClass value="$TextHeaderWhite"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="text" value="tr('IDS_ALPHABET') + 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'"/>
		</block>
	</block>
	<block className="ArmourDisplaySwitcher">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'dockDefaultValues'; 'dockInitData,dockUpdateData'"/>
		<styleClass value="$Fullsize"/>
		<bind name="action" value="'click'; dockDefaultValues.armourVisibility ? 'hideArmour' : 'showArmour'"/>
		<bind name="soundSet" value="'armour_button'"/>
		<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: dockDefaultValues.armourVisibility ? 'IDS_INSTRUCTION_SHIP_ARMOUR_DEMO_OFF' : 'IDS_INSTRUCTION_SHIP_ARMOUR_DEMO_ON'}], _maxWidth: 250}"/>
		<block className="dock_submenu_item_bg" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginLeft value="1px"/>
				<marginRight value="1px"/>
				<marginBottom value="2px"/>
			</style>
			<bind name="transition" value="(mouseDown || rollOver); 0.1; {alpha: 0}; {alpha: 1}"/>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginTop value="4px"/>
			</style>
			<bind name="soundOn" value="'mouseDown'; 'press'; 'default_button'"/>
			<block className="button_armour_switcher" type="native">
				<params>
					<param name="name" value="ButtonArmourDisplay"/>
				</params>
				<params>
					<param name="soundSet" value="none"/>
				</params>
				<bind name="selected" value="dockDefaultValues.armourVisibility"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefaultBold"/>
				<style>
					<marginLeft value="6px"/>
					<marginTop value="-1px"/>
				</style>
				<bind name="text" value="'IDS_ARMOUR_SCHEME'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ArmourPickerControls">
		<style>
			<width value="100%"/>
			<height value="110px"/>
		</style>
		<bind name="inoutAction" value="'ShipArmor.showArmor'; 'ShipArmor.hideArmor'; {outer: true}"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'dockDefaultValues'; 'dockInitData,dockUpdateData'"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="primaryEntityDH" value="'armorPick'; CC.shipArmorPick; shipId; 'evUpdate'"/>
		<bind name="primaryEntityDH" value="'armorConfig'; CC.shipArmorConfig; shipId; 'evUpdate'"/>
		<bind name="primaryEntityDH" value="'armorParts'; CC.shipStructuralParts; shipId; 'evUpdate'"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; shipId"/>
		<bind name="watchDH" value="'isNeedRepair';		['shipOwnEntity.ownShip.evUpdateDockState'];	shipOwnEntity.ownShip.isNeedRepair"/>
		<bind name="watchDH" value="'isNeedShell';		['shipOwnEntity.ownShip.evUpdateDockState'];	shipOwnEntity.ownShip.isNeedShell"/>
		<bind name="watchDH" value="'isLocked';			['shipOwnEntity.ownShip.evUpdateLock'];			shipOwnEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'isInFormation';	['shipOwnEntity.ownShip.evUpdateLock'];			shipOwnEntity.ownShip.isInFormation"/>
		<block className="inner_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<styleClass value="$PxIndent"/>
			<style>
				<marginTop value="-2px"/>
				<alpha value="1.3"/>
			</style>
		</block>
		<bind name="watch" value="'canShowArmour'; 	shipInfoSlim.isDownloaded
									&amp;&amp; !(isLocked &amp;&amp; !isInFormation)
									&amp;&amp; !(isNeedRepair || isNeedShell)"/>
		<block>
			<bind name="visible" value="shipInfoSlim.isDownloaded &amp;&amp; !isLocked &amp;&amp; !(isNeedRepair || isNeedShell)"/>
			<bind name="watch" value="'showBusyIndicator'; armorPick == undefined &amp;&amp; armorConfig == undefined"/>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<styleClass value="$MiddleVAligned"/>
			<bind name="instance" value="'BusyIndicator'; showBusyIndicator ? { _label: 'IDS_BUSY_LOADING_ARMOUR', _showBusyIndicator: showBusyIndicator } : null"/>
		</block>
		<block>
			<bind name="visible" value="!(shipInfoSlim.isDownloaded) || (shipOwnEntity != null &amp;&amp; ((isLocked &amp;&amp; !isInFormation) || isNeedRepair || isNeedShell))"/>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<styleClass value="$MiddleVAligned"/>
			<block type="text">
				<styleClass value="$TextHeaderBold"/>
				<style>
					<width value="280px"/>
					<textAlign value="center"/>
				</style>
				<bind name="class" value="'$FontColorUnready'"/>
				<bind name="text" value="!(shipInfoSlim.isDownloaded)		? toUpperCase(tr('IDS_NOT_AVAILABLE_MESSAGE')) :
						isLocked &amp;&amp; !isInFormation			? toUpperCase(tr('IDS_SHIP_IN_BATTLE')) :
						isNeedRepair || isNeedShell			? toUpperCase(tr('IDS_NEED_SERVICE'))
															: ''"/>
			</block>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="transition" value="armorPick != undefined &amp;&amp; armorConfig != undefined &amp;&amp; canShowArmour; 0.15; {alpha: 0}; {alpha: 1}"/>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<marginTop value="9px"/>
				</style>
				<bind name="repeat" value="armorParts.shipStructuralParts.parts; 'ArmourModulePicker'; {mask: armorPick.shipArmorPick.selectedPartsMask}; true"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="transition" value="armorPick != undefined &amp;&amp; armorConfig != undefined &amp;&amp; canShowArmour; 0.15; {alpha: 0}; {alpha: 1}"/>
				<styleClass value="$MiddleAligned"/>
				<style>
					<marginTop value="15px"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginTop value="-2px"/>
						<marginBottom value="-2px"/>
						<marginLeft value="-2px"/>
						<marginRight value="-2px"/>
					</style>
					<block className="hint_panel" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
				</block>
				<bind name="repeat" value="armorConfig.shipArmorConfig.armorRanges; 'ArmourRangePicker'; {selected:armorPick.shipArmorPick.rangeId}"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="tooltip" value="'MouseInstructionTooltip'; {_multiParagraphArray: [{_paragraphText: 'IDS_SHIP_ARMOUR_WHOLE_RANGE'}], _maxWidth: 300}"/>
				<styleClass value="$MiddleAligned"/>
				<bind name="visible" value="armorPick.shipArmorPick != null"/>
				<style>
					<marginTop value="3px"/>
				</style>
				<block type="text">
					<styleClass value="$TextHeader"/>
					<bind name="text" value="armorPick.shipArmorPick.thicknessMin + ' – ' + armorPick.shipArmorPick.thicknessMax + '' + tr('IDS_MILLIMETER')"/>
				</block>
			</block>
		</block>
	</block>
	<block className="PersonalProposalWindow">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'accountSlotsNum';	['resourceEntity.accountResource.evChangedSlotsNum'];	resourceEntity.accountResource.slotsNum"/>
		<bind name="watchDH" value="'accountGold';		['resourceEntity.accountResource.evChangedGold'];	resourceEntity.accountResource.gold"/>
		<bind name="watchDH" value="'accountCredits';	['resourceEntity.accountResource.evChangedCredit'];	resourceEntity.accountResource.credits"/>
		<bind name="watch" value="'curCurrencyResource'; priceEntity.priceComponent.currency == 'gold' ? accountGold : accountCredits"/>
		<bind name="collectionDH" value="CC.pRMPComponent; 'currentPRMP'"/>
		<bind name="entityDH" value="'prmpEntity'; data.id"/>
		<bind name="entityDH" value="'priceEntity'; prmpEntity.pRMPComponent.prices[0]"/>
		<bind name="watch" value="'isContentLike'; ( prmpEntity.pRMPComponent.prmpType == SC.Common.PRMP_OFFER_TYPES.CONTENT
		|| prmpEntity.pRMPComponent.prmpType == SC.Common.PRMP_OFFER_TYPES.IN_GAME_SURVEY)"/>
		<bind name="watch" value="'isPRMPWithShip'; prmpEntity.pRMPComponent.rewards[0].type == 'Ship'"/>
		<bind name="watch" value="'isPRMPWithURL'; prmpEntity.pRMPComponent.data.url ? true : false"/>
		<bind name="watch" value="'haveFreeSlots'; accountSlotsNum &gt; 0"/>
		<bind name="watch" value="'isExchangeIngame'; prmpEntity.pRMPComponent.rewards[0].type == 'Exchange' &amp;&amp; !(prmpEntity.pRMPComponent.data.url)"/>
		<bind name="watch" value="	'priceDeficit'; priceEntity.priceComponent.currency == 'money' 	||
					prmpEntity.pRMPComponent.rewards[0].type == 'Exchange'			? 0
																					: (priceEntity.priceComponent.finalPrice - curCurrencyResource)"/>
		<block>
			<style>
				<width value="460px"/>
			</style>
			<bind name="style" value="'hitTest'; isUserActionDone ? false : true"/>
			<block className="contrast_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
			<block className="notification_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="style" value="'height'; !isContentLike ? 'auto' : '12px'"/>
				<block type="text">
					<bind name="visible" value="!isContentLike"/>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$TextHeaderWhiteBold"/>
					<style>
						<textAlign value="center"/>
						<styleSheet value="h3
					{
						color: #fecb66;
					}"/>
					</style>
					<bind name="text" value="subst('IDS_PRMP_FOR_YOU', [], {playerName: selfPlayerName })"/>
				</block>
				<block className="button_close" type="native">
					<style>
						<position value="absolute"/>
						<right value="3px"/>
						<top value="3px"/>
					</style>
					<bind name="action" value="'buttonClick'; data.actionName; data.callbackData[1]"/>
					<bind name="dispatch" value="'mouseDown'; 'dragDisabledDown'"/>
					<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_REJECT'}"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="watch" value="'prmpTypeMap'; toDict([SC.Common.PRMP_OFFER_TYPES.IN_GAME, 0],
												[SC.Common.PRMP_OFFER_TYPES.EXTERNAL, 1],
												[SC.Common.PRMP_OFFER_TYPES.CONTENT, 2],
												[SC.Common.PRMP_OFFER_TYPES.IN_GAME_SURVEY, 3])"/>
					<bind name="childParentScope" value="prmpTypeMap[prmpEntity.pRMPComponent.prmpType]; {}; 'PrmpIngame'; 'PrmpExternal'; 'PrmpContent'; 'PrmpIngameSurvey'"/>
				</block>
				<block>
					<styleClass value="$MiddleAligned"/>
					<style>
						<position value="absolute"/>
						<bottom value="3px"/>
					</style>
					<bind name="countdown" value="prmpEntity.pRMPComponent.timeLeft; 'countdownText'; 'HIGHEST'; ''; ''"/>
					<block type="text">
						<style>
							<alpha value="0.7"/>
						</style>
						<styleClass value="$TextDefault"/>
						<bind name="class" value="'$FontColorBlueish'"/>
						<bind name="text" value="isContentLike 	? subst('IDS_HINT_PRMP_CONTENT_LIFETIME', [], {timeLeft: countdownText})
																						: subst('IDS_HINT_PRMP_LIFETIME', [], {timeLeft: countdownText})"/>
					</block>
				</block>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="!isContentLike"/>
				<styleClass value="$InfoBlockIndent"/>
				<block>
					<styleClass value="$MiddleAligned"/>
					<block>
						<bind name="visible" value="!(isPRMPWithShip &amp;&amp; !haveFreeSlots)"/>
						<bind name="style" value="'width'; isPRMPWithURL ? '200px' : '170px'"/>
						<bind name="dispatch" value="'mouseDown'; 'dragDisabledDown'"/>
						<bind name="watch" value="'buttonForPurchasesVisible';	(priceDeficit &lt;= 0) &amp;&amp;
																!(isExchangeIngame) &amp;&amp;
																(priceEntity.priceComponent != null || prmpEntity.pRMPComponent.rewards[0].type == 'Exchange')"/>
						<bind name="instance" value="'DefaultButtonCostMedium'; buttonForPurchasesVisible ?
																					{priceInfo: priceEntity.priceComponent,
																					_enabled: priceEntity.priceComponent,
																					_label: (priceEntity.priceComponent.finalPrice == 0) ? toUpperCase(tr('IDS_PRMP_RECEIVE')) : toUpperCase(tr('IDS_DO_PURCHASE')),
																					_showDiscountTag: true,
																					_action:  data.actionName,
																					_actionParams: data.callbackData[0],
																					_request: isPRMPWithURL ? 'gotoUrlByPRMP' : null,
																					_requestParams: {'url':prmpEntity.pRMPComponent.data.url, 'isIngameUrl':prmpEntity.pRMPComponent.data.isIngameUrl},
																					_isExternal: prmpEntity.pRMPComponent.data.url ? true : false}
																				: null"/>
						<bind name="instance" value="'DefaultButton'; isExchangeIngame || isPRMPWithURL ? {
																					_enabled: !isPRMPWithURL ? priceEntity.priceComponent : true,
																					_label: !isPRMPWithURL ? toUpperCase(tr('IDS_PRMP_RECEIVE')) : toUpperCase(tr('IDS_PRMP_GO_TO_PREM_SHOP')),
																					_action: data.actionName,
																					_actionParams: data.callbackData[0],
																					_request:  isPRMPWithURL ? 'gotoUrlByPRMP' : null,
																					_requestParams: {'url':prmpEntity.pRMPComponent.data.url, 'isIngameUrl':prmpEntity.pRMPComponent.data.isIngameUrl},
																					_isExternal: isPRMPWithURL }
																				: null"/>
						<bind name="action" value="'click'; isExchangeIngame ? (prmpEntity.pRMPComponent.rewards[0].subtype + 'Window')
															: null"/>
					</block>
					<block>
						<styleClass value="$MiddleAligned"/>
						<bind name="instance" value="'PriceDeficit'; priceDeficit &gt; 0 ? { priceInfo: priceEntity.priceComponent, _deficit: priceDeficit} : null"/>
					</block>
					<block>
						<bind name="visible" value="isPRMPWithShip &amp;&amp; !haveFreeSlots"/>
						<styleClass value="$MiddleAligned"/>
						<block type="text">
							<styleClass value="$MiddleAligned"/>
							<styleClass value="$TextHeaderBigDefault"/>
							<bind name="class" value="'$FontColorUnready'"/>
							<style>
								<marginTop value="-4px"/>
							</style>
							<text value="IDS_NO_FREE_SLOTS"/>
						</block>
						<block type="text">
							<styleClass value="$MiddleAligned"/>
							<styleClass value="$TextDefault"/>
							<bind name="class" value="'$FontColorBlueish'"/>
							<style>
								<marginTop value="-4px"/>
							</style>
							<text value="IDS_PRMP_BUY_OR_RID_SLOTS"/>
						</block>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="PrmpIngame">
		<style>
			<width value="100%"/>
		</style>
		<block type="text">
			<bind name="visible" value="prmpEntity.pRMPComponent.data.text"/>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$TextDefault"/>
			<style>
				<marginTop value="12px"/>
				<maxWidth value="400"/>
				<textAlign value="center"/>
			</style>
			<bind name="text" value="prmpEntity.pRMPComponent.data.text"/>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<block>
				<style>
					<width value="150px"/>
					<height value="150px"/>
					<marginBottom value="10px"/>
				</style>
				<block>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$MiddleVAligned"/>
					<block>
						<styleClass value="$MiddleAligned"/>
						<bind name="instance" value="'RewardItem'; prmpEntity.pRMPComponent.rewards[0]; {}"/>
					</block>
					<block type="text">
						<styleClass value="$MiddleAligned"/>
						<styleClass value="$TextHeaderBold"/>
						<style>
							<maxWidth value="130"/>
							<textAlign value="center"/>
							<leading value="-4"/>
						</style>
						<bind name="text" value="isPRMPWithShip 	? 'IDS_PRMP_ITEM_' + toUpperCase(tr(prmpEntity.pRMPComponent.rewards[0].type))
												: 'IDS_PRMP_ITEM_' + toUpperCase(tr(prmpEntity.pRMPComponent.rewards[0].subtype))"/>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="150px"/>
					<height value="130px"/>
				</style>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$MiddleAligned"/>
					<bind name="instance" value="'PRMPDiscountText'; prmpEntity.pRMPComponent.rewards[0].type != 'Exchange' ? {priceEntity : priceEntity} : null"/>
				</block>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$MiddleAligned"/>
					<bind name="instance" value="'PRMPExchangeRatesText'; prmpEntity.pRMPComponent.rewards[0].type == 'Exchange'? {} : null"/>
				</block>
			</block>
			<block>
				<style>
					<width value="150px"/>
					<height value="130px"/>
				</style>
				<block>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$MiddleVAligned"/>
					<bind name="instance" value="'PRMPPriceTag'; prmpEntity.pRMPComponent.rewards[0].type != 'Exchange' ? {priceEntity : priceEntity} : null"/>
				</block>
				<block>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$MiddleVAligned"/>
					<bind name="instance" value="'PRMPExchangeRatesPriceTag'; prmpEntity.pRMPComponent.rewards[0].type == 'Exchange' ? {prmpEntity: prmpEntity, priceEntity: priceEntity, subtype: prmpEntity.pRMPComponent.rewards[0].subtype} : null"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="PrmpExternal">
		<style>
			<width value="100%"/>
			<marginBottom value="30px"/>
		</style>
		<block type="text">
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$TextDefault"/>
			<style>
				<marginTop value="12px"/>
				<maxWidth value="400"/>
				<textAlign value="center"/>
				<marginBottom value="20px"/>
			</style>
			<bind name="text" value="prmpEntity.pRMPComponent.data.text ? prmpEntity.pRMPComponent.data.text : 'IDS_PRMP_GO_TO_PREM_SHOP_DESCR'"/>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<block className="icon_giftbox" type="native"/>
		</block>
	</block>
	<block className="PrmpContent">
		<bind name="watch" value="'prmpButtonText';	prmpEntity.pRMPComponent.data.acceptButtonOfferText != null	? ('IDS_PRMP_' + prmpEntity.pRMPComponent.data.acceptButtonOfferText) :
									prmpChildType == SC.Common.PRMP_CONTENT_TYPES.VIDEO 		? 'IDS_PRMP_WATCH_BUTTON' :
									prmpChildType == SC.Common.PRMP_CONTENT_TYPES.TEXT			? 'IDS_PRMP_READ_BUTTON' :
									prmpChildType == SC.Common.PRMP_CONTENT_TYPES.SURVEY		? 'IDS_PRMP_GO_TO_SURVEY_BUTTON'
																								: 'Wrong PRMP Type' "/>
		<style>
			<marginTop value="18px"/>
			<marginBottom value="32px"/>
		</style>
		<styleClass value="$MiddleAligned"/>
		<block type="text">
			<style>
				<width value="430px"/>
				<marginBottom value="16px"/>
				<textAlign value="center"/>
			</style>
			<styleClass value="$TextHeaderBigDefault"/>
			<bind name="text" value="prmpEntity.pRMPComponent.data.text"/>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<bind name="watch" value="'prmpChildType'; prmpEntity.pRMPComponent.data.contentType != null ? prmpEntity.pRMPComponent.data.contentType : 'empty'"/>
			<bind name="action" value="'buttonClick'; data.actionName; data.callbackData[0]"/>
			<bind name="request" value="'buttonClick'; prmpEntity.pRMPComponent.data.url ? 'gotoUrlByPRMP' : null; {
														url: prmpEntity.pRMPComponent.data.url,
														isIngameUrl: prmpEntity.pRMPComponent.data.isIngameUrl,
														authorization: prmpEntity.pRMPComponent.data.authorization}
															"/>
			<bind name="child" value="prmpChildType;
								{ 	_isExternal: 		(prmpEntity.pRMPComponent.data.isIngameUrl == false &amp;&amp; prmpEntity.pRMPComponent.data.url), 
									_prmpButtonText: 	prmpButtonText,
									_url: 				prmpEntity.pRMPComponent.data.url };
								toDict(
										[SC.Common.PRMP_CONTENT_TYPES.VIDEO, 'PrmpContentVideo'],
										[SC.Common.PRMP_CONTENT_TYPES.TEXT, 'PrmpContentButton'],
										[SC.Common.PRMP_CONTENT_TYPES.SURVEY, 'PrmpContentButton'],
										[empty, 	'EmptyItem']
									)"/>
		</block>
	</block>
	<block className="PrmpIngameSurvey">
		<style>
			<marginTop value="18px"/>
			<marginBottom value="32px"/>
		</style>
		<styleClass value="$MiddleAligned"/>
		<block type="text">
			<style>
				<width value="430px"/>
				<marginBottom value="16px"/>
				<textAlign value="center"/>
			</style>
			<styleClass value="$TextHeaderBigDefault"/>
			<bind name="text" value="prmpEntity.pRMPComponent.data.text"/>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<bind name="action" value="'buttonClick'; data.actionName; data.callbackData[0]"/>
			<bind name="request" value="'buttonClick'; 'showPRMPSurvey'; {data: prmpEntity.pRMPComponent.data.surveyData,
															prmpID: prmpEntity.pRMPComponent.id}"/>
			<bind name="instance" value="'PrmpContentButton';
								{ 	_isExternal: 		false,
									_prmpButtonText: 	'IDS_PRMP_GO_TO_SURVEY_BUTTON',
									_url: 				null }"/>
		</block>
	</block>
	<block className="PrmpContentVideo">
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
				<marginTop value="2px"/>
				<marginBottom value="2px"/>
				<marginLeft value="2px"/>
				<marginRight value="2px"/>
				<backgroundStretchX value="true"/>
				<backgroundStretchY value="true"/>
				<backgroundImage value="url:../accountLevel/videoPreviews/video_preview_1.jpg"/>
			</style>
		</block>
		<block className="button_infopanel_no_label" type="native">
			<style>
				<width value="309px"/>
				<height value="174px"/>
			</style>
			<block>
				<style>
					<alpha value="0.9"/>
				</style>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$MiddleAligned"/>
				<block>
					<styleClass value="$MiddleAligned"/>
					<style>
						<hitTest value="false"/>
						<marginTop value="12px"/>
					</style>
					<block className="button_play" type="native">
						<bind name="gotoAndStop!" value="'small'"/>
					</block>
				</block>
				<block>
					<styleClass value="$MiddleAligned"/>
					<style>
						<hitTest value="false"/>
						<marginTop value="12px"/>
					</style>
					<block type="text">
						<style>
							<textAlign value="center"/>
						</style>
						<bind name="class" value="'$TextLargeHeaderBold'"/>
						<bind name="text" value="_prmpButtonText"/>
					</block>
				</block>
			</block>
			<block className="icon_out_grey" type="native">
				<bind name="visible" value="_isExternal == true"/>
				<style>
					<position value="absolute"/>
					<top value="4px"/>
					<right value="4px"/>
					<hitTest value="false"/>
				</style>
			</block>
		</block>
	</block>
	<block className="PrmpContentButton">
		<styleClass value="$MiddleAligned"/>
		<bind name="child" value="_url ? 1 : 0; { _label: _prmpButtonText, _isExternal: _isExternal, _isTransactionBtn: false, _enabled: true, _width: (_prmpButtonText.length * 8 + 15 +'px') };'DefaultButton'; 'PrmpContentButtonURL'"/>
	</block>
	<block className="PrmpContentButtonURL">
		<block className="BannerButton">
			<block className="button_infopanel" type="native">
				<params>
					<param name="name" value="none"/>
				</params>
				<bind name="input"/>
				<bind name="label" value="_label"/>
			</block>
			<block className="icon_guide" type="native">
				<styleClass value="$MiddleVAligned"/>
				<style>
					<position value="absolute"/>
					<left value="8px"/>
					<hitTest value="false"/>
				</style>
			</block>
		</block>
		<block className="icon_out_grey" type="native">
			<bind name="visible" value="_isExternal == true"/>
			<style>
				<position value="absolute"/>
				<top value="4px"/>
				<right value="4px"/>
				<hitTest value="false"/>
			</style>
		</block>
	</block>
	<block className="PRMPDiscountText">
		<block type="text">
			<style>
				<marginTop value="7px"/>
				<textAlign value="center"/>
				<leading value="-3"/>
				<styleSheet value="h3
			{
				font-size: 50;
			}"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$TextLargeHeaderBold"/>
			<bind name="text" value="subst('IDS_PRMP_DISCOUNT', [], {value: priceEntity.priceComponent.discountPercent, percent: '%'})"/>
		</block>
	</block>
	<block className="PRMPExchangeRatesText">
		<block type="text">
			<style>
				<maxWidth value="110"/>
				<textAlign value="center"/>
				<leading value="-4"/>
				<styleSheet value="h3
			{
				font-size: 35;
				font-family: $WWSDefaultFontBold;
			}"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$TextHeader"/>
			<text value="IDS_PRMP_YOUR_EXCHANGE_RATES"/>
		</block>
	</block>
	<block className="PRMPPriceTag">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY + priceEntity.priceComponent.id; 'priceInfoSet'"/>
		<block>
			<styleClass value="$MiddleAligned"/>
			<block>
				<bind name="visible" value="priceEntity.priceComponent.finalPrice == 0"/>
				<block className="icon_discount" type="native">
					<bind name="gotoAndStop!" value="'large'"/>
				</block>
				<block type="text">
					<styleClass value="$TextHeaderBold"/>
					<bind name="text" value="toUpperCase(tr('IDS_FOR_FREE'))"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<bind name="visible" value="priceEntity.priceComponent.finalPrice != 0"/>
				<bind name="instance" value="'PriceTag'; { priceInfo: priceEntity.priceComponent, _showDiscountTag: true, _large: true, _isExternal: false }"/>
			</block>
		</block>
		<block>
			<bind name="style" value="'marginLeft'; (priceEntity.priceComponent.finalPrice == 0) ? '-30%' : '-40%'"/>
			<style>
				<left value="50%"/>
			</style>
			<block>
				<style>
					<alpha value="0.6"/>
				</style>
				<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: priceEntity.priceComponent.basePrice, currency: priceEntity.priceComponent.currency }, _medium: true }"/>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="icon_price_strikethrough" type="native">
					<style>
						<width value="110%"/>
						<height value="40%"/>
						<top value="60%"/>
						<marginTop value="-50%"/>
						<position value="absolute"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="PRMPExchangeRatesPriceTag">
		<bind name="child" value="prmpEntity.pRMPComponent.rewards[0].subtype; { priceEntity: priceEntity }; {	creditsGold: 'PRMPCreditsRate',
																								xpFreeExp:	'PRMPFreeExpRate',
																								goldMoney: 'PRMPGoldRate'
																							}"/>
	</block>
	<block className="PRMPCreditsRate">
		<block>
			<styleClass value="$MiddleAligned"/>
			<bind name="instance" value="'PriceTag'; { priceInfo: {finalPrice: 1, currency: 'gold'}, _large:true} "/>
		</block>
		<block type="text">
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$TextAccent"/>
			<style>
				<marginTop value="-12px"/>
				<marginBottom value="-6px"/>
			</style>
			<text value="="/>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<bind name="instance" value="'PriceTag'; {priceInfo: priceEntity.priceComponent, _showDiscountTag:true, _customLabel: 'IDS_RATE', _large: true}"/>
		</block>
	</block>
	<block className="PRMPFreeExpRate">
		<block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<bind name="instance" value="'PriceTag'; { priceInfo: priceEntity.priceComponent, _showDiscountTag: true, _large: true, _customLabel: 'IDS_RATE'} "/>
			</block>
			<block type="text">
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$TextAccent"/>
				<text value="+"/>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<bind name="instance" value="'PriceTag'; { priceInfo: {finalPrice: 1, currency: 'gold'}, _large: true} "/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block type="text">
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$TextAccent"/>
			<style>
				<marginTop value="-6px"/>
				<marginBottom value="-6px"/>
			</style>
			<text value="="/>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<bind name="instance" value="'PriceTag'; { priceInfo: {finalPrice: priceEntity.priceComponent.finalPrice, currency: 'freexp'}, _large: true} "/>
		</block>
	</block>
	<block className="PRMPGoldRate">
		<block>
			<styleClass value="$MiddleAligned"/>
			<bind name="instance" value="'PriceTag'; {priceInfo: priceEntity.priceComponent, _showDiscountTag:true, _customLabel: 'IDS_RATE', _large: true}"/>
		</block>
		<block type="text">
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$TextAccent"/>
			<style>
				<marginTop value="-12px"/>
				<marginBottom value="-6px"/>
			</style>
			<text value="="/>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<bind name="instance" value="'PriceTag'; { priceInfo: {finalPrice: 100, currency: 'gold'}, _large:true} "/>
		</block>
	</block>
	<block className="VoiceChatOutgoingIcon">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'VoiceChatState'"/>
		<bind name="transition" value="VoiceChatState.outgoing; 0.15; {alpha: 0}; {alpha: 1}"/>
		<bind name="tooltip" value="'MouseInstructionTooltip'; VoiceChatState.outgoing ?	{	_multiParagraphArray:  [{_paragraphText: 'IDS_VOICE_CHAT_OUTGOING_STATE_HINT'}],
													_maxWidth: 250, _isInBattle: _isInBattle} : null"/>
		<block>
			<bind name="transition" value="_isSpeaking; 0.15; {alpha: 0.6}; {alpha: 1}"/>
			<block className="icon_voice_chat" type="native"/>
		</block>
	</block>
	<css name="$BattleTypeDeny">
		<width value="100%"/>
		<marginTop value="2px"/>
		<marginLeft value="8px"/>
	</css>

	<block className="StartBattleButtonBig">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'operationsAccountLocked';	['resourceEntity.accountResource.evOperationsLockChanged'];	resourceEntity.accountResource.operationsLocked"/>
		<bind name="collectionDH" value="CC.ownShip; 'shipsInFormation'; 'shipsInFormation'"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'shipId'; ['dockEntity.shipSelection.evShipUpdate']; dockEntity.shipSelection.currentShipId"/>
		<bind name="watchDH" value="'shipIdForModuleInset'; ['dockEntity.shipSelection.evShipViewUpdate']; dockEntity.shipSelection.currentShipIdForModuleInset"/>
		<bind name="firstEntityDH" value="'enterBattleEntity'; CC.enterBattle"/>
		<bind name="watchDH" value="'selectedBattle'; ['enterBattleEntity.enterBattle.evBattleTypesChanged']; enterBattleEntity.enterBattle.selectedBattle"/>
		<bind name="primaryEntityDH" value="'battleTypeEntity'; CC.battleType; selectedBattle.type"/>
		<bind name="watchDH" value="'fightButtonDenyReasons'; ['battleTypeEntity.battleType.evDisableReasonChanged']; battleTypeEntity.battleType.fightButtonReasons"/>
		<bind name="watch" value="'buttonEnabled'; ((fightButtonDenyReasons.length == 0) &amp;&amp; (operationsAccountLocked != true))"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		
		<style>
			<width value="146px"/>
			<height value="50px"/>
			<backgroundColor value="0x01000000"/>
		</style>
		<bind name="tooltip" value="'StartButtonWarningsTooltip'; (fightButtonDenyReasons.length &gt; 0) ? {_warningsArr: fightButtonDenyReasons} : null"/>

		<block className="StHub">
			<bind name="controller" value="sthub.Controller"/>
			<block type="text">
				<bind name="text" value="'Hello world'"/>
			</block>
		</block>

		
        <block type="text">
            <bind name="text" value="'Bye world'"/>
        </block>

		<block className="button_fight" type="native">
			<bind name="name" value="'buttonStartBattle'"/>
			<bind name="label" value="toUpperCase(tr('IDS_START_BATTLE'))"/>
			<bind name="soundSet" value="'hard_button'"/>
			<bind name="action" value="'buttonClick'; 'onBattleButtonClick'; {}"/>
			<bind name="enabled" value="buttonEnabled"/>
			<bind name="tooltip" value="'StartBattleTooltip'; buttonEnabled	?	{_shipID: shipsInFormation.length &gt; 0	? shipsInFormation[0].ownShip.id
																										: shipId,
																_battleType: selectedBattle.type,
																_instructionType: 'left'}
															: null"/>
		</block>
	</block>
	<block className="StartBattleButtonSmall">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'operationsAccountLocked';	['resourceEntity.accountResource.evOperationsLockChanged'];	resourceEntity.accountResource.operationsLocked"/>
		<bind name="collectionDH" value="CC.ownShip; 'shipsInFormation'; 'shipsInFormation'"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'shipId'; ['dockEntity.shipSelection.evShipUpdate']; dockEntity.shipSelection.currentShipId"/>
		<bind name="watchDH" value="'shipIdForModuleInset'; ['dockEntity.shipSelection.evShipViewUpdate']; dockEntity.shipSelection.currentShipIdForModuleInset"/>
		<bind name="firstEntityDH" value="'enterBattleEntity'; CC.enterBattle"/>
		<bind name="watchDH" value="'selectedBattle'; ['enterBattleEntity.enterBattle.evBattleTypesChanged']; enterBattleEntity.enterBattle.selectedBattle"/>
		<bind name="primaryEntityDH" value="'battleTypeEntity'; CC.battleType; selectedBattle.type"/>
		<bind name="watchDH" value="'fightButtonDenyReasons'; ['battleTypeEntity.battleType.evDisableReasonChanged']; battleTypeEntity.battleType.fightButtonReasons"/>
		<bind name="contains" value="_availableBattleTypes; selectedBattle.type == $item.type; 'isSelectedInBattles'; 0; 'selectedBattle'"/>
		<bind name="watch" value="'buttonEnabled'; ((fightButtonDenyReasons.length == 0) &amp;&amp; (operationsAccountLocked != true) &amp;&amp; (isSelectedInBattles || !_availableBattleTypes)) &amp;&amp; !(_isLockedExternally)"/>
		<bind name="tooltip" value="'StartButtonWarningsTooltip'; (fightButtonDenyReasons.length &gt; 0) ? {_warningsArr: fightButtonDenyReasons} : null"/>
		<bind name="tooltip" value="'StartBattleTooltip'; buttonEnabled 	? {	_shipID: shipsInFormation.length &gt; 0	? shipsInFormation[0].ownShip.id
																									: shipId,
																					_battleType: selectedBattle.type,
																					_instructionType: 'left'}
												 								: null"/>
		<bind name="instance" value="'ButtonSpecial'; {	_enabled: buttonEnabled, 
										_action: 'onBattleButtonClick', 
										_actionParams: {},
										_name: 'buttonStartBattleSmall',
										_label: toUpperCase(tr('IDS_START_BATTLE'))
									}"/>
	</block>
	<block className="BattleTypeChooser">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'dockDefaultValues'; 'dockInitData,dockUpdateData'"/>
		<bind name="firstEntityDH" value="'enterBattleEntity'; CC.enterBattle"/>
		<bind name="watchDH" value="'selectedBattle'; ['enterBattleEntity.enterBattle.evBattleTypesChanged']; enterBattleEntity.enterBattle.selectedBattle"/>
		<bind name="firstEntityDH" value="'chosenPrimeTimeEntity'; CC.clanBattlePrimeTime; 'chosen'"/>
		<bind name="firstEntityDH" value="'fixedPrimeTimeEntity'; CC.clanBattlePrimeTime; 'fixed'"/>
		<bind name="firstEntityDH" value="'clanCurrentSeasonEntity'; CC.clanBattleSeason; 'current'"/>
		<bind name="watchDH" value="'isBrawl'; ['clanCurrentSeasonEntity.clanBattleSeason.evChanged']; clanCurrentSeasonEntity.clanBattleSeason.isBrawl"/>
		<bind name="primaryEntityDH" value="'battleTypeEntity'; CC.battleType; selectedBattle.type"/>
		<bind name="watchDH" value="'selected'; 	['battleTypeEntity.battleType.evSelectionChanged']; battleTypeEntity.battleType.selected"/>
		<bind name="watchDH" value="'status'; 	['battleTypeEntity.battleType.evStatusChanged']; 	battleTypeEntity.battleType.status"/>
		<bind name="watchDH" value="'description';	[]; battleTypeEntity.battleType.description"/>
		<bind name="watchDH" value="'type'; 			[]; battleTypeEntity.battleType.type"/>
		<bind name="watchDH" value="'label'; 		[]; battleTypeEntity.battleType.label"/>
		<bind name="feature" value="3; ''"/>
		<bind name="feature" value="16; ''"/>
		<bind name="feature" value="24; ''"/>
		<bind name="feature" value="28; ''"/>
		<bind name="watch" value="'btnChooserEnable'; (divisionData.isCommander || !(divisionData.divisionExist)) &amp;&amp; !(_isLockedExternally)"/>
		<bind name="tooltip" value="'ClanBattleTypeTooltip'; btnChooserEnable &amp;&amp; type == 'ClanBattle'	? { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_CHOOSE_BATTLE_TYPE'}]}
																						: null"/>
		<bind name="tooltip" value="'BattletypeTooltip'; 	btnChooserEnable &amp;&amp; type != 'ClanBattle'	? {_battleType: type, _description: type == BattleTypes.INTRO_MISSION 
																						? dockDefaultValues.introMissionDescription : description} 
																						: null"/>
		<bind name="tooltip" value="'SimpleWarningTooltip'; !(btnChooserEnable) 	? {_text: tr('IDS_STARTBATTLE_LOCK_REASON_NOT_COMMANDER_DIVISION')}
																: null"/>
		<bind name="tooltip" value="'BattletypeInfotip'; (btnChooserEnable &amp;&amp; !_fromDock) ? { _battleTypes: _battleTypes, _isInCoachPVP: showCoachScreen } : null; 6; null; 'battletypeInfotipIsVisible'"/>
		<style>
			<width value="100%f"/>
			<height value="60px"/>
			<backgroundColor value="0x01000000"/>
		</style>
		<bind name="request" value="'click'; (btnChooserEnable &amp;&amp; _fromDock) ? 'modalSelectBattleType' : null; {}"/>
		<block>
			<bind name="style" value="'alpha'; btnChooserEnable ? 1 : 0.7"/>
			<style>
				<width value="100%f"/>
				<height value="100%f"/>
				<flow value="horizontal"/>
				<marginTop value="11px"/>
			</style>
			<bind name="name" value="'ButtonDock'"/>
			<bind name="watch" value="'pveDifficultyPostfix'; operationIsHard ? '_hard' : ''"/>
			<bind name="watch" value="'pveIconLabel'; (operationType == 'event' ? 'PVEBattle_event' : 'PVEBattle') + pveDifficultyPostfix"/>
			<block className="icon_battletypes_small" type="native">
				<bind name="transition" value="rollOver &amp;&amp; !(mouseDown); 0.07; {alpha: 0.85}; {alpha: 1.0}"/>
				<bind name="name" value="selectedBattle.type == BattleTypes.PVE_BATTLE ? 'operationType_' + operationEntity.operation.gpName : ''"/>
				<style>
					<marginTop value="2px"/>
					<hitTest value="false"/>
				</style>
				<bind name="gotoAndStop!" value="type == BattleTypes.RANKED_BATTLE	?	(status == 0)			? (rankedBattlesSeason.isJuniorSeason == true)	? 'RankedBattle_junior'	
																																									: 'RankedBattle'
																	:	(status == 1)			? (rankedBattlesSeason.isJuniorSeason == true)	? 'RankedBattle_junior_inactive'
																																									: 'RankedBattle_inactive'
																													: (rankedBattlesSeason.isJuniorSeason == true)	? 'RankedBattle_junior_disabled'
																																									: 'RankedBattle_disabled'
							: type == BattleTypes.CLAN_BATTLE		? 	(status == 0)			?	isBrawl ? 'ClanBrawl'
																																: 'ClanBattle'
																	:	(status == 2)			?	isBrawl ? 'ClanBrawl_disabled'
																																: 'ClanBattle_disabled'
																													: 	isBrawl ? 'ClanBrawl_inactive'
																																: 'ClanBattle_inactive'
							: type == BattleTypes.PVE_BATTLE	?	(status == 2)				?	'PVEBattle_disabled'
																:	(chosenDifficulty == 'hard')		?	'PVEBattle_hard'
																													:	pveIconLabel
																: type"/>
			</block>
			<block>
				<style>
					<width value="1280:7,1920:11aw"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%f"/>
					<hitTest value="false"/>
				</style>
				<styleClass value="$MiddleVAligned"/>
				<bind name="firstEntityDH" value="'pveStateEntity'; CC.pveState"/>
				<bind name="watchDH" value="'chosenOperationId'; ['pveStateEntity.pveState.evStateUpdated']; pveStateEntity.pveState.chosenOperation"/>
				<bind name="watchDH" value="'activeOperationId'; ['pveStateEntity.pveState.evStateUpdated']; pveStateEntity.pveState.activeOperation"/>
				<bind name="watchDH" value="'chosenDifficulty';	['pveStateEntity.pveState.evStateUpdated']; pveStateEntity.pveState.chosenDifficulty"/>
				<bind name="primaryEntityDH" value="'operationEntity'; CC.operation; chosenOperationId"/>
				<bind name="watchDH" value="'operationType';	['operationEntity.operation.evStatusChanged']; operationEntity.operation.type"/>
				<bind name="watchDH" value="'operationIsHard'; []; operationEntity.operation.isHard"/>
				<bind name="watch" value="'isChosenOperationOfTheWeek'; ((chosenOperationId == activeOperationId) &amp;&amp; (chosenDifficulty == 'normal'))"/>
				<bind name="watch" value="'pveBattleButtonText';  (chosenOperationId == '')	? tr('IDS_PVE_OPERATION_IS_NOT_SELECTED')
																			: tr('IDS_' + toUpperCase(operationEntity.operation.gpName) + '_NAME')"/>
				<block>
					<bind name="watch" value="'clanBrawlButtonText'; 'IDS_CLAN_BRAWL'"/>
					<bind name="watch" value="'battleTypeLabel'; (selectedBattle.type == BattleTypes.PVE_BATTLE) 			? pveBattleButtonText :
												(selectedBattle.type ==BattleTypes.CLAN_BATTLE &amp;&amp; isBrawl)  ? clanBrawlButtonText
																											: label"/>
					<style>
						<width value="100%f"/>
					</style>
					<block type="text">
						<bind name="name" value="'battleTypeChooserBtn'"/>
						<style>
							<width value="100%f"/>
							<multiline value="false"/>
						</style>
						<styleClass value="$TextDefaultBold17NM"/>
						<bind name="class" value="'$FontColorBlueish'"/>
						<bind name="transition" value="rollOver &amp;&amp; !(mouseDown); 0.07; {alpha: 0.85}; {alpha: 1.0}"/>
						<bind name="text" value="battleTypeLabel"/>
					</block>
					<block>
						<bind name="primaryEntityDH" value="'rankedBattleTypeEntity'; CC.battleType; BattleTypes.RANKED_BATTLE"/>
						<bind name="watchDH" value="'rankedBattleStatus'; ['rankedBattleTypeEntity.battleType.evStatusChanged']; rankedBattleTypeEntity.battleType.status"/>
						<bind name="watch" value="'isDivisionsAvailableInRankedBattle'; rankedBattlesSeason.isDivisionAllowed == true"/>
						<bind name="watch" value="'isSelectableRankedBattle'; ((rankedBattleStatus != 2) &amp;&amp; (!(divisionData.divisionExist) || isDivisionsAvailableInRankedBattle))"/>
						<bind name="primaryEntityDH" value="'pveBattleTypeEntity'; CC.battleType; BattleTypes.PVE_BATTLE"/>
						<bind name="watchDH" value="'pveBattleStatus'; ['pveBattleTypeEntity.battleType.evStatusChanged']; pveBattleTypeEntity.battleType.status"/>
						<bind name="watch" value="'isSelectablePVEBattle'; pveBattleStatus != 2"/>
						<bind name="fade" value="(feature_3 == 'new' || (feature_16 == 'new' &amp;&amp; isSelectableRankedBattle)|| (feature_24 == 'new' &amp;&amp; isSelectablePVEBattle) || feature_28 == 'new') &amp;&amp; _fromDock; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
						<style>
							<position value="absolute"/>
							<top value="-8px"/>
							<right value="-36px"/>
						</style>
						<bind name="instance" value="'MarkerNewAttention'; { }"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block type="text">
					<bind name="transition" value="rollOver &amp;&amp; !(mouseDown); 0.07; {alpha: 0.75}; {alpha: 1.0}"/>
					<styleClass value="$TextDefault13NM"/>
					<bind name="class" value="'$FontColorStrongBlueish'"/>
					<style>
						<width value="100%f"/>
						<multiline value="false"/>
						<marginTop value="8"/>
					</style>
					<bind name="text" value="'IDS_CHOOSE_BATTLE_TYPE'"/>
				</block>
				<bind name="instance" value="'ContextGuidingTipHub'; _fromDock &amp;&amp; _canShowTip ? {
																					_tooltipID: SC.Context_guiding_tip.TIP_TYPES.DOCK_RANDOM_FIGHT,
																					_tipPositioning: 'bottom',
																					_extraCondition: true,
																					_offset: 12,
																					_screenOffset : 0
																				}
																			: null "/>
			</block>
		</block>
	</block>
	<block className="BattletypeInfotip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<style>
			<width value="316px"/>
		</style>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
				<marginLeft value="13px"/>
				<marginRight value="13px"/>
				<marginTop value="9px"/>
				<marginBottom value="18px"/>
			</style>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap3" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
		</block>
		<block className="dock_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block className="dock_panel_pin" type="native">
			<bind name="gotoAndStop!" value="'up'"/>
			<bind name="name" value="'pinTop'"/>
			<style>
				<position value="absolute"/>
				<alpha value="0.5"/>
			</style>
		</block>
		<block>
			<style>
				<marginTop value="9px"/>
				<marginBottom value="19px"/>
			</style>
			<bind name="repeat" value="_battleTypes; 'ListBattleTypeRenderer'; {_lastTypeIndex: (battleTypes.length - 1 ), _isInCoachPVP: _isInCoachPVP}"/>
		</block>
	</block>
	<block className="ListBattleTypeRenderer">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'dockDefaultValues'; 'dockInitData,dockUpdateData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesStats'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'rankedBattlesRanks';  rankedBattlesStats.rank; 'curRankInfo'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<bind name="primaryEntityDH" value="'battleTypeEntity'; CC.battleType; type"/>
		<bind name="watchDH" value="'selected'; ['battleTypeEntity.battleType.evSelectionChanged']; battleTypeEntity.battleType.selected"/>
		<bind name="watchDH" value="'status'; ['battleTypeEntity.battleType.evStatusChanged']; battleTypeEntity.battleType.status"/>
		<bind name="watchDH" value="'battleTypeDenyReasons'; ['battleTypeEntity.battleType.evDisableReasonChanged']; battleTypeEntity.battleType.battleTypeReasons"/>
		<bind name="watchDH" value="'description'; []; battleTypeEntity.battleType.description"/>
		<bind name="watchDH" value="'label'; []; battleTypeEntity.battleType.label"/>
		<bind name="watchDH" value="'featureId'; []; battleTypeEntity.battleType.featureId"/>
		<bind name="feature" value="featureId; featureId == 19 ? '' : 'rollOver'"/>
		<bind name="visible" value="((featureState != 'locked') || (featureId == null))"/>
		<bind name="action" value="'buttonClick'; 'setBattleType'; {battleType: type}"/>
		<bind name="dispatch" value="'buttonClick'; _isInCoachPVP &amp;&amp; type == BattleTypes.RANDOM_BATTLE ? 'evChooseRandomBattle' : 'evChooseSomeBattleType'"/>
		<bind name="watch" value="'isBright'; (selected || rollOver) &amp;&amp; status != 2"/>
		<bind name="style" value="'colorMatrixFilter'; (status == 2) ? '0 -100 0 -20' : '0 0 0 0'"/>
		<style>
			<width value="288px"/>
			<marginLeft value="14px"/>
		</style>
		<block className="dock_submenu_item" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="style" value="'hitTest'; status != 2"/>
			<bind name="name" value="'typeItem' + type"/>
			<params>
				<param name="soundSet" value="dropmenu_button"/>
			</params>
			<bind name="selected" value="selected"/>
			<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left',
																		_instructionText: tr('IDS_CHOOSE') + ' ' + tr(labelIds + '_ACC')}],
																		_maxWidth: 250 }"/>
		</block>
		<block>
			<bind name="transition" value="isBright; 0.1; {alpha: 0.8}; {alpha: 1}; {alpha: 0.8}"/>
			<style>
				<width value="100%"/>
				<marginTop value="6px"/>
				<hitTest value="false"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="4px"/>
				</style>
				<block className="icon_battletypes" type="native">
					<bind name="gotoAndStop!" value="type == BattleTypes.RANKED_BATTLE	?	(status == 0)	? (rankedBattlesSeason.isJuniorSeason == true)	? 'RankedBattle_junior'	
																																								: 'RankedBattle'
																		:	(status == 1)	? (rankedBattlesSeason.isJuniorSeason == true)	? 'RankedBattle_junior_inactive'
																																								: 'RankedBattle_inactive'
																												: 	'RankedBattle_disabled'
									: type == BattleTypes.CLUB_BATTLE	? 	(status == 0)	?	'ClubBattle'
																		:	(status == 2)	?	'ClubBattle_disabled'
																												: 	'ClubBattle_inactive'
									: type == BattleTypes.PVE_BATTLE	? 'PVEBattle'
																		: type"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<marginLeft value="4px"/>
						<marginRight value="9px"/>
					</style>
					<block className="icon_check" type="native">
						<style>
							<position value="absolute"/>
							<top value="7px"/>
							<right value="3px"/>
						</style>
						<bind name="visible" value="selected"/>
					</block>
					<block>
						<style>
							<width value="100%f"/>
						</style>
						<block type="text">
							<style>
								<width value="100%f"/>
							</style>
							<bind name="transition" value="(rollOver &amp;&amp; !mouseDown) || (selected); 0.1; {alpha: 0.9}; {alpha: 1}; {alpha: 0.9}; 2"/>
							<bind name="class" value="'$FontColorBlueish'"/>
							<bind name="class" value="'$BattleTypeSelected'"/>
							<bind name="text" value="label"/>
						</block>
						<block>
							<bind name="fade" value="featureState == 'new' &amp;&amp; !selected &amp;&amp; (status == 0); 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
							<style>
								<position value="absolute"/>
								<top value="0px"/>
								<right value="-34px"/>
							</style>
							<bind name="instance" value="'MarkerNewAttention'; { }"/>
						</block>
					</block>
					<block type="text">
						<style>
							<maxWidth value="182"/>
							<marginTop value="-2px"/>
						</style>
						<styleClass value="$TextSecondary"/>
						<bind name="class" value="'$FontColorBlueish'"/>
						<bind name="text" value="type == BattleTypes.INTRO_MISSION ? dockDefaultValues.introMissionDescription : description"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="(battleTypeDenyReasons.length &gt; 0) || (type == BattleTypes.RANKED_BATTLE) || (type == BattleTypes.CLUB_BATTLE)"/>
				<style>
					<width value="270px"/>
					<marginLeft value="9px"/>
					<marginBottom value="6px"/>
					<marginTop value="4px"/>
				</style>
				<bind name="firstEntityDH" value="'clubsCommonEntity'; CC.clubsCommon"/>
				<bind name="watchDH" value="'primeTimeFinishTime'; ['clubsCommonEntity.clubsCommon.evRulesChanged']; clubsCommonEntity.clubsCommon.primeTimeFinishTime"/>
				<bind name="countdown" value="primeTimeFinishTime; 'primeTimeCountdown'; 'HIGHEST'"/>
				<bind name="instance" value="'BattletypeDenyReason'; (battleTypeDenyReasons.length &gt; 0)	? { _neutral: false,	_reasonText: battleTypeDenyReasons[0], _maxWidth: 270} :
													(type == BattleTypes.CLUB_BATTLE)	? { _neutral: true,		_reasonText: (tr('IDS_CLUB_BATTLES_PRIMETIME_ENDS_IN') + ' ' + primeTimeCountdown), _maxWidth: 270} :
													(type == BattleTypes.RANKED_BATTLE)	? { _neutral: true,		_reasonText: curRankInfo.allowedTheirsShipsDescription, _maxWidth: 270}
																					: null"/>
			</block>
			<block>
				<style>
					<height value="4px"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="_lastTypeIndex != $index"/>
				<style>
					<width value="100%"/>
					<bottom value="0px"/>
					<marginLeft value="-1px"/>
					<marginRight value="-1px"/>
					<position value="absolute"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="BattletypeDenyReason">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; _reasonText == 'IDS_RANK_BATTLES_SEASON_IS_NOT_ACTIVE_SEASON_STARTS_IN'	? 'rankedBattlesSeason'
																																					: null"/>
		<bind name="countdown" value="rankedBattlesSeason.startTime; 'seasonTimeStart'; 'HIGHEST'; ''; 'ACC'"/>
		<block type="text">
			<style>
				<leading value="-3"/>
			</style>
			<styleClass value="$TextDefaultNM"/>
			<bind name="class" value="(_neutral ? '$FontColorDefault' : '$FontColorUnready')"/>
			<bind name="style" value="'textAlign'; _textAlign ? _textAlign : 'left'"/>
			<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 250"/>
			<bind name="watch" value="'reasonText'; ((_reasonText == 'IDS_RANK_BATTLES_SEASON_IS_NOT_ACTIVE_SEASON_STARTS_IN')	?	(tr(_reasonText) + ' ' + seasonTimeStart)
																															:	_reasonText)"/>
			<bind name="substitute" value="5; {'[icon]': 'icon_warning_orange_bm'}; (_neutral ? reasonText : ('[icon] ' + reasonText))"/>
		</block>
	</block>
	<block className="BigReadyForFormationBattleButton">
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'isSelfPlayerReady'; ['selfPlayerEntity.preBattlePlayerSimple.evStateChanged']; selfPlayerEntity.preBattlePlayerSimple.isReady"/>
		<bind name="firstEntityDH" value="'enterBattleEntity'; CC.enterBattle"/>
		<bind name="watchDH" value="'selectedBattle'; ['enterBattleEntity.enterBattle.evBattleTypesChanged']; enterBattleEntity.enterBattle.selectedBattle"/>
		<bind name="primaryEntityDH" value="'battleTypeEntity'; CC.battleType; selectedBattle.type"/>
		<bind name="watchDH" value="'readyButtonDenyReasons'; ['battleTypeEntity.battleType.evDisableReasonChanged']; battleTypeEntity.battleType.readyButtonReasons"/>
		<block className="tab_bar_bg" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<styleClass value="$PxCorrection"/>
			<style>
				<hitTest value="false"/>
			</style>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="fade" value="!isSelfPlayerReady; 0.3; {alpha: 0}; {alpha: 1}; {alpha: 0}; 1; 0"/>
				<block>
					<styleClass value="$Fullsize"/>
					<style>
						<backgroundColor value="0xAAFF9933"/>
						<marginLeft value="1px"/>
						<marginRight value="1px"/>
						<marginBottom value="1px"/>
						<marginTop value="1px"/>
					</style>
					<bind name="fade" value="!isSelfPlayerReady; 1.0; {alpha: 1}; {alpha: 0}; {alpha: 1}; 1; 0.5"/>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="fade" value="isSelfPlayerReady; 0.3; {alpha: 0}; {alpha: 1}; {alpha: 0}; 1; 0"/>
				<block>
					<styleClass value="$Fullsize"/>
					<style>
						<backgroundColor value="0x804CE8AA"/>
						<marginLeft value="1px"/>
						<marginRight value="1px"/>
						<marginBottom value="1px"/>
						<marginTop value="1px"/>
					</style>
					<bind name="fade" value="isSelfPlayerReady; 1.0; {alpha: 1}; {alpha: 0}; {alpha: 1}; 1; 0.5"/>
				</block>
			</block>
		</block>
		<bind name="watch" value="'isReadyBtnEnabled'; (readyButtonDenyReasons.length == 0) ? true : false"/>
		<block>
			<style>
				<width value="146px"/>
				<height value="51px"/>
			</style>
			<bind name="tooltip" value="'MultipleWarningsTooltip'; !isReadyBtnEnabled &amp;&amp; !isSelfPlayerReady ? {_warningsArr: readyButtonDenyReasons} : null"/>
			<bind name="tooltip" value="'FormationReadyButtonTooltip'; isReadyBtnEnabled &amp;&amp; !isSelfPlayerReady ? {} : null"/>
			<bind name="tooltip" value="'FormationNotReadyButtonTooltip'; isSelfPlayerReady ? {} : null; 0"/>
			<block className="status_ready_item_big" type="native">
				<style>
					<marginLeft value="2px"/>
					<marginRight value="2px"/>
					<marginBottom value="2px"/>
				</style>
				<styleClass value="$Fullsize"/>
				<bind name="style" value="'colorMatrixFilter'; isReadyBtnEnabled || isSelfPlayerReady ? '0 0 0 0' : '0 -100 0 -40'"/>
				<bind name="style" value="'mouseEnabled'; isReadyBtnEnabled"/>
				<bind name="label" value="toUpperCase(tr('IDS_READY'))"/>
				<bind name="action" value="'buttonClick'; _isTrainingRoom ? 'setIsReadyInTrainingRoom' : 'setIsReadyInDivision'; {isReady: isSelfPlayerReady ? false : true}"/>
				<bind name="selected" value="isSelfPlayerReady"/>
			</block>
		</block>
	</block>
	<block className="LootBoxes">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
		<bind name="stageSize"/>
		<bind name="watch" value="'leftOffset'; ((20 + (stageWidth - 1280)/14))"/>
		<styleClass value="$FullsizeAbsolute"/>
		<block>
			<bind name="style" value="'marginLeft'; (leftOffset - 11) + 'px')"/>
			<bind name="style" value="'marginTop'; (leftOffset - 14) + 'px'"/>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<marginLeft value="-12px"/>
					<marginRight value="-12px"/>
					<marginBottom value="-6px"/>
					<marginTop value="-6px"/>
				</style>
				<block className="BlurMapCustom">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap5_feather" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
			</block>
			<block>
				<bind name="style" value="'hitTest'; activeAnimation ? false : true"/>
				<bind name="style" value="'colorMatrixFilter'; activeAnimation ? '0 -80 0 -20' : '0 0 0 0'"/>
				<bind name="instance" value="'BackButton'; {_text: 'IDS_RETURN_TO_DOCK', _action: 'moveFromBarge'}"/>
			</block>
		</block>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="style" value="'right'; (leftOffset - 4) + 'px')"/>
			<bind name="style" value="'top'; (leftOffset - 4) + 'px'"/>
			<bind name="style" value="'hitTest'; activeAnimation ? false : true"/>
			<bind name="style" value="'colorMatrixFilter'; activeAnimation ? '0 -80 0 -20' : '0 0 0 0'"/>
			<block className="ModalWindowCloseIcon">
				<style>
					<position value="absolute"/>
					<right value="0px"/>
					<top value="0px"/>
					<flow value="horizontal"/>
				</style>
				<bind name="name" value="'btn_cancel'"/>
				<bind name="input"/>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLOSE'}; 0"/>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<backgroundColor value="0x01000000"/>
					</style>
					<bind name="dispatch" value="'mouseOver'; 'overEscapeButton'"/>
					<bind name="dispatch" value="'mouseOut'; 'upEscapeButton'"/>
					<bind name="dispatch" value="'mouseDown'; 'downEscapeButton'"/>
					<block>
						<bind name="soundSet" value="'default_button'"/>
						<bind name="catch" value="'overEscapeButton'; {EscapeButtonOverAlpha: 1}"/>
						<bind name="catch" value="'upEscapeButton'; {EscapeButtonOverAlpha: 0.8}"/>
						<bind name="catch" value="'downEscapeButton'; {EscapeButtonOverAlpha: 0.4}"/>
						<style>
							<alpha value="0.8"/>
						</style>
						<bind name="style" value="'alpha'; EscapeButtonOverAlpha"/>
						<bind name="instance" value="'HotkeyWithText'; {_text: 'ESC'}"/>
					</block>
					<block>
						<style>
							<marginTop value="3px"/>
						</style>
						<block className="button_close" type="native">
							<bind name="catch" value="'overEscapeButton'; {CrossButtonStates: 'over'}"/>
							<bind name="catch" value="'upEscapeButton'; {CrossButtonStates: 'up'}"/>
							<bind name="catch" value="'downEscapeButton'; {CrossButtonStates: 'down'}"/>
							<params>
								<param name="focusable" value="false"/>
							</params>
							<bind name="gotoAndPlay!" value="CrossButtonStates"/>
						</block>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<style>
				<top value="19sh"/>
				<width value="100%"/>
				<position value="absolute"/>
			</style>
			<block>
				<style>
					<position value="absolute"/>
					<width value="300px"/>
				</style>
				<bind name="style" value="'marginLeft'; (leftOffset) + 'px')"/>
				<block>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginLeft value="-28px"/>
						<marginRight value="-28px"/>
						<marginBottom value="-14px"/>
						<marginTop value="-14px"/>
					</style>
					<block className="BlurMapCustom">
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
						<styleClass value="$FullsizeAbsolute"/>
						<style>
							<hitTest value="false"/>
						</style>
						<bind name="visible" value="optionData.blurEnabled"/>
						<block className="mc_blurmap5_feather" type="native">
							<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
							<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
							<styleClass value="$Fullsize"/>
							<bind name="blurMap" value="0"/>
						</block>
					</block>
				</block>
				<block type="text">
					<styleClass value="$TextDefaultBold17NM"/>
					<style>
						<alpha value="0.8"/>
						<marginBottom value="16px"/>
					</style>
					<bind name="text" value="toUpperCase(tr('IDS_LOOTBOXES'))"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<alpha value="0.8"/>
						<marginBottom value="8px"/>
					</style>
					<bind name="repeat" value="[	{_paragraphText: 'IDS_LOOTBOX_HINT_0'},
								{_paragraphText: 'IDS_LOOTBOX_HINT_1'}]; 'RepeatParagraphItem'; {	_maxWidth: 300, _marginBottom: '18px',
																									_middleAligned: false, _class: '$TextDefault17NM',
																									_textAlign: 'left', _leading: -2}"/>
				</block>
				<block>
					<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
					<bind name="watchDH" value="'hasRecruitsStatus'; ['selfPlayerEntity.accountSelf.evHasRecruitsStatusChanged']; selfPlayerEntity.accountSelf.hasRecruitsStatus"/>
					<bind name="instance" value="'ReferralSystemBanner'; hasRecruitsStatus == SC.Common.HAS_RECRUITS_STATUS.NO ? {} : null"/>
				</block>
				<block>
					<bind name="visible" value="(eventLootboxBannerTillEnd &gt; 0) &amp;&amp; (eventLootboxBannerTillStart &lt; 0)"/>
					<bind name="primaryEntityDH" value="'webEventEntity'; CC.webEvent; 'WebEventLootboxesShop'"/>
					<bind name="watchDH" value="'startTS'; ['webEventEntity.webEvent.evUpdate']; webEventEntity.webEvent.startTS"/>
					<bind name="watchDH" value="'endTS'; ['webEventEntity.webEvent.evUpdate']; webEventEntity.webEvent.endTS"/>
					<bind name="serverTime" value="'serverTime'"/>
					<bind name="watch" value="'eventLootboxBannerTillStart'; (startTS - serverTime)"/>
					<bind name="watch" value="'eventLootboxBannerTillEnd'; (endTS - serverTime)"/>
					<style>
						<marginTop value="24px"/>
					</style>
					<bind name="instance" value="'EventLootboxBanner';	{	_backgroundImage	: 'url:../service_kit/event_lootbox_hint_header/post_apocalypse_lootboxes.jpg',
															_showAnimation		: true,
															_bannerText			: 'IDS_LOOTBOXES_BANNER_TEXT',
															_instructionText 	: 'IDS_LOOTBOXES_TOOLTIP_TEXT',
															_request 			: 'webBrowser',
															_requestParams 		: { url: URL.EVENT_LOOTBOX_INFO_IN_GAME }
														}"/>
				</block>
			</block>
			<bind name="firstEntityDH" value="'lootboxEntity'; CC.lootboxConfigComponent"/>
			<bind name="watchDH" value="'maxBought';				['lootboxEntity.lootboxConfigComponent.evUpdate'];	lootboxEntity.lootboxConfigComponent.maxBought"/>
			<bind name="watchDH" value="'lootboxExp';			['lootboxEntity.lootboxStorageComponent.evUpdate'];	lootboxEntity.lootboxStorageComponent.lootExp"/>
			<bind name="watchDH" value="'boughtToday';			['lootboxEntity.lootboxStorageComponent.evUpdate'];	lootboxEntity.lootboxStorageComponent.boughtToday"/>
			<bind name="watchDH" value="'lootboxesInStorage';	['lootboxEntity.lootboxStorageComponent.evUpdate'];	lootboxEntity.lootboxStorageComponent.inStorage"/>
			<bind name="watchDH" value="'dropTimeStamp';			['lootboxEntity.lootboxStorageComponent.evUpdate'];	lootboxEntity.lootboxStorageComponent.dropAt"/>
			<bind name="watch" value="'allBoxesBought'; (maxBought == boughtToday)"/>
			<bind name="watch" value="'canBuyLootbox'; (lootboxExp &gt;= lootboxEntity.lootboxConfigComponent.prices[boughtToday])"/>
			<bind name="watch" value="'curLootboxPrice'; allBoxesBought	? -1
														:  lootboxEntity.lootboxConfigComponent.prices[boughtToday]"/>
			<bind name="watch" value="'expLeft'; curLootboxPrice - lootboxExp"/>
			<bind name="watchDH" value="'openedLootboxRewards'; ['lootboxEntity.lootboxComponent.evUpdate']; lootboxEntity.lootboxComponent.rewards"/>
			<bind name="watchDH" value="'activeAnimation'; ['lootboxEntity.lootboxAnimationState.evUpdate']; lootboxEntity.lootboxAnimationState.active"/>
			<bind name="watch" value="'isGetBtnEnabled'; (canBuyLootbox &amp;&amp; !(allBoxesBought) &amp;&amp; !(activeAnimation))"/>
			<bind name="changeDispatch" value="activeAnimation; 'activeAnimationChangedEv'; {}; 2"/>
			<bind name="action" value="'activeAnimationChangedEv'; activeAnimation ? 'lockBargeControls' : 'unlockBargeControls'; {}"/>
			<bind name="watchDH" value="'lootboxOpened';	['lootboxEntity.lootboxAnimationState.evUpdate']; lootboxEntity.lootboxAnimationState.open"/>
			<block>
				<style>
					<position value="absolute"/>
					<width value="320px"/>
					<top value="-14px"/>
				</style>
				<bind name="style" value="'right'; (leftOffset) + 'px')"/>
				<block>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginLeft value="-30px"/>
						<marginRight value="-30px"/>
						<marginBottom value="-33px"/>
						<marginTop value="-33px"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap10_feather" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 0.55}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 0.55}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
				<block className="notification_panel" type="native">
					<bind name="visible" value="optionData.contrast"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginLeft value="-30px"/>
						<marginRight value="-30px"/>
						<marginBottom value="-33px"/>
						<marginTop value="-33px"/>
					</style>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<height value="91px"/>
					</style>
					<block>
						<bind name="fade" value="!(allBoxesBought); 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}; 1"/>
						<bind name="name" value="'earnedExp'"/>
						<styleClass value="$MiddleAligned"/>
						<style>
							<backgroundColor value="0x01000000"/>
						</style>
						<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_LOOTBOX_EXP_HINT'}"/>
						<block>
							<block type="text">
								<style>
									<fontSize value="48"/>
								</style>
								<styleClass value="$TextAccentBoldAccountLevel1"/>
								<bind name="text" value="format(lootboxExp, -1)"/>
							</block>
							<block className="icon_exp_big" type="native">
								<style>
									<marginLeft value="2px"/>
								</style>
								<styleClass value="$MiddleVAligned"/>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
						<block type="text">
							<style>
								<marginTop value="-9px"/>
								<marginBottom value="9px"/>
							</style>
							<styleClass value="$MiddleAligned"/>
							<styleClass value="$TextHeader"/>
							<bind name="class" value="'$FontColorBlueish'"/>
							<bind name="text" value="'IDS_AVAILABLE_EXP_FOR_LOOTBOXES'"/>
						</block>
					</block>
					<block>
						<bind name="fade" value="allBoxesBought; 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}; 1"/>
						<bind name="countdown" value="dropTimeStamp; 'countdownText'; 'hh:mm:ss'"/>
						<style>
							<width value="100%"/>
							<position value="absolute"/>
							<bottom value="17px"/>
						</style>
						<block type="text">
							<style>
								<width value="100%"/>
								<textAlign value="center"/>
							</style>
							<styleClass value="$TextHeaderWhiteBold"/>
							<bind name="class" value="'$FontColorUnready'"/>
							<bind name="text" value="toUpperCase(tr('IDS_LOOTBOX_PURCHASE_WILL_BE_AVAILABLE_AFTER'))"/>
						</block>
						<block type="text">
							<style>
								<marginTop value="3px"/>
							</style>
							<styleClass value="$MiddleAligned"/>
							<styleClass value="$TextHeaderWhiteBold"/>
							<bind name="class" value="'$FontColorUnready'"/>
							<bind name="pureText" value="'-' + countdownText"/>
						</block>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
					<block>
						<block className="HorizontalDivider">
							<styleClass value="$PxHorizontalCorrection"/>
							<style>
								<width value="100%"/>
								<height value="3px"/>
							</style>
							<block className="divider_h" type="native">
								<styleClass value="$Fullsize"/>
							</block>
						</block>
						<style>
							<position value="absolute"/>
							<width value="100%"/>
						</style>
					</block>
				</block>
				<block>
					<style>
						<height value="144px"/>
						<width value="100%"/>
					</style>
					<bind name="transition" value="allBoxesBought; 0.15; {height: 146}; {height: 104}; {height: 144}; 1; 0.17"/>
					<block>
						<styleClass value="$MiddleAligned"/>
						<style>
							<marginBottom value="39px"/>
							<marginTop value="62px"/>
						</style>
						<bind name="repeat" value="lootboxEntity.lootboxConfigComponent.prices; 'LootboxProgressBarWithLootbox'; {_isGetBtnEnabled: isGetBtnEnabled}"/>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<params>
							<param name="name" value="getLootBox"/>
						</params>
						<bind name="feature" value="30; ''"/>
						<bind name="fade" value="(canBuyLootbox &amp;&amp; !(allBoxesBought)); 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}; 1; 0.15"/>
						<styleClass value="$MiddleAligned"/>
						<style>
							<width value="200px"/>
						</style>
						<block>
							<bind name="instance" value="'DefaultButton'; {	_width: 			'200px', 
															_enabled: 			isGetBtnEnabled, 
															_isTransactionBtn: 	false,
															_request: 			'openPurchaseLootboxWindow', 
															_requesParams: 		{}, 
															_label: 			toUpperCase(tr('IDS_PURCHASE_LOOTBOX_C'))}"/>
						</block>
						<block>
							<bind name="watch" value="'isNewMarkerLootbox'; feature_30 == 'new'"/>
							<style>
								<position value="absolute"/>
								<top value="-8px"/>
								<right value="-16px"/>
							</style>
							<bind name="instance" value="'MarkerNewAttention'; isNewMarkerLootbox &amp;&amp; canBuyLootbox ? { } : null"/>
						</block>
					</block>
					<block>
						<bind name="fade" value="!(canBuyLootbox) &amp;&amp; !(allBoxesBought); 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}; 1; 0.15"/>
						<styleClass value="$MiddleAligned"/>
						<block type="text">
							<styleClass value="$TextHeader"/>
							<bind name="class" value="'$FontColorBlueish'"/>
							<bind name="text" value="tr('IDS_EXP_TO_NEXT_LOOTBOX') + tr('IDS_COLON')"/>
						</block>
						<block>
							<style>
								<marginLeft value="2px"/>
							</style>
							<block type="text">
								<styleClass value="$TextHeaderWhiteBold"/>
								<bind name="text" value="format(expLeft, -1)"/>
							</block>
							<block>
								<styleClass value="$MiddleVAligned"/>
								<block className="icon_exp" type="native">
									<style>
										<marginLeft value="-2px"/>
									</style>
								</block>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
					<block>
						<block className="HorizontalDivider">
							<styleClass value="$PxHorizontalCorrection"/>
							<style>
								<width value="100%"/>
								<height value="3px"/>
							</style>
							<block className="divider_h" type="native">
								<styleClass value="$Fullsize"/>
							</block>
						</block>
						<style>
							<position value="absolute"/>
							<width value="100%"/>
						</style>
					</block>
				</block>
				<block>
					<style>
						<marginTop value="21px"/>
						<width value="100%"/>
					</style>
					<block type="text">
						<bind name="transition" value="(lootboxesInStorage &gt; 0); 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}; 1; 0.15"/>
						<style>
							<width value="100%"/>
							<marginBottom value="24px"/>
							<marginTop value="-3px"/>
							<textAlign value="center"/>
						</style>
						<styleClass value="$TextHeaderWhiteBold"/>
						<bind name="class" value="'$FontSizeHeader4'"/>
						<bind name="text" value="subst('IDS_OWNED_LOOTBOXES', [], {lootboxesCount: lootboxesInStorage}, lootboxesInStorage)"/>
					</block>
					<block type="text">
						<bind name="transition" value="(lootboxesInStorage &lt;= 0); 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}; 1; 0.15"/>
						<style>
							<width value="100%"/>
							<position value="absolute"/>
							<textAlign value="center"/>
						</style>
						<styleClass value="$TextHeaderWhiteBold"/>
						<bind name="class" value="'$FontColorUnready'"/>
						<bind name="text" value="toUpperCase(tr('IDS_YOU_HAVE_NO_LOOTBOXES'))"/>
					</block>
					<block>
						<params>
							<param name="name" value="openLootBox"/>
						</params>
						<bind name="watch" value="'_isOpenBtnEnabled'; (!(activeAnimation) &amp;&amp; (lootboxesInStorage &gt; 0))"/>
						<bind name="style" value="'hitTest'; (_isOpenBtnEnabled == true)"/>
						<bind name="transition" value="(lootboxesInStorage &gt; 0); 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}"/>
						<styleClass value="$MiddleAligned"/>
						<style>
							<width value="210px"/>
						</style>
						<bind name="instance" value="'DefaultButton'; {	_width: '210px', _enabled: _isOpenBtnEnabled, _isTransactionBtn: true,
														_action: 'LootboxProxy.openLootbox', _actionParams: {}, _label: toUpperCase(tr('IDS_OPEN_LOOTBOX'))}"/>
						<bind name="dispatch" value="'click'; lootboxOpened ? 'hideRewards' : null; {}; true"/>
					</block>
					<block>
						<bind name="firstEntityDH" value="'lootboxStateEntity'; CC.lootboxOpeningState"/>
						<bind name="handleEventDH" value="'lootboxStateEntity.lootboxOpeningState.evLootboxesOpenStarted'; 'startOpenLootboxes'"/>
						<bind name="action" value="'startOpenLootboxes'; 'openLootboxes'; {}"/>
						<params>
							<param name="name" value="openAllLootBoxes"/>
						</params>
						<bind name="watch" value="'_isOpenALLBtnEnabled'; (!(activeAnimation) &amp;&amp; (lootboxesInStorage &gt; 2))"/>
						<bind name="style" value="'hitTest'; (_isOpenALLBtnEnabled == true)"/>
						<bind name="transition" value="(lootboxesInStorage &gt; 2); 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}"/>
						<styleClass value="$MiddleAligned"/>
						<style>
							<width value="210px"/>
							<marginTop value="32px"/>
						</style>
						<bind name="instance" value="'DefaultButton'; {	_width: '210px', _enabled: _isOpenALLBtnEnabled, _isTransactionBtn: true,
														_action: 'LootboxProxy.openLootboxes', _actionParams: {}, _label: toUpperCase(tr('IDS_OPEN_ALL_LOOTBOXES'))}"/>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="(lootboxOpened == true)"/>
				<style>
					<top value="19.5sh"/>
				</style>
				<styleClass value="$MiddleAlignedAbsolutely"/>
				<styleClass value="$MiddleVAligned"/>
				<block>
					<bind name="repeat" value="(lootboxOpened ? openedLootboxRewards : 0); 'LootboxRewardItemAdapter'; {_openedLootboxRewards: openedLootboxRewards}"/>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
		<bind name="var" value="{lootboxGot: false}"/>
		<bind name="handleEventDH" value="'lootboxEntity.lootboxStorageComponent.evLootboxGot'; 'lootboxBoughtEv'"/>
		<bind name="watchDH" value="'curBoxType'; ['lootboxEntity.lootboxStorageComponent.evUpdate'];	lootboxEntity.lootboxStorageComponent.curBoxType"/>
		<bind name="watchDH" value="'chosenToGotBoxType'; ['lootboxEntity.lootboxStorageComponent.evUpdate'];	lootboxEntity.lootboxStorageComponent.chosenBoxType"/>
		<bind name="watch" value="'isEpicBox'; (curBoxType == 5)"/>
		<bind name="catch" value="'lootboxBoughtEv'; {lootboxGot: true}"/>
		<bind name="watch" value="'isEpicLootboxGotNotFromLuckyType'; (isEpicBox &amp;&amp; (chosenToGotBoxType != 4) &amp;&amp; lootboxGot)"/>
		<bind name="dispatch" value="'lootboxBoughtEv'; 'lootboxBoughtFinishedEv'; {}; 2; 4.5"/>
		<bind name="catch" value="'lootboxBoughtFinishedEv'; {lootboxGot: false}"/>
		<block>
			<styleClass value="$EyeLevelVAligned"/>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<bind name="fade" value="!(isEpicLootboxGotNotFromLuckyType); 0.25; {alpha: 0}; {alpha: 1}; {alpha: 0}; 1; 3.2"/>
			<bind name="instance" value="'LuckyLootboxAnimation'; isEpicLootboxGotNotFromLuckyType ? {} : null"/>
		</block>
	</block>
	<block className="LuckyLootboxAnimation">
		<bind name="dispatch" value="'addedToStage'; 'startAnimationEv'; {}; 2; 1"/>
		<bind name="dispatch" value="'startAnimationEv'; 'startIssueAnimationEv'; {}; 2; 0.25"/>
		<bind name="var" value="{luckyIssuedState: 'not_issued'}"/>
		<bind name="catch" value="'startIssueAnimationEv'; {luckyIssuedState: 'animation'}"/>
		<block>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<styleClass value="$MiddleVAligned"/>
			<block className="icon_lucky_animation" type="native">
				<style>
					<position value="absolute"/>
				</style>
				<bind name="soundOn" value="'startAnimationEv'; 'epicwin'; 'lucky_soundset'"/>
				<bind name="event" value="'startAnimationEv'; 'gotoAndPlay'; 'animation_lucky'"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="luckyIssuedState == 'animation'"/>
			<style>
				<marginTop value="42px"/>
			</style>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<block>
				<style>
					<position value="absolute"/>
				</style>
				<block className="icon_issued" type="native">
					<style>
						<marginLeft value="1.7%"/>
						<alpha value="0.9"/>
					</style>
					<bind name="scaleX" value="0.85"/>
					<bind name="scaleY" value="0.85"/>
					<innerBind elementName="item.item" name="text" value="toUpperCase(tr('IDS_PURCHASE_CHANCE_LOOTBOX_EPIC'))"/>
					<bind name="gotoAndPlay!" value="luckyIssuedState ? luckyIssuedState : 'not_issued'"/>
				</block>
			</block>
		</block>
	</block>
	<block className="LootboxProgressBarWithLootbox">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="firstEntityDH" value="'lootboxEntity'; CC.lootboxConfigComponent"/>
		<bind name="watchDH" value="'lootboxExp';			['lootboxEntity.lootboxStorageComponent.evUpdate'];	lootboxEntity.lootboxStorageComponent.lootExp"/>
		<bind name="watchDH" value="'boughtToday';			['lootboxEntity.lootboxStorageComponent.evUpdate'];	lootboxEntity.lootboxStorageComponent.boughtToday"/>
		<bind name="watchDH" value="'lootboxPrices';			['lootboxEntity.lootboxConfigComponent.evUpdate'];	lootboxEntity.lootboxConfigComponent.prices"/>
		<bind name="watch" value="'expToLootbox'; 			lootboxPrices[$index] - lootboxExp"/>
		<bind name="watch" value="'isBought'; ($index &lt; boughtToday)"/>
		<bind name="watch" value="'canBuy'; (lootboxExp &gt;= lootboxPrices[$index]) &amp;&amp; !isBought"/>
		<bind name="watch" value="'rawLootboxProgress';	$index == 0 ?	lootboxExp / $value :
										$index == 1 ?	(lootboxExp - lootboxPrices[0]) / ($value - lootboxPrices[0])
													:	(lootboxExp - lootboxPrices[0] - lootboxPrices[1]) / ($value - lootboxPrices[1] - lootboxPrices[0])"/>
		<bind name="watch" value="'curLootboxProgress';	rawLootboxProgress &gt; 1	? 1
																: rawLootboxProgress"/>
		<bind name="var" value="{progressBarWidth: [55, 95, 135],
				progressBarHeight: 9}"/>
		<bind name="style" value="'marginRight'; ($index == 2 ? '21px' : '0px')"/>
		<bind name="watch" value="'curBarInProgress';	lootboxExp &lt; lootboxPrices[0]	? 0 :
										lootboxExp &lt; lootboxPrices[1]	? 1
																		: 2"/>
		<bind name="style" value="'alpha'; isBought ? 0.7 : 1"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<marginRight value="1px"/>
			</style>
			<bind name="instance" value="'LootboxProgressBar'; {_width: progressBarWidth[$index], _height: progressBarHeight, _curValue: (curLootboxProgress*10)}"/>
		</block>
		<block>
			<bind name="visible" value="$index == 0"/>
			<style>
				<position value="absolute"/>
				<left value="-8px"/>
				<marginTop value="6px"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefaultBold"/>
				<bind name="text" value="0"/>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<block className="icon_exp_small" type="native">
					<style>
						<marginLeft value="-1px"/>
						<marginTop value="1px"/>
					</style>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<top value="-40px"/>
				<right value="-25px"/>
			</style>
			<bind name="tooltip" value="'SimpleTooltip'; isBought ? {tooltipText: 'IDS_LOOTBOX_GOT'} : null"/>
			<block>
				<style>
					<marginRight value="6px"/>
				</style>
				<block>
					<style>
						<width value="32px"/>
						<height value="32px"/>
						<left value="-3px"/>
					</style>
					<bind name="watch" value="'availableLootbox'; canBuy &amp;&amp; _isGetBtnEnabled"/>
					<block>
						<bind name="visible" value="availableLootbox"/>
						<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; null; 'ct_'"/>
						<bind name="var" value="{ 
		ctRollOver: {
			redMultiplier: 1,
			greenMultiplier: 1,
			blueMultiplier: 1,
			alphaMultiplier: 1,
			redOffset: 30,
			greenOffset: 30,
			blueOffset: 30,
			alphaOffset: 0
		}
	}"/>
						<bind name="var" value="{ 
		ctMouseDown: {
			redMultiplier: 1,
			greenMultiplier: 1,
			blueMultiplier: 1,
			alphaMultiplier: 1,
			redOffset: -30,
			greenOffset: -30,
			blueOffset: -30,
			alphaOffset: 0
		}
	}"/>
						<bind name="colorTransform" value="	true &amp;&amp; (ct_mouseDown)	? ctMouseDown :
							true &amp;&amp; (ct_rollOver)	? ctRollOver
														: {}"/>
						<bind name="request" value="'click'; 'openPurchaseLootboxWindow'; {}"/>
						<bind name="soundSet" value="'resources_widget'"/>
						<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_GET_LOOTBOX'}], _maxWidth: 250 }"/>
						<bind name="instance" value="'MarkerNewRewardsAnimate'; { _iconReward: 'url:../service_kit/port_banner/icon_banner_container.png' }"/>
					</block>
					<block>
						<bind name="visible" value="!availableLootbox"/>
						<bind name="style" value="'alpha'; isBought ? 0.7 : 1"/>
						<bind name="tooltip" value="'UnavailableLootboxTooltip'; isBought 	?	null
																			:	{ _lootProgress: (curLootboxProgress*10), _expToLootbox: expToLootbox }"/>
						<bind name="instance" value="'BannerItemIcon'; { _iconUrl: isBought ? 'url:../service_kit/port_banner/icon_banner_container.png' : 'url:../service_kit/port_banner/icon_banner_container_lock.png' }"/>
					</block>
				</block>
				<block className="icon_issued_small" type="native">
					<bind name="visible" value="isBought"/>
					<style>
						<position value="absolute"/>
						<top value="55%"/>
						<left value="50%"/>
						<hitTest value="false"/>
					</style>
					<bind name="rotation" value="-2"/>
					<bind name="scaleX" value="0.95"/>
					<bind name="scaleY" value="0.95"/>
					<innerBind elementName="item.item" name="text" value="'IDS_RECEIVED'"/>
					<bind name="gotoAndStop!" value="'issued'"/>
				</block>
			</block>
			<block>
				<styleClass value="$MiddleAlignedAbsolutely"/>
				<style>
					<marginTop value="46px"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefaultBold"/>
					<bind name="text" value="format($value, -1)"/>
				</block>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<block className="icon_exp_small" type="native">
						<style>
							<marginLeft value="-1px"/>
							<marginTop value="1px"/>
						</style>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="LootboxRewardItemAdapter">
		<bind name="entityDH" value="'rewardEntity'; $value"/>
		<bind name="appear" value="'addedToStage'; 0.25; 0.1 + $index*0.23; {alpha: 0, top: 35}; {alpha: 1, top: 0}; 1"/>
		<bind name="appear" value="'hideRewards'; 0.15; 0; {alpha: 1, top: 0}; {alpha: 0, top: 20}"/>
		<style>
			<marginRight value="1.8sw"/>
			<marginLeft value="1.8sw"/>
		</style>
		<bind name="name" value="'rewardItem_' + $index + '_' + rewardEntity.rewardComponent.name"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap5_feather" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="instance" value="'RewardItem'; rewardEntity.rewardComponent"/>
		</block>
	</block>
	<block className="EventLootboxBanner">
		<style>
			<width value="339px"/>
			<height value="176px"/>
		</style>
		<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: _instructionText}], _maxWidth: 230}"/>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="style" value="'backgroundImage'; _backgroundImage"/>
		</block>
		<block>
			<bind name="visible" value="_showAnimation == true"/>
			<style>
				<position value="absolute"/>
				<left value="190px"/>
				<top value="-20px"/>
				<width value="175px"/>
				<height value="175px"/>
			</style>
			<block className="lesta.controls.video.VideoResourcePlayer" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<params>
					<param name="keepAspectRatio" value="false"/>
				</params>
				<bind name="play!" value="'./gui/video/sparks_001.usm'"/>
			</block>
		</block>
		<block type="text">
			<styleClass value="$TextDefaultBold21NM"/>
			<bind name="class" value="'$FontColorDefault'"/>
			<style>
				<maxWidth value="300"/>
				<position value="absolute"/>
				<marginTop value="24px"/>
				<marginLeft value="24px"/>
				<leading value="-4"/>
			</style>
			<bind name="text" value="toUpperCase(tr(_bannerText))"/>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="white_panel_gradient" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="transition" value="event_banner_rollOver; 0.15; {alpha: 0}; {alpha: 0.3}"/>
				<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; null; 'event_banner_'"/>
				<bind name="request" value="'click'; _request ? _request : null; _requestParams ? _requestParams : {}"/>
			</block>
		</block>
	</block>
	<block className="ReferralSystemBanner">
		<bind name="request" value="'click'; 'webBrowser'; { url: URL.PLAYTOGETHER_IN_GAME }"/>
		<bind name="tooltip" value="'MouseInstructionTooltip'; {	_multiParagraphArray: [{_paragraphText: 'IDS_DOCK_BANNER_REF_SYS_TOOLTIP_INFO_BLOCK'}],
												_mouseInstructions: [{_type: 'left', _instructionText: 'IDS_GO_TO_REFERRAL_SYSTEM'}],
												_maxWidth: 250 }"/>
		<style>
			<width value="339px"/>
			<height value="90px"/>
			<backgroundImage value="url:../service_kit/referral_system/lootboxes_referral_banner_bg.jpg"/>
		</style>
		<block type="text">
			<styleClass value="$TextDefaultBold21NM"/>
			<bind name="class" value="'$FontColorDefault'"/>
			<bind name="class" value="'$DropShadowDisabler'"/>
			<style>
				<maxWidth value="300"/>
				<position value="absolute"/>
				<marginTop value="24px"/>
				<marginLeft value="24px"/>
				<leading value="-4"/>
			</style>
			<bind name="text" value="toUpperCase(tr('IDS_INVITE_FRIEND'))"/>
		</block>
	</block>
	<css name="$TextDefault17NMTech">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="17"/>
		<marginText value="-3px|-4px|-7px|-6px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0x9CBABA"/>
	</css>
	<block className="ClanMainInset">
		<bind name="name" value="'ClansHomePage'"/>
		<styleClass value="$Fullsize"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'inset'; ['dockEntity.insetComponent.evUpdate']; dockEntity.insetComponent.inset"/>
		<bind name="primaryEntityDH" value="'pageEntity'; CC.insetPage; LobbyConstants.CLAN"/>
		<bind name="watchDH" value="'page'; ['pageEntity.insetPage.evUpdate']; pageEntity.insetPage.page"/>
		<bind name="watchDH" value="'pageData'; ['pageEntity.dataComponent.evDataChanged']; pageEntity.dataComponent.data"/>
		<bind name="changeDispatch" value="pageData; 'evPageDataChanged'"/>
		<bind name="action" value="'addedToStage'; 'openClansWindow'; pageData"/>
		<bind name="action" value="'evPageDataChanged'; 'navigateClansWindow' : ''; { 'urlParams': pageData}"/>
		<bind name="action" value="'removedFromStage'; 'closeClansWindow'; {}"/>
	</block>
	<block className="LeadingClanSquadIcon">
		<style>
			<backgroundSize value="cover"/>
		</style>
		<bind name="style" value="'width'; _isBig ? '30px' : '18px'"/>
		<bind name="style" value="'height'; _isBig ? '30px' : '18px'"/>
		<bind name="style" value="'backgroundImage'; 'url:../service_kit/icons/icon_leading_squad_' + (_isGolden ? 'golden_' : 'white_') + (_isBig ? 'big' : 'small') + '.png'"/>
	</block>
	<block className="DropdownInfotip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<style>
			<width value="1px"/>
		</style>
		<bind name="style" value="'width'; _width ? _width : '100px'"/>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
			</style>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
		</block>
		<block className="dock_panel" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
				<marginTop value="-9px"/>
				<marginRight value="-14px"/>
				<marginBottom value="-19px"/>
				<marginLeft value="-14px"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="_dropdownContentElement; { _menuScope: _menuScope }"/>
		</block>
	</block>
	<block className="InstructionParagraph">
		<style>
			<width value="100%"/>
		</style>
		<block type="text">
			<styleClass value="$TextDefault"/>
			<style>
				<width value="100%"/>
				<alpha value="0.9"/>
			</style>
			<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 220"/>
			<bind name="text" value="_text"/>
		</block>
	</block>
	<block className="InstructionParagraphNM">
		<style>
			<width value="100%"/>
		</style>
		<block type="text">
			<bind name="class" value="_class ? _class : '$TextDefaultNM'"/>
			<style>
				<width value="100%"/>
				<alpha value="0.7"/>
			</style>
			<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 220"/>
			<bind name="text" value="_text"/>
		</block>
	</block>
	<block className="InstructionMultiParagraph">
		<style>
			<flow value="horizontal"/>
			<width value="100%"/>
		</style>
		<block className="icon_instruction" type="native">
			<bind name="gotoAndStop!" value="_type"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="-3px"/>
			</style>
			<bind name="repeat" value="_instructionArray; 'InstructionParagraph'"/>
		</block>
	</block>
	<block className="InstructionWarning">
		<style>
			<flow value="horizontal"/>
		</style>
		<block className="icon_warning_orange" type="native"/>
		<block type="text">
			<style>
				<marginTop value="-4px"/>
				<marginLeft value="4px"/>
			</style>
			<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 180"/>
			<styleClass value="$WarningTextOrange"/>
			<bind name="style" value="'leading'; _leading ? _leading : -3"/>
			<bind name="text" value="_instructionText"/>
		</block>
	</block>
	<block className="InstructionRestricion">
		<style>
			<flow value="horizontal"/>
		</style>
		<block className="icon_restrict_red" type="native"/>
		<block type="text">
			<style>
				<marginTop value="-3px"/>
				<marginLeft value="4px"/>
			</style>
			<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 180"/>
			<styleClass value="$WarningTextRed"/>
			<bind name="style" value="'leading'; _leading ? _leading : -3"/>
			<bind name="text" value="_instructionText"/>
		</block>
	</block>
	<block className="InstructionIsOwned">
		<style>
			<flow value="horizontal"/>
		</style>
		<block className="icon_check" type="native"/>
		<block type="text">
			<styleClass value="$TextDefaultNM"/>
			<bind name="class" value="'$FontColorGolden'"/>
			<style>
				<marginTop value="2px"/>
				<marginLeft value="8px"/>
			</style>
			<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 180"/>
			<bind name="style" value="'leading'; _leading ? _leading : -3"/>
			<bind name="text" value="_instructionText"/>
		</block>
	</block>
	<block className="MouseInstruction">
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<bind name="visible" value="_type!='no_icon'"/>
			<block className="icon_mouse" type="native">
				<bind name="gotoAndStop!" value="_type"/>
			</block>
		</block>
		<block type="text">
			<styleClass value="$TextHeaderBigDefault"/>
			<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 180"/>
			<bind name="style" value="'leading'; _leading ? _leading : 0"/>
			<bind name="style" value="'marginLeft'; (_type=='no_icon') ? '0px' : '4px'"/>
			<style>
				<marginTop value="-2px"/>
			</style>
			<bind name="text" value="_instructionText"/>
		</block>
	</block>
	<block className="MouseInstructionRepeater">
		<bind name="style" value="'marginBottom'; $index != _lastIndex ? '6px' : '0px'"/>
		<bind name="instance" value="'MouseInstruction'; _type == 'warning' || _type == 'restriction'	? null
																						: { _type: _type, _instructionText: _instructionText,
																							_maxWidth: _maxWidth, _leading: _leading}"/>
		<bind name="instance" value="'InstructionWarning'; _type == 'warning' ? {_instructionText: _instructionText, _maxWidth: _maxWidth, _leading: _leading} : null"/>
		<bind name="instance" value="'InstructionRestricion'; _type == 'restriction' ? {_instructionText: _instructionText, _maxWidth: _maxWidth, _leading: _leading} : null"/>
	</block>
	<block className="CheckedLine">
		<style>
			<flow value="horizontal"/>
		</style>
		<block className="icon_check" type="native">
			<style>
				<marginLeft value="2px"/>
				<marginTop value="8px"/>
			</style>
			<bind name="visible" value="!_isCheckMarkHidden"/>
		</block>
		<block type="text">
			<styleClass value="$TextHeaderBigDefault"/>
			<style>
				<width value="288px"/>
				<marginTop value="-2px"/>
				<multiline value="false"/>
			</style>
			<bind name="class" value="'$FontColorGolden'"/>
			<bind name="style" value="'leading'; _leading ? _leading : 0"/>
			<bind name="style" value="'marginLeft'; _isCheckMarkHidden ? '0' : '5px'"/>
			<bind name="text" value="_checkedLineText"/>
		</block>
	</block>
	<block className="CheckedLineRepeater">
		<bind name="style" value="'marginBottom'; $index != _lastIndex ? '6px' : '-2px'"/>
		<bind name="instance" value="'CheckedLine'; { _isCheckMarkHidden: _isCheckMarkHidden, _checkedLineText: _checkedLineText, _maxWidth: _maxWidth}"/>
	</block>
	<block className="InstructionBigTech">
		<style>
			<flow value="horizontal"/>
		</style>
		<block type="text">
			<styleClass value="$TextHeaderBigDefault"/>
			<bind name="class" value="'$FontColorBlueish'"/>
			<bind name="style" value="'leading'; _leading ? _leading : 0"/>
			<style>
				<textAlign value="center"/>
			</style>
			<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 500"/>
			<bind name="text" value="_instructionText"/>
		</block>
	</block>
	<block className="DockTopMenuLinkText">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<block type="text">
			<styleClass value="$TextDockNano"/>
			<bind name="class" value="rollOver &amp;&amp; !(mouseDown) ? '$FontColorDefault' : '$None'"/>
			<bind name="text" value="_label"/>
		</block>
	</block>
	<block className="EmptyStatusParagraph">
		<block type="text">
			<styleClass value="$TextHeaderBigDefault"/>
			<bind name="class" value="_sizeClass ? _sizeClass : '$FontSizeLarge'"/>
			<bind name="class" value="'$FontColorBlueish'"/>
			<style>
				<textAlign value="center"/>
			</style>
			<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 250"/>
			<bind name="text" value="_text"/>
		</block>
	</block>
	<block className="InvertableTextLine">
		<block type="text">
			<bind name="name" value="_name"/>
			<bind name="class" value="_invert ? _normalClass : _invertedClass"/>
			<style>
				<position value="absolute"/>
				<alpha value="0.35"/>
				<top value="1px"/>
			</style>
			<bind name="style" value="'multiline'; _width ? false : true"/>
			<bind name="style" value="'width'; _width ? _width : 'auto'"/>
			<bind name="style" value="'letterSpacing'; _letterSpacing ? _letterSpacing : '0'"/>
			<bind name="text" value="_text"/>
		</block>
		<block type="text">
			<bind name="class" value="_invert ? _normalClass : _invertedClass"/>
			<style>
				<position value="absolute"/>
				<alpha value="0.1"/>
				<top value="-1px"/>
			</style>
			<bind name="style" value="'multiline'; _width ? false : true"/>
			<bind name="style" value="'width'; _width ? _width : 'auto'"/>
			<bind name="style" value="'letterSpacing'; _letterSpacing ? _letterSpacing : '0'"/>
			<bind name="text" value="_text"/>
		</block>
		<block type="text">
			<bind name="class" value="_invert ? _normalClass : _invertedClass"/>
			<style>
				<position value="absolute"/>
				<alpha value="0.2"/>
				<left value="1px"/>
			</style>
			<bind name="style" value="'multiline'; _width ? false : true"/>
			<bind name="style" value="'width'; _width ? _width : 'auto'"/>
			<bind name="style" value="'letterSpacing'; _letterSpacing ? _letterSpacing : '0'"/>
			<bind name="text" value="_text"/>
		</block>
		<block type="text">
			<bind name="class" value="_invert ? _normalClass : _invertedClass"/>
			<style>
				<position value="absolute"/>
				<alpha value="0.2"/>
				<left value="-1px"/>
			</style>
			<bind name="style" value="'multiline'; _width ? false : true"/>
			<bind name="style" value="'width'; _width ? _width : 'auto'"/>
			<bind name="style" value="'letterSpacing'; _letterSpacing ? _letterSpacing : '0'"/>
			<bind name="text" value="_text"/>
		</block>
		<block type="text">
			<bind name="class" value="_invert ? _invertedClass : _normalClass"/>
			<bind name="style" value="'multiline'; _width ? false : true"/>
			<bind name="style" value="'width'; _width ? _width : 'auto'"/>
			<bind name="style" value="'letterSpacing'; _letterSpacing ? _letterSpacing : '0'"/>
			<bind name="text" value="_text"/>
		</block>
	</block>
	<block className="ResizeFrame">
		<styleClass value="$FullsizeAbsolute"/>
		<block>
			<bind name="visible" value="!(restrict.up)"/>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_UP'"/>
			<style>
				<position value="absolute"/>
				<width value="100%"/>
				<height value="6px"/>
				<top value="-3px"/>
				<backgroundColor value="0x01ff0000"/>
			</style>
			<params>
				<param name="name" value="grip_top"/>
			</params>
		</block>
		<block>
			<bind name="visible" value="!(restrict.down)"/>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_DOWN'"/>
			<style>
				<position value="absolute"/>
				<width value="100%"/>
				<height value="6px"/>
				<bottom value="-3px"/>
				<backgroundColor value="0x01ff0000"/>
			</style>
			<params>
				<param name="name" value="grip_bottom"/>
			</params>
		</block>
		<block>
			<bind name="visible" value="!(restrict.left)"/>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_LEFT'"/>
			<style>
				<position value="absolute"/>
				<width value="6px"/>
				<height value="100%"/>
				<left value="-3px"/>
				<backgroundColor value="0x01ff0000"/>
			</style>
			<params>
				<param name="name" value="grip_left"/>
			</params>
		</block>
		<block>
			<bind name="visible" value="!(restrict.right)"/>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_RIGHT'"/>
			<style>
				<position value="absolute"/>
				<width value="6px"/>
				<height value="100%"/>
				<right value="-3px"/>
				<backgroundColor value="0x01ff0000"/>
			</style>
			<params>
				<param name="name" value="grip_right"/>
			</params>
		</block>
		<block>
			<bind name="visible" value="!(restrict.up || restrict.left)"/>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_UP_LEFT'"/>
			<style>
				<position value="absolute"/>
				<width value="12px"/>
				<height value="12px"/>
				<top value="-5px"/>
				<left value="-5px"/>
				<backgroundColor value="0x0100ff00"/>
			</style>
			<params>
				<param name="name" value="grip_top_left"/>
			</params>
		</block>
		<block>
			<bind name="visible" value="!(restrict.up || restrict.right)"/>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_UP_RIGHT'"/>
			<style>
				<position value="absolute"/>
				<width value="12px"/>
				<height value="12px"/>
				<top value="-5px"/>
				<right value="-5px"/>
				<backgroundColor value="0x0100ff00"/>
			</style>
			<params>
				<param name="name" value="grip_top_right"/>
			</params>
		</block>
		<block>
			<bind name="visible" value="!(restrict.down || restrict.left)"/>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_DOWN_LEFT'"/>
			<style>
				<position value="absolute"/>
				<width value="12px"/>
				<height value="12px"/>
				<bottom value="-5px"/>
				<left value="-5px"/>
				<backgroundColor value="0x0100ff00"/>
			</style>
			<params>
				<param name="name" value="grip_bottom_left"/>
			</params>
		</block>
		<block>
			<bind name="visible" value="!(restrict.down || restrict.right)"/>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_DOWN_RIGHT'"/>
			<style>
				<position value="absolute"/>
				<width value="12px"/>
				<height value="12px"/>
				<bottom value="-5px"/>
				<right value="-5px"/>
				<backgroundColor value="0x0100ff00"/>
			</style>
			<params>
				<param name="name" value="grip_bottom_right"/>
			</params>
		</block>
	</block>
	<css name="$WarningTextRed">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="15"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFF6600"/>
	</css>
	<css name="$WarningTextOrange">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="15"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFF9933"/>
	</css>
	<block className="WarningMessage">
		<bind name="appear" value="'addedToStage'; 0.15; _delay; {alpha: 0, top: _startTop ? _startTop : 10}; {alpha: 1, top: 0}; 2"/>
		<bind name="var" value="{errorStringsToShowSupportLinkFor: [
		tr('IDS_ACCOUNT_ERROR_ALL_SPA_LOGIN_ALREADY_TAKEN')
	]}"/>
		<block type="text">
			<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 280"/>
			<bind name="class" value="_highWarning ? '$WarningTextRed' : '$WarningTextOrange'"/>
			<style>
				<textAlign value="center"/>
			</style>
			<bind name="text" value="_text"/>
		</block>
		<block>
			<bind name="visible" value="errorStringsToShowSupportLinkFor.indexOf(_text) &gt; -1"/>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginTop value="6px"/>
			</style>
			<bind name="instance" value="'LinkText'; errorStringsToShowSupportLinkFor.indexOf(_text) &gt; -1 	? {
																								_label: 'IDS_LINK_SUPPORT', 
																								_urlIdent: URL.SUPPORT, 
																								_tooltipText: 'IDS_LINK_SUPPORT_HINT', 
																								_name: 'ButtonSupport'} 
																							: null"/>
		</block>
	</block>
	<block className="WrongTextInputNotification">
		<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0, top: _startTop ? _startTop : 10}; {alpha: 1, top: 0}; 2"/>
		<style>
			<width value="100%"/>
			<marginRight value="-1px"/>
			<marginLeft value="-1px"/>
		</style>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
				<marginTop value="1px"/>
				<marginBottom value="0px"/>
			</style>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap3" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
		</block>
		<block className="notification_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block className="button_close" type="native">
			<bind name="visible" value="_showCloseBtn == true"/>
			<style>
				<right value="8"/>
				<top value="7"/>
				<position value="absolute"/>
			</style>
			<bind name="dispatch" value="'buttonClick'; 'hideWrongMessageEv'; {}"/>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginTop value="8px"/>
				<marginBottom value="7px"/>
			</style>
			<bind name="instance" value="'WarningMessage'; true	? { _delay: 0.07, _startTop: _startTop, _messageHiglight: _messageHiglight, _maxWidth: _maxWidth, _text: _text}
												: null"/>
		</block>
		<bind name="dispatch" value="'click'; 'hideWrongMessageEv'; {}"/>
	</block>
	<block className="MultiParagraphHelpTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="330px"/>
		</style>
		<bind name="style" value="'width'; _width ? _width : '330px'"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block className="GUIContrast">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="contrast_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="watch" value="'iconType'; _iconType ? _iconType : 'question'"/>
			<block className="icon_question_mark" type="native">
				<bind name="visible" value="iconType == 'question'"/>
				<style>
					<marginRight value="6px"/>
					<marginTop value="4px"/>
				</style>
			</block>
			<block className="icon_info_big" type="native">
				<bind name="visible" value="iconType == 'info'"/>
				<style>
					<marginRight value="6px"/>
					<marginTop value="4px"/>
				</style>
			</block>
			<block className="mc_icon_ship" type="native">
				<bind name="visible" value="iconType == 'ship' &amp;&amp; _shipType != 'premiumShip'"/>
				<style>
					<marginRight value="6px"/>
					<marginTop value="10px"/>
				</style>
				<bind name="style" value="'marginLeft'; _shipType == 'Destroyer' ? '-2px' : '2px'"/>
				<bind name="gotoAndStop!" value="_shipType"/>
			</block>
			<block type="text">
				<style>
					<top value="1px"/>
				</style>
				<bind name="style" value="'maxWidth'; _width ? _width - 60 : 270"/>
				<styleClass value="$TextHeaderWhiteBold"/>
				<bind name="class" value="_shipType == 'premiumShip' ? '$FontColorGolden' : '$FontColorWhite'"/>
				<bind name="text" value="_tooltipHeader"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$Fullsize"/>
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block>
				<style>
					<marginLeft value="12px"/>
					<marginRight value="12px"/>
					<marginTop value="9px"/>
					<marginBottom value="3px"/>
					<width value="100%"/>
				</style>
				<bind name="repeat" value="_multiParagraphArray; 'RepeatParagraphItem'; {_maxWidth: _width - 24}"/>
			</block>
		</block>
	</block>
	<block className="RepeatParagraphItem">
		<bind name="style" value="'marginBottom'; _marginBottom ? _marginBottom : '6px'"/>
		<bind name="class" value="_middleAligned ? '$MiddleAligned' : ''"/>
		<block type="text">
			<styleClass value="$TextHeaderBigDefault"/>
			<bind name="class" value="_class"/>
			<bind name="style" value="'leading'; _leading ? _leading : 0"/>
			<bind name="style" value="'textAlign'; _textAlign ? _textAlign : 'left'"/>
			<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 300"/>
			<bind name="substitute" value="_substitute.imageOffset ? _substitute.imageOffset : 0;
						  _substitute.map ? _substitute.map : {};
						  (_toUpperCase ? toUpperCase(tr(_paragraphText)) : _paragraphText)"/>
		</block>
	</block>
	<block className="RepeatParagraphItemNM">
		<bind name="style" value="'marginBottom'; _marginBottom ? _marginBottom : '16px'"/>
		<bind name="class" value="_middleAligned ? '$MiddleAligned' : ''"/>
		<bind name="watch" value="'textItem'; _isTextInValue ? $value : _paragraphText"/>
		<block type="text">
			<styleClass value="$TextDefaultNM"/>
			<bind name="class" value="_class"/>
			<bind name="style" value="'leading'; _leading ? _leading : 0"/>
			<bind name="style" value="'textAlign'; _textAlign ? _textAlign : 'left'"/>
			<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 300"/>
			<bind name="substitute" value="_substitute.imageOffset ? _substitute.imageOffset : 0;
							_substitute.map ? _substitute.map : {}; (_toUpperCase ? toUpperCase(tr(textItem)) : textItem)"/>
		</block>
	</block>
	<block className="GUIContrast">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<styleClass value="$FullsizeAbsolute"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
	</block>
	<block className="CheckBox">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="watch" value="'isEnabled'; _disabled != true"/>
		<block className="checkbox_no_label" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="enabled" value="isEnabled"/>
			<bind name="selected" value="switchProperty"/>
		</block>
		<block type="text">
			<styleClass value="$TextHeaderBigDefault"/>
			<style>
				<marginLeft value="23px"/>
				<marginTop value="-3px"/>
				<hitTest value="false"/>
			</style>
			<bind name="style" value="'maxWidth'; _maxTfWidth ? _maxTfWidth : 300"/>
			<bind name="transition" value="(rollOver &amp;&amp; !mouseDown) &amp;&amp; isEnabled; 0.15; {alpha: 0.8}; {alpha: 1}; {alpha: 0.8}; 2"/>
			<bind name="text" value="label"/>
		</block>
	</block>
	<block className="IconSlimClient">
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: _isEventLike ? 'IDS_ENTER_IN_FULL_VERSION_FOR_ANNOUNCE_SHIPS' : 'IDS_ENTER_IN_FULL_VERSION_FOR_SHIPS'}"/>
		<block className="game_downloading" type="native"/>
	</block>
	<block className="BannerButtonInstance">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="transition" value="rollOver; 0.07; {alpha: 0.85}; {alpha: 0.95}"/>
		<style>
			<width value="217px"/>
			<height value="60px"/>
			<flow value="horizontal"/>
		</style>
		<bind name="name" value="_input"/>
		<bind name="input"/>
		<bind name="action" value="'click'; _action ? _action : null"/>
		<bind name="action" value="'click'; 'log'; { event: 'click:banner.' + _logItemName }"/>
		<block className="button_infopanel_no_label" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<height value="100%"/>
				<marginRight value="8px"/>
				<marginLeft value="12px"/>
				<hitTest value="false"/>
			</style>
			<block>
				<style>
					<width value="37px"/>
					<height value="100%"/>
				</style>
				<block>
					<bind name="style" value="'width'; _iconSize"/>
					<bind name="style" value="'height'; _iconSize"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$MiddleAligned"/>
					<bind name="style" value="'backgroundImage'; _iconUrl"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="8px"/>
				</style>
				<styleClass value="$MiddleVAligned"/>
				<block type="text">
					<style>
						<width value="100%"/>
						<leading value="-3"/>
						<hitTest value="false"/>
						<alpha value="0.85"/>
					</style>
					<styleClass value="$TextDefaultBold17NM"/>
					<bind name="text" value="_label"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ShipTitleWithIconAndSilhouette">
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; _shipID; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<block>
			<block>
				<bind name="instance" value="'ShipTitleWithIconAndLevel'; {_shipID : _shipID}"/>
			</block>
			<block>
				<style>
					<width value="122px"/>
					<height value="22px"/>
					<marginLeft value="12px"/>
					<marginTop value="-2px"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:' + shipInfo.pathTinyIcon"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ShipTitleWithIconAndLevel">
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; _shipID; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="watchDH" value="'upgradableShipInfo'; ['shipEntity.upgradableShipInfo.evUpdate']; shipEntity.upgradableShipInfo"/>
		<block>
			<style>
				<height value="27px"/>
			</style>
			<block className="icon_wreath" type="native">
				<styleClass value="$MouseDisable"/>
				<style>
					<position value="absolute"/>
					<top value="-1px"/>
				</style>
				<bind name="visible" value="upgradableShipInfo.isElite || shipInfo.isPremium || shipInfo.uiSpecial"/>
				<bind name="gotoAndStop!" value="(shipInfo.isPremium || shipInfo.uiSpecial) 	? 'premium' : 'elite'"/>
			</block>
			<block>
				<style>
					<marginLeft value="5px"/>
					<marginTop value="7px"/>
				</style>
				<block className="icon_ship" type="native">
					<styleClass value="$MouseDisable"/>
					<bind name="gotoAndStop!" value="shipInfo.isPremium || shipInfo.uiSpecial 	? shipInfo.subtype + '_P'
																				: shipInfo.subtype"/>
				</block>
			</block>
			<block>
				<style>
					<marginLeft value="6px"/>
					<marginTop value="-2px"/>
				</style>
				<block type="text">
					<styleClass value="$FontShipnameWhite"/>
					<bind name="class" value="shipInfo.isPremium || shipInfo.uiSpecial	? '$FontShipnameGolden'
																		: '$FontShipnameWhite'"/>
					<bind name="text" value="shipInfo.levelRome + ' ' + toUpperCase(tr(shipInfo.nameIDS))"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="CharCounter">
		<bind name="transition" value="_string.length &gt; 0; 0.15; {alpha: 0, top:10}; {alpha: 1, top:0}; {alpha: 0, top:10}; 1; 0"/>
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CHARS_LEFT'}"/>
		<style>
			<backgroundColor value="0x01000000"/>
		</style>
		<block type="text">
			<styleClass value="$TextDefault"/>
			<bind name="class" value="_string.length &gt; _maxChars ? '$FontColorUnready' : '$FontColorDefault'"/>
			<bind name="style" value="'alpha'; _string.length &gt; _maxChars ? 1 : 0.6"/>
			<bind name="text" value="_maxChars - _string.length"/>
		</block>
	</block>
	<block className="BusyIndicator">
		<bind name="fade" value="_showBusyIndicator; 0.15; {alpha: 0}; {alpha: 1}; {alpha: 0}; 1; 0.3"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<block className="indicator_busy_small" type="native"/>
		</block>
		<block type="text">
			<bind name="visible" value="_label.length &gt; 0"/>
			<styleClass value="$TextDefaultTech"/>
			<bind name="class" value="'$Bold'"/>
			<style>
				<marginLeft value="6px"/>
				<marginTop value="-2px"/>
			</style>
			<bind name="text" value="toUpperCase(tr(_label))"/>
		</block>
	</block>
	<block className="FormationPlayerIcon">
		<style>
			<width value="15px"/>
		</style>
		<bind name="watch" value="'postfix'; isOtherDivision ? '_other_division' : ''"/>
		<block className="formation_player_status" type="native">
			<style>
				<marginTop value="3px"/>
			</style>
			<bind name="gotoAndStop!" value="_isEmptySlot					?	('empty_slot_' + _formationType) :
							isInBattle						?	('player_in_battle_' + _formationType + postfix) :
							_isWardog &amp;&amp; isReady			?	('player_ready_' + _formationType + '_merc') :
							_isWardog &amp;&amp; !isReady			?	('player_not_ready_' + _formationType + '_merc') :
							isCommander &amp;&amp; isReady			?	('commander_' + _formationType + postfix) :
							isCommander &amp;&amp; !isReady			?	('commander_not_ready_' +_formationType + postfix) :
							!isCommander &amp;&amp; isReady			?	('player_ready_' + _formationType + postfix) :
							!isCommander &amp;&amp; !isReady		?	('player_not_ready_' + _formationType + postfix)
															:	'empty_slot_division'"/>
		</block>
	</block>
	<css name="$TextBackBtn">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="17"/>
		<selectable value="false"/>
		<textColor value="0x9CBABA"/>
	</css>
	<block className="BackButton">
		<style>
			<height value="30px"/>
		</style>
		<block className="button_dock" type="native">
			<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: _text}"/>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="dispatch" value="'buttonClick'; _event	 ? _event  : null; _eventData	 ? _eventData : {}"/>
			<bind name="action" value="'buttonClick'; _action	 ? _action : null; _actionParams ? _actionParams : {}"/>
			<bind name="request" value="'buttonClick'; _request ? _request : null; _requestParams ? _requestParams : {}"/>
			<params>
				<param name="focusable" value="false"/>
			</params>
		</block>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<hitTest value="false"/>
			</style>
			<block className="icon_navigate" type="native">
				<bind name="gotoAndStop!" value="'left'"/>
				<style>
					<marginLeft value="6px"/>
				</style>
			</block>
			<block>
				<bind name="name" value="_name ? _name : '' "/>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<marginLeft value="2px"/>
					<marginRight value="7px"/>
				</style>
				<block>
					<style>
						<marginTop value="-4px"/>
					</style>
					<block type="text">
						<styleClass value="$TextBackBtn"/>
						<bind name="class" value="'$FontColorAlmostBlack'"/>
						<style>
							<position value="absolute"/>
							<alpha value="0.4"/>
							<top value="1px"/>
						</style>
						<bind name="text" value="_text"/>
					</block>
					<block type="text">
						<styleClass value="$TextBackBtn"/>
						<bind name="class" value="'$FontColorAlmostBlack'"/>
						<style>
							<position value="absolute"/>
							<alpha value="0.2"/>
							<top value="-1px"/>
						</style>
						<bind name="text" value="_text"/>
					</block>
					<block type="text">
						<styleClass value="$TextBackBtn"/>
						<bind name="class" value="'$FontColorAlmostBlack'"/>
						<style>
							<position value="absolute"/>
							<alpha value="0.2"/>
							<left value="1px"/>
						</style>
						<bind name="text" value="_text"/>
					</block>
					<block type="text">
						<styleClass value="$TextBackBtn"/>
						<bind name="class" value="'$FontColorAlmostBlack'"/>
						<style>
							<position value="absolute"/>
							<alpha value="0.2"/>
							<left value="-1px"/>
						</style>
						<bind name="text" value="_text"/>
					</block>
					<block type="text">
						<styleClass value="$TextBackBtn"/>
						<bind name="class" value="'$FontColorBlueish'"/>
						<bind name="text" value="_text"/>
					</block>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ScoreRatioCounter">
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<bind name="tooltip" value="'SimpleTooltip'; _tooltipTextPlayerResult ? { tooltipText: _tooltipTextPlayerResult } : null"/>
			<bind name="style" value="'alpha'; (_playerPointsCounter == 0) ? 0.5 : 1"/>
			<block type="text">
				<bind name="class" value="'$TextHeaderWhiteBold'"/>
				<bind name="text" value="_playerPointsCounter"/>
			</block>
		</block>
		<block>
			<bind name="tooltip" value="'SimpleTooltip'; _tooltipTextTotalResult ? { tooltipText: _tooltipTextTotalResult } : null"/>
			<style>
				<alpha value="0.7"/>
			</style>
			<block type="text">
				<style>
					<marginTop value="1px"/>
				</style>
				<bind name="class" value="'$TextHeaderBold'"/>
				<bind name="text" value="'/'"/>
			</block>
			<block type="text">
				<style>
					<marginTop value="2px"/>
					<marginLeft value="-1px"/>
				</style>
				<bind name="class" value="'$TextHeaderBold'"/>
				<bind name="text" value="_totalPointsCounter"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="PlayerNameAndClanTag">
		<bind name="watch" value="'clanTagColor'; ('0xff' + _clanTagColor)"/>
		<bind name="watch" value="'haveClanTag'; _clanTag != null &amp;&amp;
								_clanTag != ''"/>
		<bind name="watch" value="'isColoredClanTag'; (haveClanTag &amp;&amp; !_noClanTagColor &amp;&amp; _clanTagColor != null)"/>
		<bind name="watch" value="'playerName'; 	isColoredClanTag 	?	_playerName :
								haveClanTag			?	('[' + _clanTag + ']' + _playerName)
													: _playerName"/>
		<bind name="watch" value="'fontColor'; 	_isAccountButton	?	_ctkStatus			? '$FontColorCompareNegative' :
														_tkStatus 			? '$FontColorTeamkiller' :
														_isPremiumAccount	? '$FontColorGold'
																			: '$FontColorBlueish':
								_isSelf 			? 	_ttkStatus 			? '$FontColorTTK' :
														_ctkStatus			? '$FontColorCompareNegative' :
														_tkStatus 			? '$FontColorTeamkiller'
																			: '$FontColorGolden':
								!_isDead 			?  	_ttkStatus 			? '$FontColorTTK' :
														_isInSameDivision 	? '$FontColorGolden' :
														_tkStatus 			? '$FontColorTeamkiller'												
																			: '$FontColorWhite'
													: '$FontColorAlmostBlack'"/>
		<style>
			<hitTest value="false"/>
			<flow value="horizontal"/>
			<width value="100%f"/>
		</style>
		<block type="text">
			<style>
				<marginLeft value="3px"/>
			</style>
			<bind name="visible" value="isColoredClanTag == true"/>
			<style>
				<multiline value="false"/>
			</style>
			<styleClass value="$TextDefaultNM"/>
			<bind name="style" value="'fontSize'; _fontSize ? _fontSize : 15"/>
			<bind name="class" value="_isSelf ? '$Bold' : '$None'"/>
			<bind name="style" value="'textColor'; clanTagColor"/>
			<bind name="text" value="tr('[' + _clanTag + ']')"/>
		</block>
		<block type="text">
			<style>
				<marginLeft value="3px"/>
				<multiline value="false"/>
				<width value="100%f"/>
			</style>
			<styleClass value="$TextDefaultNM"/>
			<bind name="style" value="'fontSize'; _fontSize ? _fontSize : 15"/>
			<bind name="class" value="_isSelf 	? '$Bold' : '$None'"/>
			<bind name="class" value="(_isDead &amp;&amp; !_isSelf ? '$FontDropShadowWhite' : '$None')"/>
			<bind name="class" value="fontColor"/>
			<bind name="text" value="playerName"/>
		</block>
	</block>
	<block className="HotkeyWithText">
		<bind name="dispatch" value="'click'; _event	? _event  	: null; _eventData	 	? _eventData 	: {}"/>
		<bind name="action" value="'click'; _action	? _action 	: null; _actionParams 	? _actionParams : {}"/>
		<bind name="request" value="'click'; _request 	? _request 	: null; _requestParams 	? _requestParams: {}"/>
		<bind name="tooltip" value="'SimpleTooltip'; _tooltipText ? { tooltipText: _tooltipText } : null; 0"/>
		<block className="hotkey_holder_white_9slice" type="native">
			<block type="text">
				<style>
					<marginLeft value="3px"/>
					<marginRight value="3px"/>
					<marginTop value="-1px"/>
					<marginBottom value="-1px"/>
				</style>
				<styleClass value="$BlackLabel"/>
				<bind name="text" value="_text"/>
			</block>
		</block>
	</block>
	<block className="NavigationButton">
		<style>
			<marginBottom value="1px"/>
		</style>
		<block className="button_navigation_small" type="native">
			<bind name="name" value="_name"/>
			<bind name="label" value="_label"/>
			<bind name="selected" value="_selectedIndex == $index"/>
			<bind name="dispatch" value="'click'; 'evClicked'; { selectedIndex: $index }"/>
		</block>
	</block>
	<block className="RewardItemWithStamp">
		<block>
			<style>
				<width value="80px"/>
				<height value="80px"/>
				<backgroundSize value="cover"/>
			</style>
			<bind name="style" value="'backgroundImage'; _backgroundImage"/>
			<bind name="scaleX" value="_scale ? _scale : 1"/>
			<bind name="scaleY" value="_scale ? _scale : 1"/>
			<bind name="ubScaleX" value="_scale ? _scale : 1"/>
			<bind name="ubScaleY" value="_scale ? _scale : 1"/>
		</block>
		<block>
			<bind name="scaleX" value="_scale ? (_scale - 0.14) : 0.86"/>
			<bind name="scaleY" value="_scale ? (_scale - 0.14) : 0.86"/>
			<bind name="ubScaleX" value="_scale ? (_scale - 0.14) : 0.86"/>
			<bind name="ubScaleY" value="_scale ? (_scale - 0.14) : 0.86"/>
			<style>
				<position value="absolute"/>
				<alpha value="0.9"/>
				<hitTest value="false"/>
				<top value="46%"/>
				<left value="42%"/>
			</style>
			<block className="icon_issued" type="native">
				<bind name="gotoAndStop!" value="_issued	? 'issued' : 'not_issued'"/>
				<innerBind elementName="item.item" name="text" value="'IDS_ISSUED_STAMP'"/>
				<bind name="rotation" value="-2"/>
			</block>
		</block>
	</block>
	<block className="GiftBoxIconSmall">
		<block className="icon_giftbox_small" type="native">
			<bind name="scaleX" value="_scale ? _scale : 1"/>
			<bind name="scaleY" value="_scale ? _scale : 1"/>
			<bind name="gotoAndStop!" value="'normal'"/>
		</block>
		<block className="icon_issued_small" type="native">
			<style>
				<position value="absolute"/>
				<top value="55%"/>
				<left value="50%"/>
				<alpha value="0.9"/>
				<hitTest value="false"/>
			</style>
			<bind name="scaleX" value="_scale ? (_scale - 0.04) : 0.96"/>
			<bind name="scaleY" value="_scale ? (_scale - 0.04) : 0.96"/>
			<bind name="rotation" value="-2"/>
			<bind name="gotoAndStop!" value="_issued	? 'issued' : 'not_issued'"/>
			<innerBind elementName="item.item" name="text" value="'IDS_ISSUED_STAMP'"/>
		</block>
	</block>
	<block className="GiftBoxIconBig">
		<block className="icon_giftbox" type="native">
			<bind name="scaleX" value="_scale ? _scale : 1"/>
			<bind name="scaleY" value="_scale ? _scale : 1"/>
			<bind name="gotoAndStop!" value="'normal'"/>
		</block>
		<block className="icon_issued" type="native">
			<style>
				<position value="absolute"/>
				<top value="55%"/>
				<left value="50%"/>
				<alpha value="0.9"/>
				<hitTest value="false"/>
			</style>
			<bind name="scaleX" value="_scale ? (_scale - 0.04) : 0.96"/>
			<bind name="scaleY" value="_scale ? (_scale - 0.04) : 0.96"/>
			<bind name="rotation" value="-2"/>
			<bind name="gotoAndStop!" value="_issued	? 'issued' : 'not_issued'"/>
			<innerBind elementName="item.item" name="text" value="'IDS_ISSUED_STAMP'"/>
		</block>
	</block>
	<block className="ColorTransformPicker">
		<bind name="instance" value="'ColorTransformSlider'; {_maximum : 1, _minimum: 0, _step: 0.01, _value:1, _name:'redMultiplier'}"/>
		<bind name="instance" value="'ColorTransformSlider'; {_maximum : 1, _minimum: 0, _step: 0.01, _value:1, _name:'greenMultiplier'}"/>
		<bind name="instance" value="'ColorTransformSlider'; {_maximum : 1, _minimum: 0, _step: 0.01, _value:1, _name:'blueMultiplier'}"/>
		<bind name="instance" value="'ColorTransformSlider'; {_maximum : 1, _minimum: 0, _step: 0.01, _value:1, _name:'alphaMultiplier'}"/>
		<bind name="instance" value="'ColorTransformSlider'; {_maximum : 255, _minimum: -255, _step: 1, _value:0, _name:'redOffset'}"/>
		<bind name="instance" value="'ColorTransformSlider'; {_maximum : 255, _minimum: -255, _step: 1, _value:0, _name:'greenOffset'}"/>
		<bind name="instance" value="'ColorTransformSlider'; {_maximum : 255, _minimum: -255, _step: 1, _value:0, _name:'blueOffset'}"/>
		<bind name="instance" value="'ColorTransformSlider'; {_maximum : 255, _minimum: -255, _step: 1, _value:0, _name:'alphaOffset'}"/>
	</block>
	<block className="ColorTransformSlider">
		<style>
			<marginTop value="20px"/>
		</style>
		<block>
			<bind name="dispatch" value="'value'+varChanged; 'colorTransformChanged'; [_name, value]"/>
			<block>
				<style>
					<maxHeight value="500"/>
					<overflow value="scroll"/>
					<backgroundColor value="0x80000000"/>
				</style>
				<styleClass value="$DefaultScrollBar"/>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<style>
						<textColor value="0xffffffff"/>
						<maxWidth value="600"/>
						<marginBottom value="3px"/>
					</style>
					<bind name="text" value="'_name: ' + (_name)"/>
				</block>
			</block>
			<block>
				<style>
					<maxHeight value="500"/>
					<overflow value="scroll"/>
					<backgroundColor value="0x80000000"/>
				</style>
				<styleClass value="$DefaultScrollBar"/>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<style>
						<textColor value="0xffffffff"/>
						<maxWidth value="600"/>
						<marginBottom value="3px"/>
					</style>
					<bind name="text" value="'value: ' + (value)"/>
				</block>
			</block>
			<block>
				<bind name="mc" value="'slider_default'; ['valueChange']; ['value']; {maximum:_maximum, minimum:_minimum, step:_step, value:_value}"/>
			</block>
		</block>
	</block>
	<block className="AchievementRenderer">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'achievements'; (_id ? _id : $value); 'achievement'"/>
		<style>
			<flow value="horizontal"/>
			<width value="100%"/>
		</style>
		<block>
			<bind name="instance" value="'AchievementIcon'; {_id: (_id ? _id : $value)}"/>
		</block>
		<block>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<style>
				<marginLeft value="10px"/>
				<marginTop value="-1px"/>
			</style>
			<block type="text">
				<styleClass value="$TextHeaderWhiteBold"/>
				<style>
					<width value="100%"/>
					<maxWidth value="222"/>
					<textAlign value="left"/>
				</style>
				<bind name="class" value="'$FontColorWhite'"/>
				<bind name="text" value="achievement.nameIDS"/>
			</block>
			<block type="text">
				<styleClass value="$TextHeaderBigDefaultTech"/>
				<style>
					<marginTop value="-3px"/>
					<maxWidth value="220"/>
					<textAlign value="left"/>
				</style>
				<bind name="class" value="'$FontColorWhite'"/>
				<bind name="text" value="achievement.subtypeIDS"/>
			</block>
		</block>
	</block>
	<block className="MarkerNewCounter">
		<bind name="watch" value="'newContentCounter'; _newContentCounter == 0 ? 1 : _newContentCounter"/>
		<style>
			<height value="20px"/>
			<hitTest value="false"/>
		</style>
		<block className="marker_new_content" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block type="text">
			<style>
				<marginLeft value="8px"/>
				<marginTop value="6px"/>
				<marginRight value="8px"/>
				<textAlign value="center"/>
			</style>
			<styleClass value="$TextDefault12NM"/>
			<bind name="class" value="'$DropShadowDisabler'"/>
			<bind name="text" value="newContentCounter"/>
		</block>
	</block>
	<block className="MarkerNewAttention">
		<style>
			<backgroundImage value="symbol:marker_new_content_attention"/>
			<width value="35px"/>
			<height value="20px"/>
			<hitTest value="false"/>
		</style>
	</block>
	<block className="MarkerNewRewardsAnimate">
		<bind name="appear" value="_startMarkerAnimationEvent; 0.3; 6; {alpha: 0}; {alpha: 1}"/>
		<block>
			<style>
				<position value="absolute"/>
				<right value="8px"/>
				<top value="17px"/>
			</style>
			<block className="sparks" type="native"/>
		</block>
		<block>
			<style>
				<width value="32px"/>
				<height value="32px"/>
			</style>
			<bind name="style" value="'backgroundImage'; _iconReward"/>
		</block>
	</block>
	<block className="InteractiveNotifications">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<bind name="collectionDH" value="CC.interactiveMessageWindow; 'messagesCollection'"/>
		<bind name="var" value="{messageIndex: 0}"/>
		<bind name="catch" value="'changeSelectedNotification'"/>
		<bind name="changeDispatch" value="messageIndex; 'messageIndexChanged'"/>
		<bind name="action" value="'messageIndexChanged'; 'selectedMessageChanged'; {selectedEntityId:messagesCollection[messageIndex].id, selectedIndex:messageIndex}"/>
		<bind name="changeDispatch" value="messagesCollection.length; 'changeSelectedNotification'; {messageIndex: messagesCollection.length-1}"/>
		<bind name="draggableWindow" value="'IMDragZone'; 'IMPosition'; 'IM'"/>
		<bind name="dispatch" value="'dragDisabledDown'; 'dragDisabledByChild'; {obj:getDescendantByName('IMDragZone')}"/>
		<bind name="changeDispatch" value="dragging; 'draggingChangedEv'; null; true"/>
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="stageSize"/>
		<bind name="watch" value="'IMPositionX';	(userPrefs.IMPositionX &amp;&amp; userPrefs.IMPositionX.IM)		?	userPrefs.IMPositionX.IM	:	stageWidth*0.6"/>
		<bind name="watch" value="'IMPositionY';	(userPrefs.IMPositionY &amp;&amp; userPrefs.IMPositionY.IM)		?	userPrefs.IMPositionY.IM	:	stageHeight*0.15"/>
		<bind name="watch" value="'dragPositionsWasSet'; (userPrefs.IMPositionX &amp;&amp; userPrefs.IMPositionX.IM) &amp;&amp; (userPrefs.IMPositionY &amp;&amp; userPrefs.IMPositionY.IM)"/>
		<bind name="changeDispatch" value="IMPositionX;	'IMPositionXchanged'"/>
		<bind name="changeDispatch" value="IMPositionY;	'IMPositionYchanged'"/>
		<bind name="action" value="'IMPositionXchanged' ; 'setUserPref' ; {value : IMPositionX, name : 'IMPositionX', subName: 'IM'}"/>
		<bind name="action" value="'IMPositionYchanged' ; 'setUserPref' ; {value : IMPositionY, name : 'IMPositionY', subName: 'IM'}"/>
		<bind name="left" value="IMPositionX"/>
		<bind name="top" value="IMPositionY"/>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<width value="370px"/>
				<flow value="htile"/>
				<align value="center"/>
			</style>
			<bind name="visible" value="messagesCollection.length &gt; 1"/>
			<bind name="repeat" value="messagesCollection.length &gt; 28 ? 28 : messagesCollection.length; 'InteractiveMessagesSwitchButton'; {_currentIndex: messageIndex, _length: messagesCollection.length}"/>
		</block>
		<block>
			<params>
				<param name="name" value="IMDragZone"/>
			</params>
			<style>
				<marginTop value="6px"/>
			</style>
			<bind name="scopeHoldRepeat" value="messagesCollection; 'InteractiveNotificationItem'; id; {_messageIndex: messageIndex, _messagesCount: messagesCollection.length}"/>
		</block>
	</block>
	<block className="InteractiveNotificationItem">
		<bind name="visible" value="$index == _messageIndex"/>
		<bind name="entityDH" value="'dataEntity'; id"/>
		<bind name="watchDH" value="'messageData'; ['dataEntity.data.evChanged']; dataEntity.data.data"/>
		<bind name="watchDH" value="'waiting'; ['dataEntity.show.evWaitingChanged']; dataEntity.show.waiting"/>
		<bind name="watch" value="'hideDelay'; messageData.groupId == 0 ? 5.0 : 0"/>
		<bind name="handleEventDH" value="'dataEntity.show.evHide'; 'evHideInteractiveMessage'"/>
		<bind name="appear" value="'evHideInteractiveMessage'; 0.15; hideDelay; {alpha:1}; {alpha:0}; 1"/>
		<bind name="dispatch" value="'evHideInteractiveMessage'; 'evDelayedHideInteracive'; null; false; hideDelay + 0.15"/>
		<bind name="action" value="'evDelayedHideInteracive'; 'hideInteractiveMessage'; {id: id}"/>
		<bind name="action" value="'removedFromStage'; 'checkMessage'; {id: id}"/>
		<bind name="changeDispatch" value="_messageIndex; 'addedToStage'"/>
		<bind name="changeDispatch" value="_messagesCount; 'addedToStage'"/>
		<bind name="appear" value="'addedToStage'; 0.15; 0.1; {alpha: 0}; {alpha: 1}; 2"/>
		<bind name="dispatch" value="'addedToStage'; 'draggableResized'; null; 0; 0.3"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block>
			<bind name="child" value="messageData.groupId; {data: messageData, isUserActionDone: waiting}; 
			'InteractiveNotificationVoteContainer'; 
			'InteractiveNotificationInviteContainer'; 
			'PersonalProposalWindow'; 
			'InteractiveNotificationAbuseWarningContainer';
			'InteractiveNotificationContainer'
			"/>
		</block>
	</block>
	<block className="InteractiveNotificationVoteContainer">
		<block>
			<bind name="child" value="data.idInGroup;  {data : data, isUserActionDone: isUserActionDone};
					'InteractiveNotificationVote'; 
					'InteractiveNotificationVote'; 
					'InteractiveNotificationVote'
					"/>
		</block>
	</block>
	<block className="InteractiveNotificationInviteContainer">
		<block>
			<bind name="child" value="data.idInGroup; {data: data, isUserActionDone: isUserActionDone};
					'InteractiveNotificationInvitation';
					'InteractiveNotificationInvitation';
					'InteractiveNotificationInvitation';
					'InteractiveNotificationInvitation';
					'InteractiveNotificationInvitation'
					"/>
		</block>
	</block>
	<block className="InteractiveNotificationAbuseWarningContainer">
		<bind name="name" value="'AbuseWarningContainer_' + data.status"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<bind name="watch" value="'abuseStatusStr';	data.status == 0	? 'NORMAL' :
									data.status == 1	? 'SUSPECT'
																			: 'CONFIRMED'"/>
		<bind name="watch" value="'headerStr';	tr('IDS_ABUSE_STATUS_' + abuseStatusStr)"/>
		<bind name="watch" value="'battlesToClean';	data.battlesToClean"/>
		<bind name="watch" value="'abuseComponents'; data.status != 0	? data.components[AbuseStatus.SUSPECT]
																			: []"/>
		<bind name="watch" value="'headerClass'; (data.status == 1)		? '$FontColorTeamkiller' :
								(data.status == 2)	? '$FontColorCompareNegative'
																			: '$FontColorWhite'"/>
		<style>
			<width value="400px"/>
		</style>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="notification_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="38px"/>
				<marginLeft value="1px"/>
				<marginRight value="1px"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="1.4"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<marginBottom value="8px"/>
						<marginTop value="6px"/>
						<marginRight value="12px"/>
						<marginLeft value="12px"/>
					</style>
					<bind name="repeat" value="abuseComponents; 'AbuseReasonMessage'; {}"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<position value="absolute"/>
						<bottom value="-1px"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginBottom value="6px"/>
					<marginTop value="6px"/>
					<marginRight value="12px"/>
					<marginLeft value="12px"/>
				</style>
				<block type="text">
					<style>
						<width value="100%"/>
						<leading value="-1"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="text" value="tr('IDS_ABUSE_STATUS_' + toUpperCase(abuseStatusStr) + '_PUNISHMENT')"/>
				</block>
				<block type="text">
					<bind name="visible" value="data.status == 1"/>
					<style>
						<width value="100%"/>
						<marginTop value="4px"/>
						<marginBottom value="2px"/>
						<leading value="-1"/>
					</style>
					<styleClass value="$TextDefault"/>
					<text value="IDS_ABUSE_STATUS_SUSPECT_INFO"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
						<position value="absolute"/>
						<top value="-3px"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="1.4"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<marginBottom value="6px"/>
						<marginTop value="6px"/>
						<marginRight value="12px"/>
						<marginLeft value="12px"/>
					</style>
					<block type="text">
						<style>
							<width value="100%"/>
							<leading value="-2"/>
						</style>
						<styleClass value="$TextDefault"/>
						<bind name="text" value="tr('IDS_ABUSE_' + toUpperCase(abuseStatusStr) + '_STATUS_CLEAN')"/>
					</block>
					<block type="text">
						<style>
							<marginLeft value="10px"/>
						</style>
						<styleClass value="$TextDefaultBold"/>
						<bind name="text" value="battlesToClean"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<position value="absolute"/>
					<bottom value="-1"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<width value="100%"/>
				<marginLeft value="1px"/>
				<marginRight value="1px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<height value="38px"/>
				</style>
				<block type="text">
					<styleClass value="$MiddleVAligned"/>
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
					</style>
					<styleClass value="$TextHeaderBold"/>
					<bind name="class" value="headerClass"/>
					<bind name="text" value="headerStr"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<height value="39px"/>
			</style>
			<block>
				<style>
					<marginTop value="8px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<block className="button_default_small" type="native">
					<bind name="name" value="'acceptWarning'"/>
					<style>
						<width value="110px"/>
					</style>
					<bind name="label" value="toUpperCase(tr('IDS_I_GOT_IT'))"/>
					<bind name="dispatch" value="'mouseDown'; 'dragDisabledDown'"/>
					<bind name="dispatch" value="'buttonClick'; 'clickAcceptButton'"/>
					<bind name="action" value="'buttonClick'; data.actionName; data.callbackData[0]"/>
				</block>
			</block>
		</block>
		<block className="notification_frame_teamkiller" type="native">
			<bind name="visible" value="data.status == 1"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$Fullsize"/>
			<styleClass value="$PxCorrection"/>
		</block>
		<block className="notification_frame" type="native">
			<bind name="visible" value="data.status == 2"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$Fullsize"/>
			<styleClass value="$PxCorrection"/>
		</block>
	</block>
	<block className="InteractiveNotificationContainer">
		<block>
			<bind name="child" value="data.idInGroup; {data: data, isUserActionDone: isUserActionDone};
					'InteractiveNotificationCommon'
					"/>
		</block>
	</block>
	<block className="InteractiveNotificationCommon">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<style>
			<width value="370px"/>
		</style>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="notification_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="30px"/>
				<marginLeft value="1px"/>
				<marginRight value="1px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="child" value="data.idInGroup; {data: data}; 
						'ClanBuildingAvailable'
						"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<position value="absolute"/>
					<bottom value="0"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<width value="100%"/>
				<marginLeft value="1px"/>
				<marginRight value="1px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<height value="30px"/>
				</style>
				<bind name="child" value="data.idInGroup; { data: data};
						'ClanBuildingAvailableHeader'
						"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<height value="30px"/>
			</style>
			<block>
				<style>
					<marginTop value="3px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<bind name="firstEntityDH" value="'lootboxEntity'; CC.lootboxConfigComponent"/>
				<bind name="watchDH" value="'activeAnimationLootbox';	['lootboxEntity.lootboxAnimationState.evUpdate']; lootboxEntity.lootboxAnimationState.active"/>
				<bind name="style" value="'hitTest'; activeAnimationLootbox ? false : true"/>
				<block className="button_default_small" type="native">
					<bind name="style" value="'colorMatrixFilter'; activeAnimationLootbox ? '0 -80 0 -20' : '0 0 0 0'"/>
					<style>
						<width value="1px"/>
					</style>
					<bind name="style" value="'width'; data.idInGroup == 0 ? '180px' : '110px'"/>
					<bind name="label" value=" data.idInGroup == 0 	? toUpperCase(tr('IDS_GOTO_BASE'))
													: toUpperCase(tr('IDS_ACCEPT'))"/>
					<bind name="dispatch" value="'mouseDown'; 'dragDisabledDown'"/>
					<bind name="action" value="'buttonClick'; 'changeInset'; { inset: LobbyConstants.CLAN, pageData: {'url': URL.CLAN_BASE_IN_GAME, 'redirect_to': '' } }"/>
					<bind name="dispatch" value="'buttonClick'; 'evHideInteractiveMessage'"/>
				</block>
			</block>
		</block>
	</block>
	<block className="InteractiveNotificationInvitation">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<bind name="watch" value="'showBusyIndicator'; isUserActionDone"/>
		<bind name="var" value="{inviteAccepted: false}"/>
		<bind name="catch" value="'clickAcceptButton'; { inviteAccepted: true }"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; selfPlayerEntity.clanman.clanId"/>
		<bind name="watchDH" value="'clanTag'; ['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
		<bind name="watchDH" value="'clanName'; ['clanEntity.clanExtended.evNameChanged']; clanEntity.clanExtended.name"/>
		<bind name="feature" value="'27'; ''"/>
		<bind name="watch" value="'isClanTabVisible'; (selfPlayerEntity.clanman) || (feature_27 != 'locked')"/>
		<style>
			<width value="370px"/>
		</style>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="notification_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="30px"/>
				<marginLeft value="1px"/>
				<marginRight value="1px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="child" value="data.idInGroup; {data: data}; 
						'InvitationContent'; 
						'InvitationContent'; 
						'ClubInvitationContent'; 
						'ClanInvitationContent';
						'InvitationContent'
						"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<position value="absolute"/>
					<bottom value="0"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<width value="100%"/>
				<marginLeft value="1px"/>
				<marginRight value="1px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<height value="30px"/>
				</style>
				<bind name="child" value="data.idInGroup;	{	data: data,
												_rating: data.clubRating,
												_playerName: data.senderName,
												_clubName: data.clubName,
												_league: data.clubLeague,
												_showInVote: false,
												_isUserActionDone: isUserActionDone};
						'FormationNotificationHeader'; 
						'FormationNotificationHeader';
						'ClubInvitationHeader'; 
						'ClubInvitationHeader';
						'FormationNotificationHeader'
						"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<height value="30px"/>
			</style>
			<block>
				<bind name="firstEntityDH" value="'lootboxEntity'; CC.lootboxConfigComponent"/>
				<bind name="watchDH" value="'activeAnimationLootbox';	['lootboxEntity.lootboxAnimationState.evUpdate']; lootboxEntity.lootboxAnimationState.active"/>
				<style>
					<marginTop value="3px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<bind name="style" value="'hitTest'; activeAnimationLootbox ? false : true"/>
				<bind name="transition" value="isUserActionDone; 0.15; {alpha: 1}; {alpha: 0}"/>
				<block className="button_default_small" type="native">
					<bind name="name" value="'acceptInvitation'"/>
					<bind name="enabled" value="!isUserActionDone"/>
					<style>
						<width value="1px"/>
					</style>
					<bind name="style" value="'width'; data.idInGroup == 3 ? '180px' : '110px'"/>
					<bind name="style" value="'colorMatrixFilter'; activeAnimationLootbox ? '0 -80 0 -20' : '0 0 0 0'"/>
					<bind name="label" value="data.idInGroup == 3 	? toUpperCase(tr('IDS_GOTO_INVITATIONS'))
													: toUpperCase(tr('IDS_ACCEPT'))"/>
					<bind name="dispatch" value="'mouseDown'; 'dragDisabledDown'"/>
					<bind name="dispatch" value="'buttonClick'; 'clickAcceptButton'"/>
					<bind name="request" value="'click'; data.idInGroup == 3 &amp;&amp; !isClanTabVisible ? 'WebBrowserFull' : null; {url: URL.CLAN_INVITES, redirect_to: data.url}"/>
					<bind name="action" value="'click'; (data.idInGroup == 3) &amp;&amp; isClanTabVisible ? 'changeInset' : null; {inset: LobbyConstants.CLAN, pageData: {'url': URL.CLAN_INVITES, 'redirect_to': data.url}}"/>
					<bind name="action" value="'buttonClick'; data.actionName; data.callbackData[0]"/>
				</block>
			</block>
			<block>
				<bind name="watch" value="'operationProcessingLabel'; inviteAccepted ? 	(data.idInGroup == 0 ? 'IDS_STATUS_JOINING_DIVISION' :
																		 data.idInGroup == 1 ? 'IDS_STATUS_JOINING_PARTY' :
																		 data.idInGroup == 3 ? 'IDS_GOING_TO_INVITATIONS' : 
																		 data.idInGroup == 4 ? 'IDS_STATUS_JOINING_TRAINING_ROOM'
																		 					 : 'IDS_STATUS_JOINING_CLUB')
																	: data.idInGroup == 3 ? '' : 'IDS_STATUS_DECLINING_INVITE'"/>
				<styleClass value="$MiddleAlignedAbsolutely"/>
				<styleClass value="$MiddleVAligned"/>
				<bind name="instance" value="'BusyIndicator'; showBusyIndicator ? { _label: operationProcessingLabel, _showBusyIndicator: showBusyIndicator } : null"/>
			</block>
		</block>
	</block>
	<block className="InteractiveNotificationVote">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<bind name="entityDH" value="'entityCreator'; data.creatorEntityId"/>
		<bind name="watchDH" value="'nickName'; ['entityCreator.accountName.evChanged']; entityCreator.accountName.nickName"/>
		<bind name="watchDH" value="'accountLevel'; ['entityCreator.accountLevel.evLevelChanged']; entityCreator.accountLevel.level"/>
		<bind name="watchDH" value="'rank'; ['entityCreator.accountRank.evRankChanged']; entityCreator.accountRank.rank"/>
		<style>
			<width value="370px"/>
		</style>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="notification_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="30px"/>
				<marginLeft value="1px"/>
				<marginRight value="1px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'VoteContent'; {data: data}"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<position value="absolute"/>
					<bottom value="0"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<width value="100%"/>
				<marginLeft value="1px"/>
				<marginRight value="1px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<position value="absolute"/>
					<bottom value="0"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<height value="30px"/>
				</style>
				<bind name="instance" value="'ClubNotificationHeader'; { data: data,
														_rating: data.clubRating,
														_league: data.league,
														_clubName: data.clubName,
														_level: accountLevel,
														_rank: rank,
														_playerName: nickName,
														_showInVote: true}"/>
			</block>
		</block>
	</block>
	<block className="InvitationContent">
		<style>
			<width value="100%"/>
		</style>
		<bind name="collectionDH" value="CC.club; 'clubs'"/>
		<bind name="contains" value="clubs; ($item.club.name == data.clubName); 'isClubMember'"/>
		<block className="inner_panel" type="native">
			<style>
				<marginLeft value="1px"/>
				<marginRight value="1px"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<marginBottom value="12px"/>
				<marginTop value="10px"/>
			</style>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<block>
				<style>
					<width value="100%"/>
					<marginBottom value="3px"/>
				</style>
				<block type="text">
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$TextHeader"/>
					<style>
						<maxWidth value="340"/>
						<textAlign value="center"/>
					</style>
					<bind name="text" value="(data.idInGroup == 0)	? 'IDS_INVITES_YOU_TO_JOIN_DIVISION' :
							(data.idInGroup == 1)	? isClubMember	? 'IDS_INVITES_YOU_TO_JOIN_PARTY' 
													: 'IDS_INVITES_YOU_TO_JOIN_PARTY_AS_MERC' :
							(data.idInGroup == 4)	? 'IDS_INVITES_YOU_TO_JOIN_TRAINING_ROOM'												
													: 'IDS_INVITES_YOU_TO_JOIN_CLUB'"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="data.idInGroup != 2"/>
				<style>
					<width value="100%"/>
					<marginTop value="5px"/>
				</style>
				<block type="text">
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$TextHeader"/>
					<bind name="class" value="'$FontSizeHeader4'"/>
					<bind name="countdown" value="data.expirationTime; 'countdownText'; 'mm:ss'"/>
					<bind name="pureText" value="'-' + countdownText"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ClanInvitationContent">
		<style>
			<width value="100%"/>
		</style>
		<bind name="entityDH" value="'entityAccount'; data.playerEntityId"/>
		<bind name="watchDH" value="'playerName'; ['entityAccount.accountName.evChanged']; entityAccount.accountName.name"/>
		<block className="inner_panel" type="native">
			<style>
				<marginLeft value="1px"/>
				<marginRight value="1px"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<marginBottom value="12px"/>
				<marginTop value="10px"/>
			</style>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<block type="text">
				<styleClass value="$TextHeader"/>
				<style>
					<width value="100%"/>
					<textAlign value="center"/>
					<styleSheet value="h3
						{
							font-family: $WWSDefaultFontBold;
						}"/>
				</style>
				<bind name="substitute" value="5;
								{
									'[commander]'				: 'icon_clan_role_commander',
									'[exec_officer]'			: 'icon_clan_role_executive_officer',
									'[private]'					: 'icon_clan_role_private',
									'[recr_officer]'			: 'icon_clan_role_recruitment_officer',
									'[comm_officer]'			: 'icon_clan_role_commissioned_officer',
									'[officer]'					: 'icon_clan_role_officer'
								};
								'&lt;body&gt;' + '[' + data.initiator_role + ']' + ' ' + subst('IDS_PLAYER_INVITES_YOU_TO_JOIN_A_CLAN', [], {playerName: '&lt;h3&gt;' + playerName + '&lt;/h3&gt;'}) + '&lt;/body&gt;'"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="15px"/>
					<marginBottom value="12px"/>
				</style>
				<block type="text">
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$TextHeader"/>
					<bind name="class" value="'$Bold'"/>
					<bind name="class" value="'$FontSizeHeader4'"/>
					<bind name="style" value="'textColor'; data.clan_color != '' ? '0x' + data.clan_color : 0xEEEEEE"/>
					<style>
						<maxWidth value="340"/>
						<marginBottom value="-6px"/>
						<textAlign value="center"/>
					</style>
					<bind name="text" value="'[' + data.clan_tag + ']'"/>
				</block>
				<block type="text">
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$TextHeader"/>
					<bind name="class" value="'$FontSizeHeader4'"/>
					<style>
						<maxWidth value="340"/>
						<textAlign value="center"/>
					</style>
					<bind name="text" value="data.clan_name"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ClanBuildingAvailable">
		<style>
			<width value="100%"/>
		</style>
		<block className="inner_panel" type="native">
			<style>
				<marginLeft value="1px"/>
				<marginRight value="1px"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<marginBottom value="12px"/>
				<marginTop value="10px"/>
			</style>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<block type="text">
				<styleClass value="$TextHeader"/>
				<style>
					<width value="100%"/>
					<textAlign value="center"/>
				</style>
				<bind name="text" value="'IDS_CLAN_BUILDING_AVAILABLE'"/>
			</block>
		</block>
	</block>
	<block className="ClubInvitationContent">
		<bind name="dispatch" value="'draggingChangedEv'; 'Tooltip.Close'; null; true"/>
		<style>
			<width value="100%"/>
			<marginTop value="-30px"/>
		</style>
		<block className="inner_panel" type="native">
			<style>
				<marginLeft value="1px"/>
				<marginRight value="1px"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<marginBottom value="12px"/>
				<marginTop value="10px"/>
			</style>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<bind name="entityDH" value="'entityPlayer'; data.playerEntityId"/>
			<bind name="watchDH" value="'nickName'; ['entityPlayer.accountName.evChanged']; entityPlayer.accountName.nickName"/>
			<bind name="watchDH" value="'level'; ['entityPlayer.accountLevel.evLevelChanged']; entityPlayer.accountLevel.level"/>
			<bind name="watchDH" value="'rank'; ['entityPlayer.accountRank.evRankChanged']; entityPlayer.accountRank.rank"/>
			<block type="text">
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$TextAccentBold"/>
				<style>
					<marginTop value="5px"/>
					<leading value="-4"/>
					<maxWidth value="200"/>
					<textAlign value="center"/>
				</style>
				<bind name="class" value="'$FontSizeHeader4'"/>
				<bind name="text" value="data.clubName"/>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<bind name="tooltip" value="'InteractiveHeaderClubInfoTooltip'; { 	_fromType: 'invitor', _clubName: data.clubName, _rating: data.clubRating, _league: data.clubLeague,
																	_level: level,
																	_rank: rank,
																	_playerName: nickName}"/>
				<bind name="instance" value="'ClubIconForInvitation'; {_rating: data.clubRating, _league: data.clubLeague, _clubName: data.clubName}"/>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<style>
				<marginTop value="-75px"/>
				<marginBottom value="15px"/>
			</style>
			<block type="text">
				<styleClass value="$TextHeader"/>
				<style>
					<width value="100%"/>
					<textAlign value="center"/>
					<styleSheet value="h3
						{
							font-family: $WWSDefaultFontBold;
						}"/>
				</style>
				<bind name="text" value="subst('IDS_PLAYER_INVITES_YOU_TO_JOIN_A_CLUB', [], {playerName: '&lt;body&gt;&lt;h3&gt;' + nickName + '&lt;/h3&gt;'}) + '&lt;/body&gt;'"/>
			</block>
		</block>
	</block>
	<block className="VoteContent">
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<bind name="entityDH" value="'entityPlayer'; data.playerEntityId"/>
		<bind name="watchDH" value="'name'; ['entityPlayer.accountName.evChanged']; entityPlayer.accountName.name"/>
		<bind name="watchDH" value="'nickName'; ['entityPlayer.accountName.evChanged']; entityPlayer.accountName.nickName"/>
		<bind name="watchDH" value="'level'; ['entityPlayer.accountLevel.evLevelChanged']; entityPlayer.accountLevel.level"/>
		<bind name="watchDH" value="'rank'; ['entityPlayer.accountRank.evRankChanged']; entityPlayer.accountRank.rank"/>
		<bind name="watch" value="'isAllowedToVote'; selfPlayerName == name ? false : true"/>
		<bind name="entityDH" value="'entityCreator'; data.creatorEntityId"/>
		<bind name="watchDH" value="'creatorNickName'; ['entityCreator.accountName.evChanged']; entityCreator.accountName.nickName"/>
		<bind name="watchDH" value="'creatorAccountLevel'; ['entityCreator.accountLevel.evLevelChanged']; entityCreator.accountLevel.level"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<style>
					<marginLeft value="1px"/>
					<marginRight value="1px"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="22px"/>
					<marginBottom value="18px"/>
				</style>
				<block type="text">
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$TextHeader"/>
					<style>
						<maxWidth value="350"/>
						<textAlign value="center"/>
						<alpha value="0.85"/>
					</style>
					<bind name="text" value="(data.voteType == VoteTypes.VOTE_TYPE_PLAYER_INVITE	? tr('IDS_INVITE_PLAYER_TO_CLUB') :
							data.voteType == VoteTypes.VOTE_TYPE_PLAYER_REJECT	? tr('IDS_EXCLUDE_PLAYER_FROM_CLUB') :
							data.voteType == VoteTypes.VOTE_TYPE_LEADER_REJECT	? tr('IDS_EXCLUDE_LEADER_FROM_CLUB')
																				: 'Unknown data.VoteType') + tr('IDS_QUESTION')"/>
				</block>
				<block>
					<styleClass value="$MiddleAligned"/>
					<style>
						<marginTop value="3px"/>
					</style>
					<block>
						<styleClass value="$MiddleVAligned"/>
						<bind name="instance" value="'PlayerContactItemSimple'; {
						_level: level,
						_rank: rank,
						_playerName: nickName}"/>
					</block>
					<block>
						<bind name="visible" value="data.voteType == VoteTypes.VOTE_TYPE_LEADER_REJECT"/>
						<style>
							<marginTop value="6px"/>
							<marginLeft value="2px"/>
						</style>
						<block className="icon_club_leader" type="native"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<bind name="visible" value="data.voteType == VoteTypes.VOTE_TYPE_LEADER_REJECT"/>
					<styleClass value="$MiddleAligned"/>
					<style>
						<marginTop value="15px"/>
					</style>
					<block type="text">
						<styleClass value="$TextHeader"/>
						<style>
							<maxWidth value="350"/>
							<textAlign value="center"/>
							<alpha value="0.85"/>
							<styleSheet value="h2
							{
								font-size: 13;
								color: #FFFFFF;
							}
							h3
							{
								font-family: $WWSDefaultFontBold;
								font-size: 17;
								color: #FFFFFF;
							}"/>
						</style>
						<bind name="text" value="'&lt;body&gt;' + subst('IDS_NEW_CLUB_LEADER_AFTER_VOTE', [], {newLeaderNickname: '&lt;h2&gt;' +  creatorAccountLevel + ' &lt;/h2&gt;&lt;h3&gt;' + creatorNickName + '&lt;/h3&gt;'}) + '&lt;/body&gt;'"/>
					</block>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<block>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_VOICES_NEEDED_HINT'}"/>
					<block type="text">
						<styleClass value="$TextHeader"/>
						<bind name="class" value="'$FontColorBlueish'"/>
						<bind name="text" value="tr('IDS_VOICES_NEEDED') + tr('IDS_COLON') + ' ' + (data.votes)"/>
					</block>
				</block>
				<block>
					<bind name="fade" value="(data.voteState == VoteTypes.VOTE_STATE_PROCESS); 0.15; {alpha: 0, top: 10}; {alpha: 1, top:0 }; {alpha: 0, top: -10}; 1; 0.15"/>
					<style>
						<position value="absolute"/>
						<width value="100%"/>
					</style>
					<block type="text">
						<styleClass value="$TextHeader"/>
						<style>
							<right value="0px"/>
							<bottom value="3"/>
						</style>
						<bind name="class" value="'$FontSizeHeader4'"/>
						<bind name="countdown" value="data.timer; 'countdownText'; 'mm:ss'"/>
						<bind name="pureText" value="countdownText"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<position value="absolute"/>
					<bottom value="0"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<style>
				<marginTop value="10px"/>
				<marginBottom value="12px"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<block>
				<bind name="instance" value="'VoteVoiceItem'; {_voice: data.voices[0], data:data, _voteFor: true}"/>
			</block>
			<block type="text">
				<style>
					<marginLeft value="18px"/>
					<marginRight value="18px"/>
					<marginTop value="18px"/>
				</style>
				<styleClass value="$TextAccentBoldAccountLevel2"/>
				<text value="IDS_COLON"/>
			</block>
			<block>
				<bind name="instance" value="'VoteVoiceItem'; {_voice: data.voices[1], data:data, _voteAgainst: true}"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<style>
				<width value="100%"/>
				<height value="30px"/>
			</style>
			<block>
				<bind name="visible" value="data.myVoice == (-1) &amp;&amp; isAllowedToVote &amp;&amp; data.voteState == VoteTypes.VOTE_STATE_PROCESS"/>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$MiddleVAligned"/>
				<block className="button_default_small" type="native">
					<style>
						<width value="110px"/>
					</style>
					<bind name="label" value="toUpperCase(tr('IDS_PRO'))"/>
					<bind name="dispatch" value="'mouseDown'; 'dragDisabledDown'"/>
					<bind name="action" value="'buttonClick';  data.actionName; data.callbackData[0]"/>
				</block>
				<block className="button_default_small" type="native">
					<style>
						<width value="110px"/>
						<marginLeft value="20px"/>
					</style>
					<bind name="label" value="toUpperCase(tr('IDS_CONTRA'))"/>
					<bind name="dispatch" value="'mouseDown'; 'dragDisabledDown'"/>
					<bind name="action" value="'buttonClick';  data.actionName; data.callbackData[1]"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="!(isAllowedToVote) || (isAllowedToVote &amp;&amp; data.myVoice != (-1)) || data.voteState != VoteTypes.VOTE_STATE_PROCESS"/>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$MiddleVAligned"/>
				<bind name="changeDispatch" value="data.voteState; data.voteState != VoteTypes.VOTE_STATE_PROCESS &amp;&amp; data.voteState != VoteTypes.VOTE_STATE_CREATING ? 'evVoteStateChanged' : null; null; 1"/>
				<bind name="dispatch" value="'evVoteStateChanged'; 'evShowMainStatus'"/>
				<bind name="dispatch" value="'evShowMainStatus'; data.voteState != VoteTypes.VOTE_STATE_PROCESS ? 'evHideMainStatus' : null; null; 1; 2.0"/>
				<bind name="dispatch" value="'evHideMainStatus'; data.voteState != VoteTypes.VOTE_STATE_PROCESS ? 'evShowResultStatus' : null; null; 1; 0.3"/>
				<block type="text">
					<bind name="appear" value="'evShowMainStatus'; 0.15; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
					<bind name="appear" value="'evHideMainStatus'; 0.15; 0; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 1"/>
					<styleClass value="$MiddleAlignedAbsolutely"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$TextHeaderWhiteBold"/>
					<bind name="class" value="data.result == 0 ? '$FontColorComparePositive' : '$None'"/>
					<bind name="text" value="(data.voteState == VoteTypes.VOTE_STATE_PROCESS)					? (isAllowedToVote 	? toUpperCase(tr('IDS_VOTE_IN_PROGRESS'))
																													: toUpperCase(tr('IDS_YOU_CANT_VOTE'))) :
							(data.voteState == VoteTypes.VOTE_STATE_DONE)						? (data.result == 0 ? toUpperCase(tr('IDS_VOTE_ACCEPTED'))
																													: toUpperCase(tr('IDS_VOTE_NOT_ACCEPTED')))
																								: toUpperCase(tr('IDS_VOTE_CANCELLED'))"/>
				</block>
				<block>
					<bind name="visible" value="data.voteState != VoteTypes.VOTE_STATE_PROCESS"/>
					<styleClass value="$MiddleAlignedAbsolutely"/>
					<styleClass value="$MiddleVAligned"/>
					<block type="text">
						<bind name="appear" value="'evShowResultStatus'; 0.15; 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
						<styleClass value="$TextHeaderWhiteBold"/>
						<style>
							<alpha value="0"/>
						</style>
						<bind name="class" value="data.result == 0 ? '$FontColorComparePositive' : '$None'"/>
						<bind name="text" value=" (data.result != 0) ?	data.voteState == VoteTypes.VOTE_STATE_CANCELLED_BY_INITIATOR 	? toUpperCase(tr('IDS_REASON_CANCELLED_BY_INITIATOR')) :
														data.voteState == VoteTypes.VOTE_STATE_NO_SENSE 				? toUpperCase(tr('IDS_REASON_PLAYER_LEFT_CLUB'))
																														: toUpperCase(tr('IDS_REASON_NOT_ENOUGH_VOICES'))
													:	data.voteType == VoteTypes.VOTE_TYPE_PLAYER_INVITE	? toUpperCase(tr('IDS_INVITATION_TO_CLUB_SENT')) :
														data.voteType == VoteTypes.VOTE_TYPE_PLAYER_REJECT	? toUpperCase(tr('IDS_PLAYER_KICKED_FROM_CLUB')) :
														data.voteType == VoteTypes.VOTE_TYPE_LEADER_REJECT	? toUpperCase(tr('IDS_LEADER_KICKED_FROM_CLUB'))
																											: 'Unknown data.VoteType'"/>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="FormationNotificationHeader">
		<bind name="dispatch" value="'draggingChangedEv'; 'Tooltip.Close'; null; true"/>
		<styleClass value="$Fullsize"/>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<backgroundColor value="0x01000000"/>
			</style>
			<bind name="tooltip" value="'InteractiveHeaderClubInfoTooltip'; (data.idInGroup == 1) ? { _fromType: 'invitor', _clubName: _clubName, _rating: _rating, _league: _league,
																					_level: data.senderLevel, _rank: data.rank, _playerName: data.senderName} : null"/>
			<block className="icon_formation" type="native">
				<styleClass value="$MiddleVAligned"/>
				<style>
					<left value="3px"/>
					<position value="absolute"/>
				</style>
				<bind name="gotoAndStop!" value="data.idInGroup == 0 || data.idInGroup == 4 ? 'seeker_division' : 'seeker_party'"/>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$MiddleVAligned"/>
				<bind name="instance" value="'PlayerContactItemSimple'; (data.idInGroup == 0 || data.idInGroup == 4) ? {_level: data.senderLevel, _rank: data.rank, _playerName: data.senderName, _tkStatus: data.isAbuser} : null"/>
				<block type="text">
					<bind name="visible" value="(data.idInGroup == 1)"/>
					<style>
						<maxWidth value="280"/>
					</style>
					<styleClass value="$TextHeaderBold"/>
					<bind name="text" value="_clubName"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="button_close" type="native">
			<style>
				<position value="absolute"/>
				<right value="10"/>
				<top value="10px"/>
			</style>
			<bind name="action" value="'buttonClick'; data.actionName; data.callbackData[1]"/>
			<bind name="dispatch" value="'mouseDown'; 'dragDisabledDown'"/>
			<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_REJECT'}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<position value="absolute"/>
				<bottom value="0"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ClubNotificationHeader">
		<bind name="dispatch" value="'draggingChangedEv'; 'Tooltip.Close'; null; true"/>
		<bind name="entityDH" value="'entityPlayer'; data.playerEntityId"/>
		<styleClass value="$Fullsize"/>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<backgroundColor value="0x01000000"/>
			</style>
			<bind name="tooltip" value="'InteractiveHeaderClubInfoTooltip';  data.idInGroup == 2 ? {	_fromType: 'invitor', _clubName: _clubName, _rating: _rating, _league: _league,
																					_level: entityPlayer.accountLevel.level,
	                                                                                _rank: entityPlayer.accountRank.rank,
	                                                                                _playerName: entityPlayer.accountName.nickName}
																				: {	_fromType: 'initiator', _clubName: _clubName, _rating: _rating, _league: _league,
																					_level: _level, _rank: _rank, _playerName: _playerName}"/>
			<block>
				<style>
					<position value="absolute"/>
					<left value="5px"/>
				</style>
				<styleClass value="$MiddleVAligned"/>
				<bind name="instance" value="'ClubLeagueIconSmall'; {_rating: _rating, _league: _league, _clubName: _clubName}"/>
			</block>
			<block>
				<styleClass value="$Fullsize"/>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<width value="100%"/>
					</style>
					<block type="text">
						<style>
							<maxWidth value="280"/>
						</style>
						<styleClass value="$MiddleAligned"/>
						<styleClass value="$TextHeaderBold"/>
						<bind name="text" value="_clubName"/>
					</block>
				</block>
			</block>
		</block>
		<block className="button_close" type="native">
			<bind name="visible" value="_showInVote == false"/>
			<style>
				<position value="absolute"/>
				<right value="10"/>
				<top value="10px"/>
			</style>
			<bind name="action" value="'buttonClick'; _vote ? 'cancelVote': data.actionName; _vote ? {voteId: data.voteId, category: VoteTypes.VOTE_CATEGORY_TEAM } : data.callbackData[1]"/>
			<bind name="dispatch" value="'mouseDown'; 'dragDisabledDown'"/>
			<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_REJECT'}"/>
		</block>
	</block>
	<block className="ClubInvitationHeader">
		<bind name="dispatch" value="'draggingChangedEv'; 'Tooltip.Close'; null; true"/>
		<styleClass value="$Fullsize"/>
		<block className="button_close" type="native">
			<bind name="visible" value="_showInVote == false"/>
			<style>
				<position value="absolute"/>
				<right value="10"/>
				<top value="10px"/>
			</style>
			<bind name="action" value="'buttonClick'; _vote ? 'cancelVote': data.actionName; _vote ? {voteId: data.voteId, category: VoteTypes.VOTE_CATEGORY_TEAM } : data.callbackData[1]"/>
			<bind name="dispatch" value="'mouseDown'; 'dragDisabledDown'"/>
			<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: ((data.idInGroup == 3) ? 'IDS_CLOSE_UPPER_CASE' : 'IDS_REJECT')}"/>
		</block>
	</block>
	<block className="ClanBuildingAvailableHeader">
		<bind name="dispatch" value="'draggingChangedEv'; 'Tooltip.Close'; null; true"/>
		<styleClass value="$Fullsize"/>
		<block>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$MiddleVAligned"/>
			<block type="text">
				<style>
					<maxWidth value="280"/>
				</style>
				<styleClass value="$TextHeaderBold"/>
				<bind name="text" value="'IDS_CLAN_BUILDING_AVAILABLE_HEADER'"/>
			</block>
		</block>
		<block className="button_close" type="native">
			<style>
				<position value="absolute"/>
				<right value="10"/>
				<top value="10px"/>
			</style>
			<bind name="dispatch" value="'buttonClick'; 'evHideInteractiveMessage'"/>
			<bind name="dispatch" value="'mouseDown'; 'dragDisabledDown'"/>
			<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_CLOSE_UPPER_CASE'}"/>
		</block>
	</block>
	<block className="InteractiveMessagesSwitchButton">
		<bind name="dispatch" value="'click'; 'changeSelectedNotification'; {messageIndex: _length - $index - 1}"/>
		<bind name="watch" value="'realMessageIndex'; ( _length - $index - 1 )"/>
		<bind name="tooltip" value="'SimpleTooltip'; $index == 27 ? { tooltipText: subst('IDS_PRMP_SWITCH_BUTTON_UNREAD_COUNT', [], {count: (_length - 27)}, (_length - 27))} : null"/>
		<style>
			<height value="25px"/>
			<width value="25px"/>
			<backgroundColor value="0x01000000"/>
		</style>
		<block>
			<bind name="visible" value="($index != 27)"/>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$MiddleVAligned"/>
			<block className="radiobutton_notext" type="native">
				<bind name="selected" value="(realMessageIndex == _currentIndex)"/>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<bind name="visible" value="($index == 27)"/>
			<block type="text">
				<styleClass value="$TextDefault17NM"/>
				<style>
					<dropShadowFilter value="1 90 0x08222a 1 3 3 1.5"/>
				</style>
				<bind name="text" value="' …'"/>
			</block>
		</block>
	</block>
	<block className="VoteVoiceItem">
		<block>
			<style>
				<width value="60px"/>
			</style>
			<block>
				<style>
					<position value="absolute"/>
					<right value="0px"/>
					<top value="12px"/>
				</style>
				<bind name="visible" value="_voteFor ? data.myVoice == 0 : data.myVoice == 1"/>
				<block className="icon_check" type="native"/>
			</block>
			<block type="text">
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$ResultsReward"/>
				<bind name="class" value="(data.myVoice == 0 &amp;&amp; _voteFor) ||  (data.myVoice == 1 &amp;&amp; _voteAgainst)? '$FontColorGolden': '$None'"/>
				<bind name="text" value="_voice"/>
			</block>
			<block type="text">
				<style>
					<marginTop value="-6px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<bind name="class" value="(data.myVoice == 0 &amp;&amp; _voteFor) ||  (data.myVoice == 1 &amp;&amp; _voteAgainst)? '$FontColorGolden': '$None'"/>
				<styleClass value="$TextHeader"/>
				<bind name="text" value="_voteFor ? toUpperCase(tr('IDS_PRO')) : toUpperCase(tr('IDS_CONTRA'))"/>
			</block>
		</block>
	</block>
	<block className="PlayerContactItemSimple">
		<style>
			<flow value="horizontal"/>
		</style>
		<block type="text">
			<style>
				<marginTop value="3px"/>
			</style>
			<bind name="visible" value="_rank == 0"/>
			<styleClass value="$TextSecondary"/>
			<bind name="text" value="_level"/>
		</block>
		<block>
			<bind name="visible" value="_rank != 0"/>
			<bind name="instance" value="'IconRankSmall'; {_rankId: _rank, _seasonId:0}"/>
		</block>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<style>
				<marginLeft value="2px"/>
			</style>
			<styleClass value="$TextHeaderBold"/>
			<bind name="class" value="_tkStatus ? '$FontColorTeamkiller' : '$None'"/>
			<bind name="text" value="_playerName"/>
		</block>
	</block>
	<block className="InteractiveHeaderClubInfoTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="320px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block>
			<style>
				<marginLeft value="8px"/>
				<hitTest value="false"/>
			</style>
			<block>
				<style>
					<marginTop value="8px"/>
					<marginBottom value="7px"/>
				</style>
				<bind name="instance" value="'ClubLeagueIconSmall'; {_rating: _rating, _league: _league, _clubName: _clubName}"/>
			</block>
			<block>
				<style>
					<width value="202px"/>
					<height value="100%"/>
				</style>
				<block type="text">
					<styleClass value="$MiddleVAligned"/>
					<style>
						<marginLeft value="6px"/>
						<width value="194px"/>
					</style>
					<styleClass value="$TextHeaderWhiteBold"/>
					<bind name="text" value="_clubName"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<block type="text">
				<styleClass value="$TextHeaderBigDefault"/>
				<bind name="text" value="tr('IDS_LEAGUE_'+ _league)"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<block type="text">
				<styleClass value="$TextHeaderBigDefault"/>
				<bind name="text" value="(_fromType == 'invitor' ? 'IDS_INVITE_FROM' : 'IDS_INITIATOR')"/>
			</block>
			<block>
				<style>
					<marginLeft value="4px"/>
					<marginTop value="1px"/>
				</style>
				<bind name="instance" value="'PlayerContactItemSimple'; {_level:_level, _rank: _rank, _playerName: _playerName, _tkStatus: _tkStatus}"/>
			</block>
		</block>
	</block>
	<block className="ClubIconForInvitation">
		<bind name="watch" value="'curLeague';	_league != null	? ((_league &gt; 2) ? '2'
																: _league)
												: '-1'"/>
		<style>
			<width value="260px"/>
			<height value="330px"/>
		</style>
		<block>
			<style>
				<backgroundSize value="cover"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="watch" value="'clubHeaderBgrSymbol'; 'symbol:club_header_bgr_league_' + curLeague"/>
			<bind name="style" value="'backgroundImage'; clubHeaderBgrSymbol"/>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<top value="80px"/>
				</style>
				<block type="text">
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
					</style>
					<styleClass value="$TextAccentBoldAccountLevel1"/>
					<bind name="text" value="format(_rating, -1)"/>
				</block>
				<block>
					<styleClass value="$MiddleAligned"/>
					<style>
						<marginTop value="-8px"/>
					</style>
					<block>
						<block type="text">
							<styleClass value="$TextHeader"/>
							<bind name="class" value="'$Bold'"/>
							<bind name="text" value="toLowerCase(tr('IDS_RATING'))"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block>
				<style>
					<bottom value="102"/>
					<hitTest value="false"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'ClubLeagueLabel'; (curLeague != '-1') ? {	_league: _league, _state: 'issued'} : null"/>
			</block>
		</block>
		<block>
			<style>
				<backgroundSize value="cover"/>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="watch" value="'clubLeagueSymbol'; 'symbol:club_header_league_' + curLeague"/>
			<bind name="style" value="'backgroundImage'; clubLeagueSymbol"/>
		</block>
	</block>
	<css name="$TextCarouselShipStatus">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="17"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFF9933"/>
	</css>
	<block className="ShipCarouselContainer">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'accountSlotsNum'; ['resourceEntity.accountResource.evChangedSlotsNum']; resourceEntity.accountResource.slotsNum"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'slimClientData'"/>
		<bind name="var" value="{delayedShowCarousel: false}"/>
		<bind name="dispatch" value="'addedToStage'; 'delayedAddedToStage'; null; 2; 1.5"/>
		<bind name="catch" value="'delayedAddedToStage'; {delayedShowCarousel: true}"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'carouselVisibility'; ['dockEntity.dockData.evUpdate']; dockEntity.dockData.carouselVisibility &amp;&amp; delayedShowCarousel"/>
		<bind name="fade" value="carouselVisibility ;carouselVisibility ? 0.15 : 0;	{alpha: 0, top: 10};
																	{alpha: 1, top: 0};
																	{alpha: 0, top: 10}; 1; carouselVisibility ? 0.1 : 0"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="feature" value="'17'; ''"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<style>
			<position value="absolute"/>
			<width value="100%"/>
			<bottom value="36px"/>
			<backgroundColor value="0x01000000"/>
		</style>
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="watch" value="'isSmallCarouselView'; (userPrefs.isSmallCarouselView == null) ? false : userPrefs.isSmallCarouselView"/>
		<bind name="catch" value="'carouselViewChanged'; {isSmallCarouselView: !(isSmallCarouselView)}; 'saveCarouselViewState'"/>
		<bind name="action" value="'saveCarouselViewState'; 'setUserPref' ; {value : isSmallCarouselView, name: 'isSmallCarouselView'}"/>
		<bind name="watch" value="'isFilteredShipsHided'; (userPrefs.isFilteredShipsHided == null) ? false : userPrefs.isFilteredShipsHided"/>
		<bind name="catch" value="'carouselHideFilteredChanged'; {isFilteredShipsHided: !(isFilteredShipsHided)}; 'saveCarouselHideFilteredState'"/>
		<bind name="action" value="'saveCarouselHideFilteredState'; 'setUserPref' ; {value : isFilteredShipsHided, name: 'isFilteredShipsHided'}"/>
		<bind name="catch" value="'carouselRowsCountChanged'"/>
		<block>
			<style>
				<position value="absolute"/>
				<top value="-30px"/>
			</style>
			<block className="CarouselFilters">
				<bind name="stageSize"/>
				<bind name="watch" value="'isFourRowsEnabled'; (stageHeight != null) ? (stageHeight &gt; (720 + 160)) : true"/>
				<bind name="watch" value="'isThreeRowsEnabled'; (stageHeight != null) ? (stageHeight &gt; (720 + 88)) : true"/>
				<bind name="watch" value="'curCarouselRows';	(userPrefs.curRowCountIndex == null)															? 0 :
									(userPrefs.curRowCountIndex == 2 &amp;&amp; isFourRowsEnabled)											? 2 :
									((userPrefs.curRowCountIndex == 2 || userPrefs.curRowCountIndex == 1) &amp;&amp; isThreeRowsEnabled)	? 1
																																	: 0"/>
				<bind name="action" value="'carouselRowsCountChangedByStageHeight'; 'setUserPref' ; {value : curCarouselRows, name: 'curRowCountIndex'}"/>
				<bind name="changeDispatch" value="curCarouselRows; 'carouselRowsCountChangedByStageHeight'"/>
				<bind name="feature" value="13;''"/>
				<bind name="action" value="(feature_13 == 'locked') ? 'addedToStage' : '';  'setFilterValue'; {type: 'special', field: 'IDS_WITH_COMMANDER', value: false, ident: 0 }"/>
				<bind name="action" value="(feature_13 == 'locked') ? 'addedToStage' : '';  'setFilterValue'; {type: 'special', field: 'IDS_WITHOUT_COMMANDER', value: false, ident: 0 }"/>
				<style>
					<marginLeft value="7px"/>
					<height value="30px"/>
					<flow value="horizontal"/>
				</style>
				<block>
					<bind name="name" value="'CarouselFiltersButton'"/>
					<block className="button_carousel_filters" type="native">
						<bind name="tooltip" value="'CarouselFiltersInfotip'; {	AppliedFiltersCounter: AppliedFiltersCounter,
														_isSmallCarouselView: isSmallCarouselView,
														_isFilteredShipsHided: isFilteredShipsHided}; TooltipBehaviour.verticalInfotipSwitch; null; 'carouselFiltersInfotipIsVIsible'"/>
						<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_TOOLTIP_CAROUSEL_FILTERS'}], _maxWidth: 240 }"/>
						<bind name="selected" value="carouselFiltersInfotipIsVIsible"/>
					</block>
				</block>
				<bind name="catch" value="'shipNameFIlterInfotipSelectedChanged'"/>
				<bind name="firstEntityDH" value="'panelEntity'; CC.filterPanelComponent"/>
				<bind name="watchDH" value="'selectedFilters'; ['panelEntity.shipRestrictions.evUpdate']; panelEntity.shipRestrictions.selectedFilters"/>
				<block>
					<style>
						<height value="32px"/>
						<marginTop value="-4px"/>
						<marginRight value="12px"/>
						<marginLeft value="4px"/>
					</style>
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
					<bind name="firstEntityDH" value="'enterBattleEntity'; CC.enterBattle"/>
					<bind name="firstEntityDH" value="'trainingRoomEntity'; CC.trainingRoomWindowState"/>
					<bind name="watchDH" value="'selectedBattle'; ['enterBattleEntity.enterBattle.evBattleTypesChanged']; enterBattleEntity.enterBattle.selectedBattle"/>
					<block>
						<block className="HasTrainingRoomRestrictions">
							<bind name="watchDH" value="'shipRestrictions' ; ['trainingRoomEntity.shipRestrictions.evUpdate']; trainingRoomEntity.shipRestrictions.selectedFilters"/>
							<bind name="watchDH" value="'shipsCount' ; ['trainingRoomEntity.divisionRestrictions.evUpdate']; trainingRoomEntity.divisionRestrictions.shipsCount"/>
							<bind name="watchDH" value="'typesCount' ; ['trainingRoomEntity.divisionRestrictions.evUpdate']; trainingRoomEntity.divisionRestrictions.typesCount"/>
							<bind name="primaryEntityDH" value="'defaultRestrictionsEntity'; CC.battleType; BattleTypes.TRAINING_BATTLE"/>
							<bind name="watchDH" value="'defaultTypesCount' ; ['defaultRestrictionsEntity.divisionRestrictions.evUpdate']; defaultRestrictionsEntity.divisionRestrictions.typesCount"/>
							<bind name="collectionDH" value="CC.shipFilterItem; 'idsfilters'+'ROOT'"/>
							<bind name="collectionDesign" value="'DES_'+'idsfilters'+'ROOT'; 'idsfilters'; {'filter':$entity.shipFilterItem.type == 'shipId' &amp;&amp; isIn($entity.id, shipRestrictions)}; []"/>
							<bind name="collectionDH" value="CC.shipFilterItem; 'levelfilters'+'ROOT'"/>
							<bind name="collectionDesign" value="'DES_'+'levelfilters'+'ROOT'; 'levelfilters'; {'filter':$entity.shipFilterItem.type == 'level' &amp;&amp; isIn($entity.id, shipRestrictions)}; []"/>
							<bind name="collectionDH" value="CC.shipFilterItem; 'nationfilters'+'ROOT'"/>
							<bind name="collectionDesign" value="'DES_'+'nationfilters'+'ROOT'; 'nationfilters'; {'filter':$entity.shipFilterItem.type == 'nation' &amp;&amp; isIn($entity.id, shipRestrictions)}; []"/>
							<bind name="collectionFields" value="levelfilters; ['shipFilterItem.field']"/>
							<bind name="contains" value="typesCount; $item[1] == -1; 'isAnyShipTypeNotAllowed'"/>
							<bind name="watch" value="'isCarriersRestricted'; typesCount[ShipTypes.AircraftCarrier] &amp;&amp; typesCount[ShipTypes.AircraftCarrier][1] != defaultTypesCount[ShipTypes.AircraftCarrier][1]"/>
							<bind name="watch" value="'isBattleShipsRestricted'; typesCount[ShipTypes.BattleShip] &amp;&amp; typesCount[ShipTypes.BattleShip][1] != defaultTypesCount[ShipTypes.BattleShip][1]"/>
							<bind name="watch" value="'isCruisersRestricted'; typesCount[ShipTypes.Cruiser] &amp;&amp; typesCount[ShipTypes.Cruiser][1] != defaultTypesCount[ShipTypes.Cruiser][1]"/>
							<bind name="watch" value="'isDestroyersRestricted'; typesCount[ShipTypes.Destroyer] &amp;&amp; typesCount[ShipTypes.Destroyer][1] != defaultTypesCount[ShipTypes.Destroyer][1]"/>
							<bind name="watch" value="'isAnyShipTypeRestricted'; isCarriersRestricted || isBattleShipsRestricted || isCruisersRestricted || isDestroyersRestricted"/>
							<bind name="watch" value="'hasTrainingRoomRestrictions'; (idsfilters.length &gt; 0)			||
												(shipTypefilters.length &gt; 0)	||
												(levelfilters.length &gt; 0)		||
												(nationfilters.length &gt; 0)		||
												isShipFilterRestrictionsVisible"/>
							<bind name="watch" value="'isShipFilterRestrictionsVisible'; isAnyShipTypeRestricted &amp;&amp; isAnyShipTypeNotAllowed"/>
						</block>
						<bind name="watch" value="'pveFilterVisible'; selectedBattle.type == BattleTypes.PVE_BATTLE"/>
						<bind name="watch" value="'trainingFilterVisible'; trainingRoomEntity &amp;&amp; hasTrainingRoomRestrictions"/>
						<bind name="watch" value="'rankedFilterVisible'; selectedBattle.type == BattleTypes.RANKED_BATTLE"/>
						<bind name="watch" value="'eventFilterVisible'; selectedBattle.type == BattleTypes.EVENT_BATTLE"/>
						<bind name="watch" value="'clanFilterVisible'; selectedBattle.type == BattleTypes.CLAN_BATTLE"/>
						<bind name="watch" value="'battleTypeFilterVisible'; pveFilterVisible || trainingFilterVisible || rankedFilterVisible || eventFilterVisible || clanFilterVisible"/>
						<bind name="instance" value="'AppliedBattleTypeFilter'; battleTypeFilterVisible ? {}	: null"/>
					</block>
					<block>
						<bind name="instance" value="'AppliedFilter'; {_filterType: 'shipName', shipNameFilterInfotipSelected: shipNameFilterInfotipSelected, _panelEntityId: panelEntity.id}"/>
						<bind name="instance" value="'AppliedFilter'; {_filterType: 'level', _panelEntityId: panelEntity.id}"/>
						<bind name="instance" value="'AppliedFilter'; {_filterType: 'shipType', _panelEntityId: panelEntity.id}"/>
						<bind name="instance" value="'AppliedFilter'; {_filterType: 'nation', _panelEntityId: panelEntity.id}"/>
						<bind name="instance" value="'AppliedFilter'; {_filterType: 'special', _panelEntityId: panelEntity.id}"/>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<bind name="instance" value="'ResetAllFilters'; selectedFilters.length &gt; 0 ? {} : null"/>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'ShipCarousel'; {	_addShipSlotsBuyBlocks: (feature_17 != 'locked'),
											_shipFilterId: CC.mainShipFilter,
											_scrollToStart: true, 
											isSmallCarouselView: isSmallCarouselView,
											_isFilteredShipsHided: isFilteredShipsHided}"/>
		</block>
		<block>
			<bind name="collectionDH" value="CC.ownShip; 'playerShips'"/>
			<bind name="transition" value="rollOver; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: 10}; 0; rollOver ? 0 : 3"/>
			<style>
				<position value="absolute"/>
				<right value="38px"/>
				<top value="-37px"/>
				<flow value="horizontal"/>
			</style>
			<block>
				<style>
					<marginRight value="2px"/>
				</style>
				<block type="text">
					<style>
						<alpha value="0.75"/>
						<right value="0px"/>
						<hitTest value="false"/>
					</style>
					<styleClass value="$TextDefaultWhite"/>
					<bind name="class" value="'$Bold'"/>
					<bind name="text" value="tr('IDS_SHIPS')+tr('IDS_COLON')+ ' ' + playerShips.length"/>
				</block>
				<block type="text">
					<bind name="visible" value="feature_17 != 'locked'"/>
					<style>
						<alpha value="0.75"/>
						<right value="0px"/>
						<marginTop value="-6px"/>
						<hitTest value="false"/>
					</style>
					<styleClass value="$TextDefaultWhite"/>
					<bind name="class" value="'$Bold'"/>
					<bind name="text" value="tr('IDS_FREE_SLOTS') + ' ' + accountSlotsNum"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<top value="-26px"/>
				<right value="16px"/>
			</style>
			<block className="button_settings_small" type="native">
				<params>
					<param name="name" value="peculiarityFilter"/>
				</params>
				<bind name="selected" value="contentFiltersInfotipIsVIsible"/>
				<bind name="tooltip" value="'PeculiarityFiltersContent'; {}; TooltipBehaviour.verticalInfotipSwitchUp; null; 'contentFiltersInfotipIsVIsible'"/>
				<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_TOOLTIP_CAROUSEL_FILTERS_SPECIAL'}], _maxWidth: 240 }"/>
			</block>
		</block>
	</block>
	<block className="CarouselItem">
		<bind name="firstEntityDH" value="'trainingRoomEntity'; CC.trainingRoomWindowState"/>
		<bind name="watchDH" value="'windowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.state"/>
		<bind name="watchDH" value="'notReadyWindowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.notReadyWindowState"/>
		<bind name="watchDH" value="'windowInset'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.inset"/>
		<bind name="watchDH" value="'windowInsetLabel'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.insetLabel"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'slimClientData'"/>
		<bind name="watch" value="'formationType'; !!trainingRoomEntity ? 'TRAINING_ROOM' : 'DIVISION'"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="dataRefDH" value="'shipEntity'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'excludedMain'; ['shipEntity.mainShipFilter.evUpdate']; shipEntity.mainShipFilter.excluded"/>
		<bind name="watch" value="'excluded'; excludedMain"/>
		<bind name="watchDH" value="'isNeedRepair'; ['shipEntity.ownShip.evUpdateDockState']; shipEntity.ownShip.isNeedRepair"/>
		<bind name="watchDH" value="'isNeedShell'; ['shipEntity.ownShip.evUpdateDockState']; shipEntity.ownShip.isNeedShell"/>
		<bind name="watchDH" value="'isLocked'; ['shipEntity.ownShip.evUpdateLock']; shipEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'isInFormation'; ['shipEntity.ownShip.evUpdateLock']; shipEntity.ownShip.isInFormation"/>
		<bind name="watchDH" value="'isDownloaded'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent.isDownloaded"/>
		<bind name="watchDH" value="'flagName'; ['shipEntity.ship.evUpdate']; shipEntity.ship.flagName"/>
		<bind name="watchDH" value="'shipType'; ['shipEntity.ship.evUpdate']; shipEntity.ship.shipType"/>
		<bind name="watchDH" value="'levelRome'; ['shipEntity.ship.evUpdate']; shipEntity.ship.levelRome"/>
		<bind name="watchDH" value="'fullName'; ['shipEntity.ship.evUpdate']; shipEntity.ship.fullName"/>
		<bind name="watchDH" value="'shipId'; []; shipEntity.ship.id"/>
		<bind name="name" value="'carouselItem' + fullName"/>
		<bind name="watch" value="'isSelected'; shipId == _selectedShipId"/>
		<bind name="feature" value="'17'; ''"/>
		<bind name="action" value="'click'; isDownloaded ? 'selectShip' : null; {shipId: shipId}"/>
		<style>
			<width value="216px"/>
		</style>
		<bind name="style" value="'height'; _isSmallCarouselView ? '63px' : '126px'"/>
		<block>
			<bind name="name" value="'carouselItem' + $index"/>
			<bind name="name" value="shipEntity.mainShipFilter.excluded ? 'excluded' : 'included'"/>
			<bind name="style" value="'alpha'; !excluded ? 1 : 0.3"/>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$MiddleVAligned"/>
			<block className="BlurMapLow">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap5" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.2"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
			<block className="dock_thumb_normal_9s" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="popup" value="'ShipExtendedTooltipUB2';
											{shipId: shipId,
											_needService: (isNeedRepair || isNeedShell),
											_isLocked: isLocked
											};
											
											1;{type:'lesta.unbound.bindings.popup.ReasonPopupSpacingComponent',params:{directionsPriority:['top'],reasonOffsetTop:10,}};{reason:{mouseOver:{action:'show',params:{duration:0.3,startProps:{alpha:0,x:0,y:10},finishProps:{alpha:1,x:0,y:0},delay:0.7}},mouseOut:{action:'hide',params:{duration:0.1,startProps:{alpha:1,x:0,y:0},finishProps:{alpha:0,x:0,y:-5}}},removedFromStage:{action:'hide',params:{duration:0.1,startProps:{alpha:1,x:0,y:0},finishProps:{alpha:0,x:0,y:-5}}},popup_opened:{action:'hideByPriority',params:{duration:0.1,startProps:{alpha:1,x:0,y:0},finishProps:{alpha:0,x:0,y:-5}}}},reasonScope:{onLostTop:{action:'hide',params:{duration:0.1,startProps:{alpha:1,x:0,y:0},finishProps:{alpha:0,x:0,y:-5}}}}}
											"/>
				<bind name="menu" value="'ShipTreeMenu'; { shipId: shipId, _disableShipActions: _disableShipActions }"/>
				<bind name="doubleClickEnabled" value="feature_17 != 'locked' ? true : false"/>
				<bind name="action" value="'doubleClick'; !_disableShipActions ? 'changeInset' : ''; { inset: LobbyConstants.SHIP_MODULES }"/>
				<bind name="soundSet" value="'carousel_item'"/>
				<bind name="selected" value="isSelected"/>
				<bind name="name" value="'carouselItem' + fullName + '_indicator'"/>
			</block>
			<block>
				<bind name="instance" value="'ShipCarouselSlotWrapper';
				{
					_isSmallCarouselView : _isSmallCarouselView,
					_data : {
						isNeedRepair: isNeedRepair,
						isNeedShell: isNeedShell,
						isLocked: isLocked,
						shipCountry: flagName,
						shipId: shipId,
						shipType: shipType,
						shipLevelRome: levelRome,
						rollOver: rollOver,
						isInFormation: isInFormation,
						_formationType: formationType,
						_selected: isSelected,
						_rollOver: rollOver,
						_mouseDown: mouseDown
					}
				}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!(isDownloaded)"/>
			<style>
				<backgroundColor value="0x01000000"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="action" value="'click'; 'exitGameAndContinueDownloading'"/>
			<bind name="tooltip" value="'MouseInstructionTooltip'; !(isDownloaded)	? { _mouseInstructions:		[{_type: 'warning', _instructionText: shipInfo.isEventLike	? 'IDS_ENTER_IN_FULL_VERSION_FOR_ANNOUNCE_SHIPS'
																																							: 'IDS_ENTER_IN_FULL_VERSION_FOR_SHIPS'},
																								 {_type: 'left', _instructionText: 'IDS_EXIT_AND_CONTINUE_DOWNLOADING_MOUSE_INSTRUCTION'}], 
																								  _maxWidth: 250 }
																	: null"/>
			<block>
				<bind name="transition" value="rollOver; 0.07; {alpha: 0.7}; {alpha: 1}"/>
				<style>
					<hitTest value="false"/>
					<width value="39px"/>
					<height value="39px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$MiddleVAligned"/>
				<bind name="style" value="'backgroundImage'; 'url:../service_kit/icons/icon_download.png'"/>
			</block>
		</block>
	</block>
	<block className="ShipCarouselSlotWrapper">
		<bind name="child" value="_isSmallCarouselView; _data; 'ShipCarouselDefaultSlot'; 'ShipCarouselSmallSlot'"/>
	</block>
	<block className="ShipCarousel">
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'shipId'; ['dockEntity.shipSelection.evShipUpdate']; dockEntity.shipSelection.currentShipId"/>
		<bind name="watchDH" value="'shipIdForModuleInset'; ['dockEntity.shipSelection.evShipViewUpdate']; dockEntity.shipSelection.currentShipIdForModuleInset"/>
		<bind name="watch" value="'curRowCountIndex'; (userPrefs.curRowCountIndex == null) ? 0 : userPrefs.curRowCountIndex"/>
		<bind name="watch" value="'rowsCount'; 	(!isSmallCarouselView)	? 1	:
								_fixedCarouselRows		? _fixedCarouselRows :
								curRowCountIndex == 0 	? 2 : 
								curRowCountIndex == 1 	? 3
														: 4"/>
		<bind name="watch" value="'carouselSmallViewHeight'; !isSmallCarouselView	? 63
																	: (rowsCount * 63)"/>
		<style>
			<flow value="horizontal"/>
			<width value="100%"/>
			<minHeight value="126"/>
		</style>
		<bind name="style" value="'height'; carouselSmallViewHeight +  'px'"/>
		<bind name="name" value="'carouselPlayerShips'"/>
		<bind name="stageSize"/>
		<bind name="watch" value="'maxSlotsOnScreen'; isSmallCarouselView ? ((stageWidth - 58) / 214) / 2 : ((stageWidth - 58) / 214) "/>
		<block>
			<style>
				<width value="20px"/>
				<height value="100%"/>
			</style>
			<block className="button_slide_left" type="native">
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$MiddleAligned"/>
				<params>
					<param name="focusable" value="false"/>
				</params>
				<bind name="enabled" value="ShipsCarouselCanScrollLeft"/>
				<bind name="name" value="'buttonCarouselLeft'"/>
				<bind name="dispatch" value="'buttonClick'; 'ShipsCarouselScrollPrev'"/>
			</block>
		</block>
		<bind name="collectionDH" value="_shipFilterId; 'filteredCarouselShips'; 'filtered.sorted'"/>
		<block>
			<style>
				<width value="100%f"/>
				<height value="100%"/>
				<overflow value="scroll"/>
				<scrollArea value="ModernScrollAreaHorizontal"/>
				<scrollbarController value="lesta.unbound.style.UbScrollingControllerTouch"/>
				<wheelScrollSpeed value="216"/>
				<layout value="lesta.unbound.layout.measure.CarouselLayout"/>
				<itemWidth value="216px"/>
				<itemHeight value="126px"/>
			</style>
			<bind name="style" value="'flow'; isSmallCarouselView ? 'vtile' : 'horizontal'"/>
			<bind name="style" value="'itemHeight'; isSmallCarouselView ? '63px' : '126px'"/>
			<bind name="name" value="'shipCarouseContaner'"/>
			<bind name="generatorDH" value="_shipFilterId; 'CarouselItem'; _isFilteredShipsHided ? 'filtered.sorted'
																				: 'sorted'; {	shipFilterId: _shipFilterId,
																								_selectedShipId: shipIdForModuleInset,
																								_isSmallCarouselView: isSmallCarouselView,
																								_disableShipActions: _disableShipActions}"/>
			<bind name="scrollController" value="'ShipsCarousel'; 216; rowsCount"/>
			<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerShipsCarousel; _shipFilterId; 'sorted'; 'ShipsCarousel'; _scrollToStart"/>
			<bind name="dispatch" value="'addedToStage'; 'ShipsCarouselScrollToSelected'"/>
			<block>
				<bind name="visible" value="(filteredCarouselShips.length == 0 &amp;&amp; _isFilteredShipsHided)"/>
				<block className="ShipCarouselNoCompatibleShips">
					<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
					<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
					<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
					<bind name="watch" value="'curRowCountIndex'; (userPrefs.curRowCountIndex == null) ? 0 : userPrefs.curRowCountIndex"/>
					<bind name="class" value="	!(isSmallCarouselView) 	? '$CarouselServiceBlock' :
					curRowCountIndex == 0 	? '$CarouselServiceBlock'		:
					curRowCountIndex == 1 	? '$CarouselServiceBlock3rows'	:
					curRowCountIndex == 2 	? '$CarouselServiceBlock4rows'
											: '$CarouselServiceBlock'"/>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CAROUSEL_NO_COMPATIBLE_SHIPS_TOOLTIP'}; 0"/>
					<block className="inner_panel" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<styleClass value="$MiddleVAligned"/>
						<block type="text">
							<style>
								<width value="100%"/>
								<textAlign value="center"/>
								<marginRight value="8px"/>
								<marginLeft value="8px"/>
								<leading value="0"/>
							</style>
							<styleClass value="$TextDefaultBold17NM"/>
							<bind name="class" value="'$FontColorUnready'"/>
							<text value="IDS_CAROUSEL_NO_COMPATIBLE_SHIPS"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="_addShipSlotsBuyBlocks"/>
				<block className="ShipCarouselPurchaseShip">
					<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
					<bind name="watchDH" value="'accountSlotsNum'; ['resourceEntity.accountResource.evChangedSlotsNum']; resourceEntity.accountResource.slotsNum"/>
					<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
					<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
					<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
					<bind name="watch" value="'curRowCountIndex'; (userPrefs.curRowCountIndex == null) ? 0 : userPrefs.curRowCountIndex"/>
					<bind name="class" value="	!(isSmallCarouselView) 	? '$CarouselServiceBlock' :
					curRowCountIndex == 0 	? '$CarouselServiceBlock'		:
					curRowCountIndex == 1 	? '$CarouselServiceBlock3rows'	:
					curRowCountIndex == 2 	? '$CarouselServiceBlock4rows'
											: '$CarouselServiceBlock'"/>
					<block className="inner_panel" type="native">
						<styleClass value="$Fullsize"/>
						<style>
							<position value="absolute"/>
						</style>
					</block>
					<block>
						<styleClass value="$MiddleAligned"/>
						<styleClass value="$MiddleVAligned"/>
						<block>
							<style>
								<width value="190px"/>
							</style>
							<block className="button_dock" type="native">
								<bind name="tooltip" value="'PurchaseShipTooltip'; {}; 1"/>
								<style>
									<width value="100%"/>
									<height value="30px"/>
								</style>
								<bind name="enabled" value="_enabled"/>
								<bind name="action" value="'buttonClick'; 'changeInset'; { inset: LobbyConstants.SHIP_RESEARCH_TREE}"/>
								<bind name="dispatch" value="'buttonClick'; 'hideCrew'"/>
								<block>
									<style>
										<marginTop value="8px"/>
										<hitTest value="false"/>
									</style>
									<styleClass value="$MiddleAligned"/>
									<block type="text">
										<styleClass value="$TextDefaultBold"/>
										<styleClass value="$MiddleVAligned"/>
										<text value="IDS_PURCHASE_SHIP_UPPER_CASE"/>
									</block>
									<style>
										<flow value="horizontal"/>
									</style>
								</block>
							</block>
						</block>
						<block>
							<bind name="visible" value="accountSlotsNum &gt; 0"/>
							<styleClass value="$MiddleAligned"/>
							<style>
								<hitTest value="false"/>
								<marginTop value="-6px"/>
							</style>
							<block type="text">
								<bind name="name" value="'ShipCarouselFreeSlots'"/>
								<styleClass value="$TextDefault"/>
								<bind name="class" value="'$FontColorBlueish'"/>
								<bind name="text" value="tr('IDS_FREE_SLOTS')  + ' ' + accountSlotsNum"/>
							</block>
						</block>
						<block>
							<bind name="visible" value="accountSlotsNum == 0"/>
							<styleClass value="$MiddleAligned"/>
							<style>
								<hitTest value="false"/>
								<marginTop value="-8px"/>
							</style>
							<block type="text">
								<styleClass value="$TextDefaultBold"/>
								<styleClass value="$FontColorUnready"/>
								<style>
									<maxWidth value="170"/>
									<textAlign value="center"/>
								</style>
								<bind name="substitute" value="5; {'[icon]': 'icon_warning_orange_bm'}; '[icon] ' + tr('IDS_NO_FREE_SLOTS')"/>
							</block>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="_addShipSlotsBuyBlocks"/>
				<block className="ShipCarouselPurchaseShipSlot">
					<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY + 'SLOT_COST'; 'slotPrice'"/>
					<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
					<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
					<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
					<bind name="watch" value="'curRowCountIndex'; (userPrefs.curRowCountIndex == null) ? 0 : userPrefs.curRowCountIndex"/>
					<bind name="class" value="	!(isSmallCarouselView) 	? '$CarouselServiceBlock' :
					curRowCountIndex == 0 	? '$CarouselServiceBlock'		:
					curRowCountIndex == 1 	? '$CarouselServiceBlock3rows'	:
					curRowCountIndex == 2 	? '$CarouselServiceBlock4rows'
											: '$CarouselServiceBlock'"/>
					<block className="inner_panel" type="native">
						<styleClass value="$Fullsize"/>
						<style>
							<position value="absolute"/>
						</style>
					</block>
					<block>
						<styleClass value="$MiddleVAligned"/>
						<styleClass value="$MiddleAligned"/>
						<block>
							<style>
								<width value="190px"/>
							</style>
							<block className="button_dock" type="native">
								<bind name="tooltip" value="'PurchaseSlotTooltip'; {}; 1"/>
								<style>
									<width value="100%"/>
									<height value="30px"/>
								</style>
								<bind name="enabled" value="_enabled"/>
								<bind name="name" value="'buttonBuySlots'"/>
								<bind name="input"/>
								<block>
									<style>
										<marginTop value="8px"/>
									</style>
									<styleClass value="$MiddleAligned"/>
									<style>
										<mouseEnabled value="false"/>
										<mouseChildren value="false"/>
									</style>
									<block type="text">
										<styleClass value="$TextDefaultBold"/>
										<styleClass value="$MiddleVAligned"/>
										<text value="IDS_PURCHASE_SLOT_FOR_UPPER_CASE"/>
									</block>
									<style>
										<flow value="horizontal"/>
									</style>
								</block>
							</block>
						</block>
						<block>
							<styleClass value="$MiddleAligned"/>
							<style>
								<marginTop value="-6px"/>
							</style>
							<bind name="instance" value="'PriceTag'; { priceInfo: slotPrice.prices[0], _showDiscountTag:true}"/>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
					</block>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<height value="100%"/>
				<width value="20px"/>
			</style>
			<block className="button_slide_right" type="native">
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$MiddleAligned"/>
				<params>
					<param name="focusable" value="false"/>
				</params>
				<bind name="enabled" value="ShipsCarouselCanScrollRight"/>
				<bind name="name" value="'buttonCarouselRight'"/>
				<bind name="dispatch" value="'buttonClick'; 'ShipsCarouselScrollNext'"/>
			</block>
		</block>
	</block>
	<css name="$CarouselServiceBlock">
		<marginBottom value="3px"/>
		<height value="120px"/>
		<width value="204px"/>
		<marginLeft value="8px"/>
		<marginRight value="8px"/>
		<marginTop value="3px"/>
	</css>
	<css name="$CarouselServiceBlockSmall">
		<marginBottom value="3px"/>
		<height value="88px"/>
		<width value="204px"/>
		<marginLeft value="8px"/>
		<marginRight value="8px"/>
		<marginTop value="3px"/>
	</css>
	<css name="$CarouselServiceBlock3rows">
		<marginBottom value="3px"/>
		<height value="182px"/>
		<width value="204px"/>
		<marginLeft value="8px"/>
		<marginRight value="8px"/>
		<marginTop value="3px"/>
	</css>
	<css name="$CarouselServiceBlock4rows">
		<marginBottom value="3px"/>
		<height value="246px"/>
		<width value="204px"/>
		<marginLeft value="8px"/>
		<marginRight value="8px"/>
		<marginTop value="3px"/>
	</css>
	<block className="ShipCarouselPurchaseShip">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'accountSlotsNum'; ['resourceEntity.accountResource.evChangedSlotsNum']; resourceEntity.accountResource.slotsNum"/>
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="watch" value="'curRowCountIndex'; (userPrefs.curRowCountIndex == null) ? 0 : userPrefs.curRowCountIndex"/>
		<bind name="class" value="	!(isSmallCarouselView) 	? '$CarouselServiceBlock' :
					curRowCountIndex == 0 	? '$CarouselServiceBlock'		:
					curRowCountIndex == 1 	? '$CarouselServiceBlock3rows'	:
					curRowCountIndex == 2 	? '$CarouselServiceBlock4rows'
											: '$CarouselServiceBlock'"/>
		<block className="inner_panel" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$MiddleVAligned"/>
			<block>
				<style>
					<width value="190px"/>
				</style>
				<block className="button_dock" type="native">
					<bind name="tooltip" value="'PurchaseShipTooltip'; {}; 1"/>
					<style>
						<width value="100%"/>
						<height value="30px"/>
					</style>
					<bind name="enabled" value="_enabled"/>
					<bind name="action" value="'buttonClick'; 'changeInset'; { inset: LobbyConstants.SHIP_RESEARCH_TREE}"/>
					<bind name="dispatch" value="'buttonClick'; 'hideCrew'"/>
					<block>
						<style>
							<marginTop value="8px"/>
							<hitTest value="false"/>
						</style>
						<styleClass value="$MiddleAligned"/>
						<block type="text">
							<styleClass value="$TextDefaultBold"/>
							<styleClass value="$MiddleVAligned"/>
							<text value="IDS_PURCHASE_SHIP_UPPER_CASE"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="accountSlotsNum &gt; 0"/>
				<styleClass value="$MiddleAligned"/>
				<style>
					<hitTest value="false"/>
					<marginTop value="-6px"/>
				</style>
				<block type="text">
					<bind name="name" value="'ShipCarouselFreeSlots'"/>
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<bind name="text" value="tr('IDS_FREE_SLOTS')  + ' ' + accountSlotsNum"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="accountSlotsNum == 0"/>
				<styleClass value="$MiddleAligned"/>
				<style>
					<hitTest value="false"/>
					<marginTop value="-8px"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefaultBold"/>
					<styleClass value="$FontColorUnready"/>
					<style>
						<maxWidth value="170"/>
						<textAlign value="center"/>
					</style>
					<bind name="substitute" value="5; {'[icon]': 'icon_warning_orange_bm'}; '[icon] ' + tr('IDS_NO_FREE_SLOTS')"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ShipCarouselNoCompatibleShips">
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="watch" value="'curRowCountIndex'; (userPrefs.curRowCountIndex == null) ? 0 : userPrefs.curRowCountIndex"/>
		<bind name="class" value="	!(isSmallCarouselView) 	? '$CarouselServiceBlock' :
					curRowCountIndex == 0 	? '$CarouselServiceBlock'		:
					curRowCountIndex == 1 	? '$CarouselServiceBlock3rows'	:
					curRowCountIndex == 2 	? '$CarouselServiceBlock4rows'
											: '$CarouselServiceBlock'"/>
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CAROUSEL_NO_COMPATIBLE_SHIPS_TOOLTIP'}; 0"/>
		<block className="inner_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<styleClass value="$MiddleVAligned"/>
			<block type="text">
				<style>
					<width value="100%"/>
					<textAlign value="center"/>
					<marginRight value="8px"/>
					<marginLeft value="8px"/>
					<leading value="0"/>
				</style>
				<styleClass value="$TextDefaultBold17NM"/>
				<bind name="class" value="'$FontColorUnready'"/>
				<text value="IDS_CAROUSEL_NO_COMPATIBLE_SHIPS"/>
			</block>
		</block>
	</block>
	<block className="ShipCarouselPurchaseShipSlot">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY + 'SLOT_COST'; 'slotPrice'"/>
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="watch" value="'curRowCountIndex'; (userPrefs.curRowCountIndex == null) ? 0 : userPrefs.curRowCountIndex"/>
		<bind name="class" value="	!(isSmallCarouselView) 	? '$CarouselServiceBlock' :
					curRowCountIndex == 0 	? '$CarouselServiceBlock'		:
					curRowCountIndex == 1 	? '$CarouselServiceBlock3rows'	:
					curRowCountIndex == 2 	? '$CarouselServiceBlock4rows'
											: '$CarouselServiceBlock'"/>
		<block className="inner_panel" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$MiddleAligned"/>
			<block>
				<style>
					<width value="190px"/>
				</style>
				<block className="button_dock" type="native">
					<bind name="tooltip" value="'PurchaseSlotTooltip'; {}; 1"/>
					<style>
						<width value="100%"/>
						<height value="30px"/>
					</style>
					<bind name="enabled" value="_enabled"/>
					<bind name="name" value="'buttonBuySlots'"/>
					<bind name="input"/>
					<block>
						<style>
							<marginTop value="8px"/>
						</style>
						<styleClass value="$MiddleAligned"/>
						<style>
							<mouseEnabled value="false"/>
							<mouseChildren value="false"/>
						</style>
						<block type="text">
							<styleClass value="$TextDefaultBold"/>
							<styleClass value="$MiddleVAligned"/>
							<text value="IDS_PURCHASE_SLOT_FOR_UPPER_CASE"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<marginTop value="-6px"/>
				</style>
				<bind name="instance" value="'PriceTag'; { priceInfo: slotPrice.prices[0], _showDiscountTag:true}"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ShipCarouselDefaultSlot">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<style>
			<width value="204px"/>
			<height value="120px"/>
		</style>
		<bind name="transition" value="_selected; 0.15; {width: 204, height: 120}; {width: 216, height: 126}"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ownShip; shipId"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="watchDH" value="'upgradableShipInfo'; ['shipEntity.upgradableShipInfo.evUpdate']; shipEntity.upgradableShipInfo"/>
		<bind name="watchDH" value="'crewId';		['shipEntity.ownShip.evCrewChanged'];			shipEntity.ownShip.crewId"/>
		<bind name="watchDH" value="'isPrimary';		['shipEntity.ownShip.evIsPrimaryChanged'];		shipEntity.ownShip.isPrimary"/>
		<bind name="watchDH" value="'costTotal';		['shipEntity.ownShip.evUpdateDockState'];		shipEntity.ownShip.costTotal"/>
		<bind name="watchDH" value="'timeRent';		['shipEntity.ownShip.evUpdateDockState'];		shipEntity.ownShip.timeRent"/>
		<bind name="watchDH" value="'expMultiply';	['shipEntity.ownShip.evExpMultiplyChanged'];	shipEntity.ownShip.expMultiply"/>
		<bind name="firstEntityDH" value="'enterBattleEntity'; CC.enterBattle"/>
		<bind name="watchDH" value="'selectedBattle'; ['enterBattleEntity.enterBattle.evBattleTypesChanged']; enterBattleEntity.enterBattle.selectedBattle"/>
		<bind name="watch" value="'freezeListPath'; shipEntity.ownShip.id + '_' + selectedBattle.type"/>
		<bind name="primaryEntityDH" value="'shipFreezeListEntity'; CC.freezeList; freezeListPath"/>
		<bind name="watchDH" value="'freezeListArr'; ['shipFreezeListEntity.freezeList.evUpdate']; shipFreezeListEntity.freezeList.items"/>
		<bind name="watch" value="'isShipFrozen'; (shipFreezeListEntity ? true : false)"/>
		<block className="thumb_hl_red" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
				<alpha value="1.2"/>
			</style>
			<bind name="selected" value="_selected"/>
			<bind name="visible" value="((isNeedRepair || isNeedShell || !shipInfoSlim.isDownloaded || isShipFrozen) ? true : false)"/>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<block>
				<style>
					<position value="absolute"/>
					<left value="2px"/>
					<top value="2px"/>
					<width value="196px"/>
					<height value="118px"/>
					<hitTest value="false"/>
				</style>
				<bind name="style" value="'alpha'; (isNeedRepair || isNeedShell || isLocked || (!shipInfoSlim.isDownloaded) || (crewId == 0) || isShipFrozen) ? 0.3 : 0.5"/>
				<bind name="transition" value="!_selected; 0.15; {width: 208, height: 126}; {width: 196, height: 118} "/>
				<bind name="instance" value="'NationFlagsBig'; {_width: '100%', _height: '100%', shipCountry: shipInfo.flagName}"/>
			</block>
			<block>
				<bind name="style" value="'alpha'; (isNeedRepair || isNeedShell || isLocked || (!shipInfoSlim.isDownloaded) || (crewId == 0) || isShipFrozen) ? 0.4 : 1"/>
				<style>
					<width value="204px"/>
					<height value="120px"/>
					<backgroundStretchX value="true"/>
					<backgroundStretchY value="true"/>
					<hitTest value="false"/>
				</style>
				<styleClass value="$MiddleAlignedAbsolutely"/>
				<styleClass value="$MiddleVAligned"/>
				<bind name="style" value="'backgroundImage'; 'url:' + shipInfo.pathPreview"/>
				<bind name="transition" value="_selected; 0.15; {width: 204, height: 120}; {width: 214, height: 126}"/>
			</block>
			<block>
				<bind name="tooltip" value="'SubTextTooltip'; {tooltipText: 'IDS_TOOLTIP_PRIMARY_SHIP', tooltipSubText: 'IDS_TOOLTIP_PRIMARY_SHIP_DESCRIPTION'}"/>
				<style>
					<position value="absolute"/>
					<right value="-1px"/>
					<top value="-1px"/>
				</style>
				<bind name="visible" value="isPrimary"/>
				<block className="icon_primary_ribbon" type="native"/>
			</block>
			<block>
				<bind name="visible" value="timeRent &gt; 0"/>
				<bind name="name" value="'timeRent_' + shipInfo.fullName"/>
				<style>
					<position value="absolute"/>
					<right value="3px"/>
					<top value="3px"/>
				</style>
				<bind name="instance" value="'RentTimer'; (timeRent &gt; 0)  ? {_timeRent: timeRent, _shipGroup: shipEntity.ship.group} : null"/>
			</block>
			<block>
				<bind name="style" value="'alpha'; (isNeedRepair || isNeedShell || isLocked || !shipInfoSlim.isDownloaded || (crewId == 0) || isShipFrozen) ? 0.3 : 1"/>
				<styleClass value="$Fullsize"/>
				<style>
					<marginLeft value="8px"/>
					<marginTop value="4px"/>
					<marginRight value="8px"/>
					<marginBottom value="4px"/>
					<hitTest value="false"/>
				</style>
				<block>
					<style>
						<height value="20px"/>
					</style>
					<block className="icon_wreath" type="native">
						<bind name="name" value="upgradableShipInfo.isElite ? 'CarouselShipElite_' + shipInfo.fullName : '' "/>
						<styleClass value="$MiddleVAligned"/>
						<style>
							<position value="absolute"/>
							<left value="-5px"/>
						</style>
						<bind name="visible" value="upgradableShipInfo.isElite || shipInfo.isPremium || shipInfo.uiSpecial"/>
						<bind name="gotoAndStop!" value="(shipInfo.isPremium || shipInfo.uiSpecial) 	? 'premium' : 'elite'"/>
					</block>
					<block>
						<styleClass value="$MiddleVAligned"/>
						<block className="icon_ship" type="native">
							<style>
								<marginBottom value="2px"/>
							</style>
							<bind name="gotoAndStop!" value="shipInfo.isPremium || shipInfo.uiSpecial ? shipInfo.subtype + '_P' : shipInfo.subtype"/>
							<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: shipTypeIDS}; 0"/>
						</block>
					</block>
					<block type="text">
						<styleClass value="$TextSecondaryBold"/>
						<bind name="class" value="shipInfo.isPremium || shipInfo.uiSpecial ? '$FontColorGold' : '$FontColorWhite'"/>
						<style>
							<marginTop value="-1px"/>
							<marginLeft value="3px"/>
							<marginRight value="3px"/>
						</style>
						<bind name="text" value="shipLevelRome"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<bottom value="2px"/>
						<right value="0"/>
					</style>
					<block type="text">
						<style>
							<width value="115px"/>
							<textAlign value="right"/>
							<multiline value="false"/>
						</style>
						<styleClass value="$TextDefaultBold"/>
						<bind name="class" value="'$LetterSpacingSmall'"/>
						<bind name="class" value="shipInfo.isPremium || shipInfo.uiSpecial ? '$FontColorGold' : '$FontColorWhite'"/>
						<bind name="text" value="toUpperCase(tr(shipInfo.nameIDS))"/>
					</block>
				</block>
			</block>
		</block>
		<bind name="watchDH" value="'bonusTagIds'; ['shipEntity.ownShip.evBonusTagsChanged']; shipEntity.ownShip.bonusTags"/>
		<bind name="watch" value="'bonusTagVisible'; bonusTagIds.length &gt; 0"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'BonusTagItemBackground'; bonusTagVisible ? {_bonusTagId: bonusTagIds[0], _selected: _selected} : null"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<bottom value="4px"/>
				<left value="8px"/>
			</style>
			<bind name="style" value="'alpha'; (isNeedRepair || isNeedShell || isLocked || (crewId == 0) || (!shipInfoSlim.isDownloaded) || isShipFrozen) ? 0.5 : 1"/>
			<block>
				<style>
					<marginTop value="4px"/>
					<marginLeft value="-4px"/>
				</style>
				<bind name="repeat" value="bonusTagIds; 'BonusTagItem'; {}"/>
			</block>
			<block>
				<bind name="tooltip" value="'DoubleExperienceTooltip'; {_shipId: shipId}"/>
				<bind name="instance" value="'DoubleExperience'; (expMultiply &gt; 1) ? {expMultiplyPercentsString: subst('%m',[expMultiply]), _hideMultiplier: bonusTagVisible} : null"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="(isAlterablePriceMenuVisible == false)"/>
			<bind name="name" value="'isLockedShip_' + shipInfo.fullName + '_' + isLocked"/>
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<style>
				<hitTest value="false"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'ShipCarouselSlotStatus';	(isShipFrozen &amp;&amp; !(_rollOver))			? { _status:  toUpperCase(tr('IDS_SHIP_FROZEN_FOR_PVE')), isPositive: false, _small: true} :
														(isNeedRepair || isNeedShell) &amp;&amp; 
														!(_rollOver) &amp;&amp; !(_mouseDown) &amp;&amp; 
														crewId != 0								? { _status: toUpperCase(tr('IDS_NEED_SERVICE')), isPositive: false, _small: true} :
														isInFormation							? { _status: toUpperCase(tr('IDS_READY_TO_BATTLE_IN_' + toUpperCase(_formationType))), isPositive: true, _small: true } :
														isLocked								? { _status: toUpperCase(tr('IDS_IN_BATTLE')), isPositive: false, _small: true} :
														crewId == 0								? { _status: toUpperCase(tr('IDS_NO_CREW')), isPositive: false, _small: true}
																								: null "/>
			</block>
			<block>
				<bind name="name" value="isShipFrozen ? 'CarouselShipFreeze_' + shipInfo.fullName : ''"/>
				<styleClass value="$MiddleAligned"/>
				<style>
					<marginTop value="8px"/>
				</style>
				<bind name="instance" value="'CarouselShipFreeze'; (isShipFrozen &amp;&amp; !(_rollOver)) ? {_freezeListArr: freezeListArr} : null"/>
			</block>
		</block>
		<block className="ServiceUnfreezeButtons">
			<style>
				<width value="190px"/>
			</style>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<styleClass value="$MiddleVAligned"/>
			<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
			<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
			<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
			<bind name="watch" value="'unFreezePriceIndex'; (userPrefs.unFreezePriceIndex == null) ? 0 : userPrefs.unFreezePriceIndex"/>
			<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY + 'CANCEL_BATTLE_LOCK_COOLDOWN_Cost'; 'pveCooldownCost'"/>
			<bind name="watch" value="'selectedPriceIndex'; (pveCooldownCost.prices.length &gt; 1 ? unFreezePriceIndex : 0)}"/>
			<bind name="catch" value="'selectedPriceChanged'"/>
			<bind name="dispatch" value="'selectedPriceChanged';'selectedPriceChangedDelayed'; {}; 2; 0.05"/>
			<bind name="action" value="'selectedPriceChangedDelayed'; 'setUserPref' ; {value: selectedPriceIndex, name: 'unFreezePriceIndex'}"/>
			<bind name="var" value="{isAlterablePriceMenuVisible: false}"/>
			<bind name="catch" value="'alterablePriceTagMenuVisibleChanged'"/>
			<bind name="watch" value="'isUnfreezeButtonVisible'; (isAlterablePriceMenuVisible || _rollOver) &amp;&amp; isShipFrozen"/>
			<bind name="watch" value="'isServiceButtonVisible';	(isAlterablePriceMenuVisible || _rollOver) &amp;&amp; !(isShipFrozen) &amp;&amp;
											(isNeedRepair || isNeedShell) &amp;&amp; crewId != 0"/>
			<bind name="fade" value="isServiceButtonVisible || isUnfreezeButtonVisible; 0.15; {alpha: 0, top: -10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2; 0.1"/>
			<bind name="instance" value="'DockButtonCostMedium'; isServiceButtonVisible 	? 	{	_label: 'IDS_SERVICE_C', _tooltipText: 'IDS_SERVICE_C', _prices: [{finalPrice: costTotal, currency: 'credits'}],
																			_action: 'serveShip', _actionParams: {shipId : shipEntity.ownShip.id}, _selectedPriceIndex: 0, _deficitLabel: 'IDS_SERVICE_COST'} :
											isUnfreezeButtonVisible	?	{	_label: 'IDS_UNFREEZE_FOR_PVE_BTN',
																			_deficitLabel: 'IDS_PVE_UNFREEZE_COST',
																			_tooltipText: 'IDS_UNFREEZE_COST_TOOLTIP',
																			_prices: pveCooldownCost.prices,
																			_selectedPriceIndex: selectedPriceIndex,
																			_request: 'openUnfreezeShipWindow',
																			_requestParams: {shipId: shipEntity.ownShip.id, battleType: selectedBattle.type}
																		}
																	:	null"/>
		</block>
	</block>
	<block className="BonusTagItemBackground">
		<bind name="entityDH" value="'bonusTagEntity'; _bonusTagId"/>
		<style>
			<backgroundStretchY value="false"/>
			<backgroundStretchX value="false"/>
			<hitTest value="false"/>
		</style>
		<bind name="style" value="'backgroundImage'; 'url:../service_kit/bonus_tags/bg_' + bonusTagEntity.bonusTag.type + (_isSmall ? '_small.png' : '_default.png')"/>
		<bind name="transition" value="_selected; 0.15; {top: 0}; {top: (_isSmall ? 4 : 6)}"/>
	</block>
	<block className="BonusTagItem">
		<bind name="entityDH" value="'bonusTagEntity'; $value"/>
		<bind name="tooltip" value="'BonusTagItemTooltip'; {_bonusTagEntityId: $value}"/>
		<style>
			<width value="21px"/>
			<height value="21px"/>
			<marginRight value="4px"/>
		</style>
		<bind name="style" value="'backgroundImage'; 'url:../service_kit/bonus_tags/' + bonusTagEntity.bonusTag.type + '.png'"/>
	</block>
	<block className="BonusTagItemTooltip">
		<bind name="entityDH" value="'bonusTagEntity'; _bonusTagEntityId"/>
		<bind name="watch" value="'bonusTagType'; bonusTagEntity.bonusTag.type"/>
		<bind name="watch" value="'rewards'; bonusTagEntity.bonusTag.rewards"/>
		<bind name="watch" value="'expirationDate'; bonusTagEntity.bonusTag.finishTime"/>
		<bind name="var" value="{
		tooltipWidth: 310,
		contentMaxWidth: tooltipWidth - 16
	}"/>
		<bind name="style" value="'width'; tooltipWidth + 'px'"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'TooltipHeaderWithIcon'; {
			_iconPath: 'url:../service_kit/bonus_tags/' + bonusTagType + '_big.png', 
			_headerText:  toUpperCase(tr('IDS_BONUSTAG_' + bonusTagType + '_HEADER')), 
			_subheaderText: toUpperCase(tr('IDS_BONUSTAG_' + bonusTagType + '_SUBHEADER'))
		}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'TooltipContentTextBlock'; {
			_multiParagraphArray: [{ _paragraphText: toUpperCase(tr('IDS_BONUSTAG_' + bonusTagType + '_DESCRIPTION_1')), _class: '$TextDefaultNM', _marginBottom: '0' }],
			_maxWidth: contentMaxWidth
		}"/>
		</block>
		<block>
			<bind name="visible" value="rewards.length &gt; 0"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<marginTop value="1px"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<margin value="16|8px"/>
				</style>
				<bind name="repeat" value="rewards; 'BonusTagItemTooltipRewardRepeater'; rewards.length &gt; 0 ? {} : null"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="timeFormat" value="expirationDate; 'dd.MM.yyyy'; 'formattedExpirationDate'; true"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'TooltipContentTextBlock'; {
			_multiParagraphArray: expirationDate &gt; 0	? [	{_paragraphText: toUpperCase(tr('IDS_BONUSTAG_' + bonusTagType + '_DESCRIPTION_2')), _class: '$TextDefaultNM'}, 
															{_paragraphText: subst('IDS_EXPIRY_DATE_COLON', [], {'date': formattedExpirationDate}), _class: '$TextDefaultTech', _marginBottom: '0'} ]
														: [ {_paragraphText: toUpperCase(tr('IDS_BONUSTAG_' + bonusTagType + '_DESCRIPTION_2')), _class: '$TextDefaultNM', _marginBottom: '0'} ],
			_maxWidth: contentMaxWidth
		}"/>
		</block>
	</block>
	<block className="BonusTagItemTooltipRewardRepeater">
		<bind name="entityDH" value="'rewardEntity'; $value"/>
		<bind name="watch" value="'reward'; rewardEntity.rewardComponent.subtype"/>
		<bind name="watch" value="'amount'; rewardEntity.rewardComponent.amount"/>
		<style>
			<flow value="horizontal"/>
			<margin value="0|8px"/>
			<width value="100%"/>
		</style>
		<block type="text">
			<styleClass value="$TextDefaultNM"/>
			<style>
				<alpha value="0.8"/>
			</style>
			<bind name="text" value="toUpperCase(tr('IDS_REWARD_' + reward + '_TITLE'))"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<right value="0"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefaultNM"/>
				<bind name="text" value="amount"/>
			</block>
			<block>
				<style>
					<marginLeft value="4px"/>
				</style>
				<bind name="style" value="'marginTop'; _large ? '-8px' : '-2px'"/>
				<bind name="instance" value="'Currency'; {_currency: reward, _large: _large}"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="DoubleExperienceTooltip">
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; _shipId"/>
		<bind name="watchDH" value="'expMultiply';			['shipOwnEntity.ownShip.evExpMultiplyChanged'];	shipOwnEntity.ownShip.expMultiply"/>
		<bind name="watchDH" value="'remainingExpBonusWins';	['shipOwnEntity.ownShip.evUpdateConfig'];		shipOwnEntity.ownShip.remainingExpBonusWins"/>
		<bind name="var" value="{
		tooltipWidth: 310,
		contentMaxWidth: tooltipWidth - 16
	}"/>
		<bind name="style" value="'width'; tooltipWidth + 'px'"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'TooltipHeaderWithIcon'; {
			_iconPath: 'url:../reward_icons/icon_reward_expCoeff.png', 
			_headerText: 'IDS_BONUSTAG_FIRST_WIN', 
			_subheaderText: 'IDS_DAILY_ACTION'
		}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'TooltipContentTextBlock'; {
			_multiParagraphArray: [
				{	_paragraphText: (remainingExpBonusWins &gt; 1) ? subst('IDS_TOOLTIP_EXPERIENCE_MULTIPLIER', [], {_battleAmount: remainingExpBonusWins}, remainingExpBonusWins)
																			: 'IDS_TOOLTIP_EXPERIENCE_MULTIPLIER_FIRST_WIN',
					_class: '$TextDefaultNM',
					_marginBottom: '0' }
			],
			_maxWidth: contentMaxWidth
		}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<marginTop value="1px"/>
				</style>
			</block>
			<block>
				<style>
					<flow value="horizontal"/>
					<margin value="16"/>
					<width value="100%"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefaultNM"/>
					<style>
						<alpha value="0.8"/>
					</style>
					<bind name="text" value="'IDS_REWARD_EXPCOEFF_TITLE'"/>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<right value="0"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefaultNM"/>
						<bind name="text" value="subst('%m', [expMultiply])"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'TooltipContentTextBlock'; {
			_multiParagraphArray: [{ _paragraphText: 'IDS_FIRST_WIN_HINT_EXT', _class: '$TextDefaultNM', _marginBottom: '0' }],
			_maxWidth: contentMaxWidth
		}"/>
		</block>
	</block>
	<block className="ShipCarouselSmallSlot">
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ownShip; shipId"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="watchDH" value="'upgradableShipInfo'; ['shipEntity.upgradableShipInfo.evUpdate']; shipEntity.upgradableShipInfo"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="watchDH" value="'crewId';		['shipEntity.ownShip.evCrewChanged'];			shipEntity.ownShip.crewId"/>
		<bind name="watchDH" value="'isPrimary';		['shipEntity.ownShip.evIsPrimaryChanged'];		shipEntity.ownShip.isPrimary"/>
		<bind name="watchDH" value="'costTotal';		['shipEntity.ownShip.evUpdateDockState'];		shipEntity.ownShip.costTotal"/>
		<bind name="watchDH" value="'timeRent';		['shipEntity.ownShip.evUpdateDockState'];		shipEntity.ownShip.timeRent"/>
		<bind name="watchDH" value="'expMultiply';	['shipEntity.ownShip.evExpMultiplyChanged'];	shipEntity.ownShip.expMultiply"/>
		<bind name="firstEntityDH" value="'enterBattleEntity'; CC.enterBattle"/>
		<bind name="watchDH" value="'selectedBattle'; ['enterBattleEntity.enterBattle.evBattleTypesChanged']; enterBattleEntity.enterBattle.selectedBattle"/>
		<bind name="watch" value="'freezeListPath'; shipEntity.ownShip.id + '_' + selectedBattle.type"/>
		<bind name="primaryEntityDH" value="'shipFreezeListEntity'; CC.freezeList; freezeListPath"/>
		<bind name="watchDH" value="'freezeListArr'; ['shipFreezeListEntity.freezeList.evUpdate']; shipFreezeListEntity.freezeList.items"/>
		<bind name="watch" value="'isShipFrozen'; (shipFreezeListEntity ? true : false)"/>
		<style>
			<width value="204px"/>
			<height value="56px"/>
		</style>
		<bind name="transition" value="_selected; 0.15; {width: 204, height: 56}; {width: 216, height: 60}"/>
		<block className="thumb_hl_red" type="native">
			<bind name="visible" value="((isNeedRepair || isNeedShell || !shipInfoSlim.isDownloaded || isShipFrozen) ? true : false)"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
				<alpha value="1.2"/>
			</style>
			<bind name="selected" value="_selected"/>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<block>
				<style>
					<position value="absolute"/>
					<alpha value="0.6"/>
					<top value="2px"/>
					<width value="95px"/>
					<height value="56px"/>
					<hitTest value="false"/>
				</style>
				<bind name="style" value="'alpha'; ((isNeedRepair || isNeedShell || isLocked || (crewId == 0) || !shipInfoSlim.isDownloaded || isShipFrozen) ? 0.4 : 0.6)"/>
				<bind name="transition" value="!_selected; 0.15; {width: 99, height: 60}; {width: 95, height: 56}"/>
				<bind name="instance" value="'NationFlagsSmall'; {_width: '100%', _height: '100%', shipCountry: shipCountry}"/>
			</block>
			<block>
				<bind name="style" value="'alpha'; (isNeedRepair || isNeedShell || isLocked || (crewId == 0) || !shipInfoSlim.isDownloaded || isShipFrozen) ? 0.4 : 1"/>
				<style>
					<width value="100%"/>
					<height value="100%"/>
					<marginLeft value="8px"/>
					<marginTop value="4px"/>
					<marginRight value="8px"/>
					<marginBottom value="4px"/>
					<marginBottom value="4px"/>
					<hitTest value="false"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
						<height value="20px"/>
						<marginTop value="2px"/>
					</style>
					<block className="icon_wreath" type="native">
						<bind name="name" value="upgradableShipInfo.isElite ? 'CarouselShipElite_' + shipInfo.fullName : '' "/>
						<styleClass value="$MiddleVAlignedAbsolutely"/>
						<style>
							<left value="-5px"/>
						</style>
						<bind name="visible" value="upgradableShipInfo.isElite || shipInfo.isPremium || shipInfo.uiSpecial"/>
						<bind name="gotoAndStop!" value="(shipInfo.isPremium || shipInfo.uiSpecial) 	? 'premium' : 'elite'"/>
					</block>
					<block className="icon_ship" type="native">
						<styleClass value="$MiddleVAligned"/>
						<bind name="gotoAndStop!" value="shipInfo.isPremium || shipInfo.uiSpecial ? shipInfo.subtype + '_P' : shipInfo.subtype"/>
						<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: shipTypeIDS}; 0"/>
					</block>
					<block type="text">
						<styleClass value="$TextSecondaryBold"/>
						<bind name="class" value="shipInfo.isPremium || shipInfo.uiSpecial ? '$FontColorGold' : '$FontColorWhite'"/>
						<style>
							<marginTop value="-1px"/>
							<marginLeft value="3px"/>
							<marginRight value="3px"/>
							<width value="40px"/>
						</style>
						<bind name="text" value="shipLevelRome"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<right value="0px"/>
					</style>
					<bind name="instance" value="'ShipSilhouetteRightAligned'; {_shipID: shipInfo.id}"/>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<bottom value="2px"/>
						<right value="0"/>
					</style>
					<block type="text">
						<style>
							<width value="115px"/>
							<textAlign value="right"/>
							<multiline value="false"/>
						</style>
						<styleClass value="$TextDefaultBold"/>
						<bind name="class" value="'$LetterSpacingSmall'"/>
						<bind name="class" value="shipInfo.isPremium || shipInfo.uiSpecial ? '$FontColorGold' : '$FontColorWhite'"/>
						<bind name="text" value="toUpperCase(tr(shipInfo.nameIDS))"/>
					</block>
				</block>
			</block>
			<block>
				<bind name="tooltip" value="'SubTextTooltip'; {tooltipText: 'IDS_TOOLTIP_PRIMARY_SHIP', tooltipSubText: 'IDS_TOOLTIP_PRIMARY_SHIP_DESCRIPTION'}"/>
				<style>
					<position value="absolute"/>
					<right value="-1px"/>
					<top value="-1px"/>
				</style>
				<bind name="visible" value="isPrimary"/>
				<block className="icon_primary_ribbon" type="native"/>
			</block>
			<block>
				<bind name="visible" value="(timeRent &gt; 0)"/>
				<bind name="name" value="'timeRent_' + shipInfo.fullName"/>
				<style>
					<position value="absolute"/>
					<right value="3px"/>
					<top value="3px"/>
				</style>
				<bind name="instance" value="'RentTimer'; (timeRent &gt; 0) ? {_timeRent: timeRent} : null"/>
			</block>
			<bind name="watchDH" value="'bonusTagIds'; ['shipEntity.ownShip.evBonusTagsChanged']; shipEntity.ownShip.bonusTags"/>
			<bind name="watch" value="'bonusTagVisible'; bonusTagIds.length &gt; 0"/>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="instance" value="'BonusTagItemBackground'; bonusTagVisible ? {_bonusTagId: bonusTagIds[0], _isSmall: true, _selected: _selected} : null"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<bottom value="4px"/>
					<left value="4px"/>
				</style>
				<bind name="style" value="'alpha'; (isNeedRepair || isNeedShell || isLocked || (crewId == 0) || !shipInfoSlim.isDownloaded || isShipFrozen) ? 0.5 : 1"/>
				<block>
					<style>
						<marginTop value="4px"/>
					</style>
					<bind name="repeat" value="bonusTagIds; 'BonusTagItem'; {}"/>
				</block>
				<block>
					<bind name="tooltip" value="'DoubleExperienceTooltip'; {_shipId: shipId}"/>
					<bind name="instance" value="'DoubleExperience'; (expMultiply &gt; 1) ? {expMultiplyPercentsString: subst('%m',[expMultiply]), _hideMultiplier: bonusTagVisible} : null"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<bind name="name" value="'isLockedShip_' + shipInfo.fullName + '_' + isLocked"/>
			<bind name="visible" value="(isAlterablePriceMenuVisible == false)"/>
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<style>
				<hitTest value="false"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'ShipCarouselSlotStatus';	(isShipFrozen &amp;&amp; !(_rollOver))		? { _status:  toUpperCase(tr('IDS_SHIP_FROZEN_FOR_PVE')), isPositive: false, _small: true} :
														(isNeedRepair || isNeedShell) &amp;&amp; 
														!(_rollOver) &amp;&amp; !(_mouseDown) &amp;&amp; 
														crewId != 0							? { _status: toUpperCase(tr('IDS_NEED_SERVICE')), isPositive: false, _small: true} :
														isInFormation						? { _status: toUpperCase(tr('IDS_READY_TO_BATTLE_IN_' + toUpperCase(_formationType))), isPositive: true, _small: true } :
														isLocked							? { _status: toUpperCase(tr('IDS_IN_BATTLE')), isPositive: false, _small: true} :
														crewId == 0							? { _status: toUpperCase(tr('IDS_NO_CREW')), isPositive: false, _small: true}
																							: null "/>
			</block>
			<block>
				<bind name="name" value="isShipFrozen ? 'CarouselShipFreeze_' + shipInfo.fullName : ''"/>
				<styleClass value="$MiddleAligned"/>
				<style>
					<marginTop value="8px"/>
				</style>
				<bind name="instance" value="'CarouselShipFreeze'; (isShipFrozen &amp;&amp; !(_rollOver)) ? {_freezeListArr: freezeListArr, _small: true} : null"/>
			</block>
		</block>
		<block className="ServiceUnfreezeButtons">
			<style>
				<width value="190px"/>
			</style>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<styleClass value="$MiddleVAligned"/>
			<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
			<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
			<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
			<bind name="watch" value="'unFreezePriceIndex'; (userPrefs.unFreezePriceIndex == null) ? 0 : userPrefs.unFreezePriceIndex"/>
			<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY + 'CANCEL_BATTLE_LOCK_COOLDOWN_Cost'; 'pveCooldownCost'"/>
			<bind name="watch" value="'selectedPriceIndex'; (pveCooldownCost.prices.length &gt; 1 ? unFreezePriceIndex : 0)}"/>
			<bind name="catch" value="'selectedPriceChanged'"/>
			<bind name="dispatch" value="'selectedPriceChanged';'selectedPriceChangedDelayed'; {}; 2; 0.05"/>
			<bind name="action" value="'selectedPriceChangedDelayed'; 'setUserPref' ; {value: selectedPriceIndex, name: 'unFreezePriceIndex'}"/>
			<bind name="var" value="{isAlterablePriceMenuVisible: false}"/>
			<bind name="catch" value="'alterablePriceTagMenuVisibleChanged'"/>
			<bind name="watch" value="'isUnfreezeButtonVisible'; (isAlterablePriceMenuVisible || _rollOver) &amp;&amp; isShipFrozen"/>
			<bind name="watch" value="'isServiceButtonVisible';	(isAlterablePriceMenuVisible || _rollOver) &amp;&amp; !(isShipFrozen) &amp;&amp;
											(isNeedRepair || isNeedShell) &amp;&amp; crewId != 0"/>
			<bind name="fade" value="isServiceButtonVisible || isUnfreezeButtonVisible; 0.15; {alpha: 0, top: -10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2; 0.1"/>
			<bind name="instance" value="'DockButtonCostMedium'; isServiceButtonVisible 	? 	{	_label: 'IDS_SERVICE_C', _tooltipText: 'IDS_SERVICE_C', _prices: [{finalPrice: costTotal, currency: 'credits'}],
																			_action: 'serveShip', _actionParams: {shipId : shipEntity.ownShip.id}, _selectedPriceIndex: 0, _deficitLabel: 'IDS_SERVICE_COST'} :
											isUnfreezeButtonVisible	?	{	_label: 'IDS_UNFREEZE_FOR_PVE_BTN',
																			_deficitLabel: 'IDS_PVE_UNFREEZE_COST',
																			_tooltipText: 'IDS_UNFREEZE_COST_TOOLTIP',
																			_prices: pveCooldownCost.prices,
																			_selectedPriceIndex: selectedPriceIndex,
																			_request: 'openUnfreezeShipWindow',
																			_requestParams: {shipId: shipEntity.ownShip.id, battleType: selectedBattle.type}
																		}
																	:	null"/>
		</block>
	</block>
	<block className="ServiceUnfreezeButtons">
		<style>
			<width value="190px"/>
		</style>
		<styleClass value="$MiddleAlignedAbsolutely"/>
		<styleClass value="$MiddleVAligned"/>
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="watch" value="'unFreezePriceIndex'; (userPrefs.unFreezePriceIndex == null) ? 0 : userPrefs.unFreezePriceIndex"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY + 'CANCEL_BATTLE_LOCK_COOLDOWN_Cost'; 'pveCooldownCost'"/>
		<bind name="watch" value="'selectedPriceIndex'; (pveCooldownCost.prices.length &gt; 1 ? unFreezePriceIndex : 0)}"/>
		<bind name="catch" value="'selectedPriceChanged'"/>
		<bind name="dispatch" value="'selectedPriceChanged';'selectedPriceChangedDelayed'; {}; 2; 0.05"/>
		<bind name="action" value="'selectedPriceChangedDelayed'; 'setUserPref' ; {value: selectedPriceIndex, name: 'unFreezePriceIndex'}"/>
		<bind name="var" value="{isAlterablePriceMenuVisible: false}"/>
		<bind name="catch" value="'alterablePriceTagMenuVisibleChanged'"/>
		<bind name="watch" value="'isUnfreezeButtonVisible'; (isAlterablePriceMenuVisible || _rollOver) &amp;&amp; isShipFrozen"/>
		<bind name="watch" value="'isServiceButtonVisible';	(isAlterablePriceMenuVisible || _rollOver) &amp;&amp; !(isShipFrozen) &amp;&amp;
											(isNeedRepair || isNeedShell) &amp;&amp; crewId != 0"/>
		<bind name="fade" value="isServiceButtonVisible || isUnfreezeButtonVisible; 0.15; {alpha: 0, top: -10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2; 0.1"/>
		<bind name="instance" value="'DockButtonCostMedium'; isServiceButtonVisible 	? 	{	_label: 'IDS_SERVICE_C', _tooltipText: 'IDS_SERVICE_C', _prices: [{finalPrice: costTotal, currency: 'credits'}],
																			_action: 'serveShip', _actionParams: {shipId : shipEntity.ownShip.id}, _selectedPriceIndex: 0, _deficitLabel: 'IDS_SERVICE_COST'} :
											isUnfreezeButtonVisible	?	{	_label: 'IDS_UNFREEZE_FOR_PVE_BTN',
																			_deficitLabel: 'IDS_PVE_UNFREEZE_COST',
																			_tooltipText: 'IDS_UNFREEZE_COST_TOOLTIP',
																			_prices: pveCooldownCost.prices,
																			_selectedPriceIndex: selectedPriceIndex,
																			_request: 'openUnfreezeShipWindow',
																			_requestParams: {shipId: shipEntity.ownShip.id, battleType: selectedBattle.type}
																		}
																	:	null"/>
	</block>
	<block className="CarouselShipFreeze">
		<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 2"/>
		<bind name="repeat" value="_freezeListArr; 'CarouselShipFreezeRenderer'; {_small: _small}"/>
	</block>
	<block className="CarouselShipFreezeRenderer">
		<bind name="entityDH" value="'shipFreezeEntity'; $value"/>
		<block type="text">
			<styleClass value="$TextDefaultBold17NM"/>
			<styleClass value="$FontColorUnready"/>
			<bind name="countdown" value="shipFreezeEntity.shipFreeze.freezeEnd; 'freezeTimer'; 'hh:mm:ss'"/>
			<bind name="pureText" value="freezeTimer"/>
		</block>
	</block>
	<block className="RentTimer">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="appear" value="'addedToStage'; 0.1; 0.1; {alpha: 0}; {alpha: 1}; 0"/>
		<bind name="serverTime" value="'serverTime'"/>
		<bind name="watch" value="'isRentOver'; (serverTime &gt; _timeRent)"/>
		<bind name="watch" value="'daysTimeRent';	_rentDuration 									? _rentDuration :
									(((_timeRent - serverTime) / 86400) &gt;= 1)		? (((_timeRent - serverTime) - ((_timeRent - serverTime) % 86400)) / 86400)
																					: 0"/>
		<bind name="watch" value="'secondsToHours';	((_timeRent - serverTime) % 86400)"/>
		<bind name="watch" value="'hoursTimeRent'; 	((secondsToHours / 3600) &gt; 1)	? ((secondsToHours - (secondsToHours % 3600)) / 3600) :
									((secondsToHours / 3600) &gt; 0)	? 1
																	: 0"/>
		<bind name="watch" value="'minutesTimeRent'; ((secondsToHours / 60) &gt; 1)	? ((secondsToHours - (secondsToHours % 60)) / 60) :
									((secondsToHours / 60) &gt; 0)	? 1
																: 0"/>
		<bind name="countdown" value="_timeRent; 'fullTimeRent'; 'hh:mm:ss'"/>
		<bind name="timeFormat" value="_rentUntil; 'dd.MM.yy'; 'formattedRentTill'; true"/>
		<bind name="watch" value="'isClanRent'; _shipGroup == 'clan'"/>
		<bind name="watch" value="'textColorClass'; isClanRent ? '$None' : '$FontColorGolden'"/>
		<bind name="tooltip" value="	isClanRent 	? 'CvcRentTimerTooltip' : 'RentTimerTooltip'; { _timeRent: _timeRent, _isRentOver: isRentOver }"/>
		<style>
			<flow value="horizontal"/>
			<backgroundColor value="0x01000000"/>
		</style>
		<block>
			<bind name="visible" value="!(isRentOver) || _rentDuration"/>
			<bind name="transition" value="rollOver || !(isClanRent) || (isClanRent &amp;&amp; daysTimeRent &lt; 2) || _forceShow; 0.07; {alpha: 0, left: 20}; {alpha: 1, left: 0}; {alpha: 0, left: 20}"/>
			<block>
				<bind name="visible" value="(daysTimeRent != 0)"/>
				<style>
					<marginRight value="2px"/>
					<marginTop value="-2px"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefaultBold"/>
					<styleClass value="$FontColorGolden"/>
					<bind name="text" value="daysTimeRent"/>
				</block>
				<block type="text">
					<style>
						<marginLeft value="-2px"/>
					</style>
					<styleClass value="$TextDefaultBold"/>
					<styleClass value="$FontColorGolden"/>
					<bind name="pluralText" value="'IDS_PL_DAY_FULL_ACC'; daysTimeRent"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="((daysTimeRent &lt; 2) &amp;&amp; (daysTimeRent != 0) &amp;&amp; (hoursTimeRent != 0))"/>
				<style>
					<marginRight value="2px"/>
					<marginLeft value="-2px"/>
					<marginTop value="-2px"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefaultBold"/>
					<styleClass value="$FontColorGolden"/>
					<bind name="text" value="hoursTimeRent"/>
				</block>
				<block type="text">
					<style>
						<marginLeft value="-2px"/>
					</style>
					<styleClass value="$TextDefaultBold"/>
					<styleClass value="$FontColorGolden"/>
					<bind name="pluralText" value="'IDS_PL_HOUR_FULL_ACC'; hoursTimeRent"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block type="text">
				<bind name="visible" value="(daysTimeRent == 0)"/>
				<style>
					<width value="58px"/>
					<marginRight value="-2px"/>
					<marginTop value="-2px"/>
				</style>
				<styleClass value="$TextDefaultBold"/>
				<styleClass value="$FontColorGolden"/>
				<bind name="text" value="_rentUntil ? formattedRentTill : fullTimeRent"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<width value="21px"/>
				<height value="21px"/>
			</style>
			<bind name="style" value="'backgroundImage'; (daysTimeRent == 0) ? 'url:../service_kit/icons/icon_rent_orange.png'
															: 'url:../service_kit/icons/icon_rent_white.png'"/>
		</block>
	</block>
	<block className="DoubleExperience">
		<style>
			<flow value="horizontal"/>
		</style>
		<block className="icon_double_experience" type="native">
			<style>
				<marginTop value="4px"/>
			</style>
		</block>
		<block type="text">
			<bind name="visible" value="_hideMultiplier != true"/>
			<styleClass value="$TextDefaultBold"/>
			<styleClass value="$FontColorGold"/>
			<styleClass value="$FontSizeHeader5"/>
			<bind name="text" value="expMultiplyPercentsString"/>
		</block>
	</block>
	<block className="ShipCarouselSlotStatus">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'dockDefaultValues'; 'dockInitData,dockUpdateData'"/>
		<bind name="visible" value="!(dockDefaultValues.goToBattleState)"/>
		<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 2"/>
		<block type="text">
			<style>
				<maxWidth value="180"/>
				<textAlign value="center"/>
				<leading value="-3"/>
				<hitTest value="false"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextCarouselShipStatus"/>
			<bind name="class" value="_small ? '$FontSizeDefault' : '$None'"/>
			<bind name="class" value="isPositive ? '$FontColorComparePositive' : '$None'"/>
			<bind name="text" value="_status"/>
		</block>
	</block>
	<block className="CarouselNaturalIndicator">
		<block>
			<block type="text">
				<styleClass value="$TextSmallWhite"/>
				<bind name="text" value="_label"/>
			</block>
			<block>
				<bind name="instance" value="'PriceTag'; { priceInfo: _priceInfo, _showDiscountTag: true, _small: true}"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<marginTop value="-4px"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<bind name="instance" value="'GoldDeficitNano';	(_priceInfo.currency == 'gold')		?	{ _goldDeficit: _deficit } : null"/>
			<bind name="instance" value="'CRDeficitNano';	(_priceInfo.currency == 'credits')	?	{ _creditsDeficit: _deficit } : null"/>
		</block>
	</block>
	<block className="DockButtonCostMedium">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'accountResource';	['resourceEntity.accountResource.evChangedGold, resourceEntity.accountResource.credits']; resourceEntity.accountResource"/>
		<bind name="watch" value="'priceIndex'; (_prices.length &gt; 1 ? _selectedPriceIndex : 0)"/>
		<bind name="watch" value="'priceDeficit'; 	_prices[priceIndex].finalPrice -
									accountResource[_prices[priceIndex].currency]"/>
		<styleClass value="$MiddleVAligned"/>
		<styleClass value="$MiddleAligned"/>
		<bind name="watch" value="'isButtonEnabled'; (_prices.length &gt; 1 || priceDeficit &lt;= 0)"/>
		<block>
			<styleClass value="$MiddleAligned"/>
			<block className="button_dock" type="native">
				<style>
					<marginBottom value="-8px"/>
					<marginLeft value="-16px"/>
					<marginRight value="-16px"/>
					<marginTop value="-8px"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="enabled" value="isButtonEnabled"/>
				<bind name="style" value="'hitTest'; isButtonEnabled"/>
				<bind name="event" value="'buttonClick'; _method ? _method : null"/>
				<bind name="request" value="'buttonClick'; _request ? _request : null; _request ? _requestParams : null"/>
				<bind name="action" value="'buttonClick'; _action ? _action : null; _actionParams"/>
			</block>
			<bind name="watch" value="'isDeficitLabel'; (_prices.length == 1 &amp;&amp; priceDeficit &gt; 0)"/>
			<block>
				<style>
					<hitTest value="false"/>
				</style>
				<block type="text">
					<style>
						<alpha value="0.9"/>
					</style>
					<bind name="class" value="(isDeficitLabel ? '$TextDefaultNM': '$TextDefaultBoldNM')"/>
					<styleClass value="$TextDefaultBoldNM"/>
					<bind name="text" value="isDeficitLabel ? _deficitLabel : _label"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<bind name="style" value="'marginTop'; isDeficitLabel ? '0px' : '4px'"/>
			<style>
				<marginBottom value="-9px"/>
			</style>
			<bind name="instance" value="'AlterablePriceTag'; {	_tooltipText: _tooltipText,
												_prices: _prices, _showDiscountTag: true,
												_selectedPriceIndex: priceIndex}"/>
		</block>
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="watch" value="'isSmallCarouselView'; (userPrefs.isSmallCarouselView == null) ? false : userPrefs.isSmallCarouselView"/>
		<block>
			<bind name="visible" value="_prices.length == 1"/>
			<styleClass value="$MiddleAligned"/>
			<style>
				<hitTest value="false"/>
				<marginBottom value="-3px"/>
			</style>
			<bind name="instance" value="'PriceDeficit'; priceDeficit &gt; 0 ? { priceInfo: _prices[priceIndex], _deficit: priceDeficit} : null"/>
		</block>
	</block>
	<block className="CvcRentTimerTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="300px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<bind name="timeFormat" value="_timeRent; 'hh:mm dd.MM.yyyy'; 'formattedRentTime'; true"/>
		<block type="text">
			<style>
				<width value="100%"/>
				<marginTop value="16px"/>
				<marginBottom value="16px"/>
				<marginLeft value="16px"/>
				<marginRight value="16px"/>
				<leading value="-1"/>
			</style>
			<styleClass value="$TextDefaultBold17NM"/>
			<bind name="text" value="'IDS_TOOLTIP_CVC_RENT_SHIP'"/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block type="text">
			<style>
				<width value="100%"/>
				<marginTop value="12px"/>
				<marginLeft value="16px"/>
				<marginRight value="16px"/>
				<marginBottom value="16px"/>
				<leading value="1"/>
			</style>
			<styleClass value="$TextDefault17NM"/>
			<bind name="text" value="_isRentOver ? 'IDS_TOOLTIP_CVC_RENT_SHIP_CHANGE_SOON'
								: subst('IDS_TOOLTIP_CVC_RENT_SHIP_TIME_CHANGE', [], {time_date: formattedRentTime})"/>
		</block>
	</block>
	<block className="RentTimerTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="320px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<bind name="serverTime" value="'serverTime'"/>
		<bind name="watch" value="'secondsUntil'; _timeRent - serverTime - 1"/>
		<bind name="watch" value="'seconds'; secondsUntil &gt; 0 ? secondsUntil : 0"/>
		<bind name="watch" value="'minutes'; (seconds - (seconds % 60)) / 60"/>
		<bind name="watch" value="'hours'; (seconds - (seconds % 3600)) / 3600"/>
		<bind name="watch" value="'days'; (seconds - (seconds % 86400)) / 86400"/>
		<bind name="watch" value="'tooltipText'; tr('IDS_TOOLTIP_RENT_SHIP') +
								(days != 0						? ' ' + days + ' ' + subst('IDS_PL_DAY_FULL_ACC', [], {}, days) : '') +
								(hours != 0	&amp;&amp; days == 0		? ' ' + hours + ' ' + subst('IDS_PL_HOUR_FULL', [], {}, hours) : '') + 
								(minutes != 0 &amp;&amp; hours == 0 	? ' ' + minutes + ' ' + subst('IDS_PL_MINUTE_FULL_ACC', [], {}, minutes) : '') + 
								(seconds != 0 &amp;&amp; minutes == 0 	? ' ' + seconds + ' ' + subst('IDS_PL_SECOND_FULL', [], {}, seconds) 
																: '')"/>
		<block type="text">
			<style>
				<width value="100%"/>
				<marginTop value="16px"/>
				<marginLeft value="16px"/>
				<marginRight value="16px"/>
				<marginBottom value="16px"/>
				<leading value="1"/>
			</style>
			<styleClass value="$TextDefault17NM"/>
			<bind name="text" value="tooltipText"/>
		</block>
	</block>
	<block className="PeculiarityFiltersContent">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<styleClass value="$DefaultMenuBehaviour"/>
		<style>
			<width value="300px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<block type="text">
				<styleClass value="$TextDefaultBold17NM"/>
				<bind name="text" value="'IDS_ADDITIONAL_CONTENT'"/>
			</block>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<bind name="watch" value="'categoryArray'; [{category: 'event'}, {category: 'historical'}, {category: 'author'}]"/>
		<bind name="repeat" value="categoryArray; 'PeculiarityFiltersCategory'; {}"/>
	</block>
	<block className="PeculiarityFiltersCategory">
		<bind name="tooltip" value="'PeculiarityFiltersCategorySubMenu'; {_category: category}; TooltipBehaviour.contextSubmenuNoClickHide"/>
		<style>
			<width value="100%"/>
		</style>
		<block className="dock_submenu_item" type="native">
			<styleClass value="$ContextMenuListItem"/>
			<block>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$InfoBlockIndent"/>
				<styleClass value="$MiddleVAligned"/>
				<block type="text">
					<styleClass value="$TextDefaultNM"/>
					<bind name="text" value="'IDS_SHIP_FILTER_' + toUpperCase(category)"/>
				</block>
			</block>
			<block className="button_expand_h" type="native">
				<style>
					<position value="absolute"/>
					<right value="12px"/>
					<hitTest value="false"/>
				</style>
				<styleClass value="$MiddleVAligned"/>
			</block>
		</block>
	</block>
	<block className="PeculiarityFiltersCategorySubMenu">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<styleClass value="$LeftSubMenuBehaviour"/>
		<style>
			<width value="300px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<bind name="collectionDH" value="CC.peculiarityEye; 'peculiaritiesEyeCategoryTypes'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'peculiaritiesEyeCategoryTypes'+'ROOT'; 'peculiaritiesEyeCategoryTypes'; {'filter': $entity.peculiarityEye.category == _category}; []"/>
		<bind name="repeat" value="peculiaritiesEyeCategoryTypes; 'PeculiarityFilterItem'; {}"/>
	</block>
	<block className="PeculiarityFilterItem">
		<bind name="entityDH" value="'peculiarityEyeEntity'; id"/>
		<bind name="watchDH" value="'ids'; []; peculiarityEyeEntity.peculiarityEye.ids"/>
		<bind name="watchDH" value="'value'; []; peculiarityEyeEntity.peculiarityEye.value"/>
		<bind name="watchDH" value="'enabled'; ['peculiarityEyeEntity.peculiarityEye.evEnabledChanged']; peculiarityEyeEntity.peculiarityEye.enabled"/>
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'operationsAccountLocked'; ['resourceEntity.accountResource.evOperationsLockChanged']; resourceEntity.accountResource.operationsLocked"/>
		<bind name="clickSplit"/>
		<style>
			<width value="300px"/>
		</style>
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: enabled ? tr(ids + '_TAKE_OFF_SKIN_TOOLTIP') : tr(ids + '_SET_SKIN_TOOLTIP')}"/>
		<bind name="action" value="'left_click'; 'ServerUIDataUSS.setPecularity'; { pecId: value }"/>
		<bind name="name" value="'CarouselCheckBoxEye_pecularity_' + ids"/>
		<block className="dock_submenu_item" type="native">
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$InfoBlockIndent"/>
				<block type="text">
					<style>
						<maxWidth value="250"/>
					</style>
					<styleClass value="$TextDefaultNM"/>
					<bind name="text" value="ids"/>
				</block>
			</block>
			<block className="icon_eye_visible" type="native">
				<styleClass value="$MiddleVAligned"/>
				<style>
					<position value="absolute"/>
					<right value="12px"/>
					<hitTest value="false"/>
				</style>
				<bind name="enabled" value="!operationsAccountLocked"/>
				<bind name="selected" value="enabled"/>
			</block>
		</block>
	</block>
	<css name="$TextMetaHeader">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="15"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextParams">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="15"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextParams_measure">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="15"/>
		<alpha value="0.7"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextParams_tight_left">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<marginLeft value="-1px"/>
		<fontSize value="15"/>
		<alpha value="0.55"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextParams_tight_right">
		<fontFamily value="$WWSDefaultFont"/>
		<marginRight value="-3px"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="15"/>
		<alpha value="0.55"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextParams_slash">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<marginLeft value="-2px"/>
		<fontSize value="15"/>
		<marginRight value="-2px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextParams_x">
		<mouseChildren value="false"/>
		<bottom value="2px"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<marginLeft value="-2px"/>
		<fontSize value="13"/>
		<marginRight value="-2px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextParams_hyphen">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<marginLeft value="-2px"/>
		<fontSize value="15"/>
		<marginRight value="-2px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<block className="StatValueBar">
		<style>
			<flow value="horizontal"/>
			<width value="100%"/>
			<height value="1px"/>
			<position value="absolute"/>
			<bottom value="1"/>
		</style>
		<bind name="transition" value="rollOver || _expand; 0.15; {height: 3}; {height: 25}; {height: 3}; 2; 0.2"/>
		<block>
			<style>
				<height value="100%"/>
				<width value="3px"/>
			</style>
			<bind name="width" value="(_width * _currentValue) / 100 + (_hasDiff ? 	(_isGood 	? -(_width * _diffValue / 100) : 0): 0 )"/>
			<block className="bar_color" type="native">
				<styleClass value="$Fullsize"/>
				<bind name="transition" value="rollOver || _expand; 0.35; {alpha: 0.8}; {alpha: 0.6}; {alpha: 0.8}; 2"/>
				<bind name="gotoAndStop!" value="_hasDiff || $parent.$parent.viewParams.hasDiff || _diffValue == 0 ? 'BarColorWhite' : 'BarColorGreen'"/>
			</block>
		</block>
		<block>
			<style>
				<height value="100%"/>
				<width value="3px"/>
			</style>
			<bind name="width" value="(_width * (_isGood ? _diffValue : -_diffValue)) / 100"/>
			<block className="bar_color_compare" type="native">
				<styleClass value="$Fullsize"/>
				<bind name="gotoAndStop!" value="_isGood ? 'BarComparePositive' : 'BarCompareNegative'"/>
			</block>
		</block>
	</block>
	<block className="StatValueCompareBar">
		<styleClass value="$Fullsize"/>
		<bind name="class" value="_isGood ? '$BarColorComparePositive' : '$BarColorCompareNegative'"/>
		<bind name="scaleX" value="_diffValue"/>
	</block>
	<block className="CompareElement">
		<block>
			<block type="text">
				<bind name="class" value="$parent.$parent.$parent.$parent.meta ? '$TextDefaultBold' : '$TextParams'"/>
				<bind name="class" value="isGood ? '$FontColorComparePositive' : '$FontColorCompareNegative'"/>
				<style>
					<alpha value="0.9"/>
				</style>
				<bind name="text" value="textValue"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ParamElement">
		<bind name="watch" value="'id'; $parent.id"/>
		<bind name="child" value="mockupClass; 'DefaultMockup'; 'ListAmmoMockup'; 'DiffColorsMockup'; 'PlaneTypesMockup'; 'GunsAndTubesMockup'; 'RangeMockup'; 'ListValuesMockup'; 'ListValuesInvMockup';'GunInfoMockup';'BigRangeMockup'"/>
	</block>
	<block className="DefaultMockupItem">
		<bind name="watch" value="'id'; $parent.id"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<block type="text">
			<bind name="class" value="$parent.$parent.$parent.meta ? '$TextMetaHeader' : '$TextParams'"/>
			<params>
				<param name="name" value="field0"/>
			</params>
			<bind name="name" value="'param_content_' + $parent.id"/>
			<bind name="text" value="$parent.$parent.$parent.meta ? ((textValue != '0' || $parent.$parent.hasDiff) ? textValue : '') : textValue"/>
		</block>
		<block>
			<bind name="visible" value="measure;value != null"/>
			<block type="text">
				<styleClass value="$TextParams_measure"/>
				<bind name="pluralText" value="measure;value"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!isLast"/>
			<block type="text">
				<bind name="class" value="!isLast ? '$TextParams_slash' : '$TextParams'"/>
				<bind name="text" value="!isLast ? '/' : ''"/>
			</block>
		</block>
	</block>
	<block className="DefaultCompareItem">
		<bind name="watch" value="'id'; $parent.id"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<bind name="instance" value="'CompareElement'; diffData"/>
		</block>
		<block type="text">
			<bind name="class" value="!isLast ? '$TextParams_slash' : '$TextParams'"/>
			<bind name="text" value="!isLast ? '/' : ''"/>
			<bind name="name" value="'param_content_' + $parent.id"/>
		</block>
	</block>
	<block className="DefaultMockup">
		<bind name="watch" value="'id'; $parent.id"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<block type="text">
			<bind name="class" value="$parent.hasDiff ? '$TextParams_tight_right' : '$TextParams'"/>
			<bind name="text" value="$parent.hasDiff ? '(' : ''"/>
		</block>
		<bind name="watch" value="'item0'; $parent.data.items[0]"/>
		<bind name="watch" value="'item1'; $parent.data.items[1]"/>
		<bind name="watch" value="'item2'; $parent.data.items[2]"/>
		<block>
			<bind name="instance" value="'DefaultCompareItem'; $parent.hasDiff ? item0 : null"/>
		</block>
		<block>
			<bind name="instance" value="'DefaultCompareItem'; $parent.hasDiff ? item1 : null"/>
		</block>
		<block>
			<bind name="instance" value="'DefaultCompareItem'; $parent.hasDiff ? item2 : null"/>
		</block>
		<block type="text">
			<styleClass value="$TextParams_tight_left"/>
			<bind name="text" value="$parent.hasDiff ? ')' : ''"/>
		</block>
		<block>
			<bind name="instance" value="'DefaultMockupItem'; $parent.data.items[0]"/>
		</block>
		<block>
			<bind name="instance" value="'DefaultMockupItem'; $parent.data.items[1]"/>
		</block>
		<block>
			<bind name="instance" value="'DefaultMockupItem'; $parent.data.items[2]"/>
		</block>
		<block>
			<bind name="visible" value="$parent.data.measure != ''"/>
			<block type="text">
				<style>
					<textAlign value="right"/>
				</style>
				<styleClass value="$TextParams_measure"/>
				<bind name="text" value="$parent.data.measure"/>
			</block>
		</block>
	</block>
	<block className="AmmoMockup">
		<style>
			<flow value="horizontal"/>
		</style>
		<bind name="name" value="'item' + $index"/>
		<block type="text">
			<styleClass value="$TextParams"/>
			<params>
				<param name="name" value="field0"/>
			</params>
			<bind name="text" value="dataArray[0] * dataArray[2]"/>
			<bind name="name" value="'param_content_' + $parent.id"/>
		</block>
		<block type="text">
			<styleClass value="$TextParams_x"/>
			<text value="x"/>
		</block>
		<block type="text">
			<styleClass value="$TextParams"/>
			<params>
				<param name="name" value="field1"/>
			</params>
			<bind name="text" value="dataArray[1]"/>
			<bind name="name" value="'param_content_' + $parent.id"/>
		</block>
		<block type="text">
			<styleClass value="$TextParams_measure"/>
			<bind name="text" value="$parent.$parent.measureIDS"/>
		</block>
		<block type="text">
			<styleClass value="$TextParams"/>
			<bind name="text" value="$index &lt; ($parent.$parent.values.length - 1) ? ',' : ''"/>
		</block>
	</block>
	<block className="ListAmmoMockup">
		<style>
			<flow value="horizontal"/>
		</style>
		<bind name="repeat" value="$parent.values; 'AmmoMockup'"/>
	</block>
	<block className="DiffColorsMockup">
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<block type="text">
				<bind name="class" value="$parent.hasDiff ? '$TextParams_tight_right' : '$TextParams'"/>
				<bind name="text" value="$parent.hasDiff ? '(' : ''"/>
			</block>
			<block>
				<bind name="instance" value="'CompareElement'; ($parent.diffData.length &gt; 0 &amp;&amp; $parent.diffData[0].diff) ? $parent.diffData[0] : null"/>
			</block>
			<block type="text">
				<styleClass value="$TextParams_tight_left"/>
				<bind name="text" value="$parent.hasDiff ? ')' : ''"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<bind name="watch" value="'textvalue'; $parent.values[0]"/>
		<block type="text">
			<styleClass value="$TextParams"/>
			<params>
				<param name="name" value="field1"/>
			</params>
			<bind name="text" value="format(textvalue, -1)"/>
			<bind name="name" value="'param_content_h_' + $parent.id"/>
		</block>
	</block>
	<block className="PlaneTypeMockup">
		<style>
			<flow value="horizontal"/>
			<marginLeft value="2px"/>
		</style>
		<bind name="name" value="'planeType' + type"/>
		<block className="icon_airplane_type" type="native">
			<bind name="gotoAndStop!" value="type"/>
			<block>
				<style>
					<position value="absolute"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<block type="text">
					<bind name="class" value="$parent.hasDiff ? '$TextParams_tight_right' : '$TextParams'"/>
					<bind name="text" value="$parent.$parent.hasDiff ? '(' : ''"/>
				</block>
				<block>
					<bind name="instance" value="'CompareElement'; diffData"/>
				</block>
				<block type="text">
					<styleClass value="$TextParams_tight_left"/>
					<bind name="text" value="$parent.$parent.hasDiff ? ')' : ''"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block type="text">
			<styleClass value="$TextParams"/>
			<params>
				<param name="name" value="count"/>
			</params>
			<bind name="text" value="count"/>
			<bind name="name" value="'param_content_' + $parent.id "/>
		</block>
	</block>
	<block className="PlaneTypesMockup">
		<style>
			<flow value="horizontal"/>
		</style>
		<bind name="repeat" value="$parent.data.list; 'PlaneTypeMockup'"/>
	</block>
	<block className="GunsAndTubesMockup">
		<style>
			<flow value="horizontal"/>
		</style>
		<block type="text">
			<styleClass value="$TextParams_x"/>
			<text value="x"/>
		</block>
		<block type="text">
			<styleClass value="$TextParams"/>
			<params>
				<param name="name" value="field0"/>
			</params>
			<bind name="text" value="$parent.values[0]"/>
			<bind name="name" value="'param_content_1_' + $parent.id"/>
		</block>
		<block type="text">
			<styleClass value="$TextParams_tight_right"/>
			<text value="("/>
		</block>
		<block type="text">
			<styleClass value="$TextParams"/>
			<style>
				<marginLeft value="1px"/>
				<marginRight value="-1px"/>
			</style>
			<params>
				<param name="name" value="field1"/>
			</params>
			<bind name="text" value="$parent.values[1]"/>
			<bind name="name" value="'param_content_2_' + $parent.id"/>
		</block>
		<block type="text">
			<styleClass value="$TextParams_tight_left"/>
			<text value=")"/>
		</block>
		<block>
			<bind name="instance" value="'GunsAndTubesCompareElement'; diffData[0]"/>
		</block>
		<block type="text">
			<bind name="class" value="$parent.hasDiff ? '$TextParams_tight_right' : '$TextParams'"/>
			<bind name="text" value="$parent.$parent.hasDiff ? '(' : ''"/>
		</block>
		<block>
			<bind name="instance" value="'GunsAndTubesCompareElement'; diffData[1]"/>
		</block>
		<block type="text">
			<styleClass value="$TextParams_tight_left"/>
			<bind name="text" value="$parent.$parent.hasDiff ? ')' : ''"/>
		</block>
	</block>
	<block className="GunsAndTubesCompareElement">
		<style>
			<flow value="horizontal"/>
		</style>
		<block type="text">
			<styleClass value="$TextParams"/>
			<bind name="class" value="isGood ? '$FontColorComparePositive' : '$FontColorCompareNegative'"/>
			<bind name="text" value="textValue"/>
			<bind name="name" value="'param_content_' + $parent.id"/>
		</block>
	</block>
	<block className="RangeMockup">
		<style>
			<flow value="horizontal"/>
		</style>
		<block type="text">
			<styleClass value="$TextParams"/>
			<params>
				<param name="name" value="field0"/>
			</params>
			<bind name="text" value="$parent.values[0]"/>
			<bind name="name" value="'param_content_min_' + $parent.id"/>
		</block>
		<block>
			<bind name="instance" value="'CompareElement'; ($parent.diffData.length &gt; 0 &amp;&amp; $parent.diffData[0].diff) ? $parent.diffData[0] : null"/>
		</block>
		<block type="text">
			<bind name="class" value="$parent.values[0] != $parent.values[1] ? '$TextParams_hyphen' : '$TextParams'"/>
			<bind name="text" value="$parent.values[0] != $parent.values[1] ? '-' : '' "/>
		</block>
		<block type="text">
			<styleClass value="$TextParams"/>
			<params>
				<param name="name" value="field1"/>
			</params>
			<bind name="text" value="$parent.values[0] != $parent.values[1] ? $parent.values[1] : '' "/>
			<bind name="name" value="'param_content_max_' + $parent.id"/>
		</block>
		<block>
			<bind name="instance" value="'CompareElement'; ($parent.diffData.length &gt; 1 &amp;&amp; $parent.diffData[1].diff &amp;&amp; $parent.values[0] != $parent.values[1]) ? $parent.diffData[1] : null"/>
		</block>
		<block type="text">
			<styleClass value="$TextParams_measure"/>
			<bind name="text" value="$parent.measureIDS"/>
		</block>
	</block>
	<block className="ListValuesItemMockup">
		<style>
			<flow value="horizontal"/>
		</style>
		<bind name="name" value="'item' + $index"/>
		<block type="text">
			<styleClass value="$TextParams"/>
			<bind name="text" value="textValue"/>
			<bind name="name" value="'param_content_' + $parent.id"/>
		</block>
		<block type="text">
			<styleClass value="$TextParams_measure"/>
			<bind name="text" value="measure"/>
		</block>
		<block type="text">
			<styleClass value="$TextParams_slash"/>
			<bind name="text" value="!isLast ? '/' : ''"/>
		</block>
	</block>
	<block className="CompareListValuesItem">
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<bind name="instance" value="'CompareElement'; diffData"/>
		</block>
		<block type="text">
			<styleClass value="$TextParams_slash"/>
			<bind name="text" value="!isLast &amp;&amp; diffData != null ? '/' : ''"/>
		</block>
	</block>
	<block className="ListValuesMockup">
		<style>
			<flow value="horizontal"/>
		</style>
		<block type="text">
			<bind name="class" value="$parent.hasDiff ? '$TextParams_tight_right' : '$TextParams'"/>
			<bind name="text" value="$parent.hasDiff ? '(' : ''"/>
		</block>
		<block>
			<bind name="repeat" value="$parent.data.list; 'CompareListValuesItem'"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block type="text">
			<styleClass value="$TextParams_tight_left"/>
			<bind name="text" value="$parent.hasDiff ? ')' : ''"/>
		</block>
		<block>
			<bind name="repeat" value="$parent.data.list; 'ListValuesItemMockup'"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ListValuesInvMockup">
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<style>
				<marginLeft value="0px"/>
			</style>
			<bind name="repeat" value="$parent.data.list; 'ListValuesItemMockup'"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block type="text">
			<style>
				<marginLeft value="2px"/>
			</style>
			<bind name="class" value="$parent.hasDiff ? '$TextParams_tight_right' : '$TextParams'"/>
			<bind name="text" value="$parent.hasDiff ? '(' : ''"/>
		</block>
		<block>
			<bind name="repeat" value="$parent.data.list; 'CompareListValuesItem'"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block type="text">
			<styleClass value="$TextParams_tight_left"/>
			<bind name="text" value="$parent.hasDiff ? ')' : ''"/>
		</block>
	</block>
	<block className="GunTypeMockup">
		<block>
			<block type="text">
				<styleClass value="$TextParams"/>
				<bind name="text" value="$parent.data.items[0].textValue"/>
			</block>
			<bind name="name" value="'param_content_' + $parent.id"/>
		</block>
	</block>
	<block className="GunInfoMockup">
		<style>
			<flow value="horizontal"/>
		</style>
		<block type="text">
			<styleClass value="$TextParams"/>
			<bind name="text" value="$parent.data.items[0].textValue"/>
		</block>
		<bind name="name" value="'param_content_' + $parent.id"/>
		<block type="text">
			<styleClass value="$TextParams_x"/>
			<bind name="text" value="'x'"/>
		</block>
		<block type="text">
			<styleClass value="$TextParams"/>
			<bind name="text" value="$parent.data.items[1].textValue"/>
		</block>
		<bind name="name" value="'param_content_' + $parent.id"/>
		<block type="text">
			<styleClass value="$TextParams"/>
			<bind name="text" value="''"/>
		</block>
		<block type="text">
			<styleClass value="$TextParams"/>
			<bind name="text" value="$parent.data.items[2].textValue"/>
		</block>
		<bind name="name" value="'param_content_' + $parent.id"/>
		<block type="text">
			<styleClass value="$TextParams_measure"/>
			<bind name="text" value="$parent.data.measure"/>
		</block>
	</block>
	<block className="BigRangeMockup">
		<style>
			<flow value="horizontal"/>
		</style>
		<block type="text">
			<styleClass value="$TextParams"/>
			<params>
				<param name="name" value="field0"/>
			</params>
			<bind name="text" value="$parent.values[0]"/>
			<bind name="name" value="'param_content_min_' + $parent.id"/>
		</block>
		<block>
			<bind name="instance" value="'CompareElement'; ($parent.diffData.length &gt; 0 &amp;&amp; $parent.diffData[0].diff) ? $parent.diffData[0] : null"/>
		</block>
		<block type="text">
			<bind name="class" value="$parent.values[0] != $parent.values[1] ? '$TextParams_hyphen' : '$TextParams'"/>
			<bind name="text" value="$parent.values[0] != $parent.values[1] ? '–' : '' "/>
		</block>
		<block type="text">
			<styleClass value="$TextParams"/>
			<params>
				<param name="name" value="field1"/>
			</params>
			<bind name="text" value="$parent.values[0] != $parent.values[1] ? $parent.values[1] : '' "/>
			<bind name="name" value="'param_content_max_' + $parent.id"/>
		</block>
		<block>
			<bind name="instance" value="'CompareElement'; ($parent.diffData.length &gt; 1 &amp;&amp; $parent.diffData[1].diff &amp;&amp; $parent.values[0] != $parent.values[1]) ? $parent.diffData[1] : null"/>
		</block>
		<block type="text">
			<styleClass value="$TextParams_measure"/>
			<bind name="text" value="$parent.measureIDS"/>
		</block>
	</block>
	<css name="$TextDefaultBoldSmallMargin">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="15"/>
		<marginText value="-3px|-3px|-2px|-1px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<block className="QuestBannerChangeAnimation">
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerQuests; 30000"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'events'; 'eventsCollection'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'challenges'; 'isActive'; true; 'challengesCollection'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'tasks'; 'isActive'; true; 'tasksCollection'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'privateTasksAndChallenges'; 'isActive'; true; 'personalTasksCollection'"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="appear" value="'addedToStage'; 0.3; 0.3; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
		<bind name="changeDispatch" value="currentItem; 'changeBanner'"/>
		<bind name="catch" value="'setParentRollOver'"/>
		<bind name="action" value="'click'; 'log'; { event: 'click:banner.QuestsBanner'}"/>
		<block>
			<bind name="appear" value="'changeBanner'; 0.4; 1; {alpha: 1}; {alpha: 0}"/>
			<bind name="instance" value="'QuestBanner';{ _banner: currentItem, rollOver: rollOver }"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="appear" value="'changeBanner'; 0.5; 0.8; {alpha: 0}; {alpha: 1}"/>
			<bind name="instance" value="'QuestBanner';{ _banner: newItem, rollOver: rollOver }"/>
		</block>
		<block>
			<bind name="fade" value="rollOver; 0.15; {alpha: 0}; {alpha: 1}; {alpha: 0}; 1"/>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block>
				<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_HINT_GO_TO_SSE_' +  toUpperCase(newItem.type) }], _maxWidth: 250 }; 0"/>
				<bind name="request" value="'click'; 'buttonQuestEnter'; {type: newItem.type}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<block>
					<style>
						<position value="absolute"/>
						<width value="100%"/>
						<height value="80px"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap5" type="native">
						<styleClass value="$Fullsize"/>
						<bind name="fade" value="rollOver; 0.45; {alpha: 0}; {alpha: 1}; {alpha: 0}; 1; rollOver ? 0.15 : 0"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
				<block>
					<bind name="transition" value="rollOver; 0.15; {height: 0}; {height: 115}; {height: 0}; 2"/>
					<style>
						<position value="absolute"/>
						<width value="100%"/>
					</style>
					<block className="quest_thumb_title" type="native">
						<style>
							<width value="100%"/>
							<height value="80px"/>
						</style>
					</block>
				</block>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="100%"/>
					<marginLeft value="9px"/>
				</style>
				<bind name="feature" value="9; ''"/>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="visible" value="feature_9 != 'locked'"/>
					<block>
						<bind name="fade" value="rollOver; 0.12; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 1; 0.15"/>
						<style>
							<width value="100%"/>
						</style>
						<bind name="instance" value="'QuestBannerLink'; { _type: SSETypes.EVENT, _label: 'IDS_EVENTS', _num: eventsCollection.length }"/>
					</block>
					<block>
						<bind name="fade" value="rollOver; 0.12; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 1; 0.2"/>
						<style>
							<width value="100%"/>
						</style>
						<bind name="instance" value="'QuestBannerLink'; { _type: SSETypes.CHALLENGE, _label: 'IDS_CHALLENGES', _num: challengesCollection.length }"/>
					</block>
					<block>
						<bind name="fade" value="rollOver; 0.12; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 1; 0.25"/>
						<style>
							<width value="100%"/>
						</style>
						<bind name="instance" value="'QuestBannerLink'; { _type: SSETypes.TASK, _label: 'IDS_TASKS', _num: tasksCollection.length }"/>
					</block>
					<block>
						<bind name="fade" value="personalTasksCollection.length &gt; 0 &amp;&amp; rollOver; 0.12; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 1; 0.3"/>
						<style>
							<width value="100%"/>
						</style>
						<bind name="instance" value="'QuestBannerLink'; { _type: 'privateTasksAndChallenges', _label: 'IDS_PERSONAL_TASKS', _num: personalTasksCollection.length }"/>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="QuestBannerLink">
		<bind name="name" value="'QuestBannerLink_' + _type"/>
		<bind name="request" value="'click'; 'buttonQuestEnter'; {type: _type}"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_HINT_GO_TO_SSE_' +  toUpperCase(_type) }], _maxWidth: 250 }; 0"/>
		<bind name="changeDispatch" value="rollOver; rollOver ? 'setParentRollOver' : null; {rollOver: true}"/>
		<bind name="soundSet" value="'quest_banner'"/>
		<style>
			<width value="100%"/>
		</style>
		<bind name="style" value="'alpha'; _num == 0 ? 0.5 : 1.0"/>
		<block type="text">
			<bind name="transition" value="rollOver; 0.3; {alpha: 0.7}; {alpha: _num == 0 ? 0.9 : 1.0}; {alpha: 0.7}; 1; 0.075"/>
			<style>
				<width value="100%"/>
				<textAlign value="center"/>
			</style>
			<styleClass value="$TextDefaultBoldSmallMargin"/>
			<bind name="class" value="rollOver ? '$FontColorDefault' : _type == 'privateTasksAndChallenges' ? '$FontColorGold' : '$FontColorBlueish'"/>
			<bind name="text" value="toUpperCase(tr(_label)) + ': ' + (_numLabel ? _numLabel : _num)"/>
		</block>
	</block>
	<block className="QuestBanner">
		<bind name="request" value="'click'; 'buttonQuestEnter'; {type: _banner.type}"/>
		<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_HINT_GO_TO_SSE_' +  toUpperCase(_banner.type) }], _maxWidth: 250 }; 0"/>
		<bind name="name" value="'buttonQuestEnter'"/>
		<style>
			<width value="223px"/>
			<height value="80px"/>
		</style>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundSize value="cover"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:' + _banner.backgroundURL"/>
			<block type="text">
				<style>
					<width value="200px"/>
					<alpha value="0"/>
				</style>
				<bind name="text" value="_banner.backgroundURL+_banner.type"/>
			</block>
		</block>
		<block>
			<bind name="transition" value="rollOver; 0.15; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginLeft value="9px"/>
				<marginRight value="9px"/>
				<hitTest value="false"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="quest_thumb_title" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginLeft value="-9px"/>
						<marginRight value="-9px"/>
					</style>
				</block>
				<block type="text">
					<style>
						<width value="100%"/>
						<marginTop value="3px"/>
						<marginBottom value="3px"/>
						<leading value="-3"/>
					</style>
					<styleClass value="$TextHeaderBold"/>
					<bind name="text" value="_banner.titleText"/>
				</block>
			</block>
			<block>
				<styleClass value="$Fullsize"/>
				<block className="shadow_h_zero_edge_fullsize" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginLeft value="-9px"/>
					</style>
				</block>
				<bind name="watch" value="'bannerTitle'; ('IDS_' + toUpperCase(_banner.type))"/>
				<block type="text">
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$TextSecondaryBold"/>
					<bind name="class" value="_banner.isPrivate ? '$FontColorGold' : '$FontColorBlueish'"/>
					<bind name="text" value="_banner.isPrivate &amp;&amp; _banner.type == SSETypes.TASK		? toUpperCase(tr('IDS_PERSONAL_BATTLE_TASK')) :
							_banner.isPrivate &amp;&amp; _banner.type == SSETypes.CHALLENGE	? toUpperCase(tr('IDS_PERSONAL_CHALLENGE'))
																					: toUpperCase(tr(bannerTitle))"/>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<marginTop value="6px"/>
					</style>
					<bind name="fade" value="feature_18 == 'new'; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
					<block className="quest_icon_new" type="native"/>
				</block>
			</block>
		</block>
	</block>
	<block className="CrewsSelectMainInset">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'crewsSingleton'; ['dockEntity.crewData.evUpdate']; dockEntity.crewData"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; shipId"/>
		<bind name="watchDH" value="'crewId';	['shipOwnEntity.ownShip.evCrewChanged'];	shipOwnEntity == null ? 0 : shipOwnEntity.ownShip.crewId"/>
		<bind name="var" value="{fromCrewSelect: true}"/>
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; crewId"/>
		<bind name="watchDH" value="'selectedShipCrew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'selectedShipCrew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<bind name="watch" value="'recruitable'; shipInfo.peculiarity == 'default'"/>
		<bind name="stageSize"/>
		<bind name="watch" value="'_stageHeight'; stageHeight"/>
		<bind name="watch" value="'_stageWidth'; stageWidth"/>
		<styleClass value="$Fullsize"/>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag/2 + 1 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 1 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap5" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<block className="contrast_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
			<block className="modal_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<alpha value="0.7"/>
				</style>
			</block>
		</block>
		<bind name="var" value="{windowAppearLag: 0.2}"/>
		<block className="CrewsSelectContent">
			<bind name="watchDH" value="'isLocked';			['shipOwnEntity.ownShip.evUpdateLock'];		shipOwnEntity.ownShip.isLocked"/>
			<bind name="watchDH" value="'isInFormation';		['shipOwnEntity.ownShip.evUpdateLock'];		shipOwnEntity.ownShip.isInFormation"/>
			<styleClass value="$Fullsize"/>
			<block>
				<styleClass value="$Fullsize"/>
				<style>
					<marginLeft value="10px"/>
					<marginRight value="10px"/>
					<marginTop value="32px"/>
				</style>
				<block>
					<style>
						<width value="280px"/>
						<height value="100%"/>
						<marginTop value="17px"/>
					</style>
					<block>
						<styleClass value="$Fullsize"/>
						<block>
							<style>
								<position value="absolute"/>
								<marginTop value="-40px"/>
								<marginLeft value="-3px"/>
							</style>
							<bind name="visible" value="(fromCrewSelect == true)"/>
							<bind name="instance" value="'VideoIcon'; fromCrewSelect ? { _userTaskFlag: UserTasksFlags.VIDEO_SEEN_COMMANDERS,
																	_videoUrlId: 'guideFeature_7_InGame',
																	_headerText: 'IDS_CREWS',
																	_multiParagraphArray: (selectedShipCrew.uniqueSkillSet.length == 0) &amp;&amp; (selectedShipCrew.vanitiesSet.length == 0) ? null :
																						[	{ _paragraphText: 'IDS_INSTRUCTION_CREW_PERKS_0'},
																							{ _paragraphText: 'IDS_INSTRUCTION_CREW_PERKS_1'},
																							{ _paragraphText: 'IDS_INSTRUCTION_CREW_PERKS_2'}
																						]}
																: null"/>
						</block>
						<block>
							<bind name="visible" value="(selectedShipCrew.uniqueSkillSet.length == 0) &amp;&amp; (selectedShipCrew.vanitiesSet.length == 0)"/>
							<style>
								<width value="100%"/>
							</style>
							<block>
								<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 1 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
								<bind name="appear" value="'startHide'; 0.15; 1 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
								<style>
									<width value="100%"/>
								</style>
								<block type="text">
									<styleClass value="$MiddleAligned"/>
									<styleClass value="$TextHeaderBold"/>
									<bind name="text" value="toUpperCase(tr('IDS_CREW_PERKS'))"/>
								</block>
							</block>
							<block>
								<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
								<bind name="appear" value="'startHide'; 0.15; 2 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
								<style>
									<width value="100%"/>
									<marginTop value="6px"/>
								</style>
								<bind name="repeat" value="	[	{ _paragraphText: 'IDS_INSTRUCTION_CREW_PERKS_0'},
											{ _paragraphText: 'IDS_INSTRUCTION_CREW_PERKS_1'},
											{ _paragraphText: 'IDS_INSTRUCTION_CREW_PERKS_2'}
										]; 'RepeatParagraphItem'; {_maxWidth: 280, _leading: -1}"/>
							</block>
						</block>
					</block>
					<block>
						<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
						<bind name="appear" value="'startHide'; 0.15; 2 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
						<style>
							<position value="absolute"/>
							<marginTop value="720:80,1080:200ah"/>
							<marginLeft value="1280:30,1920:120aw"/>
						</style>
						<block>
							<bind name="visible" value="selectedShipCrew.uniqueSkillSet.length &gt; 0"/>
							<styleClass value="$MiddleAligned"/>
							<block>
								<styleClass value="$MiddleAligned"/>
								<block type="text">
									<styleClass value="$TextDefaultBold17NM"/>
									<bind name="class" value="'$FontColorBlueish'"/>
									<bind name="text" value="toUpperCase(tr('IDS_CREW_TALENTS'))"/>
								</block>
							</block>
							<block>
								<style>
									<marginTop value="10px"/>
								</style>
								<bind name="repeat" value="selectedShipCrew.uniqueSkillSet; 'TalentCrewSkills'; {}; true"/>
								<style>
									<flow value="horizontal"/>
								</style>
							</block>
						</block>
						<block>
							<bind name="visible" value="selectedShipCrew.vanitiesSet.length &gt; 0"/>
							<style>
								<marginTop value="20px"/>
							</style>
							<block>
								<styleClass value="$MiddleAligned"/>
								<block type="text">
									<styleClass value="$TextDefaultBold17NM"/>
									<bind name="class" value="'$FontColorBlueish'"/>
									<bind name="text" value="toUpperCase(tr('IDS_CREW_VANITY'))"/>
								</block>
							</block>
							<block>
								<style>
									<marginTop value="10px"/>
								</style>
								<bind name="repeat" value="selectedShipCrew.vanitiesSet; 'VanityCrewSkills'; { _crewID: crewId }"/>
								<style>
									<flow value="horizontal"/>
								</style>
							</block>
						</block>
					</block>
					<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
					<bind name="watchDH" value="'eliteXP'; 	 ['resourceEntity.accountResource.evChangedEliteXP'];	resourceEntity.accountResource.eliteXP"/>
					<bind name="watchDH" value="'useEliteXP'; ['resourceEntity.accountResource.evUseEliteXPChanged'];resourceEntity.accountResource.useEliteXP"/>
					<block>
						<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2.5 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
						<bind name="appear" value="'startHide'; 0.15; 2.5 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
						<style>
							<width value="100%"/>
						</style>
						<bind name="instance" value="'EliteXpCounter'; (useEliteXP == true) ? {_eliteXP: eliteXP} : null"/>
						<bind name="instance" value="'EliteXpPreview'; (useEliteXP != true) ? {} : null"/>
					</block>
				</block>
				<block>
					<styleClass value="$Fullsize"/>
					<block>
						<bind name="visible" value="crewId != 0"/>
						<bind name="name" value="'SkillsBlock'"/>
						<styleClass value="$Fullsize"/>
						<bind name="style" value="'marginTop'; (17 + (_stageHeight-720) / 6) + 'px'"/>
						<bind name="var" value="{iconSize: 60}"/>
						<bind name="watch" value="'iconHorizontalPadding'; 9 + (_stageWidth-1280) / 28"/>
						<bind name="watch" value="'iconVerticalPadding'; 15 + (_stageHeight-720) / 18"/>
						<bind name="watch" value="'groupPaddingCoeff'; 1.5"/>
						<block>
							<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 1 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
							<bind name="appear" value="'startHide'; 0.15; 1 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
							<styleClass value="$MiddleAligned"/>
							<style>
								<height value="1px"/>
							</style>
							<bind name="style" value="'height'; ((26 + iconVerticalPadding) + 'px')"/>
							<bind name="repeat" value="[	{_label: 'IDS_SKILLS_GROUP_1'}, {_label: 'IDS_SKILLS_GROUP_2'},
									{_label: 'IDS_SKILLS_GROUP_3'}, {_label: 'IDS_SKILLS_GROUP_4'}];
									'SkillColumnLabel'; {	_iconSize: iconSize, _iconHorizontalPadding: iconHorizontalPadding,
															_groupPaddingCoeff: groupPaddingCoeff}"/>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
						<block>
							<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
							<bind name="appear" value="'startHide'; 0.15; 2 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
							<styleClass value="$MiddleAligned"/>
							<block>
								<style>
									<width value="1px"/>
									<height value="1px"/>
								</style>
								<bind name="style" value="'width'; (8 * iconSize) + (7 * iconHorizontalPadding) + 3 * iconHorizontalPadding * groupPaddingCoeff)"/>
								<bind name="style" value="'height'; (4 * (iconSize + iconVerticalPadding) - iconVerticalPadding)"/>
								<bind name="repeat" value="crewId ? selectedShipCrew.skillSet : 0; 'CrewFileSkillItem'; {	_crewId: crewId,
																										_iconHorizontalPadding: iconHorizontalPadding,
																										_groupPaddingCoeff: groupPaddingCoeff,
																										_iconVerticalPadding: iconVerticalPadding}"/>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
					</block>
					<block>
						<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2.5 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
						<bind name="appear" value="'startHide'; 0.15; 2.5 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
						<styleClass value="$MiddleAligned"/>
						<bind name="instance" value="'RedistributeSkillPoints'; crewId	? {_isLocked: isLocked, _crewId: crewId,
																	_isInFormation: isInFormation}
																	: null"/>
					</block>
				</block>
				<bind name="watch" value="'isCrewPanelVisible'; ((selectedShipCrew != null) || (fromCrewSelect == true))"/>
				<block>
					<bind name="visible" value="(isCrewPanelVisible == true)"/>
					<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
					<bind name="appear" value="'startHide'; 0.15; 2 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
					<style>
						<width value="312px"/>
						<height value="100%"/>
					</style>
					<bind name="instance" value="'CrewPortraitPanelBlock'; isCrewPanelVisible	? {_shipId: shipId, _crewId: crewId, _fromCrewSelect: fromCrewSelect}
																			: null"/>
				</block>
				<block>
					<bind name="visible" value="(isCrewPanelVisible == false)"/>
					<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
					<bind name="appear" value="'startHide'; 0.15; 2 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
					<style>
						<width value="312px"/>
						<marginTop value="33px"/>
					</style>
					<block type="text">
						<styleClass value="$MiddleAligned"/>
						<styleClass value="$TextHeaderBold"/>
						<bind name="class" value="'$FontColorUnready'"/>
						<bind name="text" value="toUpperCase(tr('IDS_NO_CREW'))"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
				<bind name="appear" value="'startHide'; 0.15; 2 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
				<bind name="visible" value="crewId == 0 &amp;&amp; recruitable"/>
				<styleClass value="$MiddleAlignedAbsolutely"/>
				<style>
					<width value="450px"/>
					<top value="42%"/>
					<marginTop value="-50%"/>
					<align value="center"/>
				</style>
				<block type="text">
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
						<marginBottom value="6px"/>
					</style>
					<bind name="class" value="'$FontColorUnready'"/>
					<styleClass value="$TextAccent"/>
					<text value="IDS_NO_CREW"/>
				</block>
				<block type="text">
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
						<leading value="-3"/>
					</style>
					<styleClass value="$TextHeaderBigDefault"/>
					<text value="IDS_HIRE_CREW_HINT"/>
				</block>
				<block>
					<style>
						<width value="200px"/>
						<marginTop value="18px"/>
					</style>
					<bind name="name" value="'recruitCrewButton'"/>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_HIRE_NEW_CREW'}; 0"/>
					<bind name="request" value="'click'; 'hireCrew'; {shipId: shipId}"/>
					<bind name="instance" value="'DefaultButton'; !(crewId)	? {_enabled: true, _label: toUpperCase(tr('IDS_HIRE_NEW_CREW')), _isTransactionBtn: false}
														: null"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="style" value="'marginTop'; 6 + (_stageHeight-720) / 8 + 'px'"/>
			<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
			<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
			<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
			<bind name="watch" value="'carouselRows';		(userPrefs.curRowCountIndex == null)	? 0 : userPrefs.curRowCountIndex"/>
			<bind name="watch" value="'isSmallCarouselView';	(userPrefs.isSmallCarouselView == null) ? false : userPrefs.isSmallCarouselView"/>
			<bind name="style" value="'height'; isSmallCarouselView	?	(carouselRows == 1) ? '266px' :
														(carouselRows == 2) ? '295px'
																			: '203px'
													: '203px'"/>
		</block>
	</block>
	<block className="CrewsSelectContent">
		<bind name="watchDH" value="'isLocked';			['shipOwnEntity.ownShip.evUpdateLock'];		shipOwnEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'isInFormation';		['shipOwnEntity.ownShip.evUpdateLock'];		shipOwnEntity.ownShip.isInFormation"/>
		<styleClass value="$Fullsize"/>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<marginLeft value="10px"/>
				<marginRight value="10px"/>
				<marginTop value="32px"/>
			</style>
			<block>
				<style>
					<width value="280px"/>
					<height value="100%"/>
					<marginTop value="17px"/>
				</style>
				<block>
					<styleClass value="$Fullsize"/>
					<block>
						<style>
							<position value="absolute"/>
							<marginTop value="-40px"/>
							<marginLeft value="-3px"/>
						</style>
						<bind name="visible" value="(fromCrewSelect == true)"/>
						<bind name="instance" value="'VideoIcon'; fromCrewSelect ? { _userTaskFlag: UserTasksFlags.VIDEO_SEEN_COMMANDERS,
																	_videoUrlId: 'guideFeature_7_InGame',
																	_headerText: 'IDS_CREWS',
																	_multiParagraphArray: (selectedShipCrew.uniqueSkillSet.length == 0) &amp;&amp; (selectedShipCrew.vanitiesSet.length == 0) ? null :
																						[	{ _paragraphText: 'IDS_INSTRUCTION_CREW_PERKS_0'},
																							{ _paragraphText: 'IDS_INSTRUCTION_CREW_PERKS_1'},
																							{ _paragraphText: 'IDS_INSTRUCTION_CREW_PERKS_2'}
																						]}
																: null"/>
					</block>
					<block>
						<bind name="visible" value="(selectedShipCrew.uniqueSkillSet.length == 0) &amp;&amp; (selectedShipCrew.vanitiesSet.length == 0)"/>
						<style>
							<width value="100%"/>
						</style>
						<block>
							<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 1 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
							<bind name="appear" value="'startHide'; 0.15; 1 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
							<style>
								<width value="100%"/>
							</style>
							<block type="text">
								<styleClass value="$MiddleAligned"/>
								<styleClass value="$TextHeaderBold"/>
								<bind name="text" value="toUpperCase(tr('IDS_CREW_PERKS'))"/>
							</block>
						</block>
						<block>
							<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
							<bind name="appear" value="'startHide'; 0.15; 2 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
							<style>
								<width value="100%"/>
								<marginTop value="6px"/>
							</style>
							<bind name="repeat" value="	[	{ _paragraphText: 'IDS_INSTRUCTION_CREW_PERKS_0'},
											{ _paragraphText: 'IDS_INSTRUCTION_CREW_PERKS_1'},
											{ _paragraphText: 'IDS_INSTRUCTION_CREW_PERKS_2'}
										]; 'RepeatParagraphItem'; {_maxWidth: 280, _leading: -1}"/>
						</block>
					</block>
				</block>
				<block>
					<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
					<bind name="appear" value="'startHide'; 0.15; 2 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
					<style>
						<position value="absolute"/>
						<marginTop value="720:80,1080:200ah"/>
						<marginLeft value="1280:30,1920:120aw"/>
					</style>
					<block>
						<bind name="visible" value="selectedShipCrew.uniqueSkillSet.length &gt; 0"/>
						<styleClass value="$MiddleAligned"/>
						<block>
							<styleClass value="$MiddleAligned"/>
							<block type="text">
								<styleClass value="$TextDefaultBold17NM"/>
								<bind name="class" value="'$FontColorBlueish'"/>
								<bind name="text" value="toUpperCase(tr('IDS_CREW_TALENTS'))"/>
							</block>
						</block>
						<block>
							<style>
								<marginTop value="10px"/>
							</style>
							<bind name="repeat" value="selectedShipCrew.uniqueSkillSet; 'TalentCrewSkills'; {}; true"/>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
					</block>
					<block>
						<bind name="visible" value="selectedShipCrew.vanitiesSet.length &gt; 0"/>
						<style>
							<marginTop value="20px"/>
						</style>
						<block>
							<styleClass value="$MiddleAligned"/>
							<block type="text">
								<styleClass value="$TextDefaultBold17NM"/>
								<bind name="class" value="'$FontColorBlueish'"/>
								<bind name="text" value="toUpperCase(tr('IDS_CREW_VANITY'))"/>
							</block>
						</block>
						<block>
							<style>
								<marginTop value="10px"/>
							</style>
							<bind name="repeat" value="selectedShipCrew.vanitiesSet; 'VanityCrewSkills'; { _crewID: crewId }"/>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
					</block>
				</block>
				<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
				<bind name="watchDH" value="'eliteXP'; 	 ['resourceEntity.accountResource.evChangedEliteXP'];	resourceEntity.accountResource.eliteXP"/>
				<bind name="watchDH" value="'useEliteXP'; ['resourceEntity.accountResource.evUseEliteXPChanged'];resourceEntity.accountResource.useEliteXP"/>
				<block>
					<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2.5 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
					<bind name="appear" value="'startHide'; 0.15; 2.5 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="instance" value="'EliteXpCounter'; (useEliteXP == true) ? {_eliteXP: eliteXP} : null"/>
					<bind name="instance" value="'EliteXpPreview'; (useEliteXP != true) ? {} : null"/>
				</block>
			</block>
			<block>
				<styleClass value="$Fullsize"/>
				<block>
					<bind name="visible" value="crewId != 0"/>
					<bind name="name" value="'SkillsBlock'"/>
					<styleClass value="$Fullsize"/>
					<bind name="style" value="'marginTop'; (17 + (_stageHeight-720) / 6) + 'px'"/>
					<bind name="var" value="{iconSize: 60}"/>
					<bind name="watch" value="'iconHorizontalPadding'; 9 + (_stageWidth-1280) / 28"/>
					<bind name="watch" value="'iconVerticalPadding'; 15 + (_stageHeight-720) / 18"/>
					<bind name="watch" value="'groupPaddingCoeff'; 1.5"/>
					<block>
						<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 1 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
						<bind name="appear" value="'startHide'; 0.15; 1 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
						<styleClass value="$MiddleAligned"/>
						<style>
							<height value="1px"/>
						</style>
						<bind name="style" value="'height'; ((26 + iconVerticalPadding) + 'px')"/>
						<bind name="repeat" value="[	{_label: 'IDS_SKILLS_GROUP_1'}, {_label: 'IDS_SKILLS_GROUP_2'},
									{_label: 'IDS_SKILLS_GROUP_3'}, {_label: 'IDS_SKILLS_GROUP_4'}];
									'SkillColumnLabel'; {	_iconSize: iconSize, _iconHorizontalPadding: iconHorizontalPadding,
															_groupPaddingCoeff: groupPaddingCoeff}"/>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
						<bind name="appear" value="'startHide'; 0.15; 2 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
						<styleClass value="$MiddleAligned"/>
						<block>
							<style>
								<width value="1px"/>
								<height value="1px"/>
							</style>
							<bind name="style" value="'width'; (8 * iconSize) + (7 * iconHorizontalPadding) + 3 * iconHorizontalPadding * groupPaddingCoeff)"/>
							<bind name="style" value="'height'; (4 * (iconSize + iconVerticalPadding) - iconVerticalPadding)"/>
							<bind name="repeat" value="crewId ? selectedShipCrew.skillSet : 0; 'CrewFileSkillItem'; {	_crewId: crewId,
																										_iconHorizontalPadding: iconHorizontalPadding,
																										_groupPaddingCoeff: groupPaddingCoeff,
																										_iconVerticalPadding: iconVerticalPadding}"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
				<block>
					<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2.5 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
					<bind name="appear" value="'startHide'; 0.15; 2.5 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
					<styleClass value="$MiddleAligned"/>
					<bind name="instance" value="'RedistributeSkillPoints'; crewId	? {_isLocked: isLocked, _crewId: crewId,
																	_isInFormation: isInFormation}
																	: null"/>
				</block>
			</block>
			<bind name="watch" value="'isCrewPanelVisible'; ((selectedShipCrew != null) || (fromCrewSelect == true))"/>
			<block>
				<bind name="visible" value="(isCrewPanelVisible == true)"/>
				<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
				<bind name="appear" value="'startHide'; 0.15; 2 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
				<style>
					<width value="312px"/>
					<height value="100%"/>
				</style>
				<bind name="instance" value="'CrewPortraitPanelBlock'; isCrewPanelVisible	? {_shipId: shipId, _crewId: crewId, _fromCrewSelect: fromCrewSelect}
																			: null"/>
			</block>
			<block>
				<bind name="visible" value="(isCrewPanelVisible == false)"/>
				<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
				<bind name="appear" value="'startHide'; 0.15; 2 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
				<style>
					<width value="312px"/>
					<marginTop value="33px"/>
				</style>
				<block type="text">
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$TextHeaderBold"/>
					<bind name="class" value="'$FontColorUnready'"/>
					<bind name="text" value="toUpperCase(tr('IDS_NO_CREW'))"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 2 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<bind name="visible" value="crewId == 0 &amp;&amp; recruitable"/>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<style>
				<width value="450px"/>
				<top value="42%"/>
				<marginTop value="-50%"/>
				<align value="center"/>
			</style>
			<block type="text">
				<style>
					<width value="100%"/>
					<textAlign value="center"/>
					<marginBottom value="6px"/>
				</style>
				<bind name="class" value="'$FontColorUnready'"/>
				<styleClass value="$TextAccent"/>
				<text value="IDS_NO_CREW"/>
			</block>
			<block type="text">
				<style>
					<width value="100%"/>
					<textAlign value="center"/>
					<leading value="-3"/>
				</style>
				<styleClass value="$TextHeaderBigDefault"/>
				<text value="IDS_HIRE_CREW_HINT"/>
			</block>
			<block>
				<style>
					<width value="200px"/>
					<marginTop value="18px"/>
				</style>
				<bind name="name" value="'recruitCrewButton'"/>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_HIRE_NEW_CREW'}; 0"/>
				<bind name="request" value="'click'; 'hireCrew'; {shipId: shipId}"/>
				<bind name="instance" value="'DefaultButton'; !(crewId)	? {_enabled: true, _label: toUpperCase(tr('IDS_HIRE_NEW_CREW')), _isTransactionBtn: false}
														: null"/>
			</block>
		</block>
	</block>
	<block className="TalentCrewSkills">
		<bind name="primaryEntityDH" value="'uniqueSkillEntity'; CC.crewUniqueSkill; $value"/>
		<bind name="watchDH" value="'achievementName'; []; uniqueSkillEntity.crewUniqueSkill.achievementName"/>
		<bind name="tooltip" value="'TalentCrewSkillsTooltip'; { _id: $value }"/>
		<style>
			<marginRight value="20px"/>
		</style>
		<block>
			<style>
				<width value="60px"/>
				<height value="60px"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:../crew_commander/talents/talent_icon_' + toLowerCase(tr(achievementName)) + '.png')"/>
		</block>
		<block className="icon_check" type="native">
			<style>
				<position value="absolute"/>
				<right value="0px"/>
			</style>
		</block>
	</block>
	<block className="TalentCrewSkillsTooltip">
		<bind name="primaryEntityDH" value="'uniqueSkillEntity'; CC.crewUniqueSkill; _id"/>
		<bind name="watchDH" value="'achievementName'; 	[]; uniqueSkillEntity.crewUniqueSkill.achievementName"/>
		<bind name="watchDH" value="'attributesPositive';['uniqueSkillEntity.attributes.evChanged']; uniqueSkillEntity.attributes.positive"/>
		<bind name="watchDH" value="'attributesNegative';['uniqueSkillEntity.attributes.evChanged']; uniqueSkillEntity.attributes.negative"/>
		<bind name="watchDH" value="'attributesNeutral';['uniqueSkillEntity.attributes.evChanged']; uniqueSkillEntity.attributes.neutral"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="320px"/>
			<hitTest value="false"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<paddingTop value="16px"/>
				<paddingLeft value="16px"/>
				<paddingRight value="16px"/>
			</style>
			<block>
				<bind name="instance" value="'TalentItemWithDescription'; { _achievementName: achievementName }"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginRight value="-16px"/>
					<marginLeft value="-16px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block type="text">
				<style>
					<width value="100%"/>
					<marginTop value="12px"/>
					<marginBottom value="12px"/>
				</style>
				<styleClass value="$TextDefault17NM"/>
				<bind name="text" value="tr('IDS_TALENT_' + achievementName + '_DESCRIPTION')"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
						<marginRight value="-16px"/>
						<marginLeft value="-16px"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
				<block className="inner_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginTop value="3px"/>
						<marginBottom value="3px"/>
						<marginLeft value="-16px"/>
						<marginRight value="-16px"/>
					</style>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<paddingTop value="16px"/>
					</style>
					<bind name="instance" value="'ParamsModifierList'; { _attributesPositive: attributesPositive, _attributesNegative: attributesNegative, _attributesNeutral: attributesNeutral}"/>
				</block>
			</block>
		</block>
	</block>
	<block className="VanityCrewSkills">
		<bind name="primaryEntityDH" value="'uniqueVanityEntity'; CC.crewVanity; $value"/>
		<bind name="watchDH" value="'vanityName'; 	[]; uniqueVanityEntity.crewVanity.vanityName"/>
		<bind name="watchDH" value="'state'; 		['uniqueVanityEntity.crewVanity.evUpdate']; uniqueVanityEntity.crewVanity.state"/>
		<bind name="watchDH" value="'locked'; 		['uniqueVanityEntity.crewVanity.evUpdate']; uniqueVanityEntity.crewVanity.locked"/>
		<style>
			<marginRight value="20px"/>
		</style>
		<bind name="tooltip" value="'VanityCrewSkillsTooltip'; { _id: $value }; TooltipBehaviour.simple"/>
		<bind name="tooltip" value="'VanityCrewSkillsInfotip'; { _id: $value, _crewID: _crewID }; TooltipBehaviour.infotip"/>
		<block>
			<style>
				<width value="60px"/>
				<height value="60px"/>
			</style>
			<bind name="style" value="'backgroundImage'; (locked == true) 	? 'url:../reward_icons/reward_unlocks/reward_unlock_' + toLowerCase(tr(vanityName)) + '_inactive.png'
															: 'url:../reward_icons/reward_unlocks/reward_unlock_' + toLowerCase(tr(vanityName)) + '.png')"/>
		</block>
		<block className="icon_check" type="native">
			<style>
				<position value="absolute"/>
				<right value="0px"/>
			</style>
			<bind name="visible" value="(state == true) &amp;&amp; (locked == false)"/>
		</block>
	</block>
	<block className="VanityCrewSkillsTooltip">
		<bind name="primaryEntityDH" value="'uniqueVanityEntity'; CC.crewVanity; _id"/>
		<bind name="watchDH" value="'vanityName'; 	[]; uniqueVanityEntity.crewVanity.vanityName"/>
		<bind name="watchDH" value="'state'; 		['uniqueVanityEntity.crewVanity.evUpdate']; uniqueVanityEntity.crewVanity.state"/>
		<bind name="watchDH" value="'locked'; 		['uniqueVanityEntity.crewVanity.evUpdate']; uniqueVanityEntity.crewVanity.locked"/>
		<bind name="watchDH" value="'reasons'; 		['uniqueVanityEntity.crewVanity.evUpdate']; uniqueVanityEntity.crewVanity.reasons"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="300px"/>
			<hitTest value="false"/>
		</style>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<paddingTop value="16px"/>
				<paddingLeft value="16px"/>
				<paddingRight value="16px"/>
			</style>
			<block>
				<bind name="instance" value="'VanityItemWithDescription'; { _locked: locked, _vanityName: vanityName }"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="-16px"/>
					<marginRight value="-16px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="8px"/>
					<marginBottom value="8px"/>
					<flow value="horizontal"/>
				</style>
				<block className="icon_module_state" type="native">
					<style>
						<position value="absolute"/>
						<top value="-2px"/>
						<left value="-1px"/>
					</style>
					<bind name="gotoAndStop!" value="(state == false) || (locked == true)	? 'action' :
									state == true 							? 'installed'
																			: 'installed'"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefaultNM"/>
					<style>
						<maxWidth value="260"/>
						<marginLeft value="20px"/>
					</style>
					<bind name="class" value="state == true							? '$FontColorGolden' :
							(state == false) || (locked == true)	? '$FontColorUnready' 
																	: '$FontColorDefault'"/>
					<bind name="text" value="state == true							? 'IDS_VANITY_ACTIVATED' :
							(state == false) &amp;&amp; (locked == true) 	? 'IDS_NOT_ACHIEVED'
																	: 'IDS_VANITY_NOT_ACTIVATED'"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginRight value="-16px"/>
					<marginLeft value="-16px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block type="text">
				<style>
					<width value="100%"/>
					<marginTop value="12px"/>
					<marginBottom value="12px"/>
				</style>
				<styleClass value="$TextDefault17NM"/>
				<bind name="text" value="tr('IDS_REWARD_UNLOCK_' + vanityName + '_DESCRIPTION')"/>
			</block>
			<block>
				<bind name="visible" value="(locked == true)"/>
				<style>
					<width value="100%"/>
					<marginLeft value="-16px"/>
					<marginRight value="-16px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="(locked == true)"/>
				<style>
					<width value="100%"/>
					<marginLeft value="-16"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="instance" value="'RewardReasonsList'; (locked == true) ? { _rewardReasons: reasons, _rewardUnlocked: true } : null"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="-16px"/>
					<marginRight value="-16px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginBottom value="12px"/>
					<marginTop value="12px"/>
				</style>
				<bind name="visible" value="locked == false"/>
				<bind name="instance" value="'MouseInstruction'; { _type: 'left', _instructionText: (state == true) ? 'IDS_CREW_VANITY_UNINSTALL' : 'IDS_CREW_VANITY_INSTALL', _maxWidth: 220 }"/>
			</block>
		</block>
	</block>
	<block className="VanityCrewSkillsInfotip">
		<bind name="primaryEntityDH" value="'uniqueVanityEntity'; CC.crewVanity; _id"/>
		<bind name="watchDH" value="'vanityType'; 	[]; uniqueVanityEntity.crewVanity.vanityType"/>
		<bind name="watchDH" value="'vanityName'; 	[]; uniqueVanityEntity.crewVanity.vanityName"/>
		<bind name="watchDH" value="'state'; 		['uniqueVanityEntity.crewVanity.evUpdate']; uniqueVanityEntity.crewVanity.state"/>
		<bind name="watchDH" value="'locked'; 		['uniqueVanityEntity.crewVanity.evUpdate']; uniqueVanityEntity.crewVanity.locked"/>
		<bind name="watchDH" value="'reasons'; 		['uniqueVanityEntity.crewVanity.evUpdate']; uniqueVanityEntity.crewVanity.reasons"/>
		<styleClass value="$VerticalInfotipBehaviourCenter"/>
		<style>
			<width value="300px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block className="dock_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginTop value="-8px"/>
				<marginRight value="-13px"/>
				<marginLeft value="-13px"/>
				<marginBottom value="-16px"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<paddingTop value="16px"/>
				<paddingLeft value="16px"/>
				<paddingRight value="16px"/>
			</style>
			<block>
				<bind name="instance" value="'VanityItemWithDescription'; { _locked: locked, _vanityName: vanityName }"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="-16px"/>
					<marginRight value="-16px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="8px"/>
					<marginBottom value="8px"/>
					<flow value="horizontal"/>
				</style>
				<block className="icon_module_state" type="native">
					<style>
						<position value="absolute"/>
						<top value="-2px"/>
						<left value="-1px"/>
					</style>
					<bind name="gotoAndStop!" value="(state == false) || (locked == true)	? 'action' :
									state == true 							? 'installed'
																			: 'installed'"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefaultNM"/>
					<style>
						<maxWidth value="260"/>
						<marginLeft value="20px"/>
					</style>
					<bind name="class" value="state == true							? '$FontColorGolden' :
							(state == false) || (locked == true)	? '$FontColorUnready' 
																	: '$FontColorDefault'"/>
					<bind name="text" value="state == true							? 'IDS_VANITY_ACTIVATED' :
							(state == false) &amp;&amp; (locked == true) 	? 'IDS_NOT_ACHIEVED'
																	: 'IDS_VANITY_NOT_ACTIVATED'"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginRight value="-16px"/>
					<marginLeft value="-16px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block type="text">
				<style>
					<width value="100%"/>
					<marginTop value="12px"/>
					<marginBottom value="12px"/>
				</style>
				<styleClass value="$TextDefault17NM"/>
				<bind name="text" value="tr('IDS_REWARD_UNLOCK_' + vanityName + '_DESCRIPTION')"/>
			</block>
			<block>
				<bind name="visible" value="(locked == true)"/>
				<style>
					<width value="100%"/>
					<marginLeft value="-16px"/>
					<marginRight value="-16px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="(locked == true)"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<bind name="instance" value="'RewardReasonsList'; (locked == true) ? { _rewardReasons: reasons, _rewardUnlocked: true } : null"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="-16px"/>
					<marginRight value="-16px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<bind name="tooltip" value="'SimpleTooltip'; (locked == true) ? {tooltipText: 'IDS_VANITY_NOT_ACTIVATED_INFO'} : null; 0"/>
				<bind name="dispatch" value="'buttonClick'; 'Tooltip.Close'; {}"/>
				<block className="button_default" type="native">
					<style>
						<width value="140px"/>
					</style>
					<styleClass value="$MiddleAligned"/>
					<bind name="focus" value="0; true"/>
					<bind name="enabled" value="locked == false"/>
					<bind name="action" value="'buttonClick'; 'setCrewVanity'; { crewID: _crewID, vanityType: vanityType, value: !state }"/>
					<bind name="label" value="(state == true) ? toUpperCase(tr('IDS_CREW_VANITY_UNINSTALL')) : toUpperCase(tr('IDS_CREW_VANITY_INSTALL'))"/>
				</block>
			</block>
		</block>
	</block>
	<block className="CrewPortraitPanelBlock">
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'crewsSingleton'; ['dockEntity.crewData.evUpdate']; dockEntity.crewData"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; _shipId"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; _shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; _crewId"/>
		<bind name="watchDH" value="'selectedShipCrew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'selectedShipCrew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'accountGold'; ['resourceEntity.accountResource.evChangedGold'];	resourceEntity.accountResource.gold"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY +  'BARRAC_CAP_Increase'; 'barracksCapacityPrice'"/>
		<bind name="var" value="{ selectedCrewDest: 0 }"/>
		<bind name="watch" value="'recruitable'; shipInfo.peculiarity == 'default'"/>
		<styleClass value="$Fullsize"/>
		<bind name="watchDH" value="'isLocked';			['shipOwnEntity.ownShip.evUpdateLock'];			shipOwnEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'playerShipParams';	['shipOwnEntity.ownShip.evShipParamsUpdate'];	shipOwnEntity.ownShip.params"/>
		<bind name="watchDH" value="'crewId';			['shipOwnEntity.ownShip.evCrewChanged'];		shipOwnEntity.ownShip.crewId"/>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="contrast_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'ShipInfoTabHeader'; { _fromCrew: true, shipId: _shipId }"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<height value="85px"/>
				</style>
				<bind name="instance" value="'CrewShipPanelInnerBlock'; _crewId ? {	_fromCrewSelect: _fromCrewSelect, _crewId: _crewId, _shipId: _shipId } : null"/>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
				<block>
					<bind name="visible" value="recruitable &amp;&amp; !(_crewId)"/>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<width value="200px"/>
					</style>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_HIRE_NEW_CREW'}; 0"/>
					<bind name="request" value="'click'; 'hireCrew'; {shipId: _shipId}"/>
					<bind name="instance" value="'DefaultButton'; !(crewId) ? {_enabled: true, _label: toUpperCase(tr('IDS_HIRE_NEW_CREW')), _isTransactionBtn: false} : null"/>
				</block>
				<block>
					<bind name="visible" value="!recruitable &amp;&amp; !(_crewId)"/>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$MiddleVAligned"/>
					<bind name="instance" value="'InstructionBigTech'; { _instructionText: 'IDS_NOT_DEFAULT_SHIP_CREW_INFO', _maxWidth: '290' }"/>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<width value="100%"/>
						<bottom value="-2px"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="(_fromCrewSelect != true) &amp;&amp; selectedShipCrew.isInBarracks"/>
				<style>
					<width value="100%"/>
					<marginTop value="3px"/>
				</style>
				<block type="text">
					<styleClass value="$TextHeaderBold"/>
					<bind name="class" value="'$FontColorUnready'"/>
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
					</style>
					<bind name="text" value="toUpperCase(tr('IDS_CREW_IN_BARRACKS'))"/>
				</block>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="3px"/>
				</style>
				<bind name="visible" value="(selectedShipCrew != null) &amp;&amp; (selectedShipCrew.specializationID != _shipId)"/>
				<bind name="tooltip" value="'CrewSpecializationTooltip'; { _shipId: selectedShipCrew.specializationID, 
														 _isInAdaptation: selectedShipCrewRetraining.isInAdaptation,
														 _crewId: _crewId }"/>
				<block>
					<styleClass value="$MiddleAligned"/>
					<bind name="instance" value="'CrewSpecializationItem'; {	_shipId: selectedShipCrew.specializationID, 
															_isInAdaptation: selectedShipCrewRetraining.isInAdaptation }"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="-2px"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<bind name="watch" value="'isInAdapatationOrNeedRetraining'; (selectedShipCrewRetraining.isInAdaptation == true) || (selectedShipCrewRetraining.needRetraining == true)"/>
			<bind name="watch" value="'isRetrainStartNeeded'; (_shipId != selectedShipCrew.specializationID) &amp;&amp; (!shipInfo.isPremium) &amp;&amp; (shipInfo.group != 'upgradeableExclusive')"/>
			<block>
				<bind name="visible" value="isInAdapatationOrNeedRetraining"/>
				<style>
					<width value="100%"/>
					<marginTop value="4px"/>
					<marginBottom value="4px"/>
				</style>
				<block type="text">
					<style>
						<width value="100%"/>
						<marginTop value="-5px"/>
						<leading value="-3"/>
						<textAlign value="center"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorUnready'"/>
					<bind name="text" value="isRetrainStartNeeded	? 'IDS_CREW_RETRAINING_NEEDED'
													: 'IDS_CREW_RETRAINING_FINISH_NEEDED'"/>
				</block>
				<block>
					<styleClass value="$MiddleAligned"/>
					<block className="button_default_small" type="native">
						<style>
							<width value="200px"/>
						</style>
						<bind name="enabled" value="!isLocked"/>
						<bind name="label" value="isRetrainStartNeeded	? toUpperCase(tr('IDS_CREW_RETRAIN'))
														: toUpperCase(tr('IDS_CREW_SPEED_UP_RETRAINING'))"/>
						<bind name="request" value="'buttonClick'; 'retrainCrew'; {shipId:  (shipInfo.isPremium || (shipInfo.group == 'upgradeableExclusive') ? selectedShipCrew.specializationID : _shipId), crewID: _crewId}"/>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<position value="absolute"/>
						<bottom value="-4px"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<bind name="var" value="{showShipParams: false}"/>
			<bind name="catch" value="'showShipParamsEv'"/>
			<block>
				<bind name="visible" value="(_fromCrewSelect == true)"/>
				<style>
					<width value="100%"/>
					<height value="31px"/>
				</style>
				<bind name="instance" value="'ShipParamsSwitcher'; (_fromCrewSelect == true) ? {_showShipParams: showShipParams} : null"/>
				<block>
					<style>
						<width value="100%"/>
						<position value="absolute"/>
						<bottom value="1px"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<marginTop value="1px"/>
			</style>
			<bind name="watch" value="'isShipParamsVisible'; (_fromCrewSelect == true) &amp;&amp;
											(showShipParams == true)"/>
			<bind name="watch" value="'isCrewsListVisible'; (_fromCrewSelect == true) &amp;&amp;
											(showShipParams == false)"/>
			<block>
				<bind name="visible" value="(isShipParamsVisible == true)"/>
				<style>
					<height value="100%f"/>
					<width value="100%"/>
					<overflow value="scroll"/>
				</style>
				<styleClass value="$DefaultScrollBar"/>
				<bind name="primaryEntityDH" value="'compareItemEntity'; CC.compareItem; 'testShipParams'"/>
				<bind name="watchDH" value="'testShipParams'; ['compareItemEntity.compareItem.evUpdate']; compareItemEntity.dataComponent.data"/>
				<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerParams; 450.0; selectedShipCrew.specializationID; 'fullShipParams'; shipOwnEntity != null ? playerShipParams : shipInfo.params; testShipParams; 1; 0; null; 0; 1; 1; excursionOff"/>
				<bind name="watch" value="'excursionOff'; true"/>
				<bind name="instance" value="'ShipParamsListView'; { viewParams: viewParams, _armourOff: true}"/>
			</block>
			<block>
				<bind name="visible" value="(isCrewsListVisible == true)"/>
				<style>
					<height value="100%f"/>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block className="tab_bar_bg" type="native">
						<style>
							<width value="100%"/>
							<height value="23px"/>
							<marginBottom value="2px"/>
							<marginRight value="1px"/>
						</style>
						<block>
							<style>
								<width value="100%"/>
								<marginLeft value="2px"/>
								<marginRight value="2px"/>
							</style>
							<block className="tab_bar_item_small" type="native">
								<style>
									<width value="50%"/>
									<height value="23px"/>
								</style>
								<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_CREW_FROM_BARACKS'}; 0"/>
								<bind name="label" value="toUpperCase(tr('IDS_FROM_BARRACKS'))"/>
								<bind name="catch" value="'click'; {selectedCrewDest: 0}"/>
								<bind name="selected" value="selectedCrewDest == 0"/>
								<bind name="name" value="'TabFromBarracks'"/>
							</block>
							<block className="divider_v" type="native">
								<style>
									<height value="19px"/>
									<marginTop value="2px"/>
								</style>
							</block>
							<block className="tab_bar_item_small" type="native">
								<style>
									<width value="50%"/>
									<height value="23px"/>
								</style>
								<bind name="label" value="toUpperCase(tr('IDS_FROM_OTHER_SHIPS'))"/>
								<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_CREW_FROM_SHIP'}; 0"/>
								<bind name="catch" value="'click';{selectedCrewDest:1}"/>
								<bind name="selected" value="selectedCrewDest == 1"/>
								<bind name="name" value="'TabFromOtherShips'"/>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
					</block>
				</block>
				<bind name="collectionDH" value="CC.crew; 'freeCrew'; 'real.freeCrew'"/>
				<bind name="collectionDH" value="CC.crew; 'busyCrew'; 'real.busyCrew'"/>
				<bind name="child" value="selectedCrewDest; 	{_selectedShipId: _shipId, path: selectedCrewDest == 0	? 'real.freeCrew.sorted'
																									: 'real.busyCrew.sorted'};
											'CrewList'; 'CrewList'"/>
				<block>
					<bind name="visible" value="(selectedCrewDest == 0 &amp;&amp; freeCrew.length == 0) || (selectedCrewDest == 1 &amp;&amp; busyCrew.length == 0)"/>
					<style>
						<width value="100%"/>
						<height value="64px"/>
					</style>
					<block>
						<styleClass value="$MiddleAligned"/>
						<styleClass value="$MiddleVAligned"/>
						<bind name="instance" value="'EmptyStatusParagraph'; 	(selectedCrewDest == 0 &amp;&amp; freeCrew.length == 0) 	? {_text: 'IDS_CREW_INFO_NO_CREWS_ON_NATION_SHIPS'} :
																(selectedCrewDest == 1 &amp;&amp; busyCrew.length == 0) 	? { _text: 'IDS_CREW_INFO_NO_CREWS_IN_NATION_BARRACKS'} : null "/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="(_fromCrewSelect == true)"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<marginTop value="8px"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefaultTech"/>
					<bind name="text" value="'IDS_FREE_PLACES_IN_BARRACKS'"/>
				</block>
				<block type="text">
					<styleClass value="$TextHeaderBold"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<style>
						<marginTop value="-2px"/>
					</style>
					<bind name="text" value="crewsSingleton.barracksCapacity - crewsSingleton.crewsInBarracks"/>
					<bind name="name" value="'BarracksFreeCapacity'"/>
				</block>
				<block type="text">
					<styleClass value="$TextHeaderBold"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<style>
						<alpha value="0.7"/>
						<marginTop value="-2px"/>
						<marginLeft value="-1px"/>
						<marginRight value="-2px"/>
					</style>
					<text value="/"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefaultBold"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<style>
						<alpha value="0.7"/>
					</style>
					<bind name="text" value="crewsSingleton.barracksCapacity"/>
					<bind name="name" value="'BarracksTotalCapacity'"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<bind name="watch" value="'isIncreaseBarracksBtnEnabled'; (barracksCapacityPrice.prices[0].finalPrice &lt;= accountGold)"/>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<marginTop value="4px"/>
				</style>
				<bind name="style" value="'hitTest'; (isIncreaseBarracksBtnEnabled == true)"/>
				<bind name="request" value="'click'; 'increaseBarracksCapacity'; {}"/>
				<bind name="name" value="'ButtonExpandBarracks'"/>
				<bind name="instance" value="'DefaultButtonCostSmall'; { _label: toUpperCase(tr('IDS_EXPAND_BARRACKS')), priceInfo: barracksCapacityPrice.prices[0],
														_enabled: (isIncreaseBarracksBtnEnabled == true), _showDiscountTag: true}"/>
			</block>
		</block>
	</block>
	<block className="ShipParamsSwitcher">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<styleClass value="$Fullsize"/>
		<bind name="dispatch" value="'click'; 'showShipParamsEv'; {showShipParams: !(_showShipParams)}"/>
		<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: (_showShipParams	? 'IDS_INSTRUCTION_HIDE_SHIP_TTX'
																														: 'IDS_INSTRUCTION_SHOW_SHIP_TTX' )}],
												_maxWidth: '250'}"/>
		<block className="tab_bar_down" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginTop value="-2px"/>
			</style>
			<bind name="soundOn" value="'mouseDown'; 'press'; 'default_button'"/>
			<bind name="transition" value="rollOver; 0.15; {alpha: 0}; {alpha: 1}"/>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginTop value="4px"/>
			</style>
			<block className="button_TTX_switcher" type="native">
				<style>
					<marginRight value="-9px"/>
					<marginTop value="2px"/>
				</style>
				<params>
					<param name="name" value="ButtonTTXDisplay"/>
				</params>
				<bind name="selected" value="_showShipParams"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefaultBold"/>
				<style>
					<marginLeft value="6px"/>
				</style>
				<bind name="text" value="'IDS_SHIP_PARAMS'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="CrewShipPanelBlock">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; _crewId"/>
		<bind name="watchDH" value="'crew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'crew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; crew.shipID; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="watch" value="'isNeedRetraining'; ((crew.shipID &amp;&amp; (crew.shipID != crew.specializationID)) &amp;&amp; !(shipInfo.isPremium) &amp;&amp; (shipInfo.group != 'upgradeableExclusive') &amp;&amp; (shipInfo.group != 'earlyAccess'))"/>
		<bind name="name" value="'CrewShipPanelBlock'"/>
		<styleClass value="$Fullsize"/>
		<bind name="clickSplit"/>
		<bind name="action" value="'left_click'; 'changeInset'; { inset: LobbyConstants.CREW}"/>
		<bind name="menu" value="'CrewMenu'; {_crewId: crew.id, _dropDown: false, _fromCrewSelect: true }; null; 'crewMenuVisible'"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="transition" value="(mouseDown || crewMenuVisible || rollOver); 0.1; {alpha: 0}; {alpha: 1}"/>
			<bind name="tooltip" value="'CrewTooltip'; { _crewId: crew.id, _checkPenalty: false, _fromPort: true, _fromCrewSelect: true}"/>
			<block className="dock_submenu_item_bg" type="native">
				<style>
					<marginLeft value="1px"/>
					<marginRight value="1px"/>
					<marginTop value="-1px"/>
					<marginBottom value="1px"/>
				</style>
				<bind name="transition" value="crewMenuVisible; 0.1; {alpha: 1}; {alpha: 0.7}"/>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<marginLeft value="12px"/>
			</style>
			<block>
				<bind name="instance" value="'CommanderNameAndRankDropdown'; {	_crew: crew, _nation: crew.nation, _enabled: false,
																_isNotExpanded: _isNotExpanded}"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<bottom value="4px"/>
					<width value="100%"/>
				</style>
				<block>
					<bind name="fade" value="!(_isNotExpanded); 0.06;	{ alpha: 0};
														{ alpha: 1};
														{ alpha: 0}; 1; _isNotExpanded ? 0 : 0.04"/>
					<style>
						<position value="absolute"/>
						<right value="1px"/>
						<bottom value="-3px"/>
					</style>
					<bind name="instance" value="'CommanderPortraitBig'; {_baseUrl: crew.baseUrl, _overlayUrl: crew.overlayUrl}"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="fade" value="!(_isNotExpanded); 0.09;	{alpha: 0, ubScaleY: 0, scaleY: 0};
														{alpha: 1, ubScaleY: 1, scaleY: 1};
														{alpha: 0, ubScaleY: 0, scaleY: 0}"/>
					<block>
						<bind name="visible" value="!isNeedRetraining"/>
						<bind name="instance" value="'CrewExperienceBar'; { _crewId: crew.id}"/>
					</block>
					<block>
						<bind name="visible" value="isNeedRetraining"/>
						<style>
							<width value="100%"/>
							<hitTest value="false"/>
						</style>
						<block type="text">
							<styleClass value="$TextHeaderBold"/>
							<bind name="class" value="'$FontColorUnready'"/>
							<bind name="text" value="toUpperCase(tr('IDS_CREW_NEED_RETRAINING'))"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<right value="0px"/>
					<bottom value="1px"/>
				</style>
				<bind name="instance" value="'UniqueCrewIcon'; crew.isUnique ? {} : null"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<right value="12px"/>
					<bottom value="3px"/>
				</style>
				<bind name="instance" value="'ScoreRatioCounter'; { 	_playerPointsCounter: crew.freeSkillPoints, 
													_totalPointsCounter: crew.allSkillPoints,
													_tooltipTextPlayerResult: 'IDS_CREW_PLAYAER_POINTS_COUNTER', 
													_tooltipTextTotalResult: 'IDS_CREW_TOTAL_POINTS_COUNTER' }"/>
			</block>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
			<bind name="watchDH" value="'inset'; ['dockEntity.insetComponent.evUpdate']; dockEntity.insetComponent.inset"/>
			<bind name="instance" value="'ContextGuidingTipHub'; (inset == LobbyConstants.DOCK || 
													inset == LobbyConstants.SHIP_MODULES || inset == LobbyConstants.SHIP_EXTERIOR) ? 
																																		{
																																			_tooltipID: SC.Context_guiding_tip.TIP_TYPES.DOCK_CREW,
																																			_tipPositioning: 'left', 
																																			_extraCondition: true, 
																																			_offset: -3, 
																																			_screenOffset : 0,
																																			_hideOnReasonClick : true

																																		}
																																	: null
		"/>
		</block>
	</block>
	<block className="CrewShipPanelInnerBlock">
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; _crewId"/>
		<bind name="watchDH" value="'selectedShipCrew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'selectedShipCrew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; selectedShipCrew.shipID"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'crewsSingleton'; ['dockEntity.crewData.evUpdate']; dockEntity.crewData"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; _shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="watch" value="'enabledDropdown'; !(_inTooltip) &amp;&amp; (selectedShipCrew.dismissDelay == 0)"/>
		<bind name="watch" value="'specializationShip'; !(selectedShipCrew.shipID) || (selectedShipCrew.shipID == selectedShipCrew.specializationID)"/>
		<bind name="watch" value="'isNeedRetraining'; !specializationShip &amp;&amp; !shipInfo.isPremium &amp;&amp; (shipInfo.group != 'upgradeableExclusive') &amp;&amp; (shipInfo.group != 'earlyAccess')"/>
		<bind name="watchDH" value="'isLocked';			['shipOwnEntity.ownShip.evUpdateLock'];		shipOwnEntity.ownShip.isLocked"/>
		<styleClass value="$Fullsize"/>
		<style>
			<marginLeft value="12px"/>
		</style>
		<block>
			<style>
				<position value="absolute"/>
				<bottom value="-1px"/>
				<right value="1px"/>
			</style>
			<bind name="instance" value="'CommanderPortraitMax'; {_baseUrl: selectedShipCrew.baseUrl, _overlayUrl: selectedShipCrew.overlayUrl, _isUnique: selectedShipCrew.isUnique}"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<bottom value="2px"/>
				<right value="12px"/>
			</style>
			<bind name="instance" value="'ScoreRatioCounter'; { 	_playerPointsCounter: selectedShipCrew.freeSkillPoints, 
												_totalPointsCounter: selectedShipCrew.allSkillPoints,
												_tooltipTextPlayerResult: 'IDS_CREW_PLAYAER_POINTS_COUNTER', 
												_tooltipTextTotalResult: 'IDS_CREW_TOTAL_POINTS_COUNTER' }"/>
		</block>
		<block>
			<bind name="instance" value="'CommanderNameAndRankDropdown'; { 	_crew: selectedShipCrew, _nation: selectedShipCrew.nation,
															_fromCrewSelect: _fromCrewSelect, _enabled: enabledDropdown}"/>
		</block>
		<block>
			<bind name="visible" value="!(isNeedRetraining)"/>
			<style>
				<width value="100%"/>
				<position value="absolute"/>
				<bottom value="3px"/>
			</style>
			<block>
				<bind name="instance" value="'CrewExperienceBar'; {_crewId: _crewId}"/>
			</block>
			<block>
				<bind name="visible" value="(!(hasMaxLevel) || isInAdaptation) &amp;&amp; !(_inTooltip)"/>
				<bind name="watch" value="'isFastTrainingEnabled'; 	(!isLocked &amp;&amp; !(selectedShipCrewRetraining.isInAdaptation))"/>
				<bind name="watch" value="'isInAdaptation'; 			(selectedShipCrewRetraining.isInAdaptation == true)"/>
				<bind name="watch" value="'hasMaxLevel'; 			(selectedShipCrew.level == crewsSingleton.maxLevel)"/>
				<bind name="tooltip" value="'SimpleTooltip'; isFastTrainingEnabled ? {tooltipText: 'IDS_CREW_FAST_RETRAINING'} : {tooltipText: 'IDS_FINISHED_RETRAINING'}"/>
				<bind name="tooltip" value="'SimpleWarningTooltip'; isLocked	? {_text: tr('IDS_FAST_TRAINING_DISABLE_REASON_SHIP_IS_IN_BATTLE')} : null"/>
				<style>
					<marginLeft value="5px"/>
					<marginTop value="2px"/>
				</style>
				<block className="button_crew_level_up" type="native">
					<style>
						<width value="22px"/>
						<height value="22px"/>
					</style>
					<bind name="enabled" value="isFastTrainingEnabled || isInAdaptation"/>
					<bind name="request" value="'buttonClick'; isInAdaptation ? 'crewPenaltyCompensation' : 'crewFastTraining'; { shipId: selectedShipCrew.shipID, crewID: selectedShipCrew.id }"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="isNeedRetraining"/>
			<style>
				<width value="100%"/>
				<position value="absolute"/>
				<bottom value="2px"/>
			</style>
			<block type="text">
				<styleClass value="$TextHeaderBold"/>
				<styleClass value="$MouseDisable"/>
				<bind name="class" value="'$FontColorUnready'"/>
				<bind name="text" value="toUpperCase(tr('IDS_CREW_NEED_RETRAINING'))"/>
			</block>
		</block>
	</block>
	<block className="CrewHireShipPanelBlock">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<styleClass value="$Fullsize"/>
		<style>
			<backgroundColor value="0x01000000"/>
		</style>
		<block>
			<bind name="fade" value="!(rollOver); 0.15; {alpha: 0, top: -10}; {alpha: 1, top: 0}"/>
			<style>
				<width value="100%"/>
			</style>
			<styleClass value="$MiddleVAlignedAbsolutely"/>
			<block type="text">
				<bind name="name" value="'No_Crew'"/>
				<style>
					<width value="100%"/>
					<textAlign value="center"/>
					<marginBottom value="1px"/>
				</style>
				<styleClass value="$TextDefaultBold"/>
				<bind name="class" value="'$FontColorUnready'"/>
				<bind name="text" value="toUpperCase(tr('IDS_NO_CREW'))"/>
			</block>
		</block>
		<block>
			<bind name="fade" value="(rollOver); 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<style>
				<width value="200px"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$MiddleVAligned"/>
			<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_HINT_GO_TO'}], _maxWidth: 250 }"/>
			<bind name="action" value="'buttonClick'; 'changeInset'; {inset: LobbyConstants.CREW}"/>
			<bind name="instance" value="'DockButton'; rollOver ? {_name: 'AssignCrewButton',_label: toUpperCase(tr('IDS_ASSIGN_CREW')), _enabled: true} : null"/>
		</block>
	</block>
	<block className="CrewList">
		<styleClass value="$DefaultScrollBar"/>
		<style>
			<height value="100%f"/>
			<width value="100%"/>
			<overflow value="scroll"/>
			<layout value="lesta.unbound.layout.measure.CarouselLayout"/>
			<wheelScrollSpeed value="45"/>
			<itemWidth value="312px"/>
			<itemHeight value="75px"/>
		</style>
		<bind name="generatorDH" value="CC.crew; 'CrewListItemRenderer'; path; {_selectedShipId: _selectedShipId}"/>
	</block>
	<block className="CrewSpecializationItem">
		<style>
			<flow value="horizontal"/>
		</style>
		<block type="text">
			<styleClass value="$TextDefault"/>
			<bind name="text" value="_isInAdaptation ? ('IDS_CREW_IN_ADAPTATION') : (tr('IDS_SPECIALITY') + tr('IDS_COLON'))"/>
		</block>
		<block>
			<style>
				<marginLeft value="6px"/>
				<marginTop value="6px"/>
			</style>
			<bind name="instance" value="'ShipLineItem'; { _shipId: _shipId, _width: 'auto'}"/>
		</block>
	</block>
	<block className="CrewSpecializationTooltip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="300px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<block>
				<bind name="instance" value="'CrewSpecializationItem'; {	_shipId: _shipId, _isInAdaptation: _isInAdaptation,	_inTooltip: true }"/>
			</block>
			<block>
				<style>
					<marginTop value="15px"/>
				</style>
				<bind name="instance" value="'CrewExperienceBar'; { _crewId: _crewId }"/>
			</block>
		</block>
	</block>
	<block className="EliteXpCounter">
		<style>
			<backgroundColor value="0x01000000"/>
		</style>
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CONVERTED_TO_ELITE_XP_HINT'}"/>
		<block type="text">
			<styleClass value="$TextLargeHeader"/>
			<bind name="text" value="tr('IDS_ELITE_XP')"/>
		</block>
		<block>
			<style>
				<marginTop value="-5px"/>
				<marginBottom value="-1px"/>
			</style>
			<bind name="instance" value="'PriceTag'; { priceInfo: {finalPrice: _eliteXP, currency: 'eliteXP'}, _large:true, _name: 'crew_elite_xp'}"/>
		</block>
	</block>
	<block className="EliteXpPreview">
		<style>
			<width value="100%"/>
			<alpha value="0.7"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="icon_question_mark" type="native">
				<style>
					<top value="3px"/>
					<marginLeft value="2px"/>
				</style>
				<bind name="tooltip" value="'MultiParagraphHelpTooltip'; {	_tooltipHeader: 'IDS_ELITE_XP',
															_width: 350,	_multiParagraphArray: [	{_paragraphText: 'IDS_ELITE_XP_INSTRUCTION_0'},
																									{_paragraphText: 'IDS_ELITE_XP_INSTRUCTION_1'}]}"/>
			</block>
			<block className="icon_currency" type="native">
				<style>
					<marginLeft value="6px"/>
					<marginRight value="4px"/>
					<top value="-2px"/>
				</style>
				<bind name="gotoAndStop!" value="'eliteXP_large'"/>
			</block>
			<block type="text">
				<styleClass value="$TextHeaderBold"/>
				<bind name="text" value="toUpperCase(tr('IDS_ELITE_XP'))"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="5px"/>
			</style>
			<bind name="repeat" value="[{ _paragraphText: 'IDS_ELITE_XP_INFO'}]; 'RepeatParagraphItem'; {_maxWidth: 280, _leading: -1}"/>
		</block>
	</block>
	<block className="VanityItemWithDescription">
		<style>
			<width value="100%"/>
			<flow value="horizontal"/>
			<marginBottom value="16px"/>
		</style>
		<block>
			<style>
				<width value="60px"/>
				<height value="60px"/>
			</style>
			<bind name="style" value="'backgroundImage'; (locked == true) 	? 'url:../reward_icons/reward_unlocks/reward_unlock_' + toLowerCase(tr(_vanityName)) + '_inactive.png'
															: 'url:../reward_icons/reward_unlocks/reward_unlock_' + toLowerCase(tr(_vanityName)) + '.png')"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="6px"/>
			</style>
			<block type="text">
				<style>
					<maxWidth value="210"/>
					<marginLeft value="4px"/>
					<leading value="-3"/>
				</style>
				<styleClass value="$TextDefaultBold19NM"/>
				<bind name="text" value="tr('IDS_REWARD_UNLOCK_' + _vanityName)"/>
			</block>
			<block type="text">
				<style>
					<maxWidth value="210"/>
					<marginLeft value="4px"/>
					<marginTop value="12px"/>
				</style>
				<styleClass value="$TextDefaultNM"/>
				<bind name="text" value="'IDS_VANITY_CAT_NAME_DEFAULT'"/>
			</block>
		</block>
	</block>
	<block className="TalentItemWithDescription">
		<style>
			<width value="100%"/>
			<flow value="horizontal"/>
			<marginBottom value="16px"/>
		</style>
		<block>
			<style>
				<width value="60px"/>
				<height value="60px"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:../crew_commander/talents/talent_icon_' + toLowerCase(tr(_achievementName)) + '.png')"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="6px"/>
			</style>
			<block type="text">
				<style>
					<maxWidth value="210"/>
					<marginLeft value="4px"/>
					<leading value="-3"/>
				</style>
				<styleClass value="$TextDefaultBold19NM"/>
				<bind name="text" value="tr('IDS_TALENT_' + _achievementName)"/>
			</block>
			<block type="text">
				<style>
					<maxWidth value="210"/>
					<marginLeft value="4px"/>
					<marginTop value="12px"/>
				</style>
				<styleClass value="$TextDefaultNM"/>
				<bind name="text" value="'IDS_TALENT_CAT_NAME_DEFAULT'"/>
			</block>
		</block>
	</block>
	<block className="NationUnlockWithDescription">
		<styleClass value="$InfoBlockIndent"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<style>
				<width value="60px"/>
				<height value="60px"/>
				<backgroundSize value="cover"/>
				<marginTop value="4px"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:../reward_icons/icon_reward_' + toLowerCase(tr(_unlockName)) + '.png')"/>
		</block>
		<block>
			<style>
				<marginLeft value="10px"/>
			</style>
			<block type="text">
				<styleClass value="$TextHeaderBold"/>
				<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 210"/>
				<bind name="text" value="tr('IDS_REWARD_' + toUpperCase(_unlockName))"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 210"/>
				<bind name="text" value="tr('IDS_REWARD_' + toUpperCase(_unlockName) + '_DESCRIPTION')"/>
			</block>
		</block>
	</block>
	<block className="RewardShipAndNationRestriction">
		<styleClass value="$InfoBlockIndent"/>
		<style>
			<height value="25px"/>
			<flow value="horizontal"/>
		</style>
		<block>
			<bind name="visible" value="_rewardshipClasses.length &gt; 0"/>
			<styleClass value="$MiddleVAligned"/>
			<block>
				<bind name="repeat" value="_rewardshipClasses; 'IconShipClass'; {}"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<bind name="visible" value="_rewardshipClasses.length &gt; 0"/>
			<style>
				<height value="100%"/>
				<marginLeft value="5px"/>
				<marginRight value="5px"/>
			</style>
			<block className="VerticalDivider">
				<style>
					<height value="100%"/>
					<width value="3px"/>
				</style>
				<block className="divider_v" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="_rewardNation != ''"/>
			<styleClass value="$MiddleVAligned"/>
			<bind name="instance" value="'NationFlagsTiny'; { shipCountry: _rewardNation }"/>
		</block>
	</block>
	<block className="IconShipClass">
		<block className="icon_ship" type="native">
			<bind name="gotoAndStop!" value="$value"/>
		</block>
	</block>
	<block className="CrewTalentsInTooltip">
		<bind name="entityDH" value="'uniqueSkillEntity'; id"/>
		<bind name="watchDH" value="'achievementName'; []; uniqueSkillEntity.crewUniqueSkill.achievementName"/>
		<block>
			<style>
				<marginRight value="6px"/>
				<marginBottom value="3px"/>
				<marginTop value="3px"/>
				<width value="60px"/>
				<height value="60px"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:../crew_commander/talents/talent_icon_' + toLowerCase(tr(achievementName)) + '.png')"/>
		</block>
	</block>
	<block className="CrewVanityInTooltip">
		<bind name="entityDH" value="'uniqueVanityEntity'; id"/>
		<bind name="watchDH" value="'vanityName'; 	[]; uniqueVanityEntity.crewVanity.vanityName"/>
		<bind name="watchDH" value="'state'; 		['uniqueVanityEntity.crewVanity.evUpdate']; uniqueVanityEntity.crewVanity.state"/>
		<bind name="watchDH" value="'locked'; 		['uniqueVanityEntity.crewVanity.evUpdate']; uniqueVanityEntity.crewVanity.locked"/>
		<block>
			<style>
				<marginRight value="6px"/>
				<marginBottom value="3px"/>
				<marginTop value="3px"/>
				<width value="60px"/>
				<height value="60px"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:../reward_icons/reward_unlocks/reward_unlock_' + toLowerCase(tr(vanityName)) + '.png')"/>
		</block>
	</block>
	<block className="ShortFeaturesListItem">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="primaryEntityDH" value="'newMarkerEntity'; CC.newContent; _newMarkerType"/>
		<bind name="watchDH" value="'newMarkerCounter'; ['newMarkerEntity.newContent.evCountChanged']; newMarkerEntity.newContent.count"/>
		<bind name="action" value="'click'; _action ? _action : null; _actionParams ? _actionParams : {}"/>
		<bind name="request" value="'click'; _request ? _request : null; _requestParams ? _requestParams : {}"/>
		<bind name="soundSet" value="'default_button'"/>
		<bind name="lag" value="'lagAfterAddedToStage'; 30; 10"/>
		<bind name="stageSize"/>
		<bind name="appear" value="'addedToStage'; 0.15; 0.15 + 0*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
		<style>
			<width value="240px"/>
			<marginBottom value="4px"/>
			<marginRight value="4px"/>
		</style>
		<bind name="style" value="'height'; stageHeight &lt; 960 ? '32px' : '36px'"/>
		<block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="notification_panel" type="native">
				<bind name="visible" value="optionData.contrast"/>
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block className="inner_panel" type="native">
			<bind name="transition" value="rollOver &amp;&amp; !(mouseDown); 0.15; {alpha: 0}; {alpha: 1}"/>
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<marginLeft value="12px"/>
				<marginRight value="12px"/>
			</style>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="transition" value="_isEmptyBanner &amp;&amp; !_stateOwn; 0.15; {alpha: 1}; {alpha: 0.5}; {alpha: 1}"/>
				<block type="text">
					<styleClass value="$TextDefaultBold17NM"/>
					<bind name="class" value="_stateOwn ? '$FontColorGolden' : '$FontColorWhite'"/>
					<bind name="style" value="'alpha'; _stateOwn ? 1 : 0.9"/>
					<style>
						<maxWidth value="207"/>
						<multiline value="false"/>
					</style>
					<bind name="text" value="toUpperCase(tr(_title))"/>
				</block>
				<block>
					<style>
						<marginLeft value="3px"/>
						<marginTop value="-9px"/>
					</style>
					<block>
						<bind name="fade" value="_isNewMarker; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
						<bind name="instance" value="'MarkerNewAttention'; { }"/>
					</block>
					<block>
						<bind name="fade" value="((newMarkerCounter &gt; 0) &amp;&amp; (_isNewMarker != true)); 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2; 0.1"/>
						<style>
							<position value="absolute"/>
						</style>
						<bind name="instance" value="'MarkerNewCounter'; { _newContentCounter: newMarkerCounter }"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="32px"/>
					<height value="32px"/>
				</style>
				<block>
					<bind name="instance" value="'MarkerNewRewardsAnimate'; _iconReward 	? { _startMarkerAnimationEvent: 'lagAfterAddedToStage',
																			_iconReward: _iconReward }
																		: null"/>
				</block>
				<block>
					<bind name="instance" value="'BannerItemIcon'; _iconUrl ? { _iconUrl: _iconUrl } : null"/>
				</block>
				<block>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$MiddleVAligned"/>
					<bind name="instance" value="'BannerRatioCounter'; _maxScore ? { _earnedScore: _earnedScore, 
																	_maxScore: _maxScore } : null"/>
				</block>
				<block>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$MiddleVAligned"/>
					<bind name="instance" value="'BannerAmount'; _amount ? { _amount: _amount } : null"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="BannerItemIcon">
		<style>
			<width value="32px"/>
			<height value="32px"/>
		</style>
		<bind name="style" value="'backgroundImage'; _iconUrl"/>
	</block>
	<block className="BannerRatioCounter">
		<style>
			<flow value="horizontal"/>
		</style>
		<block type="text">
			<bind name="class" value="'$TextDefaultBold17NM'"/>
			<bind name="text" value="_earnedScore"/>
		</block>
		<block type="text">
			<bind name="class" value="'$TextDefaultBoldNM'"/>
			<style>
				<marginLeft value="1px"/>
				<marginTop value="1px"/>
				<alpha value="0.7"/>
			</style>
			<bind name="text" value="'/' + _maxScore"/>
		</block>
	</block>
	<block className="BannerAmount">
		<block type="text">
			<styleClass value="$TextDefaultBold17NM"/>
			<style>
				<alpha value="0.9"/>
			</style>
			<bind name="text" value="_amount"/>
		</block>
	</block>
	<block className="LootboxBanner">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="firstEntityDH" value="'lootboxEntity'; CC.lootboxConfigComponent"/>
		<bind name="watchDH" value="'lootboxInStorage'; 	['lootboxEntity.lootboxStorageComponent.evUpdate']; lootboxEntity.lootboxStorageComponent.inStorage"/>
		<bind name="watchDH" value="'lootboxExp'; 	['lootboxEntity.lootboxStorageComponent.evUpdate']; lootboxEntity.lootboxStorageComponent.lootExp"/>
		<bind name="watchDH" value="'boughtToday';		['lootboxEntity.lootboxStorageComponent.evUpdate'];	lootboxEntity.lootboxStorageComponent.boughtToday"/>
		<bind name="watchDH" value="'maxBought';		['lootboxEntity.lootboxConfigComponent.evUpdate'];	lootboxEntity.lootboxConfigComponent.maxBought"/>
		<bind name="watch" value="'canBuyLootbox'; (lootboxExp &gt;= lootboxEntity.lootboxConfigComponent.prices[boughtToday])"/>
		<bind name="watch" value="'lootboxIndex'; 	lootboxExp &lt;= lootboxEntity.lootboxConfigComponent.prices[2] &amp;&amp; lootboxExp &gt;= lootboxEntity.lootboxConfigComponent.prices[1] ? '2' :
									lootboxExp &lt; lootboxEntity.lootboxConfigComponent.prices[1] &amp;&amp; lootboxExp &gt;= lootboxEntity.lootboxConfigComponent.prices[0] ? '1' : '0'"/>
		<bind name="watch" value="'expToLootbox'; 	lootboxEntity.lootboxConfigComponent.prices[lootboxIndex] - lootboxExp"/>
		<bind name="watch" value="'isMaxDailyExp'; 	lootboxExp &gt;= lootboxEntity.lootboxConfigComponent.prices[2]"/>
		<bind name="watch" value="'allBoxesBought'; maxBought == boughtToday"/>
		<bind name="watch" value="'dailyLootCurrProgress'; lootboxIndex == 0 ? lootboxExp
															: (lootboxExp - lootboxEntity.lootboxConfigComponent.prices[lootboxIndex - 1])"/>
		<bind name="watch" value="'dailyLootMaxProgress'; lootboxIndex == 0 ? lootboxEntity.lootboxConfigComponent.prices[lootboxIndex]
															: (lootboxEntity.lootboxConfigComponent.prices[lootboxIndex] - lootboxEntity.lootboxConfigComponent.prices[lootboxIndex - 1])"/>
		<bind name="watch" value="'dailyLootProgress'; (dailyLootCurrProgress*100) / dailyLootMaxProgress"/>
		<bind name="stageSize"/>
		<bind name="lag" value="'lagAfterAddedToStage'; 30; 10"/>
		<bind name="action" value="'click'; 'moveToBarge'; {}"/>
		<bind name="soundSet" value="'default_button'"/>
		<bind name="appear" value="'addedToStage'; 0.15; 0.15 + 0*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
		<bind name="var" value="{endOflag: false}"/>
		<style>
			<width value="240px"/>
			<marginBottom value="4px"/>
			<marginRight value="4px"/>
		</style>
		<block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="notification_panel" type="native">
				<bind name="visible" value="optionData.contrast"/>
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block className="inner_panel" type="native">
			<bind name="transition" value="rollOver &amp;&amp; !(mouseDown); 0.15; {alpha: 0}; {alpha: 1}"/>
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="12px"/>
				<marginRight value="12px"/>
			</style>
			<bind name="style" value="'height'; stageHeight &lt; 960 ? '32px' : '34px'"/>
			<block type="text">
				<styleClass value="$TextDefaultBold17NM"/>
				<bind name="class" value="canBuyLootbox ? '$FontColorGolden' : '$FontColorWhite'"/>
				<style>
					<maxWidth value="200"/>
					<multiline value="false"/>
					<marginTop value="11px"/>
				</style>
				<bind name="style" value="'alpha'; allBoxesBought ? 0.5 : canBuyLootbox ? 1 : 0.9"/>
				<bind name="text" value="'IDS_LOOTBOXES'"/>
			</block>
			<block>
				<bind name="feature" value="21; ''"/>
				<bind name="feature" value="30; ''"/>
				<bind name="watch" value="'isNewMarkerLootbox'; (feature_21 == 'new') || ((feature_30 == 'new') &amp;&amp; canBuyLootbox)"/>
				<style>
					<marginLeft value="3px"/>
					<marginTop value="1px"/>
				</style>
				<bind name="instance" value="'MarkerNewAttention'; isNewMarkerLootbox ? { } : null"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<right value="0px"/>
					<top value="1px"/>
				</style>
				<bind name="instance" value="'MarkerNewRewardsAnimate'; canBuyLootbox 	? { _startMarkerAnimationEvent: 'lagAfterAddedToStage',
																			_iconReward: 'url:../service_kit/port_banner/icon_banner_container.png' }
																		: null"/>
			</block>
			<block>
				<bind name="visible" value="lootboxInStorage &amp;&amp; !canBuyLootbox"/>
				<style>
					<width value="32px"/>
					<position value="absolute"/>
					<right value="0px"/>
					<top value="11px"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefaultBold17NM"/>
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
						<alpha value="0.9"/>
					</style>
					<bind name="text" value="lootboxInStorage"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="!isMaxDailyExp"/>
			<style>
				<width value="100%"/>
				<marginLeft value="12px"/>
				<marginTop value="7px"/>
				<marginRight value="12px"/>
				<marginBottom value="12px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'ExpToLootbox'; { _expToLootbox: format(expToLootbox, -1) }"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<height value="2px"/>
					<marginTop value="8px"/>
				</style>
				<block>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<backgroundColor value="0xFF051523"/>
						<alpha value="0.4"/>
					</style>
				</block>
				<block>
					<style>
						<height value="100%"/>
						<backgroundColor value="0xFFFFCC66"/>
					</style>
					<bind name="style" value="'width'; dailyLootProgress + '%'"/>
				</block>
			</block>
		</block>
	</block>
	<block className="LootboxBannerTooltip">
		<bind name="firstEntityDH" value="'lootboxEntity'; CC.lootboxConfigComponent"/>
		<bind name="watchDH" value="'lootboxExp'; 	['lootboxEntity.lootboxStorageComponent.evUpdate']; lootboxEntity.lootboxStorageComponent.lootExp"/>
		<bind name="watchDH" value="'boughtToday'; 	['lootboxEntity.lootboxStorageComponent.evUpdate']; lootboxEntity.lootboxStorageComponent.boughtToday"/>
		<bind name="watchDH" value="'maxBought';		['lootboxEntity.lootboxConfigComponent.evUpdate'];	lootboxEntity.lootboxConfigComponent.maxBought"/>
		<bind name="watchDH" value="'lootboxInStorage'; 	['lootboxEntity.lootboxStorageComponent.evUpdate']; lootboxEntity.lootboxStorageComponent.inStorage"/>
		<bind name="watchDH" value="'dropTimeStamp';	['lootboxEntity.lootboxStorageComponent.evUpdate'];	lootboxEntity.lootboxStorageComponent.dropAt"/>
		<bind name="countdown" value="dropTimeStamp; 'countdownText'; 'hh:mm:ss'"/>
		<bind name="watch" value="'isMaxDailyExp'; 	lootboxExp &gt;= lootboxEntity.lootboxConfigComponent.prices[2]"/>
		<bind name="watch" value="'lootboxIndex'; 	lootboxExp &lt;= lootboxEntity.lootboxConfigComponent.prices[2] &amp;&amp; lootboxExp &gt;= lootboxEntity.lootboxConfigComponent.prices[1] ? '2' :
									lootboxExp &lt; lootboxEntity.lootboxConfigComponent.prices[1] &amp;&amp; lootboxExp &gt;= lootboxEntity.lootboxConfigComponent.prices[0] ? '1' : '0'"/>
		<bind name="watch" value="'expToLootbox'; 	lootboxEntity.lootboxConfigComponent.prices[lootboxIndex] - lootboxExp"/>
		<bind name="watch" value="'canBuyLootbox'; (lootboxExp &gt;= lootboxEntity.lootboxConfigComponent.prices[boughtToday])"/>
		<bind name="watch" value="'dailyLootCurrProgress'; lootboxIndex == 0 ? lootboxExp
															: (lootboxExp - lootboxEntity.lootboxConfigComponent.prices[lootboxIndex - 1])"/>
		<bind name="watch" value="'dailyLootMaxProgress'; lootboxIndex == 0 ? lootboxEntity.lootboxConfigComponent.prices[lootboxIndex]
															: (lootboxEntity.lootboxConfigComponent.prices[lootboxIndex] - lootboxEntity.lootboxConfigComponent.prices[lootboxIndex - 1])"/>
		<bind name="watch" value="'dailyLootProgress'; expToLootbox &gt; 0 ? ((dailyLootCurrProgress*10) / dailyLootMaxProgress) : 0"/>
		<styleClass value="$DefaultInstantTooltipBehaviour"/>
		<style>
			<width value="300px"/>
			<hitTest value="false"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block type="text">
			<styleClass value="$ContentIndents"/>
			<style>
				<width value="100%"/>
				<alpha value="0.9"/>
			</style>
			<styleClass value="$TextDefaultBold17NM"/>
			<bind name="text" value="'IDS_LOOTBOXES_TOOLTIP'"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="lootboxInStorage &gt; 0"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$ContentIndents"/>
				<style>
					<width value="100%"/>
					<alpha value="0.7"/>
				</style>
				<styleClass value="$TextDefault17NM"/>
				<bind name="text" value="subst('IDS_WAREHOUSE_LOOTBOXES', [], {_lootboxInStorage: lootboxInStorage})"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="canBuyLootbox"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'LootboxWithLabel'; { _lootboxAvailable: true }"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="isMaxDailyExp"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$ContentIndents"/>
				<style>
					<width value="100%"/>
				</style>
				<block className="icon_warning_orange" type="native">
					<style>
						<marginRight value="8"/>
					</style>
				</block>
				<block type="text">
					<styleClass value="$TextDefault17NM"/>
					<bind name="class" value="'$FontColorUnready'"/>
					<style>
						<maxWidth value="250"/>
					</style>
					<bind name="text" value="subst('IDS_TIME_LEFT_FOR_LOOTEXP', [], {_lootTimeStamp: countdownText})"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="!isMaxDailyExp"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$ContentIndents"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block type="text">
						<style>
							<width value="100%"/>
							<alpha value="0.7"/>
						</style>
						<styleClass value="$TextDefaultNM"/>
						<bind name="text" value="'IDS_TO_THE_NEXT_LOOTBOX'"/>
					</block>
					<block>
						<style>
							<bottom value="0"/>
						</style>
						<block type="text">
							<styleClass value="$TextDefaultNM"/>
							<bind name="text" value="format(expToLootbox, -1)"/>
						</block>
						<block className="icon_exp_small" type="native">
							<style>
								<marginLeft value="2"/>
							</style>
							<styleClass value="$MiddleVAligned"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<marginTop value="8"/>
					</style>
					<bind name="instance" value="'LootboxProgressBar'; {_width: 274, _height: 4, _curValue: dailyLootProgress}"/>
				</block>
				<block>
					<style>
						<marginTop value="8"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefaultNM"/>
						<bind name="text" value="format(dailyLootCurrProgress, -1)"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefaultNM"/>
						<style>
							<alpha value="0.8"/>
							<marginLeft value="4"/>
							<marginRight value="4"/>
						</style>
						<bind name="text" value="'/'"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefaultNM"/>
						<style>
							<alpha value="0.8"/>
						</style>
						<bind name="text" value="format(dailyLootMaxProgress, -1)"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'MouseInstruction'; {_type: 'left', _instructionText: 'IDS_GO_TO_LOOTBOXES_MOUSE_INSTRUCTION', _maxWidth: 260}"/>
		</block>
	</block>
	<block className="RankBannerTooltip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesStats'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<bind name="countdown" value="rankedBattlesSeason.finishTime; 'seasonTimeEnd'; 'HIGHEST,WITH_DAYS'; 'timeoutEvent'"/>
		<bind name="serverTime" value="'serverTime'"/>
		<styleClass value="$DefaultInstantTooltipBehaviour"/>
		<style>
			<width value="300px"/>
			<hitTest value="false"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block type="text">
			<style>
				<width value="100%"/>
				<marginLeft value="12"/>
				<marginTop value="12"/>
				<marginRight value="12"/>
				<alpha value="0.9"/>
			</style>
			<styleClass value="$TextDefaultBold19NM"/>
			<bind name="text" value="rankedBattlesSeason.title"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="8"/>
				<marginTop value="4"/>
				<marginRight value="12"/>
				<marginBottom value="2"/>
			</style>
			<block>
				<bind name="instance" value="'IconRankSmall'; {_rankId: rankedBattlesStats.rank, _hideRankNumber: true}"/>
			</block>
			<block type="text">
				<style>
					<marginTop value="8"/>
					<alpha value="0.7"/>
				</style>
				<styleClass value="$TextDefaultNM"/>
				<bind name="text" value="subst('IDS_RANK_X',[], {rank: rankedBattlesStats.rank})"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="(rankedBattlesSeason.finishTime &gt; serverTime)"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$ContentIndents"/>
				<style>
					<width value="100%"/>
					<alpha value="0.7"/>
				</style>
				<styleClass value="$TextDefault17NM"/>
				<bind name="pureText" value="tr('IDS_TILL_SEASON_ENDS') + ' ' + seasonTimeEnd"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'MouseInstruction'; {_type: 'left', _instructionText: 'IDS_GO_TO_RANKS_MOUSE_INSTRUCTION', _maxWidth: 300}"/>
		</block>
	</block>
	<block className="SseAmountBannerTooltip">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'challenges'; 'isActive'; true; 'challengesCollection'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'tasks'; 'isActive'; true; 'tasksCollection'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'privateTasksAndChallenges'; 'isActive'; true; 'personalTasksCollection'"/>
		<bind name="watch" value="'sseAmount'; challengesCollection.length + tasksCollection.length + personalTasksCollection.length "/>
		<styleClass value="$DefaultInstantTooltipBehaviour"/>
		<style>
			<width value="300px"/>
			<hitTest value="false"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<bind name="visible" value="sseAmount &lt; 1"/>
			<style>
				<width value="100%"/>
				<marginLeft value="12"/>
				<marginTop value="12"/>
				<marginRight value="12"/>
				<marginBottom value="12"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefault17NM"/>
				<style>
					<width value="100%"/>
					<alpha value="0.7"/>
				</style>
				<bind name="text" value="'IDS_NONE_AVAILABLE_SSE_NOW'"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="sseAmount &gt; 0"/>
			<styleClass value="$ContentIndents"/>
			<style>
				<width value="100%"/>
				<alpha value="0.7"/>
				<marginBottom value="0"/>
			</style>
			<block>
				<bind name="visible" value="challengesCollection.length &gt; 0"/>
				<style>
					<width value="100%"/>
					<marginBottom value="12"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefault17NM"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="text" value="'IDS_CHALLENGES'"/>
				</block>
				<block>
					<style>
						<bottom value="0"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefault17NM"/>
						<bind name="text" value="challengesCollection.length"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="tasksCollection.length &gt; 0"/>
				<style>
					<width value="100%"/>
					<marginBottom value="12"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefault17NM"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="text" value="'IDS_TASKS'"/>
				</block>
				<block>
					<style>
						<bottom value="0"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefault17NM"/>
						<bind name="text" value="tasksCollection.length"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="personalTasksCollection.length &gt; 0"/>
				<style>
					<width value="100%"/>
					<marginBottom value="12"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefault17NM"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="text" value="'IDS_PERSONAL_TASKS'"/>
				</block>
				<block>
					<style>
						<bottom value="0"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefault17NM"/>
						<bind name="text" value="personalTasksCollection.length"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'MouseInstruction'; {_type: 'left', _instructionText: 'IDS_GO_TO_SSE_BATTLE_TASKS_MOUSE_INSTRUCTION', _maxWidth: 300}"/>
		</block>
	</block>
	<block className="ReferralSysBannerTooltip">
		<styleClass value="$DefaultInstantTooltipBehaviour"/>
		<style>
			<width value="300px"/>
			<hitTest value="false"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block type="text">
			<styleClass value="$ContentIndents"/>
			<style>
				<width value="100%"/>
				<alpha value="0.9"/>
			</style>
			<styleClass value="$TextDefaultBold17NM"/>
			<bind name="text" value="'IDS_DOCK_BANNER_REF_SYS_TOOLTIP_HEADER'"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block type="text">
			<styleClass value="$ContentIndents"/>
			<style>
				<width value="100%"/>
				<alpha value="0.7"/>
			</style>
			<styleClass value="$TextDefault17NM"/>
			<bind name="text" value="'IDS_DOCK_BANNER_REF_SYS_TOOLTIP_INFO_BLOCK'"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'MouseInstruction'; {_type: 'left', _instructionText: 'IDS_GO_TO_REFERRAL_SYSTEM', _maxWidth: 250}"/>
		</block>
	</block>
	<block className="AlmanacBannerTooltip">
		<bind name="firstEntityDH" value="'globalAlmanacStateEntity'; CC.globalAlmanacState"/>
		<bind name="watchDH" value="'hasActiveStages'; ['globalAlmanacStateEntity.globalAlmanacState.evHasActiveStagesChanged']; globalAlmanacStateEntity.globalAlmanacState.hasActiveStages"/>
		<styleClass value="$DefaultInstantTooltipBehaviour"/>
		<style>
			<width value="300px"/>
			<hitTest value="false"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<bind name="visible" value="hasActiveStages"/>
			<styleClass value="$ContentIndents"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<style>
					<width value="100%"/>
					<alpha value="0.7"/>
				</style>
				<styleClass value="$TextDefault17NM"/>
				<bind name="text" value="'IDS_AVAILABLE_REWARD'"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'MouseInstruction'; {_type: 'left', _instructionText: 'IDS_GO_TO_ALMANAC_MOUSE_INSTRUCTION', _maxWidth: 250}"/>
		</block>
	</block>
	<block className="CvCBannerTooltip">
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<bind name="primaryEntityDH" value="'cwInfo'; CC.clanWarsInfo; selfPlayerDbId"/>
		<bind name="watchDH" value="'casualCvcServerStage'; ['cwInfo.clanWarsInfo.evChanged']; cwInfo.clanWarsInfo.stage"/>
		<bind name="watchDH" value="'isPlayerParticipate'; ['cwInfo.clanWarsInfo.evChanged']; cwInfo.clanWarsInfo.playerParticipate"/>
		<bind name="watchDH" value="'attemptsLeft'; ['cwInfo.clanWarsInfo.evChanged']; cwInfo.clanWarsInfo.attemptsLeft"/>
		<bind name="watch" value="'textDescription'; casualCvcServerStage == 'preparation' 	? 'IDS_CASUAL_CVC_QUALIFICATION_STAGE' :
									casualCvcServerStage == 'matchmaking' 	? 'IDS_CASUAL_CVC_MATCHING_STAGE' :
									casualCvcServerStage == 'war'			? subst('IDS_CASUAL_CVC_ATTEMPTS_LEFT', [], {attemptsLeft: attemptsLeft}) :
									casualCvcServerStage == 'rewarding'		? 'IDS_CASUAL_CVC_REWARDING_STAGE'
																			: 'IDS_CASUAL_CVC_STAGE_DEFAULT'"/>
		<styleClass value="$DefaultInstantTooltipBehaviour"/>
		<style>
			<width value="300px"/>
			<hitTest value="false"/>
			<marginBottom value="4px"/>
			<marginRight value="4px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block type="text">
			<styleClass value="$ContentIndents"/>
			<style>
				<width value="100%"/>
				<alpha value="0.9"/>
			</style>
			<styleClass value="$TextDefaultBold17NM"/>
			<bind name="text" value="toUpperCase(tr('IDS_CASUAL_CVC'))"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block type="text">
			<styleClass value="$ContentIndents"/>
			<style>
				<width value="100%"/>
				<alpha value="0.7"/>
			</style>
			<styleClass value="$TextDefault17NM"/>
			<bind name="text" value="textDescription"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="!isPlayerParticipate &amp;&amp; (casualCvcServerStage == 'war')"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<bind name="instance" value="'InstructionWarning'; !isPlayerParticipate &amp;&amp; (casualCvcServerStage == 'war') ? {_type: 'left', _instructionText: 'IDS_CASUAL_CVC_STOPED_BY_PLAYER', _maxWidth: 250} : null"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'MouseInstruction'; {_type: 'left', _instructionText: 'IDS_CASUAL_CVC_INSTRUCTION', _maxWidth: 250}"/>
		</block>
	</block>
	<block className="AccountLevelBanner">
		<bind name="firstEntityDH" value="'accountLevelEntity'; CC.accountLevel"/>
		<bind name="watchDH" value="'curAccountLevel'; ['accountLevelEntity.accountLevel.evLevelChanged']; accountLevelEntity.accountLevel.level"/>
		<bind name="firstEntityDH" value="'accountLevelPointsEntity'; CC.accountLevelPoints"/>
		<bind name="watchDH" value="'currentPoints'; ['accountLevelPointsEntity.accountLevelPoints.evCurrentLevelPointsChanged']; accountLevelPointsEntity.accountLevelPoints.currentLevelPoints"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'accountLevelInfo'"/>
		<bind name="watch" value="'isAbuseStatusConfirmed'; accountLevelInfo.abuseStatus == 2"/>
		<bind name="primaryEntityDH" value="'nextStepEntity'; CC.accountLevelingStep; (curAccountLevel + 1)"/>
		<bind name="watchDH" value="'nextStepFeatures'; 	[]; nextStepEntity.accountLevelingStep.features[0]"/>
		<bind name="primaryEntityDH" value="'featureEntity'; CC.accountFeature; nextStepFeatures"/>
		<bind name="watchDH" value="'iconFeaturePath';	['featureEntity.accountFeature.evStateChanged']; featureEntity.accountFeature.iconPath"/>
		<bind name="watchDH" value="'titleFeature';		['featureEntity.accountFeature.evStateChanged']; featureEntity.accountFeature.title"/>
		<bind name="firstEntityDH" value="'accountsRewardEntity'; CC.accountLevelingRewards"/>
		<bind name="watchDH" value="'nextReward'; ['accountsRewardEntity.accountLevelingRewards.evNextRewardPointsChanged']; accountsRewardEntity.accountLevelingRewards.nextRewardPoints"/>
		<bind name="watchDH" value="'nextRewardsDict'; ['accountsRewardEntity.accountLevelingRewards.evRewardsDictChanged']; accountsRewardEntity.accountLevelingRewards.rewardsDict[nextReward]"/>
		<bind name="watchDH" value="'lastReceivedRewardPoints'; ['accountsRewardEntity.accountLevelingRewards.evLastReceivedRewardPointsChanged']; accountsRewardEntity.accountLevelingRewards.lastReceivedRewardPoints"/>
		<bind name="entityDH" value="'rewardEntity';	nextRewardsDict[0].rewardId"/>
		<bind name="watchDH" value="'rewardIds'; []; rewardEntity.rewardsContainer.rewardIds"/>
		<bind name="watch" value="'isSimilarRewards';	rewardEntity.rewardsContainer.subtype &amp;&amp; rewardEntity.rewardsContainer.rewardIds.length &gt; 1"/>
		<bind name="watch" value="'isSingleRewardType';	rewardEntity.rewardsContainer.rewardIds.length == 1"/>
		<bind name="watch" value="'rewardType'; rewardEntity.rewardComponent.type"/>
		<bind name="watch" value="'rewardIconPath';	isSimilarRewards				? toLowerCase(rewardEntity.rewardComponent.subtype + '_set') :
									isSingleRewardType				?
										rewardType == 	'Exterior' 		? toLowerCase(exteriorConfig.type) :
										rewardType == 	'Resource'		? toLowerCase(rewardEntity.rewardComponent.subtype) :
										rewardType == 	'ResourceCoeff'	? toLowerCase(rewardEntity.rewardComponent.subtype) :
										rewardType == 	'Exchange'		? toLowerCase(rewardEntity.rewardComponent.subtype) :
										rewardType == 	'Lootbox'		? toLowerCase(rewardEntity.rewardComponent.subtype)
																		: toLowerCase(rewardEntity.rewardComponent.type)
																	: 'multiple'"/>
		<bind name="watch" value="'rewardHeaderTextWithAmount';	isSimilarRewards			? toUpperCase('IDS_REWARDS_SET_' + rewardEntity.rewardComponent.subtype) :
												isSingleRewardType			?
													rewardType == 	'Ship' 			? 'IDS_SHIP' :
													rewardType == 	'Crew' 			? 'IDS_CREW' :
													rewardType == 	'Exterior' 		? exteriorConfig.type == ExteriorTypes.ENSIGN 	? toUpperCase('IDS_' + exteriorConfig.type + '_TITLE') 
																																	: subst(toUpperCase('IDS_PL_' + exteriorConfig.type + '_TITLE'), [], {_amount: format(rewardEntity.rewardComponent.amount, -1)}, rewardEntity.rewardComponent.amount) :
													rewardType == 	'Ability'		? subst('IDS_PL_ABILITY_TITLE', [], {_amount: format(rewardEntity.rewardComponent.amount, -1)}, rewardEntity.rewardComponent.amount) :
													rewardType == 	'Modernization'	? subst('IDS_PL_MODERNIZATION_TITLE', [], {_amount: format(rewardEntity.rewardComponent.amount, -1)}, rewardEntity.rewardComponent.amount) :
													rewardType == 	'Resource'		? 	rewardEntity.rewardComponent.subtype == 'credits' ||
																						rewardEntity.rewardComponent.subtype == 'gold' ||
																						rewardEntity.rewardComponent.subtype == 'slots' ||
																						rewardEntity.rewardComponent.subtype == 'barCapacity'		? subst(toUpperCase('IDS_REWARDS_PL_' + rewardEntity.rewardComponent.subtype + '_TITLE'), [], {_amount:  format(rewardEntity.rewardComponent.amount, -1)}, rewardEntity.rewardComponent.amount) :
																						rewardEntity.rewardComponent.subtype == 'wows_premium' ||    
																						rewardEntity.rewardComponent.subtype == 'premium'			? subst(toUpperCase('IDS_REWARDS_PL_' + rewardEntity.rewardComponent.subtype + '_TITLE'), [], {_amount:  rewardEntity.rewardComponent.params.text})
																																					: subst(toUpperCase('IDS_REWARDS_PL_' + rewardEntity.rewardComponent.subtype + '_TITLE'), [], {_amount:  format(rewardEntity.rewardComponent.amount, -1)}, rewardEntity.rewardComponent.amount) :
													rewardType == 	'ResourceCoeff'	? toUpperCase('IDS_REWARD_' + rewardEntity.rewardComponent.subtype + '_TITLE') :
													rewardType == 	'Exchange'		? toUpperCase('IDS_PRMP_ITEM_' + rewardEntity.rewardComponent.subtype) :
													rewardType == 	'Lootbox'		? subst('IDS_PL_LOOTBOX_TITLE', [], {_amount: format(rewardEntity.rewardComponent.amount, -1)}, rewardEntity.rewardComponent.amount) :
													rewardType == 	'DogTag'		?  toUpperCase('IDS_DOGTAG_' + rewardEntity.rewardComponent.name + '_NAME') :
													rewardType == 	'Collection'	?  toUpperCase('IDS_' + rewardEntity.rewardComponent.name)
																					: 'NO IDS_REWARDS_SET'
																			: 'IDS_REWARDS_SET'"/>
		<bind name="primaryEntityDH" value="'accountLevelingStepEntity'; CC.accountLevelingStep; curAccountLevel"/>
		<bind name="watchDH" value="'accountStepPoints'; ['accountLevelingStepEntity.accountLevelingStep.evThisStepPointsChanged']; accountLevelingStepEntity.accountLevelingStep.thisStepPoints"/>
		<bind name="watchDH" value="'accountNextStepPoints'; ['accountLevelingStepEntity.accountLevelingStep.evNextStepPointsChanged']; accountLevelingStepEntity.accountLevelingStep.nextStepPoints"/>
		<bind name="watch" value="'isFeature'; accountNextStepPoints &lt; nextReward || nextReward == 0"/>
		<bind name="watch" value="'maxProgress'; isFeature	? accountNextStepPoints
											: nextReward"/>
		<bind name="watch" value="'minProgress'; accountStepPoints &gt; lastReceivedRewardPoints	? accountStepPoints
																				: lastReceivedRewardPoints"/>
		<bind name="watch" value="'isProgressBarWithSteps'; (maxProgress - minProgress &lt; 16) &amp;&amp; (maxProgress - minProgress &gt; 1)"/>
		<bind name="watch" value="'stepsCount'; maxProgress - minProgress"/>
		<bind name="var" value="{ wholeProgressBarWidth: 216 }"/>
		<bind name="firstEntityDH" value="'accountLevelPointsEntity'; CC.accountLevelPoints"/>
		<bind name="watchDH" value="'currentPoints'; ['accountLevelPointsEntity.accountLevelPoints.evCurrentLevelPointsChanged']; accountLevelPointsEntity.accountLevelPoints.currentLevelPoints"/>
		<bind name="watch" value="'battlesToTheFeatureOrReward'; maxProgress - currentPoints"/>
		<bind name="watch" value="'imageUrl';  isFeature ? iconFeaturePath : ('../accountLevel/rewards/icon_reward_' + rewardIconPath)"/>
		<bind name="stageSize"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="soundSet" value="'default_button'"/>
		<bind name="watch" value="'isCollapsedBanner'; currentPoints &lt; 35"/>
		<bind name="appear" value="'addedToStage'; 0.15; 0.15 + 0*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
		<style>
			<width value="240px"/>
			<marginBottom value="4px"/>
			<marginRight value="4px"/>
		</style>
		<bind name="action" value="'click'; 'changeInset'; { inset: LobbyConstants.PLAYER_PROFILE, page: LobbyConstants.PLAYER_PROFILE_ACCOUNT,
											pageData: { isPortBannerClicked: true,
														rewardTypeReason: isFeature ? 'feature'
																					: 'common' } }"/>
		<block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="notification_panel" type="native">
				<bind name="visible" value="optionData.contrast"/>
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block className="inner_panel" type="native">
			<bind name="transition" value="rollOver &amp;&amp; !(mouseDown); 0.15; {alpha: 0}; {alpha: 1}"/>
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<align value="middle"/>
			</style>
			<bind name="style" value="'minHeight'; stageHeight &lt; 960 ? 32 : 36"/>
			<block className="inner_panel" type="native">
				<bind name="visible" value="isCollapsedBanner &amp;&amp; !isAbuseStatusConfirmed"/>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefaultBold17NM"/>
				<style>
					<width value="100%"/>
					<leading value="-2"/>
					<alpha value="0.9"/>
					<margin value="12px|8px"/>
				</style>
				<bind name="text" value="toUpperCase(tr('IDS_DOCK_BANNER_PROFILE_ACCOUNT'))"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="isCollapsedBanner &amp;&amp; !isAbuseStatusConfirmed"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<width value="128px"/>
					<height value="128px"/>
					<backgroundSize value="cover"/>
					<marginTop value="4px"/>
				</style>
				<bind name="style" value="'backgroundImage'; ('url:' + imageUrl + '.png')"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefaultBold17NM"/>
				<style>
					<maxWidth value="216"/>
					<alpha value="0.9"/>
					<leading value="-4"/>
					<marginLeft value="12px"/>
					<marginRight value="12px"/>
				</style>
				<bind name="text" value="isFeature ? titleFeature : rewardHeaderTextWithAmount"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<height value="8px"/>
					<marginLeft value="12px"/>
					<marginTop value="8px"/>
					<marginRight value="12px"/>
				</style>
				<bind name="child" value="isProgressBarWithSteps; {	_stepsCount: stepsCount,
													_wholeProgressBarWidth: wholeProgressBarWidth };	'ProgressBarAlBannerLine';
																										'ProgressBarAlBannerSteps'"/>
			</block>
			<block>
				<style>
					<width value="216px"/>
					<alpha value="0.7"/>
					<marginLeft value="12px"/>
					<marginTop value="8px"/>
					<marginRight value="12px"/>
					<marginBottom value="12px"/>
				</style>
				<bind name="instance" value="'AccountLevelingItemUnavailable'; { _battlesToStep: battlesToTheFeatureOrReward,
																_class: '$TextDefaultNM', _iconMarginRight: '8' }"/>
			</block>
		</block>
		<bind name="watch" value="'isCollapsedProgressVisible'; !isCollapsedBanner &amp;&amp; !isAbuseStatusConfirmed"/>
		<block>
			<bind name="visible" value="isCollapsedProgressVisible"/>
			<style>
				<width value="100%"/>
				<position value="absolute"/>
				<height value="2px"/>
				<bottom value="0"/>
			</style>
			<bind name="instance" value="'ProgressBarAlBannerLine'; isCollapsedProgressVisible ? {_stepsCount: stepsCount, _noBackground: true} : null"/>
		</block>
		<block>
			<bind name="visible" value="isAbuseStatusConfirmed"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="2.0"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<margin value="12px"/>
				</style>
				<bind name="instance" value="'AccountLevelingItemAbused'; isAbuseStatusConfirmed	? {	_abuseText: 'IDS_ACCOUNT_PROGRESS_ABUSED_TOOLTIP_AL_BANNER',
																					_class: '$TextDefault17NM', _isSmallIcon: true, _iconClass: '$None' }
																				: null"/>
			</block>
		</block>
	</block>
	<block className="AccountLevelBannerTooltip">
		<bind name="firstEntityDH" value="'accountLevelEntity'; CC.accountLevel"/>
		<bind name="watchDH" value="'curAccountLevel'; ['accountLevelEntity.accountLevel.evLevelChanged']; accountLevelEntity.accountLevel.level"/>
		<bind name="firstEntityDH" value="'accountLevelPointsEntity'; CC.accountLevelPoints"/>
		<bind name="watchDH" value="'currentPoints'; ['accountLevelPointsEntity.accountLevelPoints.evCurrentLevelPointsChanged']; accountLevelPointsEntity.accountLevelPoints.currentLevelPoints"/>
		<bind name="primaryEntityDH" value="'accountLevelingStepEntity'; CC.accountLevelingStep; curAccountLevel"/>
		<bind name="watchDH" value="'accountStepPoints'; 	['accountLevelingStepEntity.accountLevelingStep.evThisStepPointsChanged']; accountLevelingStepEntity.accountLevelingStep.thisStepPoints"/>
		<bind name="watchDH" value="'accountNextStepPoints'; ['accountLevelingStepEntity.accountLevelingStep.evNextStepPointsChanged']; accountLevelingStepEntity.accountLevelingStep.nextStepPoints"/>
		<bind name="firstEntityDH" value="'accountsRewardEntity'; CC.accountLevelingRewards"/>
		<bind name="watchDH" value="'nextReward'; 		['accountsRewardEntity.accountLevelingRewards.evNextRewardPointsChanged']; accountsRewardEntity.accountLevelingRewards.nextRewardPoints"/>
		<bind name="watchDH" value="'nextRewardsDict'; 	['accountsRewardEntity.accountLevelingRewards.evRewardsDictChanged']; accountsRewardEntity.accountLevelingRewards.rewardsDict[nextReward]"/>
		<bind name="watchDH" value="'lastReceivedRewardPoints'; ['accountsRewardEntity.accountLevelingRewards.evLastReceivedRewardPointsChanged']; accountsRewardEntity.accountLevelingRewards.lastReceivedRewardPoints"/>
		<bind name="entityDH" value="'rewardEntity';	nextRewardsDict[0].rewardId"/>
		<bind name="watchDH" value="'rewardIds'; []; rewardEntity.rewardsContainer.rewardIds"/>
		<bind name="watch" value="'isSimilarRewards';	rewardEntity.rewardsContainer.subtype &amp;&amp; rewardEntity.rewardsContainer.rewardIds.length &gt; 1"/>
		<bind name="watch" value="'isSingleRewardType';	rewardEntity.rewardsContainer.rewardIds.length == 1"/>
		<bind name="watch" value="'rewardType'; rewardEntity.rewardComponent.type"/>
		<bind name="primaryEntityDH" value="'nextStepEntity'; CC.accountLevelingStep; (curAccountLevel + 1)"/>
		<bind name="watchDH" value="'nextStepFeatures'; 	[]; nextStepEntity.accountLevelingStep.features[0]"/>
		<bind name="primaryEntityDH" value="'featureEntity'; CC.accountFeature; nextStepFeatures"/>
		<bind name="watchDH" value="'titleFeature';	['featureEntity.accountFeature.evStateChanged']; featureEntity.accountFeature.title"/>
		<bind name="watchDH" value="'textFeature';	['featureEntity.accountFeature.evStateChanged']; featureEntity.accountFeature.text"/>
		<bind name="watch" value="'isFeature'; accountNextStepPoints &lt; nextReward || nextReward == 0"/>
		<bind name="watch" value="'rewardHeaderTextWithAmount';	isSimilarRewards			? toUpperCase('IDS_REWARDS_SET_' + rewardEntity.rewardComponent.subtype) :
												isSingleRewardType			?
													rewardType == 	'Ship' 			? 'IDS_SHIP' :
													rewardType == 	'Crew' 			? 'IDS_CREW' :
													rewardType == 	'Exterior' 		? exteriorConfig.type == ExteriorTypes.ENSIGN 	? toUpperCase('IDS_' + exteriorConfig.type + '_TITLE') 
																																	: subst(toUpperCase('IDS_PL_' + exteriorConfig.type + '_TITLE'), [], {_amount: format(rewardEntity.rewardComponent.amount, -1)}, rewardEntity.rewardComponent.amount) :
													rewardType == 	'Ability'		? subst('IDS_PL_ABILITY_TITLE', [], {_amount: format(rewardEntity.rewardComponent.amount, -1)}, rewardEntity.rewardComponent.amount) :
													rewardType == 	'Modernization'	? subst('IDS_PL_MODERNIZATION_TITLE', [], {_amount: format(rewardEntity.rewardComponent.amount, -1)}, rewardEntity.rewardComponent.amount) :
													rewardType == 	'Resource'		? 	rewardEntity.rewardComponent.subtype == 'credits' ||
																						rewardEntity.rewardComponent.subtype == 'gold' ||
																						rewardEntity.rewardComponent.subtype == 'slots' ||
																						rewardEntity.rewardComponent.subtype == 'barCapacity'		? subst(toUpperCase('IDS_REWARDS_PL_' + rewardEntity.rewardComponent.subtype + '_TITLE'), [], {_amount:  format(rewardEntity.rewardComponent.amount, -1)}, rewardEntity.rewardComponent.amount) :
																						rewardEntity.rewardComponent.subtype == 'wows_premium' ||    
																						rewardEntity.rewardComponent.subtype == 'premium'			? subst(toUpperCase('IDS_REWARDS_PL_' + rewardEntity.rewardComponent.subtype + '_TITLE'), [], {_amount:  rewardEntity.rewardComponent.params.text})
																																					: subst(toUpperCase('IDS_REWARDS_PL_' + rewardEntity.rewardComponent.subtype + '_TITLE'), [], {_amount:  format(rewardEntity.rewardComponent.amount, -1)}, rewardEntity.rewardComponent.amount) :
													rewardType == 	'ResourceCoeff'	? toUpperCase('IDS_REWARD_' + rewardEntity.rewardComponent.subtype + '_TITLE') :
													rewardType == 	'Exchange'		? toUpperCase('IDS_PRMP_ITEM_' + rewardEntity.rewardComponent.subtype) :
													rewardType == 	'Lootbox'		? subst('IDS_PL_LOOTBOX_TITLE', [], {_amount: format(rewardEntity.rewardComponent.amount, -1)}, rewardEntity.rewardComponent.amount) :
													rewardType == 	'DogTag'		?  toUpperCase('IDS_DOGTAG_' + rewardEntity.rewardComponent.name + '_NAME') :
													rewardType == 	'Collection'	?  toUpperCase('IDS_' + rewardEntity.rewardComponent.name)
																					: 'NO IDS_REWARDS_SET'
																			: 'IDS_REWARDS_SET'"/>
		<bind name="watch" value="'rewardSubheaderText';	isSimilarRewards				? toUpperCase('IDS_REWARDS_SET_' + rewardEntity.rewardComponent.subtype + '_DESCRIPTION') :
										isSingleRewardType				?
											rewardType == 	'Ship' 			? tr(toUpperCase(shipInfo.nameIDS + '_DESCR')) :
											rewardType == 	'Crew' 			? tr(toUpperCase(rewardEntity.rewardComponent.params.firstNameIDS + '_DESCR')) :
											rewardType == 	'Exterior' 		? tr(toUpperCase('IDS_' + exteriorConfig.name + '_DESCRIPTION')) :
											rewardType == 	'Ability'		? 'IDS_CONSUMABLES' :
											rewardType == 	'Modernization'	? tr(toUpperCase('IDS_MODERNIZATION_' + rewardEntity.rewardComponent.params.item.type)) :
											rewardType == 	'DogTag'		? subtype == unique ? tr(toUpperCase('IDS_DOGTAG_COMPONENT_TOOLTIP_CATEGORY_' + 'unique'))
																								: tr(toUpperCase('IDS_DOGTAG_COMPONENT_TOOLTIP_CATEGORY_' + _categoryId)) :
											rewardType == 	'Collection'	? tr(toUpperCase('IDS_' + rewardEntity.rewardComponent.name + '_DESCRIPTION'))
																			: tr(toUpperCase('IDS_' + rewardEntity.rewardComponent.subtype + '_DESCRIPTION'))
																		: 'IDS_REWARDS_SET_DESCRIPTION'"/>
		<bind name="watch" value="'maxProgress'; isFeature ? accountNextStepPoints : nextReward"/>
		<bind name="watch" value="'minProgress'; accountStepPoints &gt; lastReceivedRewardPoints ? accountStepPoints : lastReceivedRewardPoints"/>
		<bind name="watch" value="'battlesToTheFeatureOrReward'; maxProgress - currentPoints"/>
		<styleClass value="$DefaultInstantTooltipBehaviour"/>
		<style>
			<width value="300px"/>
			<hitTest value="false"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<styleClass value="$ContentIndents"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefaultBold19NM"/>
				<style>
					<maxWidth value="276"/>
					<alpha value="0.9"/>
				</style>
				<bind name="text" value="isFeature ? titleFeature : rewardHeaderTextWithAmount"/>
			</block>
		</block>
		<block>
			<style>
				<width value="216px"/>
				<alpha value="0.7"/>
				<marginLeft value="12"/>
				<marginTop value="4"/>
				<marginRight value="12"/>
				<marginBottom value="12"/>
			</style>
			<bind name="instance" value="'AccountLevelingItemUnavailable'; { _battlesToStep: battlesToTheFeatureOrReward,
															_iconMarginRight: '8'}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$ContentIndents"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'InstructionParagraphNM'; {	_class: '$TextDefault17NM',
													_text: isFeature 	? textFeature 
																		: rewardSubheaderText,
													_maxWidth: 250}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="-2"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'MouseInstruction'; { _type: 'left', _instructionText: 'IDS_GO_TO_PROFILE_ACCOUNT_MOUSE_INSTRUCTION', _maxWidth: 256 }"/>
		</block>
	</block>
	<block className="IconAlItem">
		<style>
			<backgroundSize value="cover"/>
		</style>
		<bind name="style" value="'width'; _iconSize"/>
		<bind name="style" value="'height'; _iconSize"/>
		<bind name="style" value="'backgroundImage'; _imageURL"/>
	</block>
	<block className="IconAlDataItem">
		<style>
			<backgroundSize value="cover"/>
		</style>
		<bind name="style" value="'width'; _iconSize"/>
		<bind name="style" value="'height'; _iconSize"/>
		<bind name="style" value="'backgroundImageData'; _imageData"/>
	</block>
	<block className="ProgressBarAlBannerLine">
		<bind name="firstEntityDH" value="'accountLevelPointsEntity'; CC.accountLevelPoints"/>
		<bind name="watchDH" value="'currentPoints'; ['accountLevelPointsEntity.accountLevelPoints.evCurrentLevelPointsChanged']; accountLevelPointsEntity.accountLevelPoints.currentLevelPoints"/>
		<bind name="firstEntityDH" value="'accountLevelEntity'; CC.accountLevel"/>
		<bind name="watchDH" value="'curAccountLevel'; ['accountLevelEntity.accountLevel.evLevelChanged']; accountLevelEntity.accountLevel.level"/>
		<bind name="primaryEntityDH" value="'accountLevelingStepEntity'; CC.accountLevelingStep; curAccountLevel"/>
		<bind name="watchDH" value="'accountStepPoints'; ['accountLevelingStepEntity.accountLevelingStep.evThisStepPointsChanged']; accountLevelingStepEntity.accountLevelingStep.thisStepPoints"/>
		<bind name="firstEntityDH" value="'accountsRewardEntity'; CC.accountLevelingRewards"/>
		<bind name="watchDH" value="'lastReceivedRewardPoints'; ['accountsRewardEntity.accountLevelingRewards.evLastReceivedRewardPointsChanged']; accountsRewardEntity.accountLevelingRewards.lastReceivedRewardPoints"/>
		<bind name="watch" value="'minProgress'; accountStepPoints &gt; lastReceivedRewardPoints ? accountStepPoints : lastReceivedRewardPoints"/>
		<bind name="watch" value="'lineProgress'; (currentPoints - minProgress)*100/_stepsCount"/>
		<styleClass value="$Fullsize"/>
		<block>
			<bind name="visible" value="!_noBackground"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundColor value="0xFF051523"/>
				<alpha value="0.4"/>
			</style>
		</block>
		<block>
			<style>
				<height value="100%"/>
				<backgroundColor value="0xFFFFCC66"/>
			</style>
			<bind name="style" value="'width'; lineProgress + '%'"/>
		</block>
	</block>
	<block className="ProgressBarAlBannerSteps">
		<style>
			<height value="100%"/>
			<flow value="horizontal"/>
		</style>
		<bind name="repeat" value="_stepsCount; 'StepsProgressItem'; { _stepsCount: _stepsCount, _wholeProgressBarWidth: _wholeProgressBarWidth }"/>
	</block>
	<block className="StepsProgressItem">
		<bind name="primaryEntityDH" value="'accountLevelingStepEntity'; CC.accountLevelingStep; curAccountLevel"/>
		<bind name="watchDH" value="'accountStepPoints'; ['accountLevelingStepEntity.accountLevelingStep.evThisStepPointsChanged']; accountLevelingStepEntity.accountLevelingStep.thisStepPoints"/>
		<bind name="firstEntityDH" value="'accountsRewardEntity'; CC.accountLevelingRewards"/>
		<bind name="watchDH" value="'lastReceivedRewardPoints'; ['accountsRewardEntity.accountLevelingRewards.evLastReceivedRewardPointsChanged']; accountsRewardEntity.accountLevelingRewards.lastReceivedRewardPoints"/>
		<bind name="watch" value="'minProgress'; accountStepPoints &gt; lastReceivedRewardPoints ? accountStepPoints : lastReceivedRewardPoints"/>
		<bind name="firstEntityDH" value="'accountLevelPointsEntity'; CC.accountLevelPoints"/>
		<bind name="watchDH" value="'currentPoints'; ['accountLevelPointsEntity.accountLevelPoints.evCurrentLevelPointsChanged']; accountLevelPointsEntity.accountLevelPoints.currentLevelPoints"/>
		<bind name="watch" value="'stepWidth'; math.floor(_wholeProgressBarWidth/_stepsCount)"/>
		<bind name="watch" value="'isLengthCorrectionNeed'; stepWidth*_stepsCount &lt; _wholeProgressBarWidth"/>
		<bind name="watch" value="'pixelCorrectionWidth'; _wholeProgressBarWidth - stepWidth*_stepsCount + 2"/>
		<bind name="watch" value="'stepWidthWithCorrection'; $index &lt; 2 						? stepWidth :
											$index &lt; pixelCorrectionWidth 	? stepWidth - 1
																			: stepWidth - 2"/>
		<bind name="watch" value="'isStepDone'; $index &lt; currentPoints - minProgress"/>
		<style>
			<height value="100%"/>
		</style>
		<bind name="style" value="'marginLeft'; $index != 0 ? '2px' : 0"/>
		<bind name="style" value="'width'; stepWidthWithCorrection + 'px'"/>
		<bind name="style" value="'alpha'; isStepDone ? 1 : 0.3"/>
		<bind name="style" value="'backgroundColor'; isStepDone ? 0xFFFFCC66 : 0xFF051523"/>
	</block>
	<block className="Modernization">
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerModernizations"/>
		<styleClass value="$MiddleAligned"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<bind name="appear" value="'addedToStage'; 0.15; 0.07; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}"/>
		<bind name="repeat" value="modernizationsSlotsList; 'ModernizationItem'"/>
	</block>
	<block className="ModernizationItem">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'dockDefaultValues'; 'dockInitData,dockUpdateData'"/>
		<bind name="name" value="'ButtonModernizationSlot_' + $index"/>
		<style>
			<marginRight value="5px"/>
		</style>
		<block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="BlurMapCustom">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap5_feather" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
			</block>
			<block className="button_empty_slot" type="native">
				<bind name="tooltip" value="'ModernizationSlotInfotip';{list:itemsInSlot}; TooltipBehaviour.verticalInfotip"/>
				<bind name="tooltip" value="'ModernizationEmptySlotTooltip'; {list:itemsInSlot}; TooltipBehaviour.simple"/>
				<bind name="visible" value="installedItem.id == -1"/>
				<bind name="selected" value="ModernizationSlotInfotip4"/>
				<bind name="name" value="'ButtonModernizationEmptySlot_' + $index"/>
			</block>
			<block className="button_full_slot" type="native">
				<bind name="tooltip" value="'ModernizationSlotInfotip';{list:itemsInSlot}; TooltipBehaviour.verticalInfotip"/>
				<bind name="tooltip" value="'ModernizationTooltip'; {installed:(installedItem.id != -1), iconPath: installedItem.iconPath, 
													title: installedItem.title, _attributesPositive: installedItem.attributesPositive, _attributesNegative: installedItem.attributesNegative, type: installedItem.type,
													tooltiptype: 1, _modId: installedItem.id, description:installedItem.description}; 0"/>
				<bind name="visible" value="installedItem.id != -1"/>
				<bind name="selected" value="ModernizationSlotInfotip4"/>
				<bind name="name" value="'ButtonModernizationFullSlot_' + $index"/>
				<block>
					<bind name="style" value="'backgroundImage'; 'url:' + installedItem.iconPath"/>
					<styleClass value="$PxIndent"/>
					<style>
						<width value="60px"/>
						<height value="60px"/>
						<backgroundStretchX value="true"/>
						<backgroundStretchY value="true"/>
						<hitTest value="false"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<bind name="fade" value="(maxItemType != 0); 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}; 2"/>
			<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: tr('IDS_MODERNIZATION_TYPE_' + toUpperCase(tr(modernizationType)))}; 0"/>
			<bind name="watch" value="'modernizationType'; 	(maxItemType == 1) 	? 'special' :
											(maxItemType == 2) 		? 'rare' :
											(maxItemType == 3) ? 'legendary'
																				: ''"/>
			<styleClass value="$MiddleAligned"/>
			<style>
				<width value="23px"/>
				<height value="23px"/>
				<marginTop value="-5px"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:../service_kit/item_types/icon_modernization_' + modernizationType + '.png'"/>
		</block>
	</block>
	<block className="Consumables">
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerModernizations"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'shipId'; ['dockEntity.shipSelection.evShipUpdate']; dockEntity.shipSelection.currentShipId"/>
		<bind name="watchDH" value="'shipIdForModuleInset'; ['dockEntity.shipSelection.evShipViewUpdate']; dockEntity.shipSelection.currentShipIdForModuleInset"/>
		<styleClass value="$MiddleAligned"/>
		<bind name="watch" value="'showAircraftConsumables'; (squadronConsumablesSlotsList.length &gt; 0) || (planesSlotsList.length &gt; 0)"/>
		<bind name="instance" value="'ConsumablesCommon';	showAircraftConsumables ? null : {}"/>
		<bind name="instance" value="'ConsumablesAircraft';	showAircraftConsumables ? {} : null"/>
	</block>
	<block className="ConsumablesAircraft">
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerModernizations"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'shipId'; ['dockEntity.shipSelection.evShipUpdate']; dockEntity.shipSelection.currentShipId"/>
		<bind name="watchDH" value="'shipIdForModuleInset'; ['dockEntity.shipSelection.evShipViewUpdate']; dockEntity.shipSelection.currentShipIdForModuleInset"/>
		<block>
			<bind name="visible" value="consumablesSlotsList.length &gt; 0 || planesSlotsList.length &gt; 0"/>
			<style>
				<marginLeft value="10px"/>
				<marginRight value="10px"/>
				<height value="16px"/>
				<marginTop value="-6px"/>
			</style>
			<bind name="instance" value="'BranchTypeLabelDark'; {nameIDS: tr('IDS_TITLE_AIRCRAFT_CARRIER'), _noMiddle: true}"/>
		</block>
		<block>
			<bind name="visible" value="consumablesSlotsList.length &gt; 0 || planesSlotsList.length &gt; 0"/>
			<style>
				<paddingTop value="6px"/>
			</style>
			<block>
				<bind name="appear" value="'addedToStage'; 0.15; 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}"/>
				<style>
					<marginLeft value="10px"/>
					<marginRight value="10px"/>
				</style>
				<bind name="repeat" value="planesSlotsList; 'ConsumableSlotItem'"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="appear" value="'addedToStage'; 0.15; 0.1; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
				<style>
					<marginLeft value="10px"/>
					<marginRight value="10px"/>
				</style>
				<bind name="repeat" value="consumablesSlotsList; 'ConsumableSlotItem'; {_isAircarrierConsumable: true}"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="squadronWeaponsSlotsList.length &gt; 0 || squadronConsumablesSlotsList.length &gt; 0"/>
			<block>
				<bind name="appear" value="'addedToStage'; 0.15; 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}"/>
				<style>
					<marginLeft value="10px"/>
					<marginRight value="10px"/>
				</style>
				<bind name="repeat" value="squadronWeaponsSlotsList; 'SquadronWeaponsSlots'"/>
			</block>
			<block>
				<bind name="appear" value="'addedToStage'; 0.15; 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}"/>
				<style>
					<marginLeft value="10px"/>
					<marginRight value="10px"/>
				</style>
				<bind name="repeat" value="squadronConsumablesSlotsList; 'SquadronConsumableSlots'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ConsumablesCommon">
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerModernizations"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'shipId'; ['dockEntity.shipSelection.evShipUpdate']; dockEntity.shipSelection.currentShipId"/>
		<bind name="watchDH" value="'shipIdForModuleInset'; ['dockEntity.shipSelection.evShipViewUpdate']; dockEntity.shipSelection.currentShipIdForModuleInset"/>
		<style>
			<marginTop value="4px"/>
			<flow value="horizontal"/>
		</style>
		<block>
			<bind name="visible" value="artillerySlotsList.length &gt; 0"/>
			<style>
				<marginRight value="10px"/>
				<marginLeft value="10px"/>
			</style>
			<block>
				<bind name="appear" value="'addedToStage'; 0.15; 0.05; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}"/>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'BranchTypeLabelDark'; {nameIDS: tr('IDS_MAIN_CALIBER')}"/>
			</block>
			<block>
				<bind name="appear" value="'addedToStage'; 0.15; 0.1; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}"/>
				<style>
					<marginTop value="12px"/>
				</style>
				<bind name="repeat" value="artillerySlotsList; 'ConsumableSlotItem'"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<bind name="visible" value="torpedoSlotsList.length &gt; 0"/>
			<style>
				<marginRight value="10px"/>
				<marginLeft value="10px"/>
			</style>
			<block>
				<bind name="appear" value="'addedToStage'; 0.15; 0.05; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}"/>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'BranchTypeLabelDark'; {nameIDS: tr('IDS_TORPEDO_LAUNCHERS')}"/>
			</block>
			<block>
				<bind name="appear" value="'addedToStage'; 0.15; 0.1; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}"/>
				<style>
					<marginTop value="12px"/>
				</style>
				<bind name="repeat" value="torpedoSlotsList; 'ConsumableSlotItem'"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<bind name="visible" value="consumablesSlotsList.length &gt; 0"/>
			<style>
				<marginRight value="10px"/>
				<marginLeft value="10px"/>
			</style>
			<block>
				<bind name="appear" value="'addedToStage'; 0.15; 0.05; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}"/>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'BranchTypeLabelDark'; {nameIDS: tr('IDS_TITLE_CONSUMABLES')}"/>
			</block>
			<block>
				<bind name="appear" value="'addedToStage'; 0.15; 0.1; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}"/>
				<style>
					<marginTop value="12px"/>
				</style>
				<bind name="repeat" value="consumablesSlotsList; 'ConsumableSlotItem'"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="SquadronConsumableSlots">
		<style>
			<flow value="horizontal"/>
			<marginTop value="24px"/>
		</style>
		<bind name="repeat" value="slotsList; 'ConsumableSlotItem'; {_isAviation : true}"/>
	</block>
	<block className="SquadronWeaponsSlots">
		<bind name="watch" value="'titleText'; 	(weaponType == 1 || weaponType == 2) 	? tr('IDS_BOMBER') :
								(weaponType == 3 || weaponType == 4) 	? tr('IDS_TORPEDOBOMBER')
																		: tr('IDS_FIGHTER') "/>
		<bind name="instance" value="'BranchTypeLabelDark'; {nameIDS: titleText, _noMiddle: true}"/>
		<block>
			<style>
				<marginTop value="24px"/>
			</style>
			<bind name="repeat" value="items; 'ConsumableSlotItem'; { _isSquadronWeapon : true}"/>
		</block>
	</block>
	<block className="ConsumableSlotItem">
		<style>
			<marginRight value="3px"/>
			<marginLeft value="3px"/>
		</style>
		<bind name="watch" value="'isWeapon';	(installedItem.weaponType || (installedItem.weaponType == 0) ? true : false)"/>
		<bind name="watch" value="'isSquadron';	(installedItem.weaponType != null) &amp;&amp; (installedItem.weaponType == 3)"/>
		<block>
			<style>
				<width value="54px"/>
				<height value="54px"/>
			</style>
			<bind name="dispatch" value="'consumableInfotipItem.clicked'; 'Tooltip.Close'"/>
			<bind name="name" value="(installedItem.id != -1) &amp;&amp; !(isWeapon) ? 'ConsumableSlotItem_' + $index : ''"/>
			<bind name="tooltip" value="'ConsumableTooltip';{	_id: installedItem.id,
												_hasAlternatives: itemsInSlot.length &gt; 1,
												_isWeapon: isWeapon,
												_isSquadronWeapon: _isSquadronWeapon,
												_isSquadron: isSquadron,
												_isAviation: _isAviation,
												_isAircarrierConsumable: _isAircarrierConsumable,
												_aviationId: installedItem.slotName,
												_hasLimitation: installedItem.hasLimitation}; TooltipBehaviour.simple"/>
			<bind name="tooltip" value="'ConsumablesInfotip'; (itemsInSlot.length &gt; 1) 	? { _itemsInSlot: itemsInSlot}
																		: null; TooltipBehaviour.verticalInfotip; null; 'consumablesInfotipIsVisible'"/>
			<block>
				<bind name="name" value="(installedItem.id != -1) &amp;&amp; !(isWeapon) ? installedItem.name : ''"/>
				<style>
					<position value="absolute"/>
					<width value="60px"/>
					<height value="60px"/>
					<top value="-3px"/>
					<left value="-3px"/>
				</style>
				<block className="BlurMapCustom">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap5_feather" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
			</block>
			<block className="button_empty_slot" type="native">
				<styleClass value="$Fullsize"/>
				<bind name="visible" value="installedItem.id == -1"/>
			</block>
			<block className="button_ability_slot" type="native">
				<styleClass value="$Fullsize"/>
				<bind name="visible" value="(installedItem.id != -1) &amp;&amp; (itemsInSlot.length &gt; 1)"/>
				<style>
					<position value="absolute"/>
				</style>
				<bind name="selected" value="consumablesInfotipIsVisible"/>
			</block>
			<block>
				<bind name="watch" value="'iconPath';  (installedItem.params.subtype)	?	('url:../consumables/ammo_torpedo_halloween_' + installedItem.params.subtype + '.png')
																		: 	('url:' + installedItem.iconPath)"/>
				<bind name="visible" value="installedItem.id != -1"/>
				<bind name="style" value="'backgroundImage'; iconPath"/>
				<bind name="style" value="'hitTest'; (itemsInSlot.length &gt; 1) ? false : true"/>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="60px"/>
					<height value="60px"/>
					<backgroundStretchX value="true"/>
					<backgroundStretchY value="true"/>
					<position value="absolute"/>
				</style>
				<bind name="style" value="'width'; installedItem.weaponType || installedItem.weaponType==0 ? '52px' : '60px'"/>
				<bind name="style" value="'height'; installedItem.weaponType || installedItem.weaponType==0 ? '52px' : '60px'"/>
				<block>
					<bind name="visible" value="installedItem.hasLimitation == true"/>
					<style>
						<width value="17px"/>
						<height value="15px"/>
						<position value="absolute"/>
						<bottom value="7px"/>
						<right value="7px"/>
						<backgroundImage value="symbol:icon_consumable_attention"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_NUMCONSUMABLES'}"/>
			<bind name="visible" value="(installedItem.id != -1) &amp;&amp; !(isWeapon) &amp;&amp; (installedItem.numConsumables != -1)"/>
			<style>
				<top value="0px"/>
				<right value="3px"/>
				<width value="20px"/>
				<height value="15px"/>
				<position value="absolute"/>
				<backgroundColor value="0x01000000"/>
			</style>
			<block type="text">
				<style>
					<marginTop value="0px"/>
					<right value="0"/>
				</style>
				<styleClass value="$TextDefaultBold"/>
				<bind name="text" value="installedItem.numConsumables"/>
			</block>
		</block>
		<block>
			<style>
				<marginTop value="5px"/>
				<left value="50%"/>
			</style>
			<block className="HotkeyAnimation" type="native">
				<bind name="visible" value="!_isAircarrierConsumable"/>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: (isWeapon || _isSquadronWeapon)	? 'IDS_HINT_BATTLE_WEAPON_COMMAND_KEY'
																							: 'IDS_HINT_BATTLE_COMMAND_KEY'}"/>
				<bind name="commandId" value="installedItem.commandId"/>
			</block>
			<block>
				<bind name="visible" value="!!_isAircarrierConsumable"/>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_BATTLE_COMMAND_AUTO'}"/>
				<style>
					<width value="46px"/>
					<height value="16px"/>
					<alpha value="0.8"/>
					<marginLeft value="-23px"/>
					<marginTop value="-8px"/>
					<backgroundImage value="url:../aircraft/key_auto_label.png"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ConsumableTooltip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY + _id; 'priceInfoSet'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; (_isWeapon ? weapons : consumemables); key; 'consumable'"/>
		<bind name="watch" value="'consumemables'; _isAviation ? 'squadronConsumeInfo' : 'consumeInfo'"/>
		<bind name="watch" value="'weapons'; _isSquadronWeapon ? 'squadronWeaponInfo' : 'weaponsInfo'"/>
		<bind name="watch" value="'key'; _isAviation ? _aviationId : _id"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'shipId'; ['dockEntity.shipSelection.evShipUpdate']; dockEntity.shipSelection.currentShipId"/>
		<bind name="watchDH" value="'shipIdForModuleInset'; ['dockEntity.shipSelection.evShipViewUpdate']; dockEntity.shipSelection.currentShipIdForModuleInset"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; shipId"/>
		<bind name="watchDH" value="'isLocked';			['shipOwnEntity.ownShip.evUpdateLock'];	shipOwnEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'isInFormation';		['shipOwnEntity.ownShip.evUpdateLock'];	shipOwnEntity.ownShip.isInFormation"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="340px"/>
			<hitTest value="false"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<paddingTop value="8px"/>
					<paddingBottom value="8px"/>
					<paddingLeft value="6px"/>
					<paddingRight value="6px"/>
				</style>
				<block>
					<bind name="style" value="'marginBottom'; consumable.installed	?	_isWeapon	? '8'
																					: '4'
																	: 0"/>
					<block>
						<style>
							<width value="60px"/>
							<height value="60px"/>
							<backgroundStretchX value="true"/>
							<backgroundStretchY value="true"/>
						</style>
						<bind name="watch" value="'iconPath'; consumable.params.subtype	?	('url:../consumables/ammo_torpedo_halloween_' + consumable.params.subtype + '.png')
																		: 	('url:' + consumable.iconPath)"/>
						<bind name="style" value="'backgroundImage'; iconPath"/>
					</block>
					<block>
						<bind name="visible" value="_hasLimitation == true"/>
						<style>
							<width value="17px"/>
							<height value="15px"/>
							<position value="absolute"/>
							<bottom value="7px"/>
							<right value="7px"/>
							<backgroundImage value="symbol:icon_consumable_attention"/>
						</style>
					</block>
					<block>
						<bind name="visible" value="consumable.installed"/>
						<style>
							<left value="50%"/>
							<position value="absolute"/>
						</style>
						<bind name="style" value="'bottom'; _isWeapon ? '-26' : '-22'"/>
						<block className="HotkeyAnimation" type="native">
							<bind name="visible" value="!_isAircarrierConsumable"/>
							<bind name="commandId" value="consumable.commandId"/>
						</block>
						<block>
							<bind name="visible" value="!!_isAircarrierConsumable"/>
							<style>
								<width value="46px"/>
								<height value="16"/>
								<marginLeft value="-23px"/>
								<alpha value="0.8"/>
								<marginBottom value="12px"/>
								<backgroundImage value="url:../aircraft/key_auto_label.png"/>
							</style>
						</block>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<marginLeft value="6px"/>
						<marginTop value="-1px"/>
					</style>
					<block type="text">
						<styleClass value="$TextHeaderBold"/>
						<style>
							<width value="100%"/>
							<leading value="-5"/>
						</style>
						<bind name="class" value="consumable.installed	? '$FontColorGolden'
														: '$FontColorWhite'"/>
						<bind name="text" value="consumable.params.subtype	?	tr('IDS_HALLOWEEN_TORPEDOES_TITLE_' + toUpperCase(consumable.params.subtype))
															:	consumable.title"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<style>
							<width value="100%"/>
							<marginTop value="-4px"/>
						</style>
						<bind name="text" value="(	_isSquadronWeapon	? 'IDS_AMMUNITION':
									_isSquadron 		? 'IDS_SQUADRON':
									_isWeapon			? 'IDS_AMMUNITION'
														: 'IDS_CONSUMABLES')"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="consumable.installed"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$InfoBlockIndent"/>
					<block className="icon_check" type="native">
						<styleClass value="$MiddleVAligned"/>
					</block>
					<block type="text">
						<style>
							<marginLeft value="4px"/>
						</style>
						<styleClass value="$TextDefault"/>
						<bind name="class" value="'$FontColorGolden'"/>
						<bind name="text" value="(_isWeapon	? 'IDS_WEAPON_MOUNTED'
											: 'IDS_CONSUMABLE_MOUNTED')"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="0px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="!!_isAircarrierConsumable"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$InfoBlockIndent"/>
					<block className="icon_warning_orange" type="native">
						<style>
							<marginTop value="4px"/>
						</style>
					</block>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<style>
							<maxWidth value="300"/>
							<marginLeft value="4px"/>
						</style>
						<bind name="class" value="'$FontColorUnready'"/>
						<bind name="text" value="consumable.title == 'IDS_DOCK_CONSUME_TITLE_PCY038_FIGHTERAUTO' ? 'IDS_HINT_RESTRICTION_AUTO_DETECTION'
																								: 'IDS_HINT_RESTRICTION_AUTO_DAMAGE'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="0px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="(!(consumable.freeOfCharge)) &amp;&amp; (consumable.numInStorage &gt; 0)"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$InfoBlockIndent"/>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<bind name="text" value="tr('IDS_IN_WAREHOUSE') + ' ' + consumable.numInStorage"/>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="0px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="_hasAlternatives"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$InfoBlockIndent"/>
					<bind name="instance" value="'CreditsOrGoldTooltipPriceLine'; {	_title: ((consumable.installed || (consumable.numInStorage &gt; 0)) 	? (tr('IDS_AUTOREPLANISHMENT') + tr('IDS_COLON'))
																																		: 'IDS_COST'),
																	_prices: priceInfoSet.prices }"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="0px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<styleClass value="$TextHeaderBigDefault"/>
					<styleClass value="$InfoBlockIndent"/>
					<bind name="text" value="consumable.params.subtype	?	tr('IDS_HALLOWEEN_TORPEDOES_DESCRIPTION_' + toUpperCase(consumable.params.subtype))
														:	consumable.description"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="0px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$Fullsize"/>
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<position value="absolute"/>
						<marginBottom value="1px"/>
					</style>
				</block>
				<block>
					<bind name="watch" value="'deepWaterTorpedoes'; 		consumable.params.torpedoes.isDeepWater"/>
					<bind name="watch" value="'deepWaterTorpedoBombers'; consumable.params.torpedoIsDeepWater"/>
					<styleClass value="$InfoBlockIndent"/>
					<bind name="visible" value="(deepWaterTorpedoes == true) || (deepWaterTorpedoBombers == true)"/>
					<bind name="instance" value="'TorpedoAffectedShipsParamRow'; (deepWaterTorpedoes == true) || (deepWaterTorpedoBombers == true) 	? { _torpedoId: consumable.params.ammoNameRaw, 
																																		_isTooltip: true }
																																	: null"/>
				</block>
				<block>
					<bind name="visible" value="(deepWaterTorpedoes == true) || (deepWaterTorpedoBombers == true)"/>
					<style>
						<width value="100%"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerParams; 0; null; 'tooltipModuleParams' + consumable.paramsDescriptor; consumable.params"/>
					<bind name="instance" value="'ShipParamsListView'; _isWeapon ? { viewParams:viewParams, secondLevelTooltip: true } : null"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<paddingTop value="16px"/>
						<paddingLeft value="12px"/>
						<paddingRight value="12px"/>
					</style>
					<bind name="visible" value="!(_isWeapon)"/>
					<bind name="instance" value="'ParamsModifierList'; _isWeapon ? null : { _attributesPositive: consumable.attributesPositive, _attributesNegative: consumable.attributesNegative, _attributesNeutral: consumable.attributesNeutral, _isTooltip: true }"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="0px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="!(consumable.installed) &amp;&amp; !isLocked &amp;&amp; !(_noMouseInstructions)"/>
				<styleClass value="$InfoBlockIndent"/>
				<bind name="instance" value="'MouseInstruction'; ((!(consumable.freeOfCharge)) &amp;&amp; (consumable.numInStorage == 0))	? {_type: 'left', _instructionText: 'IDS_DO_PURCHASE_AND_INSTALL', _maxWidth: 300}
												 																	: {_type: 'left', _instructionText: 'IDS_INSTALL', _maxWidth: 300}"/>
			</block>
			<block>
				<bind name="visible" value="consumable.installed &amp;&amp; !(_isWeapon) &amp;&amp; _hasAlternatives &amp;&amp; !(_noMouseInstructions)"/>
				<styleClass value="$InfoBlockIndent"/>
				<bind name="instance" value="'MouseInstruction';  {_type: 'left', _instructionText: 'IDS_INSTRUCTION_OPEN_CONSUMABLES', _maxWidth: 300}"/>
			</block>
			<block>
				<bind name="visible" value="isLocked &amp;&amp; !(_isWeapon) &amp;&amp; _hasAlternatives)"/>
				<styleClass value="$InfoBlockIndent"/>
				<block className="icon_warning_orange" type="native">
					<style>
						<marginTop value="4px"/>
					</style>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<style>
						<maxWidth value="300"/>
						<marginLeft value="4px"/>
					</style>
					<bind name="class" value="'$FontColorUnready'"/>
					<bind name="text" value="(divisionData != null) &amp;&amp; divisionData.divisionExist	? (divisionEntranceData.divisionType == 'party')	? 'IDS_SET_UNREADY_PARTY_FIRST_TO_CHANGE_CONSUMABLES'
																																		: 'IDS_SET_UNREADY_DIVISION_FIRST_TO_CHANGE_CONSUMABLES'
																					: 'IDS_LEAVE_BATTLE_FIRST_TO_CHANGE_CONSUMABLES'"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="TorpedoAffectedShipsParamRow">
		<bind name="primaryEntityDH" value="'torpedoEntity'; CC.torpedoParams; _torpedoId"/>
		<bind name="style" value="'marginTop'; _isTooltip ? '0px' : '-3px'"/>
		<style>
			<width value="100%"/>
			<backgroundColor value="0x01000000"/>
		</style>
		<bind name="tooltip" value="'TorpedoAffectedShipsTooltip'; { _torpedoId: _torpedoId }"/>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<style>
					<alpha value="0.7"/>
				</style>
				<styleClass value="$TextParams"/>
				<bind name="text" value="'IDS_SHIP_PARAM_TORPEDOES_AFFECTED_SHIPS'"/>
			</block>
			<block>
				<styleClass value="$AlignRight"/>
				<styleClass value="$MiddleVAligned"/>
				<block>
					<bind name="visible" value="	(torpedoEntity.torpedoParams.includedShipIds.length &gt; 0) || (torpedoEntity.torpedoParams.excludedShipIds.length &gt; 0)"/>
					<bind name="instance" value="'IconWarning'; { _showOrangeIcon: torpedoEntity.torpedoParams.excludedShipIds.length &gt; 0,
												 _showGreyIcon: torpedoEntity.torpedoParams.includedShipIds.length &gt; 0 }"/>
				</block>
				<bind name="repeat" value="torpedoEntity.torpedoParams.classList; 'ShipTypeIconSimple'"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="TorpedoAffectedShipsTooltip">
		<bind name="primaryEntityDH" value="'torpedoEntity'; CC.torpedoParams; _torpedoId"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="300px"/>
			<hitTest value="false"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<block type="text">
				<styleClass value="$TextDefaultBold17NM"/>
				<style>
					<maxWidth value="280"/>
					<marginTop value="1px"/>
				</style>
				<bind name="text" value="'IDS_SHIP_PARAM_TORPEDOES_AFFECTED_SHIPS'"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault17NM"/>
				<style>
					<maxWidth value="280"/>
					<marginTop value="7px"/>
				</style>
				<bind name="text" value="torpedoEntity.torpedoParams.classesIDS"/>
			</block>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="torpedoEntity.torpedoParams.excludedShipIds.length &gt; 0"/>
			<styleClass value="$InfoBlockIndent"/>
			<block>
				<style>
					<marginBottom value="10px"/>
				</style>
				<block>
					<style>
						<marginTop value="-1px"/>
					</style>
					<block className="icon_warning_orange" type="native"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefaultNM"/>
					<style>
						<maxWidth value="280"/>
						<marginLeft value="2px"/>
					</style>
					<bind name="class" value="'$FontColorUnready'"/>
					<bind name="text" value="'IDS_TOOLTIP_EXCLUDED_SHIPS'"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<bind name="repeat" value="torpedoEntity.torpedoParams.excludedShipIds; 'ShipLineItemNoAttributes'; {}"/>
		</block>
		<block>
			<bind name="visible" value="torpedoEntity.torpedoParams.excludedShipIds.length &gt; 0"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="torpedoEntity.torpedoParams.includedShipIds.length &gt; 0"/>
			<styleClass value="$InfoBlockIndent"/>
			<block>
				<style>
					<marginBottom value="10px"/>
				</style>
				<block>
					<style>
						<marginTop value="-1px"/>
					</style>
					<block className="icon_warning_grey" type="native"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefaultNM"/>
					<style>
						<maxWidth value="280"/>
						<marginLeft value="2px"/>
						<alpha value="0.8"/>
					</style>
					<bind name="class" value="'$FontColorBlueish'"/>
					<bind name="text" value="'IDS_TOOLTIP_INCLUDED_SHIPS'"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<bind name="repeat" value="torpedoEntity.torpedoParams.includedShipIds; 'ShipLineItemNoAttributes'; {}"/>
		</block>
	</block>
	<block className="ShipLineItemNoAttributes">
		<bind name="watchDH" value="'upgradableShipInfo'; ['shipEntity.upgradableShipInfo.evUpdate']; shipEntity.upgradableShipInfo"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; $value; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<style>
			<flow value="horizontal"/>
			<marginTop value="1px"/>
			<marginBottom value="1px"/>
		</style>
		<block className="icon_ship" type="native">
			<style>
				<marginTop value="1px"/>
			</style>
			<bind name="gotoAndStop!" value="shipInfo.subtype"/>
		</block>
		<block>
			<style>
				<marginTop value="-5px"/>
				<marginLeft value="3px"/>
			</style>
			<block type="text">
				<style>
					<maxWidth value="200"/>
				</style>
				<styleClass value="$TextDefaultBold"/>
				<bind name="class" value="'$LetterSpacingSmall'"/>
				<bind name="text" value="shipInfo.levelRome + ' ' + toUpperCase(tr(shipInfo.nameIDS))"/>
			</block>
		</block>
	</block>
	<block className="ShipTypeIconSimple">
		<block>
			<style>
				<marginLeft value="4px"/>
			</style>
			<block className="icon_ship" type="native">
				<bind name="gotoAndStop!" value="$dataRef.ref"/>
			</block>
		</block>
	</block>
	<block className="IconWarning">
		<style>
			<marginTop value="-1px"/>
		</style>
		<block className="icon_warning_orange" type="native">
			<bind name="visible" value="(_showGreyIcon &amp;&amp; _showOrangeIcon) || _showOrangeIcon"/>
		</block>
		<block className="icon_warning_grey" type="native">
			<bind name="visible" value="(_showGreyIcon &amp;&amp; !_showOrangeIcon)"/>
		</block>
	</block>
	<block className="ConsumablesInfotip">
		<bind name="stageSize"/>
		<bind name="watch" value="'needScroll'; (_itemsInSlot.length * 145) &gt; (stageHeight - 20)"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'shipId'; ['dockEntity.shipSelection.evShipUpdate']; dockEntity.shipSelection.currentShipId"/>
		<bind name="watchDH" value="'shipIdForModuleInset'; ['dockEntity.shipSelection.evShipViewUpdate']; dockEntity.shipSelection.currentShipIdForModuleInset"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; shipId"/>
		<bind name="watchDH" value="'isLocked';	['shipOwnEntity.ownShip.evUpdateLock'];	shipOwnEntity.ownShip.isLocked"/>
		<styleClass value="$VerticalInfotipBehaviourCenter"/>
		<style>
			<width value="400px"/>
		</style>
		<block className="dock_panel_pin" type="native">
			<style>
				<position value="absolute"/>
				<top value="-9px"/>
			</style>
			<bind name="gotoAndStop!" value="'up'"/>
			<params>
				<param name="name" value="pinTop"/>
			</params>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="style" value="'height'; needScroll == true ? (stageHeight - 20) + 'px' : '100%f'"/>
			<block className="MenuBg">
				<styleClass value="$FullsizeAbsolute"/>
				<block className="DeclareBlurLayer">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="transparentPixel" type="native">
						<bind name="blurLayer" value="0"/>
					</block>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block className="BlurMap">
					<bind name="visible" value="optionData.blurEnabled"/>
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<style>
						<hitTest value="false"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
					<block className="mc_blurmap_medium" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$FullsizeAbsolute"/>
						<bind name="blurMap" value="0"/>
					</block>
					<block className="inner_panel" type="native">
						<style>
							<alpha value="0.5"/>
						</style>
						<styleClass value="$FullsizeAbsolute"/>
					</block>
				</block>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<block className="contrast_panel" type="native">
					<bind name="visible" value="optionData.contrast &amp;&amp; !(true)"/>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="visible" value="!(true)"/>
					<block className="hint_panel" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
				</block>
				<block>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="visible" value="true"/>
					<block className="dock_panel" type="native">
						<styleClass value="$FullsizeAbsolute"/>
						<style>
							<marginBottom value="-19px"/>
							<marginRight value="-14px"/>
							<marginLeft value="-14px"/>
							<marginTop value="-9px"/>
						</style>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<height value="100%f"/>
					<overflow value="scroll"/>
				</style>
				<bind name="class" value="needScroll ? '$ModernizationAndConsumScrollBar' : '$None'"/>
				<bind name="repeat" value="_itemsInSlot; 'ConsumablesInfotipItem'"/>
			</block>
			<block>
				<bind name="visible" value="isLocked"/>
				<styleClass value="$InfoBlockIndent"/>
				<block className="icon_warning_orange" type="native">
					<style>
						<marginTop value="4px"/>
					</style>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<style>
						<maxWidth value="300"/>
					</style>
					<bind name="class" value="'$FontColorUnready'"/>
					<bind name="text" value="(divisionData != null) &amp;&amp; divisionData.divisionExist	? (divisionEntranceData.divisionType == 'party')	? 'IDS_SET_UNREADY_PARTY_FIRST_TO_CHANGE_CONSUMABLES'
																																		: 'IDS_SET_UNREADY_DIVISION_FIRST_TO_CHANGE_CONSUMABLES'
																					: 'IDS_LEAVE_BATTLE_FIRST_TO_CHANGE_CONSUMABLES'"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ConsumablesInfotipItem">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY + id; 'priceInfoSet'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'consumeInfo'; id; 'consumable'"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'shipId'; ['dockEntity.shipSelection.evShipUpdate']; dockEntity.shipSelection.currentShipId"/>
		<bind name="watchDH" value="'shipIdForModuleInset'; ['dockEntity.shipSelection.evShipViewUpdate']; dockEntity.shipSelection.currentShipIdForModuleInset"/>
		<bind name="watchDH" value="'isLocked';	['shipOwnEntity.ownShip.evUpdateLock'];	shipOwnEntity.ownShip.isLocked"/>
		<style>
			<width value="100%"/>
		</style>
		<bind name="name" value="'ConsumableName_' + slotId + '_' + name"/>
		<bind name="watch" value="'isWeapon'; 	(weaponType || weaponType==0) ? true : false"/>
		<bind name="watch" value="'isSquadron'; 	(weaponType != null) &amp;&amp; (weaponType == 3)"/>
		<block className="dock_submenu_item" type="native">
			<bind name="request" value="'click'; !isLocked ? 'consumableClicked' : null; {name: name, slotId:slotId, useGold: (priceInfoSet.prices[validSelectedPriceIndex].currency == 'gold'), selectedPriceIndex: validSelectedPriceIndex}"/>
			<bind name="dispatch" value="'click'; 'consumableInfotipItem.clicked'"/>
			<bind name="tooltip" value="'ConsumableTooltip'; { _id: id, _isWeapon: isWeapon, _isSquadron: isSquadron, _hasLimitation: hasLimitation}; 0"/>
			<bind name="selected" value="installed"/>
			<style>
				<marginLeft value="2px"/>
				<marginRight value="2px"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<params>
				<param name="soundSet" value="dropmenu_button"/>
			</params>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<margin value="12px"/>
				</style>
				<block>
					<block>
						<bind name="style" value="'backgroundImage'; 'url:' + iconPath"/>
						<style>
							<width value="60px"/>
							<height value="60px"/>
							<backgroundStretchX value="true"/>
							<backgroundStretchY value="true"/>
							<hitTest value="false"/>
						</style>
					</block>
					<block>
						<bind name="visible" value="hasLimitation == true"/>
						<style>
							<width value="17px"/>
							<height value="15px"/>
							<position value="absolute"/>
							<bottom value="7px"/>
							<right value="7px"/>
							<backgroundImage value="symbol:icon_consumable_attention"/>
						</style>
					</block>
					<block>
						<bind name="visible" value="installed"/>
						<style>
							<position value="absolute"/>
							<left value="30px"/>
							<bottom value="-24px"/>
						</style>
						<block className="HotkeyAnimation" type="native">
							<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_BATTLE_COMMAND_KEY'}"/>
							<bind name="commandId" value="commandId"/>
						</block>
					</block>
				</block>
				<block>
					<style>
						<width value="300px"/>
						<hitTest value="false"/>
						<marginLeft value="12px"/>
						<marginTop value="4px"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<block type="text">
							<styleClass value="$TextDefaultBoldNM"/>
							<bind name="class" value="installed	? '$FontColorGolden' 
												: '$FontColorWhite'"/>
							<bind name="text" value="title"/>
						</block>
						<block>
							<bind name="visible" value="installed"/>
							<style>
								<marginTop value="-6px"/>
								<marginLeft value="8px"/>
							</style>
							<block className="icon_module_state" type="native">
								<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CONSUMABLE_MOUNTED'}"/>
								<style>
									<marginTop value="5px"/>
								</style>
								<bind name="gotoAndStop!" value="'installed'"/>
							</block>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<bind name="visible" value="(!(freeOfCharge)) &amp;&amp; (!(installed) &amp;&amp; (numInStorage != 0))"/>
						<style>
							<marginTop value="8px"/>
							<hitTest value="false"/>
						</style>
						<block type="text">
							<styleClass value="$TextDefaultNM"/>
							<bind name="text" value="tr('IDS_IN_WAREHOUSE') + ' ' + numInStorage"/>
						</block>
					</block>
					<block>
						<style>
							<marginTop value="24px"/>
							<width value="100%"/>
							<marginBottom value="-11px"/>
							<alpha value="0.9"/>
						</style>
						<bind name="instance" value="'ParamsModifierList'; { _attributesPositive: consumable.attributesPositive, _attributesNegative: consumable.attributesNegative, _attributesNeutral: consumable.attributesNeutral, _shrinkHeight: true}"/>
					</block>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<right value="5px"/>
					</style>
					<block>
						<block>
							<bind name="visible" value="!(freeOfCharge) &amp;&amp; canBuy"/>
							<bind name="catch" value="'selectedPriceChanged'"/>
							<bind name="var" value="{selectedPriceIndex: useGold ? 1 : 0}"/>
							<bind name="watch" value="'selectedPriceIndex'; (installed ? (useGold ? 1 : 0) : selectedPriceIndex)"/>
							<bind name="watch" value="'validSelectedPriceIndex'; selectedPriceIndex &gt;= priceInfoSet.prices.length ? 0 : selectedPriceIndex"/>
							<bind name="changeDispatch" value="validSelectedPriceIndex; 'selectedPriceIndexChanged'"/>
							<bind name="action" value="'selectedPriceIndexChanged'; (priceInfoSet.prices.length &gt; 1 &amp;&amp; validSelectedPriceIndex != useGold ? ( installed ? 'changeSlotCurrency' : 'changeCurrencyPreferences' ) : '') ; {slotId: slotId, abilityId: name, useGold: (priceInfoSet.prices[validSelectedPriceIndex].currency == 'gold')}"/>
							<bind name="class" value="isLocked ? '$MouseDisable' : '$MouseEnable'"/>
							<style>
								<marginRight value="-6px"/>
								<marginTop value="-2px"/>
							</style>
							<bind name="instance" value="'AlterablePriceTag'; {_tooltipText: ( installed ? 'IDS_AUTORECHARGE_COST' : 'IDS_CONSUMABLES_COST' ) , _prices: priceInfoSet.prices, _showDiscountTag: true, _selectedPriceIndex: validSelectedPriceIndex}"/>
						</block>
						<block>
							<bind name="visible" value="freeOfCharge"/>
							<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: installed ? 'IDS_AUTORECHARGE_COST' : 'IDS_CONSUMABLES_COST'}"/>
							<style>
								<alpha value="0.7"/>
								<marginTop value="4px"/>
							</style>
							<block type="text">
								<styleClass value="$TextDefaultNM"/>
								<bind name="text" value="'IDS_FOR_FREE'"/>
							</block>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<bottom value="0px"/>
					<position value="absolute"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="ConsumableParamRow">
		<bind name="visible" value="value != -1"/>
		<style>
			<width value="100%"/>
		</style>
		<bind name="style" value="'marginTop'; _isTooltip ? '0px' : '-3px'"/>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<style>
					<alpha value="0.7"/>
				</style>
				<styleClass value="$TextParams"/>
				<bind name="text" value="ids"/>
			</block>
			<block type="text">
				<styleClass value="$TextParams"/>
				<bind name="class" value="_isTooltip ? '$AlignRight' : '$None'"/>
				<style>
					<alpha value="0.9"/>
				</style>
				<bind name="text" value="value + ' ' + measure"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="CreditsOrGoldTooltipPriceLine">
		<style>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="text" value="_title"/>
			</block>
			<block type="text">
				<bind name="visible" value="(!(_prices[0].finalPrice) &amp;&amp; !(_prices[1].finalPrice))"/>
				<styleClass value="$TextDefault"/>
				<style>
					<marginLeft value="4px"/>
				</style>
				<bind name="text" value="toLowerCase(tr('IDS_FOR_FREE'))"/>
			</block>
			<block>
				<bind name="visible" value="_prices[0].finalPrice &gt; 0"/>
				<style>
					<marginLeft value="4px"/>
				</style>
				<block>
					<bind name="instance" value="'PriceTag'; { priceInfo: _prices[0] }"/>
				</block>
				<block type="text">
					<bind name="visible" value="_prices[1].finalPrice &gt; 0"/>
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<text value="IDS_OR"/>
				</block>
				<block>
					<bind name="visible" value="_prices[1].finalPrice &gt; 0"/>
					<bind name="instance" value="'PriceTag'; { priceInfo: _prices[1] }"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ConsumablesAutoreplenishment">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'accountGold';			['resourceEntity.accountResource.evChangedGold'];		resourceEntity.accountResource.gold"/>
		<bind name="watchDH" value="'accountCredits';		['resourceEntity.accountResource.evChangedCredit'];		resourceEntity.accountResource.credits"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'shipId'; ['dockEntity.shipSelection.evShipUpdate']; dockEntity.shipSelection.currentShipId"/>
		<bind name="watchDH" value="'shipIdForModuleInset'; ['dockEntity.shipSelection.evShipViewUpdate']; dockEntity.shipSelection.currentShipIdForModuleInset"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; shipId"/>
		<bind name="watchDH" value="'maxPriceCr';		['shipOwnEntity.ownShip.evUpdateAutorecharge'];	shipOwnEntity.ownShip.autorechargeAbilitySummPrice.abils[0]"/>
		<bind name="watchDH" value="'maxPriceGold';		['shipOwnEntity.ownShip.evUpdateAutorecharge'];	shipOwnEntity.ownShip.autorechargeAbilitySummPrice.abils[1]"/>
		<bind name="watchDH" value="'nextPriceCr';		['shipOwnEntity.ownShip.evUpdateAutorecharge'];	shipOwnEntity.ownShip.autorechargeAbilityEstimatePrice.abils[0]"/>
		<bind name="watchDH" value="'nextPriceGold';	['shipOwnEntity.ownShip.evUpdateAutorecharge'];	shipOwnEntity.ownShip.autorechargeAbilityEstimatePrice.abils[1]"/>
		<bind name="watch" value="'_creditsDeficit'; -(accountCredits - nextPriceCr)"/>
		<bind name="watch" value="'_goldDeficit'; -(accountGold - nextPriceGold)"/>
		<bind name="watchDH" value="'autorechargeAbilities';	['shipOwnEntity.ownShip.evUpdateAutorecharge']; shipOwnEntity.ownShip.autorechargeAbilities"/>
		<bind name="watchDH" value="'isLocked';			['shipOwnEntity.ownShip.evUpdateLock'];	shipOwnEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'isInFormation';		['shipOwnEntity.ownShip.evUpdateLock'];	shipOwnEntity.ownShip.isInFormation"/>
		<bind name="var" value="{	_multiParagraphArrayHint: [ {_paragraphText: 'IDS_ABILITIES_REPLENISH_AUTOMATICALLY_HINT_1'}, {_paragraphText: 'IDS_ABILITIES_REPLENISH_AUTOMATICALLY_HINT_2'}, {_paragraphText: 'IDS_ABILITIES_REPLENISH_AUTOMATICALLY_HINT_3', _class: '$FontColorUnready'}],
					_multiParagraphArrayPriceHint: [{_paragraphText: 'IDS_ABILITIES_MAX_REPLENISHMENT_HINT'}, {_paragraphText: 'IDS_ABILITIES_REPLENISH_AUTOMATICALLY_HINT_3', _class: '$FontColorUnready'}]}"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap_h_no_right" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
			<block className="inner_panel" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="3px"/>
				<marginBottom value="3px"/>
			</style>
			<block>
				<style>
					<marginLeft value="6px"/>
					<marginTop value="3px"/>
				</style>
				<bind name="tooltip" value="'MultiParagraphHelpTooltip'; {_tooltipHeader: 'IDS_AUTOREPLENISHMENT_ABILITIES', _multiParagraphArray: _multiParagraphArrayHint, _paragraphText: _paragraphText}"/>
				<block className="icon_question_mark" type="native"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$MiddleAligned"/>
					<block>
						<bind name="style" value="'marginRight'; !(autorechargeAbilities) ? '12px' : '0px'"/>
						<style>
							<marginRight value="5px"/>
						</style>
						<bind name="tooltip" value="'AutoreplenishmentPriceTooltip'; {	_maxPriceCR: maxPriceCr, _maxPriceGold : maxPriceGold,
																		_nextPriceCR: nextPriceCr, _nextPriceGold: nextPriceGold,
																		_multiParagraphArray: _multiParagraphArrayPriceHint}"/>
						<block>
							<block>
								<bind name="style" value="'alpha'; (!(_hasPaidConsumes)) ? 0.6 : 1"/>
								<bind name="instance" value="'InvertableTextLine'; { _text: 'IDS_AUTOREPLANISHMENT',
																	_invert: ((_goldDeficit &gt; 0) || (_creditsDeficit &gt; 0)),
																	_normalClass: '$TextPriceMedium',
																	_invertedClass: '$TextPriceMediumDeficit'}"/>
							</block>
							<block>
								<block>
									<bind name="visible" value="nextPriceCr != 0"/>
									<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: nextPriceCr, currency: 'credits' }, _medium: true, _deficit: _creditsDeficit}"/>
								</block>
								<block>
									<bind name="visible" value="(nextPriceCr != 0) &amp;&amp; (nextPriceGold != 0)"/>
									<bind name="instance" value="'InvertableTextLine'; { _text: 'IDS_AND', 
																		_invert: ((_goldDeficit &gt; 0) || (_creditsDeficit &gt; 0)),
																		_normalClass: '$TextPriceMedium',
																		_invertedClass: '$TextPriceMediumDeficit'}"/>
								</block>
								<block>
									<bind name="visible" value="nextPriceGold != 0"/>
									<style>
										<marginLeft value="3px"/>
									</style>
									<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: nextPriceGold, currency: 'gold' }, _medium: true, _deficit: _goldDeficit}"/>
								</block>
								<style>
									<flow value="horizontal"/>
								</style>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
					</block>
					<block>
						<bind name="tooltip" value="'SimpleWarningTooltip';	isInFormation 	? {_text: tr('IDS_SET_UNREADY_' + toUpperCase(tr(divisionEntranceData.divisionType)) + '_FIRST_TO_CHANGE_CONSUMABLES')} :
															isLocked 		? {_text: tr('IDS_LEAVE_BATTLE_FIRST_TO_CHANGE_AUTOREPLENISHMENT_STATUS')}
																							: null"/>
						<style>
							<marginRight value="5px"/>
							<backgroundColor value="0x01000000"/>
						</style>
						<block>
							<bind name="class" value="isLocked || isInFormation ? '$MouseDisable' : '$MouseEnable'"/>
							<bind name="style" value="'alpha'; (!isLocked &amp;&amp; !isInFormation) ? 1 : 0.5"/>
							<block className="tab_bar_bg" type="native">
								<block>
									<style>
										<marginLeft value="2px"/>
										<marginRight value="2px"/>
									</style>
									<block>
										<style>
											<position value="absolute"/>
										</style>
										<bind name="instance" value="'AutoreplenishmentTransition'; { _autorechargeOn: autorechargeAbilities }"/>
									</block>
									<block>
										<style>
											<width value="100px"/>
											<height value="27px"/>
										</style>
										<bind name="tooltip" value="'SimpleTooltip'; !(_hasPaidConsumes) ? {tooltipText: 'IDS_AUTOREPLANISHMENT_TURN_ON_HINT_NO_PAID_CONSUMABLES'} : null; 0"/>
										<block className="status_ready_item" type="native">
											<styleClass value="$Fullsize"/>
											<bind name="style" value="'colorMatrixFilter'; (_goldDeficit &gt; 0 || _creditsDeficit &gt; 0 || (!(_hasPaidConsumes))) ? '0 -100 0 -40' : '0 0 0 0'"/>
											<bind name="label" value="autorechargeAbilities ? toUpperCase(tr('IDS_IS_TURNED_ON')) : toUpperCase(tr('IDS_TURN_ON'))"/>
											<bind name="action" value="'buttonClick'; 'autorechargeAbilities'; {isAutoAdd:true}"/>
											<bind name="selected" value="autorechargeAbilities"/>
											<bind name="enabled" value="_hasPaidConsumes"/>
											<bind name="tooltip" value="'SimpleTooltip'; !(_hasPaidConsumes) ? null
																							: {tooltipText: (_goldDeficit &gt; 0 || _creditsDeficit &gt; 0) ? 'IDS_AUTOREPLANISHMENT_TURN_ON_HINT_DEFICIT' : 'IDS_AUTOREPLANISHMENT_TURN_ON_HINT'}; 0"/>
										</block>
									</block>
									<block className="divider_v" type="native">
										<style>
											<height value="27px"/>
										</style>
									</block>
									<block className="status_not_ready_item" type="native">
										<style>
											<width value="100px"/>
											<height value="27px"/>
										</style>
										<bind name="label" value="autorechargeAbilities ? toUpperCase(tr('IDS_TURN_OFF')) : toUpperCase(tr('IDS_IS_TURNED_OFF'))"/>
										<bind name="action" value="'buttonClick'; 'autorechargeAbilities'; {isAutoAdd:false}"/>
										<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_AUTOREPLANISHMENT_TURN_OFF_HINT'}; 0"/>
										<bind name="selected" value="!autorechargeAbilities"/>
									</block>
									<style>
										<flow value="horizontal"/>
									</style>
								</block>
							</block>
						</block>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<bind name="tooltip" value="'SimpleWarningTooltip';	isInFormation	? {_text: tr('IDS_SET_UNREADY_' + toUpperCase(tr(divisionEntranceData.divisionType)) + '_FIRST_TO_CHANGE_CONSUMABLES')} :
														isLocked 		? {_text: tr('IDS_LEAVE_BATTLE_FIRST_TO_CHANGE_AUTOPURCHASE_STATUS')}
																						: null"/>
					<styleClass value="$MiddleAligned"/>
					<bind name="instance" value="'AutoPurchase'; _hasPaidConsumes ? { shipId: shipOwnEntity.ownShip.id, _autorechargeOn: autorechargeAbilities, _isConsumables: true} : null"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<bind name="visible" value="(_goldDeficit &gt; 0 || _creditsDeficit &gt; 0) &amp;&amp; autorechargeAbilities"/>
			<bind name="instance" value="'CrAndGoldDeficit'; { _goldDeficit: _goldDeficit , _creditsDeficit: _creditsDeficit, _medium: true, _bold: true}"/>
		</block>
	</block>
	<block className="ConsumableIcon">
		<bind name="visible" value="limited"/>
		<block>
			<bind name="style" value="'backgroundImage'; 'url:' + installedItem.iconPath"/>
			<style>
				<width value="60px"/>
				<height value="60px"/>
				<backgroundStretchX value="true"/>
				<backgroundStretchY value="true"/>
			</style>
		</block>
		<block>
			<style>
				<top value="0px"/>
				<right value="3px"/>
				<position value="absolute"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefaultBold"/>
				<bind name="text" value="installedItem.numConsumables + additionalConsumables"/>
			</block>
		</block>
	</block>
	<css name="$ContextGuidingTipTextMargins">
		<width value="100%"/>
		<marginTop value="16"/>
		<marginLeft value="16"/>
		<marginBottom value="12"/>
		<marginRight value="16"/>
	</css>
	<block className="ContextGuidingTipPointerAnimation">
		<styleClass value="$FullsizeAbsolute"/>
		<bind name="colorTransform" value=" {	redMultiplier: 0,
								greenMultiplier: 0,
								blueMultiplier: 0,
								alphaMultiplier: 0.5,
								redOffset: 255,
								greenOffset: 204,
								blueOffset: 102,
								alphaOffset: 0
							}"/>
		<style>
			<hitTest value="false"/>
		</style>
		<block className="contextGuidingTipAnimation" type="native"/>
	</block>
	<block className="ContextGuidingTipPointerPanel_up">
		<styleClass value="$FullsizeAbsolute"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="context_guiding_tip_line_up" type="native">
				<style>
					<width value="50%"/>
					<marginLeft value="1px"/>
				</style>
			</block>
			<block>
				<block>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginTop value="-7px"/>
						<alpha value="3.5"/>
						<marginLeft value="2px"/>
						<marginRight value="2px"/>
					</style>
					<block className="BlurMapCustomOutbound">
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
						<style>
							<position value="absolute"/>
							<width value="100%"/>
							<height value="100%"/>
							<hitTest value="false"/>
						</style>
						<bind name="visible" value="optionData.blurEnabled"/>
						<block className="mc_blurmap5_feather" type="native">
							<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
							<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
							<style>
								<width value="110%"/>
								<height value="110%"/>
								<left value="-5%"/>
								<top value="-5%"/>
							</style>
							<bind name="blurMap" value="0"/>
						</block>
					</block>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<marginTop value="-19px"/>
						<marginLeft value="11px"/>
					</style>
					<block className="ContextGuidingTipPointerAnimation">
						<styleClass value="$FullsizeAbsolute"/>
						<bind name="colorTransform" value=" {	redMultiplier: 0,
								greenMultiplier: 0,
								blueMultiplier: 0,
								alphaMultiplier: 0.5,
								redOffset: 255,
								greenOffset: 204,
								blueOffset: 102,
								alphaOffset: 0
							}"/>
						<style>
							<hitTest value="false"/>
						</style>
						<block className="contextGuidingTipAnimation" type="native"/>
					</block>
				</block>
				<block className="context_guiding_tip_pointer_up" type="native">
					<style>
						<top value="-10px"/>
					</style>
				</block>
			</block>
			<block className="context_guiding_tip_line_up" type="native">
				<style>
					<width value="50%"/>
					<marginRight value="1px"/>
				</style>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="context_guiding_tip_panel_up" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
	</block>
	<block className="ContextGuidingTipPointerPanel_down">
		<styleClass value="$FullsizeAbsolute"/>
		<block className="context_guiding_tip_panel_down" type="native">
			<styleClass value="$Fullsize"/>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<marginTop value="-2px"/>
			</style>
			<block className="context_guiding_tip_line_down" type="native">
				<style>
					<width value="50%"/>
					<marginLeft value="1px"/>
				</style>
			</block>
			<block>
				<block>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginTop value="0px"/>
						<alpha value="3.5"/>
						<marginLeft value="2px"/>
						<marginRight value="2px"/>
					</style>
					<block className="BlurMapCustomOutbound">
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
						<style>
							<position value="absolute"/>
							<width value="100%"/>
							<height value="100%"/>
							<hitTest value="false"/>
						</style>
						<bind name="visible" value="optionData.blurEnabled"/>
						<block className="mc_blurmap5_feather" type="native">
							<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
							<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
							<style>
								<width value="110%"/>
								<height value="110%"/>
								<left value="-5%"/>
								<top value="-5%"/>
							</style>
							<bind name="blurMap" value="0"/>
						</block>
					</block>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<marginTop value="22px"/>
						<marginLeft value="11px"/>
					</style>
					<block className="ContextGuidingTipPointerAnimation">
						<styleClass value="$FullsizeAbsolute"/>
						<bind name="colorTransform" value=" {	redMultiplier: 0,
								greenMultiplier: 0,
								blueMultiplier: 0,
								alphaMultiplier: 0.5,
								redOffset: 255,
								greenOffset: 204,
								blueOffset: 102,
								alphaOffset: 0
							}"/>
						<style>
							<hitTest value="false"/>
						</style>
						<block className="contextGuidingTipAnimation" type="native"/>
					</block>
				</block>
				<block className="context_guiding_tip_pointer_down" type="native"/>
			</block>
			<block className="context_guiding_tip_line_down" type="native">
				<style>
					<width value="50%"/>
					<marginRight value="1px"/>
				</style>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ContextGuidingTipPointerPanel_right">
		<styleClass value="$FullsizeAbsolute"/>
		<block className="context_guiding_tip_panel_right" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="context_guiding_tip_line_right" type="native">
				<style>
					<height value="50%"/>
					<marginTop value="2px"/>
					<right value="0px"/>
				</style>
			</block>
			<block>
				<style>
					<right value="-10px"/>
				</style>
				<block>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginRight value="3px"/>
						<alpha value="3.5"/>
						<marginTop value="2px"/>
						<marginBottom value="2px"/>
					</style>
					<block className="BlurMapCustomOutbound">
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
						<style>
							<position value="absolute"/>
							<width value="100%"/>
							<height value="100%"/>
							<hitTest value="false"/>
						</style>
						<bind name="visible" value="optionData.blurEnabled"/>
						<block className="mc_blurmap5_feather" type="native">
							<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
							<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
							<style>
								<width value="110%"/>
								<height value="110%"/>
								<left value="-5%"/>
								<top value="-5%"/>
							</style>
							<bind name="blurMap" value="0"/>
						</block>
					</block>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<marginTop value="11px"/>
						<marginLeft value="22px"/>
					</style>
					<block className="ContextGuidingTipPointerAnimation">
						<styleClass value="$FullsizeAbsolute"/>
						<bind name="colorTransform" value=" {	redMultiplier: 0,
								greenMultiplier: 0,
								blueMultiplier: 0,
								alphaMultiplier: 0.5,
								redOffset: 255,
								greenOffset: 204,
								blueOffset: 102,
								alphaOffset: 0
							}"/>
						<style>
							<hitTest value="false"/>
						</style>
						<block className="contextGuidingTipAnimation" type="native"/>
					</block>
				</block>
				<block className="context_guiding_tip_pointer_right" type="native"/>
			</block>
			<block className="context_guiding_tip_line_right" type="native">
				<style>
					<height value="50%"/>
					<marginBottom value="2px"/>
					<right value="0px"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ContextGuidingTipPointerPanel_left">
		<styleClass value="$FullsizeAbsolute"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="context_guiding_tip_line_left" type="native">
				<style>
					<height value="50%"/>
					<marginTop value="2px"/>
				</style>
			</block>
			<block>
				<block>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginLeft value="-7px"/>
						<alpha value="3.5"/>
						<marginTop value="2px"/>
						<marginBottom value="2px"/>
					</style>
					<block className="BlurMapCustomOutbound">
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
						<style>
							<position value="absolute"/>
							<width value="100%"/>
							<height value="100%"/>
							<hitTest value="false"/>
						</style>
						<bind name="visible" value="optionData.blurEnabled"/>
						<block className="mc_blurmap5_feather" type="native">
							<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
							<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
							<style>
								<width value="110%"/>
								<height value="110%"/>
								<left value="-5%"/>
								<top value="-5%"/>
							</style>
							<bind name="blurMap" value="0"/>
						</block>
					</block>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<marginTop value="11px"/>
						<marginLeft value="-21px"/>
					</style>
					<block className="ContextGuidingTipPointerAnimation">
						<styleClass value="$FullsizeAbsolute"/>
						<bind name="colorTransform" value=" {	redMultiplier: 0,
								greenMultiplier: 0,
								blueMultiplier: 0,
								alphaMultiplier: 0.5,
								redOffset: 255,
								greenOffset: 204,
								blueOffset: 102,
								alphaOffset: 0
							}"/>
						<style>
							<hitTest value="false"/>
						</style>
						<block className="contextGuidingTipAnimation" type="native"/>
					</block>
				</block>
				<block className="context_guiding_tip_pointer_left" type="native">
					<style>
						<left value="-10px"/>
					</style>
				</block>
			</block>
			<block className="context_guiding_tip_line_left" type="native">
				<style>
					<height value="50%"/>
					<marginBottom value="1px"/>
				</style>
			</block>
		</block>
		<block className="context_guiding_tip_panel_left" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
	</block>
	<block className="ContextGuidingTip">
		<bind name="var" value="{inPort: true}"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<bind name="var" value="{invisible: false}"/>
		<bind name="visible" value="!invisible"/>
		<bind name="catch" value="'evContextGuidingTipHide'; {invisible: true}"/>
		<bind name="catch" value="'evContextGuidingTipUnHide'; {invisible: false}"/>
		<style>
			<position value="absolute"/>
			<width value="340px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="mc_blurmap5" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="blurMap" value="0"/>
		</block>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="child" value="_direction ? _direction : 'no_item'; {}; {
																up: 	'ContextGuidingTipPointerPanel_up',
																down: 	'ContextGuidingTipPointerPanel_down',
																left: 	'ContextGuidingTipPointerPanel_left',
																right: 	'ContextGuidingTipPointerPanel_right',
																no_item	:'EmptyItem'}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="visible" value="_notification_desc != null &amp;&amp; _notification_header != null"/>
			<block className="button_close" type="native">
				<style>
					<top value="16"/>
					<right value="16"/>
					<marginTop value="2px"/>
					<position value="absolute"/>
					<alpha value="0.9"/>
				</style>
				<bind name="dispatch" value="'click'; 'ContextGuidingTipClose'"/>
				<bind name="action" value="'click'; 'buttonCloseClicked'; {notification_id:_notification_id}"/>
			</block>
			<block>
				<styleClass value="$ContextGuidingTipTextMargins"/>
				<block type="text">
					<styleClass value="$TextDefaultBold19NM"/>
					<styleClass value="$FontColorGolden"/>
					<style>
						<alpha value="0.9"/>
						<width value="100%"/>
						<marginRight value="16"/>
					</style>
					<bind name="text" value="(tr(_notification_header))"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<marginLeft value="2px"/>
					<marginRight value="2px"/>
					<marginBottom value="3px"/>
				</style>
			</block>
			<block>
				<styleClass value="$ContextGuidingTipTextMargins"/>
				<block type="text">
					<styleClass value="$TextDefault17NM"/>
					<style>
						<alpha value="0.7"/>
						<width value="100%"/>
						<marginBottom value="8"/>
					</style>
					<bind name="text" value="_notification_desc == null ? (tr(_notification_header)) : (tr(_notification_desc))"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ContextGuidingTipHub">
		<bind name="var" value="{reasonOnStage: _customOnStageEvent ? false : true, dhNotificationEnabled: false}"/>
		<bind name="catch" value="'addedToStage'; 		!_customOnStageEvent ? {reasonOnStage: true}  : {}"/>
		<bind name="catch" value="'removedFromStage'; 	!_customOnStageEvent ? {reasonOnStage: false} : {}"/>
		<bind name="catch" value="'ContextGuidingReasonOpen'; {reasonOnStage: true}"/>
		<bind name="catch" value="'ContextGuidingReasonClose'; {reasonOnStage: false}"/>
		<bind name="var" value="{coachScreenActive: false}"/>
		<bind name="collectionDH" value="CC.coach; 'coachCollection'"/>
		<bind name="entityDH" value="'coachEntity'; coachCollection[0].id"/>
		<bind name="watchDH" value="'coachScreenActive'; ['coachEntity.coach.evShow']; coachEntity.coach.show"/>
		<bind name="catch" value="'evHideCoachScreen'; {coachScreenActive: false}"/>
		<bind name="firstEntityDH" value="'dockStateEntity'; CC.dockState"/>
		<bind name="watchDH" value="'dockStateName'; ['dockStateEntity.dockState.evUpdate']; dockStateEntity.dockState.stateName"/>
		<bind name="primaryEntityDH" value="'notificationEntity'; CC.contextGuidingTip; _tooltipID"/>
		<bind name="watch" value="'notificationEnabled'; dhNotificationEnabled &amp;&amp; reasonOnStage &amp;&amp; _extraCondition &amp;&amp; dockStateName == 'dock' &amp;&amp; !coachScreenActive"/>
		<bind name="changeDispatch" value="notificationEnabled; notificationEnabled ? 'ContextGuidingTipOpen' : 'ContextGuidingTipClose'; {}; SC.Common.UBSCOPE_EVENT_DIRECTIONS.NONE"/>
		<bind name="watchDH" value="'dhNotificationEnabled'; ['notificationEntity.contextGuidingTip.evActiveChanged'] ; notificationEntity.contextGuidingTip.active == true ? true : false "/>
		<bind name="action" value="'ContextGuidingTipOpen'; 		'ContextGuidingTipOpen';	 							{ notification_id:_tooltipID }"/>
		<bind name="action" value="'ContextGuidingTipClose'; 	'ContextGuidingTipClose';							 	{ notification_id:_tooltipID }"/>
		<bind name="action" value="'ContextGuidingTipComplete';	'ContextGuidingTipComplete'; 							{ notification_id:_tooltipID }"/>
		<bind name="action" value="'removedFromStage'; 			!_customOnStageEvent ? 'ContextGuidingTipClose' : '';	{ notification_id:_tooltipID }"/>
		<styleClass value="$FullsizeAbsolute"/>
		<bind name="popupNoCache" value="'ContextGuidingTip';
								{
									_notification_id:		_tooltipID,
									_notification_header:	notificationEntity.contextGuidingTip.header,
									_notification_desc:		notificationEntity.contextGuidingTip.desc,
									_direction:				_tipPositioning == 'top'	?	'down' :
															_tipPositioning == 'bottom'	?	'up' :
															_tipPositioning == 'left'	?	'right'
																						:	'left'
								};

								1;
								{
									type: 'lesta.unbound.bindings.popup.UbNativeReasonPopupSpacingComponent',
									params:
									{
										directionsPriority: _keepOnNotFit ? [_tipPositioning] : [_tipPositioning, 'empty'],
										reasonOffsetTop:	_offset,
										reasonOffsetBottom: _offset,
										reasonOffsetRight:	_offset,
										reasonOffsetLeft:	_offset,

										screenOffsetTop:	_tipPositioning == 'bottom'	? _screenOffset : 0,
										screenOffsetBottom: _tipPositioning == 'top'	? _screenOffset : 0,
										screenOffsetRight:	_tipPositioning == 'left'	? _screenOffset : 0,
										screenOffsetLeft:	_tipPositioning == 'right'	? _screenOffset : 0
									}
								};
								{
									reason:
									{



										click:					{ 	action: _hideOnReasonClick ? 'hide' : 'none', 
																	params: { duration:0.1, startProps: { alpha:1, x:0, y:0 }, finishProps: { alpha:0, x:0, y: -5 }}
																}
									},

									reasonScope:
									{
										ContextGuidingTipOpen: 		{ 	action: 'show', 
																		params: { duration:0.3, startProps: { alpha:0, x:0, y:10 }, finishProps: { alpha:1, x:0, y: 0 }, delay: _onShowDelay ? _onShowDelay : 0.5}},

										ContextGuidingTipClose: 	{ 	action: 'hide',
																		params: { duration:0.0, startProps: { alpha:1, x:0, y:0 }, finishProps: { alpha:0, x:0, y: -5 }}},

										ContextGuidingTipComplete: 	{ 	action: 'hide',
																		params: { duration:0.0, startProps: { alpha:1, x:0, y:0 }, finishProps: { alpha:0, x:0, y: -5 }}}

									}
								}
	"/>
	</block>
	<block className="BattleChooserContextGuidingTip">
		<bind name="var" value="{randomFightCGT : SC.Context_guiding_tip.TIP_TYPES.RANDOM_FIGHT_BTN}"/>
		<bind name="firstEntityDH" value="'dockDataEntity'; CC.dockData"/>
		<bind name="var" value="{wasBattleChooserOpened : false}"/>
		<bind name="watchDH" value="'wasBattleChooserOpened'; ['dockDataEntity.dockData.evBattleChooserChanged'] ; dockDataEntity.dockData.battleChooserVisible || wasBattleChooserOpened ? true : false"/>
		<bind name="watchDH" value="'battleChooserVisible'; ['dockDataEntity.dockData.evBattleChooserChanged'] ; dockDataEntity.dockData.battleChooserVisible"/>
		<bind name="changeDispatch" value="wasBattleChooserOpened == battleChooserVisible; wasBattleChooserOpened ? 'ContextGuidingTipComplete' : ''; {_eventTooltipID: randomFightCGT}; SC.Common.UBSCOPE_EVENT_DIRECTIONS.DOWN"/>
		<styleClass value="$FullsizeAbsolute"/>
		<bind name="instance" value="'ContextGuidingTipHub'; battleChooserVisible ? {
																	_tooltipID: randomFightCGT,
																	_tipPositioning: 'bottom', 
																	_extraCondition: true, 
																	_offset: -3, 
																	_screenOffset : 0,
																	_customOnStageEvent : false
																	}
																: null
	"/>
	</block>
	<block className="ContextGuidingTipModuleTreeElement">
		<styleClass value="$FullsizeAbsolute"/>
		<bind name="dispatch" value="'addedToStage'; 'evModulesScrollToIndexEvent'; {moduleScrollIndex: _moduleIndex}; SC.Common.UBSCOPE_EVENT_DIRECTIONS.UP; 0.05"/>
		<bind name="dispatch" value="'evModuleMouseWheel'; 'evContextGuidingTipHide'; {invisible: true}; SC.Common.UBSCOPE_EVENT_DIRECTIONS.DOWN"/>
		<bind name="dispatch" value="'evModuleMouseWheelReset'; 'evContextGuidingTipUnHide'; {invisible: false}; SC.Common.UBSCOPE_EVENT_DIRECTIONS.DOWN"/>
		<bind name="primaryEntityDH" value="'notificationEntity'; CC.contextGuidingTip; _tooltipID"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'inset'; ['dockEntity.insetComponent.evUpdate']; dockEntity.insetComponent.inset"/>
		<bind name="watchDH" value="'dhNotificationEnabled'; ['notificationEntity.contextGuidingTip.evActiveChanged'] ; notificationEntity.contextGuidingTip.active &amp;&amp; inset == LobbyConstants.SHIP_MODULES "/>
		<bind name="changeDispatch" value="dhNotificationEnabled; 'evModulesScrollToIndexEvent'; {moduleScrollIndex: _moduleIndex}; SC.Common.UBSCOPE_EVENT_DIRECTIONS.UP; true"/>
		<bind name="instance" value=" 'ContextGuidingTipHub'; {
												_tooltipID: _tooltipID,
												_tipPositioning: _tipPositioning, 
												_extraCondition: true,
												_offset: _offset
											}"/>
	</block>
	<block className="ListWithBullets">
		<style>
			<width value="100%"/>
		</style>
		<bind name="repeat" value="_bulletsArr; 'ListWithBulletsElement'; {_width: _width, _bulletType: _bulletType, _textClass: _textClass}"/>
	</block>
	<block className="ListWithBulletsElement">
		<bind name="visible" value="_text || ($value.length &gt; 0)"/>
		<bind name="watch" value="'bulletIndex'; _bulletIndex ? _bulletIndex : false"/>
		<bind name="style" value="'width'; _width ? _width : '100%'"/>
		<bind name="style" value="'marginBottom'; _marginBottom ? _marginBottom : '12px'"/>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<bind name="visible" value="_bulletType != 'none'"/>
				<style>
					<marginRight value="10px"/>
					<width value="100%f"/>
				</style>
				<bind name="class" value=" _textClass ? _textClass : '$TextDefaultNM'"/>
				<bind name="text" value="_bulletType ? _bulletType : '•'"/>
			</block>
			<block type="text">
				<style>
					<leading value="-3"/>
					<width value="100%"/>
				</style>
				<bind name="class" value=" _textClass ? _textClass : '$TextDefaultNM'"/>
				<bind name="text" value="_text	? bulletIndex == true	? _text + ($index + 1) 
														: _text
								: $value"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="PlayerAchievements">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'achievements'; 'achievementsCollection'"/>
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerAchievements"/>
		<styleClass value="$Fullsize"/>
		<bind name="stageSize"/>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<height value="100%"/>
				<width value="500px"/>
				<marginTop value="60px"/>
			</style>
			<bind name="style" value="'width'; (stageWidth*0.7) + 'px'"/>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<marginBottom value="24px"/>
					<width value="1280:800,1920:1400aw"/>
				</style>
				<bind name="style" value="'maxHeight'; (stageHeight - 130)/2"/>
				<bind name="instance" value="'EarnedAchievements'; {}"/>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<width value="1280:800,1920:1400aw"/>
					<marginBottom value="24px"/>
					<height value="100%"/>
				</style>
				<bind name="instance" value="'AllAchievements'; {}"/>
			</block>
		</block>
	</block>
	<block className="EarnedAchievements">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'achievements'; 'achievementsCollection'"/>
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerAchievements"/>
		<bind name="name" value="'EarnedAchievements'"/>
		<style>
			<width value="100%"/>
			<height value="100%f"/>
		</style>
		<block type="text">
			<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$TextHeaderHugeWhite"/>
			<bind name="class" value="'$Bold'"/>
			<bind name="class" value="(listAchievementsNotEarnedSortByName.length == 0) ? '$FontColorGolden' : '$None'"/>
			<bind name="text" value="(listAchievementsNotEarnedSortByName.length == 0) ? 'IDS_ALL_ACHIEVEMENTS_EARNED' : 'IDS_MY_ACHIEVEMENTS'"/>
		</block>
		<block>
			<bind name="visible" value="(listAchievementsEarnedSortByAmount.length &gt; 0)"/>
			<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginBottom value="15px"/>
			</style>
			<bind name="var" value="{_curItemIndex: 0,
					_direction: false}"/>
			<bind name="catch" value="'ItemChooser.earnedAchievementsSortSelected'"/>
			<bind name="instance" value="'ItemChooser'; {	_items: ['IDS_SORT_BY_AMOUNT', 'IDS_SORT_BY_DATE'], _choosedItemRenderer: 'BluishTextChoosedItemRenderer', _listItemRenderer: 'TextListItemRenderer',
											curIndex: _curItemIndex, onItemSelectedEvent: 'earnedAchievementsSortSelected', _itemChooserTooltipText: 'IDS_HINT_ACHIEVEMENTS_SORT'}"/>
		</block>
		<block type="text">
			<bind name="visible" value="(listAchievementsEarnedSortByAmount.length == 0)"/>
			<bind name="appear" value="'addedToStage'; 0.15; 0.12; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<style>
				<marginBottom value="13px"/>
				<marginTop value="12px"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$TextHeader"/>
			<bind name="class" value="'$FontColorBlueish'"/>
			<bind name="text" value="'IDS_NO_ACHIEVEMENTS_EARNED'"/>
		</block>
		<block>
			<styleClass value="$DefaultScrollBar"/>
			<style>
				<width value="100%"/>
				<height value="100%f"/>
				<overflow value="scroll"/>
			</style>
			<block>
				<bind name="appear" value="'addedToStage'; 0.15; 0.12; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
				<style>
					<flow value="htile"/>
					<align value="center"/>
					<width value="100%"/>
				</style>
				<bind name="repeat" value="_curItemIndex ? listAchievementsEarnedSortByDate : listAchievementsEarnedSortByAmount; 'Achievement'; {_isInItemList: true, _isEarned: true}; !_direction"/>
			</block>
			<block type="text">
				<bind name="visible" value="listAchievementsEarnedSpecialSortByDate.length &gt; 0"/>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$TextHeaderWhiteBold"/>
				<bind name="class" value="'$FontColorGrey'"/>
				<style>
					<marginBottom value="3px"/>
					<marginTop value="-8px"/>
				</style>
				<text value="IDS_SPECIAL"/>
			</block>
			<block>
				<bind name="appear" value="'addedToStage'; 0.15; 0.12; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
				<style>
					<flow value="htile"/>
					<align value="center"/>
					<width value="100%"/>
				</style>
				<bind name="repeat" value="_curItemIndex ? listAchievementsEarnedSpecialSortByDate : listAchievementsEarnedSpecialSortByAmount; 'Achievement'; {_isInItemList: true, _isEarned: true}; !_direction"/>
			</block>
		</block>
	</block>
	<block className="AllAchievements">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'achievements'; 'achievementsCollection'"/>
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerAchievements"/>
		<bind name="name" value="'AllAchievements'"/>
		<style>
			<width value="100%"/>
			<height value="100%"/>
		</style>
		<block type="text">
			<bind name="appear" value="'addedToStage'; 0.15; 0.24; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$TextHeaderHugeWhite"/>
			<bind name="class" value="'$Bold'"/>
			<bind name="text" value="'IDS_ALL_ACHIEVEMENTS'"/>
		</block>
		<block>
			<bind name="visible" value="(listAchievementsAllSortByType.length &gt; 1)"/>
			<bind name="appear" value="'addedToStage'; 0.15; 0.24; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginBottom value="15px"/>
			</style>
			<bind name="var" value="{_curItemIndex: 0,
					_direction: false}"/>
			<bind name="catch" value="'ItemChooser.notEarnedAchievementsSortSelected'"/>
			<bind name="instance" value="'ItemChooser'; {	_items: ['IDS_SORT_BY_TYPE', 'IDS_SORT_BY_NAME'], _choosedItemRenderer: 'BluishTextChoosedItemRenderer', _listItemRenderer: 'TextListItemRenderer',
											curIndex: _curItemIndex, onItemSelectedEvent: 'notEarnedAchievementsSortSelected', _itemChooserTooltipText: 'IDS_HINT_ACHIEVEMENTS_SORT'}"/>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; 0.32; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<styleClass value="$DefaultScrollBar"/>
			<style>
				<width value="100%"/>
				<height value="100%f"/>
				<overflow value="scroll"/>
			</style>
			<block>
				<style>
					<flow value="htile"/>
					<align value="center"/>
					<width value="100%"/>
				</style>
				<bind name="repeat" value="_curItemIndex ? listAchievementsAllSortByName : listAchievementsAllSortByType; 'Achievement'; {_isInItemList: true, _iconSize: '65px'}; !_direction"/>
			</block>
			<block type="text">
				<bind name="visible" value="listAchievementsAllSpecialSortByName.length &gt; 0"/>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$TextHeaderWhiteBold"/>
				<bind name="class" value="'$FontColorGrey'"/>
				<style>
					<marginBottom value="3px"/>
					<marginTop value="-8px"/>
				</style>
				<text value="IDS_SPECIAL"/>
			</block>
			<block>
				<style>
					<flow value="htile"/>
					<align value="center"/>
					<width value="100%"/>
				</style>
				<bind name="repeat" value="_curItemIndex ? listAchievementsAllSpecialSortByName : listAchievementsAllSpecialSortByType; 'Achievement'; {_isInItemList: true, _iconSize: '65px'}; !_direction"/>
			</block>
		</block>
	</block>
	<css name="$TextAccentWhiteBold">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="25"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$LocalTextHeaderUnready">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="19"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFF9933"/>
	</css>
	<block className="PlayerRanks">
		<styleClass value="$Fullsize"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesStats'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'rankedBattlesRanks';  selectedIndex + 1; 'rankInfo'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'dockDefaultValues'; 'dockInitData,dockUpdateData'"/>
		<bind name="catch" value="'mainCarouselElement.selectedIndexChanged'"/>
		<bind name="watch" value="'starsForNextSeason'; rankedBattlesSeason.denyReason &amp; RBDeny.SEASON_OVER ? rankedBattlesSeason.startRank - rankedBattlesStats.rank : rankedBattlesStats.totalStars"/>
		<style>
			<width value="66sw"/>
			<height value="100%"/>
			<maxWidth value="1240"/>
		</style>
		<styleClass value="$MiddleAligned"/>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="6sh"/>
			</style>
			<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<block className="PlayerRanksHeader">
				<style>
					<width value="100%"/>
				</style>
				<bind name="watch" value="'headerText'; (rankedBattlesSeason.denyReason &amp; RBDeny.SEASON_OVER)	? (((rankedBattlesStats.startRank - rankedBattlesStats.rank) &gt; 0)	? rankedBattlesStats.messageStartWithStars
																																							: ' ')
																						: (rankedBattlesSeason.denyReason &amp; RBDeny.SEASON_NOT_STARTED)	? rankedBattlesStats.messageStartFromRank
																						: rankedBattlesStats.rankInSeasonMessage"/>
				<block type="text">
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
					</style>
					<styleClass value="$TextHeaderHugeWhite"/>
					<bind name="class" value="'$Bold'"/>
					<bind name="text" value="headerText"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="2sh"/>
			</style>
			<block>
				<bind name="visible" value="(rankedBattlesSeason.active &amp;&amp; (rankInfo.starsToNext &gt; 0))"/>
				<bind name="appear" value="'addedToStage'; 0.15; 0.12; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'RankStars'; rankedBattlesSeason.active ? {_rankId: selectedIndex + 1} : null"/>
			</block>
			<block>
				<bind name="visible" value="(!(rankedBattlesSeason.active) &amp;&amp; ((rankedBattlesStats.startRank - rankedBattlesStats.rank) &gt; 0)|| (rankedBattlesStats.totalStars &gt; 0))"/>
				<bind name="appear" value="'addedToStage'; 0.15; 0.12; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'TotalEarnedStars'; !(rankedBattlesSeason.active) &amp;&amp; (starsForNextSeason &gt; 0) ? { _starsCount: starsForNextSeason } : null"/>
			</block>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; 0.18; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<style>
				<width value="100%"/>
				<marginTop value="1sh"/>
			</style>
			<block className="SeasonDateLabel">
				<bind name="countdown" value="	(rankedBattlesSeason.active)	? rankedBattlesSeason.finishTime
														: rankedBattlesSeason.startTime; 'countTime'; 'HIGHEST,WITH_DAYS'; ''; (rankedBattlesSeason.active) ? '' : 'ACC'"/>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<styleClass value="$MiddleAligned"/>
					<bind name="style" value="'alpha'; (!(rankedBattlesSeason.denyReason &amp; RBDeny.NO_SEASON) &amp;&amp;  rankedBattlesSeason.active) ? 1 : 0.75"/>
					<bind name="class" value="(!(rankedBattlesSeason.denyReason &amp; RBDeny.NO_SEASON) &amp;&amp; rankedBattlesSeason.active) ? '$TextHeaderWhite' : '$TextAccentWhiteBold'"/>
					<bind name="text" value="(rankedBattlesSeason.denyReason &amp; RBDeny.SEASON_OVER)	? tr('IDS_NO_SEASON_PLANNED')
																				: (rankedBattlesSeason.active)	? tr('IDS_TILL_SEASON_ENDS') + ' ' + countTime + (rankedBattlesSeason.active &amp;&amp; rankedBattlesStats.participated ? '.' : '')
																												: tr('IDS_SEASON_STARTS_IN') + ' ' + countTime"/>
				</block>
				<block>
					<bind name="visible" value="rankedBattlesSeason.active &amp;&amp; rankedBattlesStats.participated"/>
					<bind name="watch" value="'battleCounter'; format(dockDefaultValues.rankBattlesCount, -1)"/>
					<styleClass value="$MiddleAligned"/>
					<block>
						<block type="text">
							<styleClass value="$TextHeaderWhite"/>
							<text value="IDS_YOUR_BEST_RANK_IN_SEASON"/>
						</block>
						<block>
							<style>
								<marginLeft value="3px"/>
								<marginTop value="2px"/>
							</style>
							<bind name="instance" value="'IconRankSmall'; { _rankId: rankedBattlesStats.rankBest, _seasonId: rankedBattlesStats.seasonId}"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block type="text">
						<style>
							<marginLeft value="13px"/>
						</style>
						<styleClass value="$TextHeaderWhite"/>
						<bind name="text" value="subst('IDS_RANK_BATTLE_COUNTER', [], {count: battleCounter}, dockDefaultValues.rankBattlesCount)"/>
					</block>
					<block className="button_dock" type="native">
						<styleClass value="$FullsizeAbsolute"/>
						<style>
							<marginBottom value="-6px"/>
							<marginTop value="-2px"/>
							<marginLeft value="-6px"/>
							<marginRight value="-6px"/>
						</style>
						<bind name="name" value="'ButtonGoToRankBattleStats'"/>
						<bind name="action" value="'click'; 'changeInset'; {inset : LobbyConstants.PLAYER_PROFILE, page : LobbyConstants.PLAYER_PROFILE_SUMMARY}"/>
						<bind name="dispatch" value="'click'; 'setBattleType'; {_curItemIndex: 2}"/>
						<bind name="tooltip" value="'MouseInstructionTooltip';  {_multiParagraphArray: [ {_paragraphText: 'IDS_SEE_MORE_DETAILS_ABOUT_SEASON' } ],
														_mouseInstructions: [{_type: 'left', _instructionText: 'IDS_OPEN_RANK_BATTLES_STATS'}],
														_maxWidth: 300}"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block type="text">
				<bind name="visible" value="((rankedBattlesSeason.active) &amp;&amp; !(rankedBattlesStats.participated) &amp;&amp; (starsForNextSeason &gt; 0))"/>
				<style>
					<width value="100%"/>
					<textAlign value="center"/>
					<marginTop value="-10%"/>
				</style>
				<styleClass value="$TextHeaderWhite"/>
				<bind name="text" value="'IDS_ACTIVATE_RANKED_BATTLE_SEASON'"/>
			</block>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; 0.3; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'rankedBattlesRanks'; 'ranksCollection'"/>
			<style>
				<marginTop value="1sh"/>
				<height value="100%f"/>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'ProfileCarousel'; (rankedBattlesSeason.denyReason &amp; RBDeny.SEASON_OVER) ? null : {_mainCarouselElementName: 'RanksCarouselMainBlock', _rewardsCarouselElementName: 'RanksCarouselRewardsBlock',
											_carouselData: ranksCollection, selectedIndex: selectedIndex &gt;= 0 ? selectedIndex : rankedBattlesStats.rank}"/>
		</block>
	</block>
	<block className="PlayerRanksHeader">
		<style>
			<width value="100%"/>
		</style>
		<bind name="watch" value="'headerText'; (rankedBattlesSeason.denyReason &amp; RBDeny.SEASON_OVER)	? (((rankedBattlesStats.startRank - rankedBattlesStats.rank) &gt; 0)	? rankedBattlesStats.messageStartWithStars
																																							: ' ')
																						: (rankedBattlesSeason.denyReason &amp; RBDeny.SEASON_NOT_STARTED)	? rankedBattlesStats.messageStartFromRank
																						: rankedBattlesStats.rankInSeasonMessage"/>
		<block type="text">
			<style>
				<width value="100%"/>
				<textAlign value="center"/>
			</style>
			<styleClass value="$TextHeaderHugeWhite"/>
			<bind name="class" value="'$Bold'"/>
			<bind name="text" value="headerText"/>
		</block>
	</block>
	<block className="SeasonDateLabel">
		<bind name="countdown" value="	(rankedBattlesSeason.active)	? rankedBattlesSeason.finishTime
														: rankedBattlesSeason.startTime; 'countTime'; 'HIGHEST,WITH_DAYS'; ''; (rankedBattlesSeason.active) ? '' : 'ACC'"/>
		<style>
			<width value="100%"/>
		</style>
		<block type="text">
			<styleClass value="$MiddleAligned"/>
			<bind name="style" value="'alpha'; (!(rankedBattlesSeason.denyReason &amp; RBDeny.NO_SEASON) &amp;&amp;  rankedBattlesSeason.active) ? 1 : 0.75"/>
			<bind name="class" value="(!(rankedBattlesSeason.denyReason &amp; RBDeny.NO_SEASON) &amp;&amp; rankedBattlesSeason.active) ? '$TextHeaderWhite' : '$TextAccentWhiteBold'"/>
			<bind name="text" value="(rankedBattlesSeason.denyReason &amp; RBDeny.SEASON_OVER)	? tr('IDS_NO_SEASON_PLANNED')
																				: (rankedBattlesSeason.active)	? tr('IDS_TILL_SEASON_ENDS') + ' ' + countTime + (rankedBattlesSeason.active &amp;&amp; rankedBattlesStats.participated ? '.' : '')
																												: tr('IDS_SEASON_STARTS_IN') + ' ' + countTime"/>
		</block>
		<block>
			<bind name="visible" value="rankedBattlesSeason.active &amp;&amp; rankedBattlesStats.participated"/>
			<bind name="watch" value="'battleCounter'; format(dockDefaultValues.rankBattlesCount, -1)"/>
			<styleClass value="$MiddleAligned"/>
			<block>
				<block type="text">
					<styleClass value="$TextHeaderWhite"/>
					<text value="IDS_YOUR_BEST_RANK_IN_SEASON"/>
				</block>
				<block>
					<style>
						<marginLeft value="3px"/>
						<marginTop value="2px"/>
					</style>
					<bind name="instance" value="'IconRankSmall'; { _rankId: rankedBattlesStats.rankBest, _seasonId: rankedBattlesStats.seasonId}"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block type="text">
				<style>
					<marginLeft value="13px"/>
				</style>
				<styleClass value="$TextHeaderWhite"/>
				<bind name="text" value="subst('IDS_RANK_BATTLE_COUNTER', [], {count: battleCounter}, dockDefaultValues.rankBattlesCount)"/>
			</block>
			<block className="button_dock" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<marginBottom value="-6px"/>
					<marginTop value="-2px"/>
					<marginLeft value="-6px"/>
					<marginRight value="-6px"/>
				</style>
				<bind name="name" value="'ButtonGoToRankBattleStats'"/>
				<bind name="action" value="'click'; 'changeInset'; {inset : LobbyConstants.PLAYER_PROFILE, page : LobbyConstants.PLAYER_PROFILE_SUMMARY}"/>
				<bind name="dispatch" value="'click'; 'setBattleType'; {_curItemIndex: 2}"/>
				<bind name="tooltip" value="'MouseInstructionTooltip';  {_multiParagraphArray: [ {_paragraphText: 'IDS_SEE_MORE_DETAILS_ABOUT_SEASON' } ],
														_mouseInstructions: [{_type: 'left', _instructionText: 'IDS_OPEN_RANK_BATTLES_STATS'}],
														_maxWidth: 300}"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="RanksCarouselMainBlock">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'rankedBattlesRanks'; 'ranksCollection'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesStats'"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<params>
				<param name="name" value="RanksCarouselMainBlock"/>
			</params>
			<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerRanksCarousel; ''; 101"/>
			<bind name="event" value="'profileCarousel.scrollOneUnitLeft'; scrollLeftByOneUnit"/>
			<bind name="event" value="'profileCarousel.scrollOneUnitRight'; scrollRightByOneUnit"/>
			<style>
				<width value="100%f"/>
				<overflow value="scroll"/>
				<scrollArea value="ModernScrollAreaHorizontal"/>
				<scrollbarController value="lesta.unbound.style.UbScrollingControllerTouch"/>
				<layout value="lesta.unbound.layout.measure.CarouselLayout"/>
				<wheelScrollSpeed value="101"/>
				<revertFlow value="true"/>
				<itemWidth value="100px"/>
				<itemHeight value="133px"/>
			</style>
			<bind name="changeDispatch" value="selectedIndex; 'mainCarouselElement.selectedIndexChanged'; {selectedIndex: selectedIndex}"/>
			<bind name="generator" value="ranksCollection; 'RankCarouselItem'; {onCarouselItemClick: onCarouselItemClick, _selectedIndex: selectedIndex}"/>
			<bind name="var" value="{initialSelectedIndex:-1}"/>
			<bind name="changeDispatch" value="rankedBattlesStats.rank; 'rankedBattlesStatsChanged'"/>
			<bind name="dispatch" value="'rankedBattlesStatsChanged'; 'evSelectedIndexChanged'; initialSelectedIndex == -1 ? {initialSelectedIndex: ranksCollection.length - rankedBattlesStats.rank - 3} : null; 2; 0.1"/>
			<bind name="catch" value="'evSelectedIndexChanged'"/>
			<bind name="scrollToIndex!" value="initialSelectedIndex"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="RankCarouselItem">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesStats'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'rankedBattlesRanks';  $index + 1; 'rankInfo'"/>
		<style>
			<width value="100px"/>
			<height value="133px"/>
		</style>
		<block>
			<bind name="event" value="'click'; onCarouselItemClick; $index"/>
			<bind name="tooltip" value="'MouseInstructionTooltip';  {_multiParagraphArray: (!(rankInfo.isSavePoint) 	? [ {_paragraphText: subst('IDS_RANK_X_IN_SEASON_TOOLTIP', [], {rank: id, league: rankInfo.leagueId })}]
                                                                                                    : [ {_paragraphText: subst('IDS_RANK_X_IN_SEASON_TOOLTIP', [], {rank: id, league: rankInfo.leagueId })}, {_paragraphText:'IDS_FIREPROOF_RANK'}]),
                                                    _mouseInstructions: (($index == _selectedIndex) ? null
                                                                                                    : [{_type: 'left', _instructionText: 'IDS_TOOLTIP_ICON_AVAILABLE_RANK'}]),
                                                    _maxWidth: 250}"/>
			<style>
				<marginLeft value="26px"/>
				<marginRight value="26px"/>
			</style>
			<bind name="watch" value="'isLockedState'; ((rankedBattlesStats.rank &gt; ($index + 1)) || (rankedBattlesSeason.denyReason &amp; RBDeny.NO_SEASON))"/>
			<bind name="watch" value="'anchorPlateIcon'; 	isLockedState			? 'locked':
											rankInfo.id == 1 		? 'top' :
											rankInfo.leagueId == 1 	? 'big' :
											rankInfo.leagueId == 2 	? 'medium':
											rankInfo.leagueId == 3 	? 'normal'
																	: 'small'"/>
			<block className="buttons_rank_outer" type="native">
				<styleClass value="$MiddleAligned"/>
				<params>
					<param name="name" value="buttons_rank_outer"/>
				</params>
				<bind name="name" value="'carouselRankItem' + id"/>
				<bind name="selected" value="$index == _selectedIndex"/>
				<bind name="gotoAndStop!" value="anchorPlateIcon"/>
				<block>
					<styleClass value="$MiddleAlignedAbsolutely"/>
					<block>
						<bind name="visible" value="!(isLockedState)"/>
						<styleClass value="$MiddleVAligned"/>
						<styleClass value="$MiddleAlignedAbsolutely"/>
						<style>
							<hitTest value="false"/>
							<width value="38px"/>
							<height value="38px"/>
							<backgroundStretchX value="true"/>
							<backgroundStretchY value="true"/>
						</style>
						<bind name="transition" value="($index == _selectedIndex); 0.1; {width: 32, height: 32, top: 50}; {width: 38, height: 38, top: 50}"/>
						<bind name="style" value="'backgroundImage'; (rankedBattlesSeason.isJuniorSeason != true) 	? 'url:../ranks/senior_season/icon_rank_medium_' + (rankInfo.id) + '.png'
																									: 'url:../ranks/junior_season/icon_rank_medium_' + (rankInfo.id) + '.png'"/>
					</block>
				</block>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<marginTop value="-8px"/>
				</style>
				<block>
					<styleClass value="$MiddleAligned"/>
					<bind name="transition" value="$index == _selectedIndex;	0.1; {top: -8}; {top: -3}"/>
					<style>
						<position value="absolute"/>
					</style>
					<block type="text">
						<bind name="class" value="$index == _selectedIndex 	? '$TextHeaderBold' :  (isComingSoon ? '$TextHeaderBigDefault' : '$TextHeaderBigDefault') "/>
						<bind name="text" value="id"/>
					</block>
				</block>
				<block>
					<style>
						<marginTop value="26px"/>
					</style>
					<bind name="fade" value="$index == _selectedIndex; 0.1; {alpha: 0}; {alpha: 1}"/>
					<block>
						<style>
							<position value="absolute"/>
							<bottom value="-2px"/>
							<height value="20px"/>
							<width value="100%"/>
						</style>
						<block className="BlurMapCustom">
							<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
							<styleClass value="$FullsizeAbsolute"/>
							<style>
								<hitTest value="false"/>
							</style>
							<bind name="visible" value="optionData.blurEnabled"/>
							<block className="mc_blurmap_empty" type="native">
								<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
								<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
								<styleClass value="$Fullsize"/>
								<bind name="blurMap" value="0"/>
							</block>
						</block>
					</block>
					<block className="scroll_arrow" type="native"/>
				</block>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<top value="74px"/>
					<left value="50%"/>
					<hitTest value="false"/>
				</style>
				<bind name="style" value="'alpha'; (rankedBattlesStats.rankBest - 1) &lt;= $index ? 1 : 0.4"/>
				<bind name="visible" value="rankInfo.isSavePoint"/>
				<bind name="transition" value="$index == _selectedIndex; 0.1; {scaleX: 0.89, scaleY: 0.89, top: 0}; {scaleX: 0.945, scaleY: 0.945, top:2}"/>
				<block className="icon_issued_small" type="native">
					<innerBind elementName="item.item" name="text" value="'IDS_PROOF_RANK'"/>
					<bind name="gotoAndPlay!" value="'issued'"/>
				</block>
			</block>
		</block>
	</block>
	<block className="RanksCarouselRewardsBlock">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesStats'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'rankedBattlesRanks';  _selectedIndex + 1; 'rankInfo'"/>
		<bind name="appear" value="'addedToStage'; 0.15; 0.42; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
		<style>
			<width value="100%"/>
			<marginTop value="18px"/>
		</style>
		<bind name="style" value="'colorMatrixFilter'; ((_selectedIndex + 1) &lt; rankedBattlesStats.rankBest) ? '0 -80 0 0' : '0 0 0 0'"/>
		<block>
			<bind name="fade" value="(_selectedIndex+1); 0.25; {alpha: 0.1, top: 15}; {alpha: 1, top: 0}"/>
			<styleClass value="$MiddleAligned"/>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<marginBottom value="3sh"/>
				</style>
				<bind name="instance" value="'RankStarCarouselShipsLevelsCondition'; {_rankId: _selectedIndex + 1}"/>
			</block>
			<block>
				<bind name="visible" value="!(rankInfo.starLossPlace == 0 &amp;&amp; rankInfo.starEarnPlace == 0)"/>
				<style>
					<marginBottom value="3sh"/>
				</style>
				<bind name="instance" value="'RankStarEarnLossCondition'; {_rankId: _selectedIndex + 1}"/>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'RankRewardGiftbox'; (rankInfo.rewards.length + rankInfo.rewardsSpecial.length &gt; 0) ? {_rankId: _selectedIndex + 1, _state: ((((_selectedIndex + 1) &lt; rankedBattlesStats.rankBest) || !(rankedBattlesStats.participated)) ? 'not_issued' : 'issued')} : null"/>
			</block>
		</block>
	</block>
	<block className="RankRewardGiftbox">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'rankedBattlesRanks';  _rankId; 'rankInfo'"/>
		<block type="text">
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$TextHeaderBold"/>
			<style>
				<marginBottom value="6px"/>
			</style>
			<bind name="class" value="'$FontSizeHeader3'"/>
			<bind name="text" value="'IDS_REWARD_FOR_RANK'"/>
		</block>
		<block>
			<bind name="name" value="'reward_for_rank'"/>
			<styleClass value="$MiddleAligned"/>
			<block>
				<bind name="transition" value="_state == 'animation' || _state == 'issued'; 0.15; {alpha: 1}; {alpha: 0.6}; {alpha: 1}; 2; _state == 'issued' ? 0 : 0.45"/>
				<bind name="instance" value="'RewardContainer'; (rankInfo.rewards.length &gt; 0 || rankInfo.rewardsSpecial.length &gt; 0) ? {_rewards: rankInfo.rewards, _rewardsSpecial: rankInfo.rewardsSpecial, _tooltipHeader: 'IDS_REWARD_FOR_RANK' } : null"/>
			</block>
			<block>
				<styleClass value="$MouseDisable"/>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<position value="absolute"/>
				</style>
				<block>
					<style>
						<position value="absolute"/>
					</style>
					<block className="icon_issued" type="native">
						<innerBind elementName="item.item" name="text" value="'IDS_ISSUED_STAMP'"/>
						<bind name="gotoAndPlay!" value="_state"/>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="RankStarCarouselShipsLevelsCondition">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'rankedBattlesRanks'; _rankId; 'rankInfo'"/>
		<styleClass value="$MiddleAligned"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<block type="text">
			<styleClass value="$TextDefault19NM"/>
			<bind name="text" value="rankInfo.allowedTheirsShipsDescription"/>
		</block>
	</block>
	<block className="RankStarEarnLossCondition">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'rankedBattlesRanks';  _rankId; 'rankInfo'"/>
		<block>
			<block className="icon_star_earn_condition" type="native">
				<style>
					<marginTop value="-4px"/>
				</style>
				<bind name="gotoAndStop!" value="1"/>
			</block>
			<block>
				<style>
					<marginLeft value="5px"/>
				</style>
				<block type="text">
					<bind name="style" value="'maxWidth'; rankInfo.isStarSafe ? '850' : '350'"/>
					<styleClass value="$TextDefault19NM"/>
					<bind name="text" value="rankInfo.earnCondition"/>
				</block>
				<block type="text">
					<bind name="visible" value="rankInfo.starLossPlace == 0"/>
					<bind name="style" value="'maxWidth'; rankInfo.isStarSafe ? '850' : '350'"/>
					<styleClass value="$TextDefault"/>
					<text value="IDS_YOU_WILL_NOT_LOSE_STAR"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="!(rankInfo.isStarSafe) &amp;&amp; (rankInfo.starLossPlace != 0)"/>
				<style>
					<marginLeft value="20px"/>
				</style>
				<block className="icon_star_earn_condition" type="native">
					<style>
						<marginTop value="-4px"/>
					</style>
					<bind name="gotoAndStop!" value="2"/>
				</block>
				<bind name="watch" value="'additionalCondition'; rankInfo.starLossPlace == 2 ? 'IDS_RANKED_BATTLE_STAR_LOSS_PLACE_CONDITION' :
												rankInfo.starLossPlace &gt; 2	? subst('IDS_RANKED_BATTLE_STAR_LOSS_PLACE_RANGE_CONDITION', [], {starLossPlace: rankInfo.starLossPlace})
																			: null"/>
				<block>
					<style>
						<marginLeft value="5px"/>
					</style>
					<block type="text">
						<style>
							<maxWidth value="350"/>
						</style>
						<styleClass value="$TextDefault19NM"/>
						<bind name="text" value="rankInfo.lossCondition"/>
					</block>
					<block type="text">
						<bind name="visible" value="additionalCondition != null"/>
						<style>
							<maxWidth value="350"/>
						</style>
						<styleClass value="$TextDefault"/>
						<bind name="text" value="additionalCondition"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="PlayerAccount">
		<bind name="primaryEntityDH" value="'pageEntity'; CC.insetPage; LobbyConstants.PLAYER_PROFILE"/>
		<bind name="watchDH" value="'page'; ['pageEntity.insetPage.evUpdate']; pageEntity.insetPage.page"/>
		<bind name="watchDH" value="'pageData'; ['pageEntity.dataComponent.evDataChanged']; pageEntity.dataComponent.data"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="catch" value="'evAccountLevelingItemClicked'"/>
		<bind name="firstEntityDH" value="'accountLevelEntity'; CC.accountLevel"/>
		<bind name="watchDH" value="'curAccountLevel'; ['accountLevelEntity.accountLevel.evLevelChanged']; accountLevelEntity.accountLevel.level"/>
		<bind name="firstEntityDH" value="'accountsRewardEntity'; CC.accountLevelingRewards"/>
		<bind name="watchDH" value="'nextReward'; ['accountsRewardEntity.accountLevelingRewards.evNextRewardPointsChanged']; accountsRewardEntity.accountLevelingRewards.nextRewardPoints"/>
		<bind name="catch" value="'addedToStage'; {	carouselItemSelectedIndex: 	pageData.isPortBannerClicked 	? pageData.rewardTypeReason == 'feature'	? curAccountLevel
																								: pageData.rewardTypeReason == 'promo'	? -1*pageData.promoRewardBattles
																																						: (-1*nextReward)
																								: (curAccountLevel - 1),

									carouselScrollIndex: 	pageData.isPortBannerClicked 	? pageData.rewardTypeReason == 'feature'	? (curAccountLevel - 1)
																							: pageData.rewardTypeReason == 'promo'	? (pageData.promoRewardLevel - 1)
																																					: (curAccountLevel - 1)
																							: (curAccountLevel - 2),
									currentImageIdx: 1}"/>
		<styleClass value="$Fullsize"/>
		<style>
			<paddingLeft value="188px"/>
		</style>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<height value="100%"/>
			</style>
			<block>
				<style>
					<align value="middle"/>
					<marginTop value="720:60,1080:160ah"/>
					<marginBottom value="720:0,1080:90ah"/>
				</style>
				<block>
					<style>
						<width value="10px"/>
						<marginRight value="32px"/>
					</style>
					<block className="button_slide_left" type="native">
						<bind name="name" value="'buttonAccountCarouselLeft'"/>
						<params>
							<param name="focusable" value="false"/>
						</params>
						<bind name="enabled" value="ALCarouselCanScrollLeft"/>
						<bind name="event" value="'click'; scrollLeftByOneUnit"/>
					</block>
				</block>
				<block>
					<params>
						<param name="name" value="AccountCarouselMainBlock"/>
					</params>
					<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerAccountCarousel"/>
					<bind name="event" value="'profileCarousel.scrollOneUnitLeft'; scrollLeftByOneUnit"/>
					<bind name="event" value="'profileCarousel.scrollOneUnitRight'; scrollRightByOneUnit"/>
					<bind name="stageSize"/>
					<bind name="watch" value="'maxStageWidth'; stageWidth &lt; 1920 ? stageWidth : 1920"/>
					<bind name="watch" value="'widthOfItem'; math.round((maxStageWidth-1280)/(1920-1280)*(424-332)+332)"/>
					<style>
						<width value="1280:868,1920:1052aw"/>
						<height value="224px"/>
						<overflow value="scroll"/>
						<scrollArea value="ModernScrollAreaHorizontal"/>
						<scrollbarController value="lesta.unbound.style.UbScrollingControllerCarousel"/>
						<layout value="lesta.unbound.layout.measure.CarouselLayout"/>
						<itemWidth value="1280:332,1920:424aw"/>
						<itemHeight value="164px"/>
						<backgroundColor value="0x01000000"/>
						<wheelScrollSpeed value="1280:332,1920:424aw"/>
						<generatorOffsetLeft value="332"/>
						<generatorOffsetRight value="332"/>
					</style>
					<bind name="event" value="'addedToStage'; setIndex; carouselScrollIndex"/>
					<bind name="catch" value="'evPromoRewardBannerClicked'"/>
					<bind name="dispatch" value="'evPromoRewardBannerClicked'; 'evDelayedPromoRewardBannerClicked'; {}; 2; 0.05"/>
					<bind name="event" value="'evDelayedPromoRewardBannerClicked'; scrollToIndex; carouselScrollIndex"/>
					<bind name="generatorDH" value="CC.accountLevelingStep; 'AccountLevellingProgressBar'; 'sorted'; {_carouselItemSelectedIndex: carouselItemSelectedIndex}"/>
					<bind name="scrollController" value="'ALCarousel'; widthOfItem; 1"/>
					<block>
						<style>
							<marginRight value="1280:-151,1920:-243aw"/>
							<width value="1px"/>
							<height value="1px"/>
						</style>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<style>
						<width value="10px"/>
						<marginLeft value="32px"/>
					</style>
					<block className="button_slide_right" type="native">
						<bind name="name" value="'buttonAccountCarouselRight'"/>
						<params>
							<param name="focusable" value="false"/>
						</params>
						<bind name="enabled" value="ALCarouselCanScrollRight"/>
						<bind name="event" value="'click'; scrollRightByOneUnit"/>
					</block>
				</block>
				<block className="al_carousel_divider" type="native">
					<style>
						<position value="absolute"/>
						<width value="100%"/>
						<bottom value="720:30,1080:0ah"/>
						<hitTest value="false"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
							<top value="2px"/>
							<alpha value="1.2"/>
							<height value="300px"/>
							<hitTest value="false"/>
							<position value="absolute"/>
							<backgroundImage value="url:../accountLevel/progressBarIcons/AL_bg_info.png"/>
							<backgroundSize value="fill"/>
						</style>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="firstEntityDH" value="'accountLevelPointsEntity'; CC.accountLevelPoints"/>
				<bind name="watchDH" value="'currentPoints'; ['accountLevelPointsEntity.accountLevelPoints.evCurrentLevelPointsChanged']; accountLevelPointsEntity.accountLevelPoints.currentLevelPoints"/>
				<bind name="collectionDH" value="CC.accountLevelingStep; 'accountLevelingSteps'"/>
				<bind name="entityDH" value="'accountLevelStepEntity'; accountLevelingSteps[carouselItemSelectedIndex].id"/>
				<bind name="watchDH" value="'stepFeature';			['accountLevelStepEntity.accountLevelingStep.evFeaturesChanged'];
													accountLevelStepEntity.accountLevelingStep.features[0]"/>
				<bind name="watchDH" value="'featureStepPoints';		['accountLevelStepEntity.accountLevelingStep.evThisStepPointsChanged'];
													accountLevelStepEntity.accountLevelingStep.thisStepPoints"/>
				<bind name="watch" value="'rewardStepPoints'; math.abs(carouselItemSelectedIndex)"/>
				<bind name="collectionDH" value="CC.accountPromoRewardBanner; 'promoRewardCollectionSorted'; 'upcoming.sorted'"/>
				<bind name="entityDH" value="'promoRewardEntity'; promoRewardCollectionSorted[0].id"/>
				<bind name="watchDH" value="'promoRewardBattles';	['promoRewardEntity.accountPromoRewardBanner.evChanged'];
													promoRewardEntity.accountPromoRewardBanner.battles"/>
				<bind name="watch" value="'isPromoReward'; promoRewardCollectionSorted.length &gt; 0"/>
				<bind name="watch" value="'isPromoRewardTaken'; promoRewardBattles &lt;= currentPoints"/>
				<bind name="firstEntityDH" value="'accountsRewardEntity'; CC.accountLevelingRewards"/>
				<bind name="watchDH" value="'rewardsDict';		['accountsRewardEntity.accountLevelingRewards.evRewardsDictChanged'];		
												accountsRewardEntity.accountLevelingRewards.rewardsDict[rewardStepPoints]"/>
				<bind name="watch" value="'isFeature'; carouselItemSelectedIndex &gt;= 0"/>
				<bind name="handleEventDH" value="'accountLevelPointsEntity.accountLevelPoints.evCurrentLevelPointsChanged'; 'currentPointsChanged'; {}; 2"/>
				<bind name="dispatch" value="'currentPointsChanged'; (isFeature || rewardsDict.length &gt; 0) ? null : 'evAccountLevelingItemClicked'; { carouselItemSelectedIndex: curAccountLevel - 1,
																																	 currentImageIdx: 1}; 2; 0.05"/>
				<bind name="watch" value="'galleryItemRendererParams';	isFeature 	?	[{	stepFeature: stepFeature,
																			points: featureStepPoints}]
																		:	rewardsDict"/>
				<bind name="var" value="{ isHackedStep: false }"/>
				<bind name="changeDispatch" value="carouselItemSelectedIndex; 'selectedAccountStepChanged'; null; 2"/>
				<bind name="catch" value="'selectedAccountStepChanged'; {isHackedStep: true}"/>
				<bind name="dispatch" value="'selectedAccountStepChanged'; 'selectedAccountStepChangedDelayed'; {}; 2; 0.05"/>
				<bind name="catch" value="'selectedAccountStepChangedDelayed'; { isHackedStep: false }"/>
				<style>
					<marginLeft value="1280:10,1480:170aw"/>
				</style>
				<bind name="instance" value="'GalleryViewer';	isHackedStep ?	null :	{
																			_galleryItemRenderer: 'AccountLevellingStepInfo',
																			_galleryItemRendererParams: galleryItemRendererParams,
																			_galleryItemRendererImageIndicator: 'SelectedImageIndicatorAccountLeveling',
																			_galleryImageWidth: 844,
																			_galleryImageHeight: 256,
																			_galleryItemRendererImageIndicatorMarginLeft: 298,
																			_autoSwitchDelay: 8,
																			_currentImageIdx: currentImageIdx ? currentImageIdx : 1,
																			_arrowsDisabled: true
																		}"/>
			</block>
		</block>
		<bind name="watch" value="'isPromoBannerVisible'; (isPromoReward &amp;&amp; !isPromoRewardTaken)"/>
		<block>
			<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_MOVE_TO_THE_REWARD'}], _maxWidth: 300}"/>
			<style>
				<position value="absolute"/>
				<right value="20"/>
				<bottom value="46"/>
			</style>
			<bind name="instance" value="'PromoRewardBanner'; isPromoBannerVisible	? {	_carouselItemSelectedIndex: carouselItemSelectedIndex,
																		_isPortBanner: false,
																		_isFromPortPromoBanner: (pageData.isPortBannerClicked &amp;&amp; pageData.rewardTypeReason == 'promo') }
																	: null"/>
		</block>
	</block>
	<block className="AccountLevellingStepInfo">
		<bind name="child" value="_galleryItemRendererParams[_index].type	? _galleryItemRendererParams[_index].type
															: 'feature';
				{	_galleryItemRendererParams: _galleryItemRendererParams, _index: _index};{	promo:	'AccountLevellingPromoRewardStepInfo',
																								common:	'AccountLevellingCommonRewardStepInfo',
																								feature: 'AccountLevellingFeatureStepInfo'}"/>
	</block>
	<block className="AccountLevellingFeatureStepInfo">
		<bind name="firstEntityDH" value="'accountLevelPointsEntity'; CC.accountLevelPoints"/>
		<bind name="watchDH" value="'currentPoints'; ['accountLevelPointsEntity.accountLevelPoints.evCurrentLevelPointsChanged']; accountLevelPointsEntity.accountLevelPoints.currentLevelPoints"/>
		<bind name="watch" value="'battlesToStep';	_galleryItemRendererParams[_index].points - currentPoints"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'accountLevelInfo'"/>
		<bind name="watch" value="'isAbuseStatusConfirmed'; accountLevelInfo.abuseStatus == 2"/>
		<bind name="primaryEntityDH" value="'featureEntity'; CC.accountFeature; _galleryItemRendererParams[_index].stepFeature"/>
		<bind name="watchDH" value="'headerText';	['featureEntity.accountFeature.evStateChanged']; featureEntity.accountFeature.title"/>
		<bind name="watchDH" value="'subHeaderText';	['featureEntity.accountFeature.evStateChanged']; featureEntity.accountFeature.text"/>
		<bind name="watchDH" value="'iconPath';		['featureEntity.accountFeature.evStateChanged']; featureEntity.accountFeature.iconPath"/>
		<bind name="watch" value="'imageUrl'; battlesToStep &gt; 0 ? 'url:' + iconPath + '_locked_big.png' :  'url:' + iconPath + '_big.png'"/>
		<bind name="var" value="{stepType: 'feature'}"/>
		<bind name="watch" value="'buttonRequest'; 'openModalWindowLevelInfo'"/>
		<bind name="watch" value="'buttonRequestParams'; {	battles: battlesToStep,
											_stepFeature: _galleryItemRendererParams[_index].stepFeature}"/>
		<block className="AccountLevellingStepInfoLayout">
			<bind name="appear" value="'addedToStage'; 0.23; 0.07; {alpha: 0}; {alpha: 1}; 1"/>
			<style>
				<width value="844px"/>
				<height value="256px"/>
				<flow value="horizontal"/>
			</style>
			<block>
				<style>
					<width value="256px"/>
					<height value="100%"/>
				</style>
				<bind name="child" value="stepType ? stepType : 'no_item';	{ _imageURL: imageUrl, _imageData: imageData, _iconSize: '256px' };
																										{	feature:		'IconAlItem',
																											commonReward:	'IconAlItem',
																											promoReward:	'IconAlDataItem',
																											no_item:		'EmptyItem'
																										}"/>
			</block>
			<block>
				<bind name="visible" value="battlesToStep &gt; 0 &amp;&amp; stepType != 'promoReward'"/>
				<style>
					<width value="60px"/>
					<height value="60px"/>
					<position value="absolute"/>
					<left value="98px"/>
					<top value="98px"/>
					<backgroundImage value="url:../accountLevel/progressBarIcons/accountLevelingBigLockIcon.png"/>
					<backgroundSize value="fill"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<height value="100%"/>
					<marginTop value="32"/>
					<marginLeft value="48px"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefaultBold30NM"/>
					<style>
						<leading value="-6"/>
						<maxWidth value="540"/>
						<marginTop value="12px"/>
					</style>
					<bind name="style" value="'alpha'; battlesToStep &gt; 0 ? 0.7 : 0.9"/>
					<bind name="text" value="headerText"/>
				</block>
				<block>
					<bind name="visible" value="battlesToStep &gt; 0"/>
					<bind name="tooltip" value="'AbuseStatusProfileTooltip'; (battlesToStep &gt; 0) &amp;&amp; isAbuseStatusConfirmed ? {} : null"/>
					<style>
						<width value="100%"/>
						<alpha value="0.7"/>
						<marginTop value="16px"/>
					</style>
					<bind name="instance" value="'AccountLevelingItemAbused'; (battlesToStep &gt; 0) &amp;&amp; isAbuseStatusConfirmed ? {_isSmallIcon: true} : null"/>
					<bind name="instance" value="'AccountLevelingItemUnavailable'; (battlesToStep &gt; 0) &amp;&amp; !isAbuseStatusConfirmed ? {_battlesToStep: battlesToStep} : null"/>
				</block>
				<block>
					<bind name="visible" value="isTimedPromoReward ? true : false"/>
					<style>
						<width value="100%"/>
						<marginTop value="12px"/>
					</style>
					<bind name="instance" value="'AccountLevelingItemDueDate'; isTimedPromoReward	? { _dueDate: promoRewardDueDate }
																				: null"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault19NM"/>
					<style>
						<maxWidth value="500"/>
						<alpha value="0.7"/>
						<marginTop value="24px"/>
					</style>
					<bind name="text" value="subHeaderText"/>
				</block>
				<block>
					<bind name="tooltip" value="'MouseInstructionTooltip'; {	_mouseInstructions: [{_type: 'left', _instructionText: 'IDS_HINT_LEFT_CLICK_FOR_FURTHER_INFO'}],
														_maxWidth: 300}"/>
					<style>
						<marginTop value="32px"/>
					</style>
					<bind name="instance" value="'DefaultButton'; {	_width: '140px',
												_enabled: true,
												_isTransactionBtn: true,
												_label: 'IDS_PRMP_DETAILS_BUTTON', 
												_request: buttonRequest, 
												_requestParams: buttonRequestParams
											}"/>
				</block>
			</block>
		</block>
	</block>
	<block className="AccountLevellingPromoRewardStepInfo">
		<bind name="firstEntityDH" value="'accountLevelPointsEntity'; CC.accountLevelPoints"/>
		<bind name="watchDH" value="'currentPoints'; ['accountLevelPointsEntity.accountLevelPoints.evCurrentLevelPointsChanged']; accountLevelPointsEntity.accountLevelPoints.currentLevelPoints"/>
		<bind name="watch" value="'battlesToStep';	_galleryItemRendererParams[_index].points - currentPoints"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'accountLevelInfo'"/>
		<bind name="watch" value="'isAbuseStatusConfirmed'; accountLevelInfo.abuseStatus == 2"/>
		<bind name="entityDH" value="'promoRewardEntity'; _galleryItemRendererParams[_index].promoId"/>
		<bind name="watchDH" value="'headerText';			['promoRewardEntity.accountPromoRewardBanner.evChanged']; promoRewardEntity.accountPromoRewardBanner.title"/>
		<bind name="watchDH" value="'fullDescription';		['promoRewardEntity.accountPromoRewardBanner.evChanged']; promoRewardEntity.accountPromoRewardBanner.fullDescription"/>
		<bind name="watchDH" value="'subHeaderText';			['promoRewardEntity.accountPromoRewardBanner.evChanged']; promoRewardEntity.accountPromoRewardBanner.shortDescription"/>
		<bind name="watchDH" value="'promoRewardImageBig';	['promoRewardEntity.accountPromoRewardBanner.evChanged']; promoRewardEntity.accountPromoRewardBanner.imageBig"/>
		<bind name="watchDH" value="'promoRewardDueDate';	['promoRewardEntity.accountPromoRewardBanner.evChanged']; promoRewardEntity.accountPromoRewardBanner.expirationTime"/>
		<bind name="primaryEntityDH" value="'imageEntity'; CC.byteArrayData; promoRewardImageBig"/>
		<bind name="watchDH" value="'imageData'; ['imageEntity.byteArrayData.evChanged']; imageEntity.byteArrayData.data"/>
		<bind name="watch" value="'isTimedPromoReward'; promoRewardDueDate &gt; 1"/>
		<bind name="entityDH" value="'rewardEntity';		_galleryItemRendererParams[_index].rewardId"/>
		<bind name="var" value="{stepType: 'promoReward'}"/>
		<bind name="watch" value="'buttonRequest'; 'openModalWindowRewardInfo'"/>
		<bind name="watch" value="'buttonRequestParams'; {	battles: battlesToStep,
											rewards: rewardEntity.rewardsContainer.rewardIds,
											headerText: headerText,
											subHeaderText: fullDescription,
											dueDate: isTimedPromoReward ? promoRewardDueDate : ''}"/>
		<block className="AccountLevellingStepInfoLayout">
			<bind name="appear" value="'addedToStage'; 0.23; 0.07; {alpha: 0}; {alpha: 1}; 1"/>
			<style>
				<width value="844px"/>
				<height value="256px"/>
				<flow value="horizontal"/>
			</style>
			<block>
				<style>
					<width value="256px"/>
					<height value="100%"/>
				</style>
				<bind name="child" value="stepType ? stepType : 'no_item';	{ _imageURL: imageUrl, _imageData: imageData, _iconSize: '256px' };
																										{	feature:		'IconAlItem',
																											commonReward:	'IconAlItem',
																											promoReward:	'IconAlDataItem',
																											no_item:		'EmptyItem'
																										}"/>
			</block>
			<block>
				<bind name="visible" value="battlesToStep &gt; 0 &amp;&amp; stepType != 'promoReward'"/>
				<style>
					<width value="60px"/>
					<height value="60px"/>
					<position value="absolute"/>
					<left value="98px"/>
					<top value="98px"/>
					<backgroundImage value="url:../accountLevel/progressBarIcons/accountLevelingBigLockIcon.png"/>
					<backgroundSize value="fill"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<height value="100%"/>
					<marginTop value="32"/>
					<marginLeft value="48px"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefaultBold30NM"/>
					<style>
						<leading value="-6"/>
						<maxWidth value="540"/>
						<marginTop value="12px"/>
					</style>
					<bind name="style" value="'alpha'; battlesToStep &gt; 0 ? 0.7 : 0.9"/>
					<bind name="text" value="headerText"/>
				</block>
				<block>
					<bind name="visible" value="battlesToStep &gt; 0"/>
					<bind name="tooltip" value="'AbuseStatusProfileTooltip'; (battlesToStep &gt; 0) &amp;&amp; isAbuseStatusConfirmed ? {} : null"/>
					<style>
						<width value="100%"/>
						<alpha value="0.7"/>
						<marginTop value="16px"/>
					</style>
					<bind name="instance" value="'AccountLevelingItemAbused'; (battlesToStep &gt; 0) &amp;&amp; isAbuseStatusConfirmed ? {_isSmallIcon: true} : null"/>
					<bind name="instance" value="'AccountLevelingItemUnavailable'; (battlesToStep &gt; 0) &amp;&amp; !isAbuseStatusConfirmed ? {_battlesToStep: battlesToStep} : null"/>
				</block>
				<block>
					<bind name="visible" value="isTimedPromoReward ? true : false"/>
					<style>
						<width value="100%"/>
						<marginTop value="12px"/>
					</style>
					<bind name="instance" value="'AccountLevelingItemDueDate'; isTimedPromoReward	? { _dueDate: promoRewardDueDate }
																				: null"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault19NM"/>
					<style>
						<maxWidth value="500"/>
						<alpha value="0.7"/>
						<marginTop value="24px"/>
					</style>
					<bind name="text" value="subHeaderText"/>
				</block>
				<block>
					<bind name="tooltip" value="'MouseInstructionTooltip'; {	_mouseInstructions: [{_type: 'left', _instructionText: 'IDS_HINT_LEFT_CLICK_FOR_FURTHER_INFO'}],
														_maxWidth: 300}"/>
					<style>
						<marginTop value="32px"/>
					</style>
					<bind name="instance" value="'DefaultButton'; {	_width: '140px',
												_enabled: true,
												_isTransactionBtn: true,
												_label: 'IDS_PRMP_DETAILS_BUTTON', 
												_request: buttonRequest, 
												_requestParams: buttonRequestParams
											}"/>
				</block>
			</block>
		</block>
	</block>
	<block className="AccountLevellingCommonRewardStepInfo">
		<bind name="firstEntityDH" value="'accountLevelPointsEntity'; CC.accountLevelPoints"/>
		<bind name="watchDH" value="'currentPoints'; ['accountLevelPointsEntity.accountLevelPoints.evCurrentLevelPointsChanged']; accountLevelPointsEntity.accountLevelPoints.currentLevelPoints"/>
		<bind name="watch" value="'battlesToStep';	_galleryItemRendererParams[_index].points - currentPoints"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'accountLevelInfo'"/>
		<bind name="watch" value="'isAbuseStatusConfirmed'; accountLevelInfo.abuseStatus == 2"/>
		<bind name="entityDH" value="'rewardEntity';		_galleryItemRendererParams[_index].rewardId"/>
		<bind name="watch" value="'isSimilarRewards';	rewardEntity.rewardsContainer.subtype &amp;&amp; rewardEntity.rewardsContainer.rewardIds.length &gt; 1"/>
		<bind name="watch" value="'isSingleRewardType';	rewardEntity.rewardsContainer.rewardIds.length == 1"/>
		<bind name="watch" value="'rewardType';			rewardEntity.rewardComponent.type"/>
		<bind name="watch" value="'rewardAmountFormatted'; rewardEntity.rewardComponent.subtype == 'premium' ? rewardEntity.rewardComponent.params.textFeature
																							: format(rewardEntity.rewardComponent.amount)"/>
		<bind name="watch" value="'rewardIconPath';	isSimilarRewards				? toLowerCase(rewardEntity.rewardComponent.subtype + '_set') :
									isSingleRewardType				?
										rewardType == 	'Exterior' 		? toLowerCase(exteriorConfig.type) :
										rewardType == 	'Resource'		? toLowerCase(rewardEntity.rewardComponent.subtype) :
										rewardType == 	'ResourceCoeff'	? toLowerCase(rewardEntity.rewardComponent.subtype) :
										rewardType == 	'Exchange'		? toLowerCase(rewardEntity.rewardComponent.subtype) :
										rewardType == 	'Lootbox'		? toLowerCase(rewardEntity.rewardComponent.subtype)
																		: toLowerCase(rewardEntity.rewardComponent.type)
																	: 'multiple'"/>
		<bind name="watch" value="'imageUrl'; battlesToStep &gt; 0 ? 'url:../accountLevel/rewards/icon_reward_' + rewardIconPath + '_locked_big.png' :  'url:../accountLevel/rewards/icon_reward_' + rewardIconPath + '_big.png'"/>
		<bind name="watch" value="'rewardHeaderTextWithAmount';	isSimilarRewards			? toUpperCase('IDS_REWARDS_SET_' + rewardEntity.rewardComponent.subtype) :
												isSingleRewardType			?
													rewardType == 	'Ship' 			? 'IDS_SHIP' :
													rewardType == 	'Crew' 			? 'IDS_CREW' :
													rewardType == 	'Exterior' 		? exteriorConfig.type == ExteriorTypes.ENSIGN 	? toUpperCase('IDS_' + exteriorConfig.type + '_TITLE') 
																																	: subst(toUpperCase('IDS_PL_' + exteriorConfig.type + '_TITLE'), [], {_amount: format(rewardEntity.rewardComponent.amount, -1)}, rewardEntity.rewardComponent.amount) :
													rewardType == 	'Ability'		? subst('IDS_PL_ABILITY_TITLE', [], {_amount: format(rewardEntity.rewardComponent.amount, -1)}, rewardEntity.rewardComponent.amount) :
													rewardType == 	'Modernization'	? subst('IDS_PL_MODERNIZATION_TITLE', [], {_amount: format(rewardEntity.rewardComponent.amount, -1)}, rewardEntity.rewardComponent.amount) :
													rewardType == 	'Resource'		? 	rewardEntity.rewardComponent.subtype == 'credits' ||
																						rewardEntity.rewardComponent.subtype == 'gold' ||
																						rewardEntity.rewardComponent.subtype == 'slots' ||
																						rewardEntity.rewardComponent.subtype == 'barCapacity'		? subst(toUpperCase('IDS_REWARDS_PL_' + rewardEntity.rewardComponent.subtype + '_TITLE'), [], {_amount:  format(rewardEntity.rewardComponent.amount, -1)}, rewardEntity.rewardComponent.amount) :
																						rewardEntity.rewardComponent.subtype == 'wows_premium' ||    
																						rewardEntity.rewardComponent.subtype == 'premium'			? subst(toUpperCase('IDS_REWARDS_PL_' + rewardEntity.rewardComponent.subtype + '_TITLE'), [], {_amount:  rewardEntity.rewardComponent.params.text})
																																					: subst(toUpperCase('IDS_REWARDS_PL_' + rewardEntity.rewardComponent.subtype + '_TITLE'), [], {_amount:  format(rewardEntity.rewardComponent.amount, -1)}, rewardEntity.rewardComponent.amount) :
													rewardType == 	'ResourceCoeff'	? toUpperCase('IDS_REWARD_' + rewardEntity.rewardComponent.subtype + '_TITLE') :
													rewardType == 	'Exchange'		? toUpperCase('IDS_PRMP_ITEM_' + rewardEntity.rewardComponent.subtype) :
													rewardType == 	'Lootbox'		? subst('IDS_PL_LOOTBOX_TITLE', [], {_amount: format(rewardEntity.rewardComponent.amount, -1)}, rewardEntity.rewardComponent.amount) :
													rewardType == 	'DogTag'		?  toUpperCase('IDS_DOGTAG_' + rewardEntity.rewardComponent.name + '_NAME') :
													rewardType == 	'Collection'	?  toUpperCase('IDS_' + rewardEntity.rewardComponent.name)
																					: 'NO IDS_REWARDS_SET'
																			: 'IDS_REWARDS_SET'"/>
		<bind name="watch" value="'headerText';	rewardHeaderTextWithAmount"/>
		<bind name="watch" value="'rewardSubheaderText';	isSimilarRewards				? toUpperCase('IDS_REWARDS_SET_' + rewardEntity.rewardComponent.subtype + '_DESCRIPTION') :
										isSingleRewardType				?
											rewardType == 	'Ship' 			? tr(toUpperCase(shipInfo.nameIDS + '_DESCR')) :
											rewardType == 	'Crew' 			? tr(toUpperCase(rewardEntity.rewardComponent.params.firstNameIDS + '_DESCR')) :
											rewardType == 	'Exterior' 		? tr(toUpperCase('IDS_' + exteriorConfig.name + '_DESCRIPTION')) :
											rewardType == 	'Ability'		? 'IDS_CONSUMABLES' :
											rewardType == 	'Modernization'	? tr(toUpperCase('IDS_MODERNIZATION_' + rewardEntity.rewardComponent.params.item.type)) :
											rewardType == 	'DogTag'		? subtype == unique ? tr(toUpperCase('IDS_DOGTAG_COMPONENT_TOOLTIP_CATEGORY_' + 'unique'))
																								: tr(toUpperCase('IDS_DOGTAG_COMPONENT_TOOLTIP_CATEGORY_' + _categoryId)) :
											rewardType == 	'Collection'	? tr(toUpperCase('IDS_' + rewardEntity.rewardComponent.name + '_DESCRIPTION'))
																			: tr(toUpperCase('IDS_' + rewardEntity.rewardComponent.subtype + '_DESCRIPTION'))
																		: 'IDS_REWARDS_SET_DESCRIPTION'"/>
		<bind name="watch" value="'subHeaderText';	rewardSubheaderText"/>
		<bind name="watch" value="'rewardHeaderText';	isSimilarRewards			? 'IDS_REWARDS_SET_' + toUpperCase(rewardEntity.rewardComponent.subtype) :
										isSingleRewardType			?
											rewardType == 	'Ship' 			? 'IDS_SHIP' :
											rewardType == 	'Crew' 			? 'IDS_CREW' :
											rewardType == 	'Exterior' 		? toUpperCase('IDS_' +  exteriorConfig.type + '_TITLE') :
											rewardType == 	'Resource'		? toUpperCase('IDS_REWARD_' + rewardEntity.rewardComponent.subtype + '_TITLE') :
											rewardType == 	'ResourceCoeff'	? toUpperCase('IDS_REWARD_' + rewardEntity.rewardComponent.subtype + '_TITLE') :
											rewardType == 	'DogTag'		? toUpperCase('IDS_DOGTAG_' + rewardEntity.rewardComponent.name + '_NAME') :
											rewardType == 	'Exchange'		? toUpperCase('IDS_PRMP_ITEM_' + rewardEntity.rewardComponent.subtype + '_TITLE') :
											rewardType == 	'Collection'	? toUpperCase('IDS_' + rewardEntity.rewardComponent.name)
																			: toUpperCase(rewardEntity.rewardComponent.type + '_TITLE')
																	: 'IDS_REWARDS_SET'"/>
		<bind name="watch" value="'modalWindowHeaderText';	rewardHeaderText"/>
		<bind name="var" value="{stepType: 'commonReward'}"/>
		<bind name="watch" value="'buttonRequest'; 'openModalWindowRewardInfo'"/>
		<bind name="watch" value="'buttonRequestParams'; {	battles: battlesToStep,
											rewards: rewardEntity.rewardsContainer.rewardIds,
											headerText: modalWindowHeaderText,
											subHeaderText: subHeaderText}"/>
		<block className="AccountLevellingStepInfoLayout">
			<bind name="appear" value="'addedToStage'; 0.23; 0.07; {alpha: 0}; {alpha: 1}; 1"/>
			<style>
				<width value="844px"/>
				<height value="256px"/>
				<flow value="horizontal"/>
			</style>
			<block>
				<style>
					<width value="256px"/>
					<height value="100%"/>
				</style>
				<bind name="child" value="stepType ? stepType : 'no_item';	{ _imageURL: imageUrl, _imageData: imageData, _iconSize: '256px' };
																										{	feature:		'IconAlItem',
																											commonReward:	'IconAlItem',
																											promoReward:	'IconAlDataItem',
																											no_item:		'EmptyItem'
																										}"/>
			</block>
			<block>
				<bind name="visible" value="battlesToStep &gt; 0 &amp;&amp; stepType != 'promoReward'"/>
				<style>
					<width value="60px"/>
					<height value="60px"/>
					<position value="absolute"/>
					<left value="98px"/>
					<top value="98px"/>
					<backgroundImage value="url:../accountLevel/progressBarIcons/accountLevelingBigLockIcon.png"/>
					<backgroundSize value="fill"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<height value="100%"/>
					<marginTop value="32"/>
					<marginLeft value="48px"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefaultBold30NM"/>
					<style>
						<leading value="-6"/>
						<maxWidth value="540"/>
						<marginTop value="12px"/>
					</style>
					<bind name="style" value="'alpha'; battlesToStep &gt; 0 ? 0.7 : 0.9"/>
					<bind name="text" value="headerText"/>
				</block>
				<block>
					<bind name="visible" value="battlesToStep &gt; 0"/>
					<bind name="tooltip" value="'AbuseStatusProfileTooltip'; (battlesToStep &gt; 0) &amp;&amp; isAbuseStatusConfirmed ? {} : null"/>
					<style>
						<width value="100%"/>
						<alpha value="0.7"/>
						<marginTop value="16px"/>
					</style>
					<bind name="instance" value="'AccountLevelingItemAbused'; (battlesToStep &gt; 0) &amp;&amp; isAbuseStatusConfirmed ? {_isSmallIcon: true} : null"/>
					<bind name="instance" value="'AccountLevelingItemUnavailable'; (battlesToStep &gt; 0) &amp;&amp; !isAbuseStatusConfirmed ? {_battlesToStep: battlesToStep} : null"/>
				</block>
				<block>
					<bind name="visible" value="isTimedPromoReward ? true : false"/>
					<style>
						<width value="100%"/>
						<marginTop value="12px"/>
					</style>
					<bind name="instance" value="'AccountLevelingItemDueDate'; isTimedPromoReward	? { _dueDate: promoRewardDueDate }
																				: null"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault19NM"/>
					<style>
						<maxWidth value="500"/>
						<alpha value="0.7"/>
						<marginTop value="24px"/>
					</style>
					<bind name="text" value="subHeaderText"/>
				</block>
				<block>
					<bind name="tooltip" value="'MouseInstructionTooltip'; {	_mouseInstructions: [{_type: 'left', _instructionText: 'IDS_HINT_LEFT_CLICK_FOR_FURTHER_INFO'}],
														_maxWidth: 300}"/>
					<style>
						<marginTop value="32px"/>
					</style>
					<bind name="instance" value="'DefaultButton'; {	_width: '140px',
												_enabled: true,
												_isTransactionBtn: true,
												_label: 'IDS_PRMP_DETAILS_BUTTON', 
												_request: buttonRequest, 
												_requestParams: buttonRequestParams
											}"/>
				</block>
			</block>
		</block>
	</block>
	<block className="AccountLevellingStepInfoLayout">
		<bind name="appear" value="'addedToStage'; 0.23; 0.07; {alpha: 0}; {alpha: 1}; 1"/>
		<style>
			<width value="844px"/>
			<height value="256px"/>
			<flow value="horizontal"/>
		</style>
		<block>
			<style>
				<width value="256px"/>
				<height value="100%"/>
			</style>
			<bind name="child" value="stepType ? stepType : 'no_item';	{ _imageURL: imageUrl, _imageData: imageData, _iconSize: '256px' };
																										{	feature:		'IconAlItem',
																											commonReward:	'IconAlItem',
																											promoReward:	'IconAlDataItem',
																											no_item:		'EmptyItem'
																										}"/>
		</block>
		<block>
			<bind name="visible" value="battlesToStep &gt; 0 &amp;&amp; stepType != 'promoReward'"/>
			<style>
				<width value="60px"/>
				<height value="60px"/>
				<position value="absolute"/>
				<left value="98px"/>
				<top value="98px"/>
				<backgroundImage value="url:../accountLevel/progressBarIcons/accountLevelingBigLockIcon.png"/>
				<backgroundSize value="fill"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<height value="100%"/>
				<marginTop value="32"/>
				<marginLeft value="48px"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefaultBold30NM"/>
				<style>
					<leading value="-6"/>
					<maxWidth value="540"/>
					<marginTop value="12px"/>
				</style>
				<bind name="style" value="'alpha'; battlesToStep &gt; 0 ? 0.7 : 0.9"/>
				<bind name="text" value="headerText"/>
			</block>
			<block>
				<bind name="visible" value="battlesToStep &gt; 0"/>
				<bind name="tooltip" value="'AbuseStatusProfileTooltip'; (battlesToStep &gt; 0) &amp;&amp; isAbuseStatusConfirmed ? {} : null"/>
				<style>
					<width value="100%"/>
					<alpha value="0.7"/>
					<marginTop value="16px"/>
				</style>
				<bind name="instance" value="'AccountLevelingItemAbused'; (battlesToStep &gt; 0) &amp;&amp; isAbuseStatusConfirmed ? {_isSmallIcon: true} : null"/>
				<bind name="instance" value="'AccountLevelingItemUnavailable'; (battlesToStep &gt; 0) &amp;&amp; !isAbuseStatusConfirmed ? {_battlesToStep: battlesToStep} : null"/>
			</block>
			<block>
				<bind name="visible" value="isTimedPromoReward ? true : false"/>
				<style>
					<width value="100%"/>
					<marginTop value="12px"/>
				</style>
				<bind name="instance" value="'AccountLevelingItemDueDate'; isTimedPromoReward	? { _dueDate: promoRewardDueDate }
																				: null"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault19NM"/>
				<style>
					<maxWidth value="500"/>
					<alpha value="0.7"/>
					<marginTop value="24px"/>
				</style>
				<bind name="text" value="subHeaderText"/>
			</block>
			<block>
				<bind name="tooltip" value="'MouseInstructionTooltip'; {	_mouseInstructions: [{_type: 'left', _instructionText: 'IDS_HINT_LEFT_CLICK_FOR_FURTHER_INFO'}],
														_maxWidth: 300}"/>
				<style>
					<marginTop value="32px"/>
				</style>
				<bind name="instance" value="'DefaultButton'; {	_width: '140px',
												_enabled: true,
												_isTransactionBtn: true,
												_label: 'IDS_PRMP_DETAILS_BUTTON', 
												_request: buttonRequest, 
												_requestParams: buttonRequestParams
											}"/>
			</block>
		</block>
	</block>
	<block className="AccountLevelingItemUnavailable">
		<style>
			<width value="100%"/>
			<flow value="horizontal"/>
		</style>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<width value="19px"/>
				<height value="19px"/>
				<backgroundSize value="cover"/>
			</style>
			<bind name="style" value="'marginRight'; _iconMarginRight ? _iconMarginRight : 12"/>
			<bind name="style" value="'backgroundImage'; 'url:../service_kit/icons/icon_status_lock.png'"/>
		</block>
		<block type="text">
			<bind name="class" value="_class ? _class : '$TextDefault17NM'"/>
			<style>
				<width value="100%"/>
				<leading value="-3"/>
			</style>
			<bind name="text" value="subst('IDS_BATTLES_TO_NEXT_STEP', [], {battles: _battlesToStep}, _battlesToStep)"/>
		</block>
	</block>
	<block className="AccountLevelingItemAbused">
		<style>
			<width value="100%"/>
			<flow value="horizontal"/>
		</style>
		<block>
			<bind name="class" value="_iconClass ? _iconClass :'$MiddleVAligned'"/>
			<style>
				<backgroundSize value="cover"/>
			</style>
			<bind name="style" value="'backgroundImage'; _isSmallIcon	? 'url:../service_kit/icons/icon_warning_red.png'
														: 'url:../service_kit/icons/icon_status_warning.png'"/>
			<bind name="style" value="'width'; _isSmallIcon ? '15px' : '22px'"/>
			<bind name="style" value="'height'; _isSmallIcon ? '13px' : '19px'"/>
		</block>
		<block type="text">
			<bind name="class" value="_class ? _class : '$TextDefault17NM'"/>
			<style>
				<width value="100%"/>
				<leading value="-3"/>
				<textColor value="0xFF6600"/>
			</style>
			<bind name="style" value="'marginLeft'; _isSmallIcon ? '8px' : 'SX8px'"/>
			<bind name="text" value="_abuseText ? _abuseText : 'IDS_ACCOUNT_PROGRESS_ABUSED'"/>
		</block>
	</block>
	<block className="AccountLevelingItemAvailable">
		<style>
			<width value="100%"/>
			<flow value="horizontal"/>
		</style>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<width value="14px"/>
				<height value="19px"/>
				<marginRight value="12px"/>
				<backgroundSize value="cover"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:../service_kit/icons/icon_status_check.png'"/>
		</block>
		<block type="text">
			<bind name="class" value="_class ? _class : '$TextDefault17NM'"/>
			<style>
				<width value="100%"/>
				<leading value="-3"/>
				<textColor value="0xFFFFCC66"/>
			</style>
			<bind name="text" value="_isFeature ? 'IDS_AVAILABLE_FEATURE' : 'IDS_REWARD_IS_TAKEN'"/>
		</block>
	</block>
	<block className="AccountLevelingItemDueDate">
		<bind name="serverTime" value="'serverTime'"/>
		<bind name="watch" value="'isTimeRunningOut'; _dueDate - serverTime &lt; 86400"/>
		<bind name="timeFormat" value="_dueDate; 'dd.MM.yy'; 'formattedDueDatePromoReward'; true"/>
		<style>
			<width value="100%"/>
			<flow value="horizontal"/>
		</style>
		<bind name="style" value="'alpha'; isTimeRunningOut	? '1' : '0.7'"/>
		<block>
			<style>
				<width value="19px"/>
				<height value="19px"/>
				<backgroundSize value="cover"/>
			</style>
			<bind name="style" value="'marginRight'; _iconMarginRight ? _iconMarginRight : 12"/>
			<bind name="style" value="'backgroundImage'; isTimeRunningOut	? 'url:../service_kit/icons/icon_status_due_date_orange.png'
															: 'url:../service_kit/icons/icon_status_due_date_white.png'"/>
		</block>
		<block type="text">
			<bind name="class" value="_class ? _class : '$TextDefault17NM'"/>
			<style>
				<width value="100%"/>
				<leading value="-3"/>
				<marginTop value="2"/>
			</style>
			<bind name="style" value="'textColor'; isTimeRunningOut ? 0xFFFF9933 : '0xFFFFFF'"/>
			<bind name="text" value="subst('IDS_PROMO_REWARD_DAYS_LEFT', [], { _timer: formattedDueDatePromoReward })"/>
		</block>
	</block>
	<block className="AccountLevellingProgressBar">
		<bind name="dataRefDH" value="'accountLevelingStepEntity'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'accountLastStep'; ['accountLevelingStepEntity.accountLevelingStep.evIsLastStepChanged']; accountLevelingStepEntity.accountLevelingStep.isLastStep"/>
		<bind name="watch" value="'isSelect'; _carouselItemSelectedIndex == $index"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<style>
				<width value="20px"/>
				<height value="1px"/>
			</style>
		</block>
		<block>
			<bind name="tooltip" value="'FeatureALTooltip'; {_featureEntityId: accountLevelingStepEntity.id, _isSelect: isSelect}"/>
			<bind name="dispatch" value="'click'; 'evAccountLevelingItemClicked'; 	{ carouselItemSelectedIndex: $index,
																	  currentImageIdx: 1}"/>
			<bind name="instance" value="'AccountLevelingLevelIconItem'; {	_accountLevelingStepEntityID: accountLevelingStepEntity.id, _index: $index,
															_carouselItemSelectedIndex: _carouselItemSelectedIndex}"/>
		</block>
		<block>
			<style>
				<marginTop value="71px"/>
			</style>
			<bind name="instance" value="'AccountLevelingProgressItem'; !accountLastStep ? {	_accountLevelingStepEntityID: accountLevelingStepEntity.id,
																			_carouselItemSelectedIndex: _carouselItemSelectedIndex} : null"/>
		</block>
	</block>
	<block className="AccountLevelingProgressItem">
		<bind name="entityDH" value="'accountLevelingStepEntity'; _accountLevelingStepEntityID"/>
		<bind name="watchDH" value="'accountStepPoints'; ['accountLevelingStepEntity.accountLevelingStep.evThisStepPointsChanged']; accountLevelingStepEntity.accountLevelingStep.thisStepPoints"/>
		<bind name="watchDH" value="'accountNextStepPoints'; ['accountLevelingStepEntity.accountLevelingStep.evNextStepPointsChanged']; accountLevelingStepEntity.accountLevelingStep.nextStepPoints"/>
		<bind name="watch" value="'isProgressBarWithSteps'; accountNextStepPoints - accountStepPoints &lt; 16"/>
		<bind name="stageSize"/>
		<bind name="watch" value="'maxStageWidth'; stageWidth &lt; 1920 ? stageWidth : 1920"/>
		<bind name="watch" value="'widthOfItem'; math.round((maxStageWidth-1280)/(1920-1280)*(424-332)+332)"/>
		<bind name="watch" value="'widthOfImg'; 164"/>
		<bind name="watch" value="'padding'; 0"/>
		<bind name="watch" value="'wholeWidth'; widthOfItem - widthOfImg - padding*2"/>
		<bind name="style" value="'width'; widthOfItem - widthOfImg + 'px'"/>
		<bind name="style" value="'paddingLeft'; padding + 'px'"/>
		<bind name="style" value="'paddingRight'; padding + 'px'"/>
		<bind name="child" value="isProgressBarWithSteps ? 0 : 1; {	_wholeWidth: wholeWidth,
													_carouselItemSelectedIndex: _carouselItemSelectedIndex,
													_accountLevelingStepEntityID: _accountLevelingStepEntityID};	'AccountStepsProgressWithRewards';
																													'AccountLineProgressWithRewards'"/>
	</block>
	<block className="AccountLineProgressWithRewards">
		<bind name="entityDH" value="'accountLevelingStepEntity'; _accountLevelingStepEntityID"/>
		<bind name="watchDH" value="'stepPoints';		['accountLevelingStepEntity.accountLevelingStep.evThisStepPointsChanged']; accountLevelingStepEntity.accountLevelingStep.thisStepPoints"/>
		<bind name="watchDH" value="'nextStepPoints';	['accountLevelingStepEntity.accountLevelingStep.evNextStepPointsChanged']; accountLevelingStepEntity.accountLevelingStep.nextStepPoints"/>
		<bind name="watchDH" value="'rewardsList';		['accountLevelingStepEntity.accountLevelingStep.evRewardsListChanged']; accountLevelingStepEntity.accountLevelingStep.rewardsList"/>
		<bind name="firstEntityDH" value="'accountLevelPointsEntity'; CC.accountLevelPoints"/>
		<bind name="watchDH" value="'currentProgressPoints'; ['accountLevelPointsEntity.accountLevelPoints.evCurrentLevelPointsChanged']; accountLevelPointsEntity.accountLevelPoints.currentLevelPoints"/>
		<bind name="watch" value="'isWithRewards'; rewardsList.length &gt; 0"/>
		<bind name="watch" value="'countRewards'; isWithRewards ? rewardsList.length : 0"/>
		<bind name="watch" value="'countSteps'; nextStepPoints - stepPoints"/>
		<bind name="watch" value="'widthStep'; (_wholeWidth-1)/countSteps"/>
		<style>
			<align value="center"/>
			<width value="100%"/>
			<height value="21px"/>
			<flow value="horizontal"/>
		</style>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<width value="1px"/>
				<height value="27px"/>
				<backgroundColor value="0xffffffff"/>
				<alpha value="0.5"/>
			</style>
		</block>
		<block>
			<style>
				<height value="100%"/>
			</style>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<position value="absolute"/>
					<height value="1px"/>
					<width value="100%"/>
					<backgroundImage value="url:../accountLevel/progressBarIcons/accountLevelingProgressRepeaterBG.png"/>
					<backgroundRepeatX value="true"/>
				</style>
			</block>
			<bind name="repeat" value="countRewards; 'LineProgressAndReward'; {	_widthProgressBarStep: widthStep,
																_carouselItemSelectedIndex: _carouselItemSelectedIndex,
																_accountLevelingStepEntityID: _accountLevelingStepEntityID}"/>
			<bind name="instance" value="'LineProgress'; rewardsList[rewardsList.length-1] == nextStepPoints ? null : {_startStepPoints: isWithRewards ? rewardsList[rewardsList.length-1] : stepPoints, _finishStepPoints: nextStepPoints, _currentProgressPoints: currentProgressPoints, _widthStep:widthStep}"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="LineProgressAndReward">
		<bind name="entityDH" value="'accountLevelingStepEntity'; _accountLevelingStepEntityID"/>
		<bind name="watchDH" value="'stepPoints';		['accountLevelingStepEntity.accountLevelingStep.evThisStepPointsChanged']; accountLevelingStepEntity.accountLevelingStep.thisStepPoints"/>
		<bind name="watchDH" value="'rewardsList';		['accountLevelingStepEntity.accountLevelingStep.evRewardsListChanged']; accountLevelingStepEntity.accountLevelingStep.rewardsList"/>
		<bind name="firstEntityDH" value="'accountLevelPointsEntity'; CC.accountLevelPoints"/>
		<bind name="watchDH" value="'currentProgressPoints'; ['accountLevelPointsEntity.accountLevelPoints.evCurrentLevelPointsChanged']; accountLevelPointsEntity.accountLevelPoints.currentLevelPoints"/>
		<bind name="watch" value="'previousStep'; $index == 0 ? stepPoints : rewardsList[$index-1]"/>
		<bind name="watch" value="'thisRewardStepPoints'; rewardsList[$index]"/>
		<bind name="watch" value="'deltaDistanceToPreviousStep'; $index == 0 					? 0 : thisRewardStepPoints - rewardsList[$index-1]"/>
		<bind name="watch" value="'deltaDistanceToNextStep'; $index == rewardsList.length - 1	? 0 : rewardsList[$index+1] - thisRewardStepPoints"/>
		<bind name="watch" value="'minDistanceToNearestReward';	deltaDistanceToPreviousStep == 0	? deltaDistanceToNextStep*_widthProgressBarStep :
												deltaDistanceToNextStep == 0 		? deltaDistanceToPreviousStep*_widthProgressBarStep
																					: math.min(deltaDistanceToNextStep, deltaDistanceToPreviousStep)*_widthProgressBarStep"/>
		<style>
			<flow value="horizontal"/>
			<height value="100%"/>
		</style>
		<bind name="instance" value="'LineProgress'; {_startStepPoints: previousStep, _finishStepPoints: thisRewardStepPoints, _currentProgressPoints: currentProgressPoints, _widthStep: _widthProgressBarStep}"/>
		<block>
			<styleClass value="$MiddleVAlignedAbsolutely"/>
			<style>
				<right value="0px"/>
				<width value="1px"/>
				<height value="27px"/>
			</style>
			<bind name="instance" value="'AccountProgressReward'; {	_thisRewardStepPoints: thisRewardStepPoints,
													_isSelect: (_carouselItemSelectedIndex == -1*thisRewardStepPoints),
													_minDistanceToNearestReward: minDistanceToNearestReward}"/>
		</block>
	</block>
	<block className="LineProgress">
		<style>
			<flow value="horizontal"/>
			<align value="middle"/>
			<height value="100%"/>
		</style>
		<block>
			<bind name="style" value="'width'; math.round((_finishStepPoints - _startStepPoints) * _widthStep) - 1 + 'px'"/>
			<style>
				<height value="100%"/>
				<paddingTop value="2px"/>
				<paddingBottom value="2px"/>
				<backgroundImage value="url:../accountLevel/progressBarIcons/accountLevelingProgressBorderBG.png"/>
				<backgroundRepeatX value="true"/>
			</style>
			<block>
				<style>
					<height value="100%"/>
					<backgroundColor value="0xFFFFCC66"/>
				</style>
				<bind name="style" value="'width'; 	_currentProgressPoints &gt;= _finishStepPoints 	? '100%' :
									_currentProgressPoints &gt; _startStepPoints		? math.round((_currentProgressPoints - _startStepPoints) * _widthStep) + 'px'
																					: '0px'"/>
			</block>
		</block>
		<block>
			<style>
				<width value="1px"/>
				<height value="27px"/>
				<backgroundColor value="0xffffffff"/>
				<alpha value="0.5"/>
			</style>
		</block>
	</block>
	<block className="AccountStepsProgressWithRewards">
		<bind name="entityDH" value="'accountLevelingStepEntity'; _accountLevelingStepEntityID"/>
		<bind name="watchDH" value="'stepPoints'; ['accountLevelingStepEntity.accountLevelingStep.evThisStepPointsChanged']; accountLevelingStepEntity.accountLevelingStep.thisStepPoints"/>
		<bind name="watchDH" value="'nextStepPoints'; ['accountLevelingStepEntity.accountLevelingStep.evNextStepPointsChanged']; accountLevelingStepEntity.accountLevelingStep.nextStepPoints"/>
		<style>
			<align value="center"/>
			<width value="100%"/>
			<height value="21px"/>
			<flow value="horizontal"/>
		</style>
		<bind name="watch" value="'stepsCount'; nextStepPoints - stepPoints"/>
		<bind name="watch" value="'progressBarItemWidth'; math.round(_wholeWidth/stepsCount))"/>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<width value="1px"/>
				<height value="27px"/>
				<backgroundColor value="0xffffffff"/>
				<alpha value="0.5"/>
			</style>
		</block>
		<block>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<height value="1px"/>
				<backgroundImage value="url:../accountLevel/progressBarIcons/accountLevelingProgressRepeaterBG.png"/>
				<backgroundRepeatX value="true"/>
			</style>
			<bind name="style" value="'width'; progressBarItemWidth*stepsCount + 1 + 'px'"/>
		</block>
		<bind name="repeat" value="stepsCount; 'AccountProgressStep'; {	_progressBarItemWidth: progressBarItemWidth,
														_carouselItemSelectedIndex: _carouselItemSelectedIndex,
														_accountLevelingStepEntityID: _accountLevelingStepEntityID}"/>
	</block>
	<block className="AccountProgressStep">
		<bind name="entityDH" value="'accountLevelingStepEntity'; _accountLevelingStepEntityID"/>
		<bind name="watchDH" value="'stepPoints'; ['accountLevelingStepEntity.accountLevelingStep.evThisStepPointsChanged']; accountLevelingStepEntity.accountLevelingStep.thisStepPoints"/>
		<bind name="watchDH" value="'rewardsList'; ['accountLevelingStepEntity.accountLevelingStep.evRewardsListChanged']; accountLevelingStepEntity.accountLevelingStep.rewardsList"/>
		<bind name="firstEntityDH" value="'accountLevelPointsEntity'; CC.accountLevelPoints"/>
		<bind name="watchDH" value="'currentProgressPoints'; ['accountLevelPointsEntity.accountLevelPoints.evCurrentLevelPointsChanged']; accountLevelPointsEntity.accountLevelPoints.currentLevelPoints"/>
		<bind name="watch" value="'isUnlocked'; $index &lt; currentProgressPoints - stepPoints"/>
		<style>
			<height value="100%"/>
			<marginRight value="1px"/>
			<paddingTop value="2px"/>
			<paddingBottom value="2px"/>
			<backgroundImage value="url:../accountLevel/progressBarIcons/accountLevelingProgressBorderBG.png"/>
			<backgroundRepeatX value="true"/>
		</style>
		<bind name="style" value="'width'; _progressBarItemWidth - 1 + 'px'"/>
		<block>
			<bind name="visible" value="isUnlocked"/>
			<styleClass value="$Fullsize"/>
			<style>
				<backgroundColor value="0xFFFFCC66"/>
			</style>
		</block>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<position value="absolute"/>
				<right value="-1px"/>
				<width value="1px"/>
				<height value="27px"/>
				<backgroundColor value="0xffffffff"/>
				<alpha value="0.5"/>
			</style>
		</block>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<position value="absolute"/>
				<right value="-1px"/>
				<width value="1px"/>
				<height value="27px"/>
			</style>
			<bind name="watch" value="'thisStepPoints'; stepPoints + $index + 1"/>
			<bind name="watch" value="'indexInRewardsArr'; indexOf(thisStepPoints, rewardsList)"/>
			<bind name="watch" value="'deltaDistanceToPreviousStep'; indexInRewardsArr == -1 || indexInRewardsArr == 0						? 0 : thisStepPoints - rewardsList[indexInRewardsArr-1]"/>
			<bind name="watch" value="'deltaDistanceToNextStep'; indexInRewardsArr == -1 || indexInRewardsArr == rewardsList.length - 1		? 0 : rewardsList[indexInRewardsArr+1] - thisStepPoints"/>
			<bind name="watch" value="'minDistanceToNearestReward';	deltaDistanceToPreviousStep == 0	? deltaDistanceToNextStep*_progressBarItemWidth :
													deltaDistanceToNextStep == 0 		? deltaDistanceToPreviousStep*_progressBarItemWidth
																						: math.min(deltaDistanceToNextStep, deltaDistanceToPreviousStep)*_progressBarItemWidth"/>
			<bind name="instance" value="'AccountProgressReward'; (indexInRewardsArr &gt; -1)	? {	_thisRewardStepPoints: thisStepPoints,
																				_isSelect: (thisStepPoints == -1*_carouselItemSelectedIndex),
																				_minDistanceToNearestReward: minDistanceToNearestReward}
																			: null"/>
		</block>
	</block>
	<block className="AccountProgressReward">
		<bind name="firstEntityDH" value="'accountsRewardEntity'; CC.accountLevelingRewards"/>
		<bind name="watchDH" value="'rewardsDict';	['accountsRewardEntity.accountLevelingRewards.evRewardsDictChanged'];	accountsRewardEntity.accountLevelingRewards.rewardsDict[_thisRewardStepPoints]"/>
		<bind name="indexOf" value="rewardsDict; indexOfPromoReward; { 'type': 'promo' }"/>
		<bind name="watch" value="'isPromo'; indexOfPromoReward &gt; -1"/>
		<bind name="firstEntityDH" value="'accountLevelPointsEntity'; CC.accountLevelPoints"/>
		<bind name="watchDH" value="'currentProgressPoints'; ['accountLevelPointsEntity.accountLevelPoints.evCurrentLevelPointsChanged']; accountLevelPointsEntity.accountLevelPoints.currentLevelPoints"/>
		<bind name="watch" value="'isUnlocked'; currentProgressPoints &gt;= _thisRewardStepPoints"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="var" value="{rewardIconSize: 32}"/>
		<bind name="watch" value="'isPromoTooCloseToCommonReward'; isPromo &amp;&amp; _minDistanceToNearestReward &gt; 0 &amp;&amp; _minDistanceToNearestReward &lt; rewardIconSize"/>
		<bind name="soundSet" value="'default_button'"/>
		<block>
			<style>
				<position value="absolute"/>
				<top value="27px"/>
				<width value="1px"/>
				<height value="6px"/>
				<backgroundRepeatY value="true"/>
				<alpha value="0.5"/>
			</style>
			<bind name="style" value="'height'; isPromoTooCloseToCommonReward ? '42px' : '6px'"/>
			<bind name="style" value="'backgroundImage'; 'url:../accountLevel/progressBarIcons/accountLevelingRewardVerticalDottedLine.png'"/>
		</block>
		<block>
			<bind name="tooltip" value="'RewardALTooltip'; {_rewardIndex: _thisRewardStepPoints, _isSelect: _isSelect}"/>
			<bind name="dispatch" value="'click'; 'evAccountLevelingItemClicked'; 	{carouselItemSelectedIndex: -1*_thisRewardStepPoints,
																	 currentImageIdx: currentImageIdx}"/>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<style>
				<backgroundColor value="0x01000000"/>
			</style>
			<bind name="style" value="'width'; rewardIconSize + 'px'"/>
			<bind name="style" value="'height'; rewardIconSize + 'px'"/>
			<bind name="style" value="'top'; isPromoTooCloseToCommonReward ? '70px' : '35px'"/>
			<bind name="watch" value="'backgroundURL'; 'url:../accountLevel/progressBarIcons/icon_'+ (isPromo ? 'promoreward' : 'reward')
																					+ (isUnlocked ? '' : '_locked')
																					+ '.png'"/>
			<block>
				<styleClass value="$Fullsize"/>
				<bind name="watch" value="'bgOpacity';	_isSelect	? 1 :
										mouseDown 	? 0.6 :
										rollOver	? 0.7
													: 0.6"/>
				<bind name="style" value="'backgroundImage'; backgroundURL"/>
				<bind name="style" value="'alpha'; bgOpacity"/>
			</block>
		</block>
	</block>
	<block className="AccountLevelingLevelIconItem">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="entityDH" value="'accountLevelingStepEntity'; _accountLevelingStepEntityID"/>
		<bind name="watchDH" value="'accountStepPoints'; ['accountLevelingStepEntity.accountLevelingStep.evThisStepPointsChanged'];
										accountLevelingStepEntity.accountLevelingStep.thisStepPoints"/>
		<bind name="watchDH" value="'stepFeature';	['accountLevelingStepEntity.accountLevelingStep.evFeaturesChanged'];
									accountLevelingStepEntity.accountLevelingStep.features[0]"/>
		<bind name="primaryEntityDH" value="'featureEntity'; CC.accountFeature; stepFeature"/>
		<bind name="watchDH" value="'iconFeaturePath';	['featureEntity.accountFeature.evStateChanged']; featureEntity.accountFeature.iconPath"/>
		<bind name="firstEntityDH" value="'accountLevelPointsEntity'; CC.accountLevelPoints"/>
		<bind name="watchDH" value="'currentPoints'; ['accountLevelPointsEntity.accountLevelPoints.evCurrentLevelPointsChanged']; accountLevelPointsEntity.accountLevelPoints.currentLevelPoints"/>
		<bind name="watch" value="'battlesToStep'; accountStepPoints - currentPoints"/>
		<bind name="watch" value="'isSelected'; _carouselItemSelectedIndex == _index"/>
		<bind name="watch" value="'ALIndex'; _index + 1"/>
		<bind name="watch" value="'isLocked'; battlesToStep &gt; 0"/>
		<bind name="soundSet" value="'default_button'"/>
		<style>
			<height value="224px"/>
			<width value="164px"/>
		</style>
		<bind name="var" value="{ 
		ctRollOver: {
			redMultiplier: 1,
			greenMultiplier: 1,
			blueMultiplier: 1,
			alphaMultiplier: 1,
			redOffset: 15,
			greenOffset: 15,
			blueOffset: 15,
			alphaOffset: 0
		}
	}"/>
		<block>
			<bind name="visible" value="!isLocked"/>
			<style>
				<position value="absolute"/>
				<height value="164px"/>
				<width value="164px"/>
				<backgroundSize value="fill"/>
				<hitTest value="false"/>
				<backgroundImage value="url:../accountLevel/progressBarIcons/unlock_shadow.png"/>
			</style>
			<bind name="transition" value="isSelected; 0.07; {alpha: 0.6, scaleX: 0.8, scaleY: 0.8, top: 16, left: 16}; {alpha: 0.8, scaleX: 1, scaleY: 1, top: 0, left: 0}"/>
		</block>
		<block>
			<style>
				<height value="164px"/>
				<width value="164px"/>
				<backgroundSize value="fill"/>
				<hitTest value="false"/>
			</style>
			<bind name="transition" value="isSelected  &amp;&amp; !isLocked; 0.07; {top: 0}; {top: -4}"/>
			<bind name="colorTransform" value="	rollOver &amp;&amp; !isSelected	? ctRollOver
														: {}"/>
			<bind name="style" value="'backgroundImage'; isLocked	? 'url:' + iconFeaturePath + '_locked.png'
													: 'url:' + iconFeaturePath + '.png'"/>
			<block>
				<bind name="visible" value="isLocked"/>
				<style>
					<top value="52px"/>
					<left value="52px"/>
					<width value="60px"/>
					<height value="60px"/>
					<backgroundImage value="url:../accountLevel/progressBarIcons/accountLevelingBigLockIcon.png"/>
					<backgroundSize value="fill"/>
				</style>
			</block>
		</block>
		<block>
			<bind name="stageSize"/>
			<bind name="watch" value="'bottomOffset'; math.round(30 - (stageHeight-720)/12))"/>
			<bind name="style" value="'bottom'; (bottomOffset &gt; 0 ? bottomOffset : 0)+'px'"/>
			<style>
				<position value="absolute"/>
				<left value="31px"/>
			</style>
			<bind name="instance" value="'ALCarouselPointer'; {_isSelected: isSelected}"/>
		</block>
		<block>
			<style>
				<height value="224px"/>
				<width value="140px"/>
				<position value="absolute"/>
				<left value="12px"/>
				<backgroundColor value="0x01000000"/>
			</style>
		</block>
	</block>
	<block className="ALCarouselPointer">
		<style>
			<width value="102px"/>
			<height value="11px"/>
			<backgroundSize value="fill"/>
		</style>
		<bind name="style" value="'backgroundImage'; 'url:../accountLevel/progressBarIcons/carousel_pointer_up.png'"/>
		<block>
			<bind name="transition" value="_isSelected; 0.07; {alpha: 0, scaleY:0, top: 11}; {alpha: 1, scaleY:1, top: 0}"/>
			<style>
				<position value="absolute"/>
				<width value="102px"/>
				<height value="11px"/>
				<backgroundSize value="fill"/>
			</style>
			<bind name="style" value="'backgroundImage';	'url:../accountLevel/progressBarIcons/carousel_pointer_toggle.png'"/>
		</block>
	</block>
	<block className="RewardALTooltip">
		<bind name="collectionDH" value="CC.accountPromoRewardBanner; 'promoRewardCollection';  'byBattles.' + _rewardIndex"/>
		<bind name="entityDH" value="'promoRewardEntity'; promoRewardCollection[0].id"/>
		<bind name="watchDH" value="'promoRewardDueDate'; ['promoRewardEntity.accountPromoRewardBanner.evChanged']; promoRewardEntity.accountPromoRewardBanner.expirationTime"/>
		<bind name="watchDH" value="'promoRewardTitle'; ['promoRewardEntity.accountPromoRewardBanner.evChanged']; promoRewardEntity.accountPromoRewardBanner.title"/>
		<bind name="watchDH" value="'promoRewardImageSmall';		['promoRewardEntity.accountPromoRewardBanner.evChanged']; promoRewardEntity.accountPromoRewardBanner.imageSmall"/>
		<bind name="primaryEntityDH" value="'imageEntity'; CC.byteArrayData; promoRewardImageSmall"/>
		<bind name="watchDH" value="'imageData'; ['imageEntity.byteArrayData.evChanged']; imageEntity.byteArrayData.data"/>
		<bind name="watch" value="'isTimelessPromoReward'; !promoRewardDueDate || promoRewardDueDate &lt; 1"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'accountLevelInfo'"/>
		<bind name="watch" value="'isAbuseStatusConfirmed'; accountLevelInfo.abuseStatus == 2"/>
		<bind name="firstEntityDH" value="'accountLevelingRewardsEntity'; CC.accountLevelingRewards"/>
		<bind name="watchDH" value="'rewardsDict'; ['accountLevelingRewardsEntity.accountLevelingRewards.evRewardsDictChanged']; accountLevelingRewardsEntity.accountLevelingRewards.rewardsDict"/>
		<bind name="watch" value="'rewardEntityId'; rewardsDict[_rewardIndex][0].rewardId"/>
		<bind name="entityDH" value="'rewardEntity'; rewardEntityId"/>
		<bind name="watchDH" value="'rewardIds'; []; rewardEntity.rewardsContainer.rewardIds"/>
		<bind name="indexOf" value="rewardsDict[_rewardIndex]; indexOfPromoReward; { 'type': 'promo' }"/>
		<bind name="watch" value="'isPromoReward'; indexOfPromoReward &gt; -1"/>
		<bind name="firstEntityDH" value="'accountLevelPointsEntity'; CC.accountLevelPoints"/>
		<bind name="watchDH" value="'currentProgressPoints'; ['accountLevelPointsEntity.accountLevelPoints.evCurrentLevelPointsChanged']; accountLevelPointsEntity.accountLevelPoints.currentLevelPoints"/>
		<bind name="watch" value="'battlesToStep'; _rewardIndex - currentProgressPoints"/>
		<bind name="watch" value="'isSimilarRewards';	rewardEntity.rewardsContainer.subtype &amp;&amp; rewardEntity.rewardsContainer.rewardIds.length &gt; 1"/>
		<bind name="watch" value="'isSingleRewardType';	rewardEntity.rewardsContainer.rewardIds.length == 1"/>
		<bind name="watch" value="'rewardType'; rewardEntity.rewardComponent.type"/>
		<bind name="watch" value="'rewardIconPath';	isSimilarRewards				? toLowerCase(rewardEntity.rewardComponent.subtype + '_set') :
									isSingleRewardType				?
										rewardType == 	'Exterior' 		? toLowerCase(exteriorConfig.type) :
										rewardType == 	'Resource'		? toLowerCase(rewardEntity.rewardComponent.subtype) :
										rewardType == 	'ResourceCoeff'	? toLowerCase(rewardEntity.rewardComponent.subtype) :
										rewardType == 	'Exchange'		? toLowerCase(rewardEntity.rewardComponent.subtype) :
										rewardType == 	'Lootbox'		? toLowerCase(rewardEntity.rewardComponent.subtype)
																		: toLowerCase(rewardEntity.rewardComponent.type)
																	: 'multiple'"/>
		<bind name="watch" value="'rewardHeaderTextWithAmount';	isSimilarRewards			? toUpperCase('IDS_REWARDS_SET_' + rewardEntity.rewardComponent.subtype) :
												isSingleRewardType			?
													rewardType == 	'Ship' 			? 'IDS_SHIP' :
													rewardType == 	'Crew' 			? 'IDS_CREW' :
													rewardType == 	'Exterior' 		? exteriorConfig.type == ExteriorTypes.ENSIGN 	? toUpperCase('IDS_' + exteriorConfig.type + '_TITLE') 
																																	: subst(toUpperCase('IDS_PL_' + exteriorConfig.type + '_TITLE'), [], {_amount: format(rewardEntity.rewardComponent.amount, -1)}, rewardEntity.rewardComponent.amount) :
													rewardType == 	'Ability'		? subst('IDS_PL_ABILITY_TITLE', [], {_amount: format(rewardEntity.rewardComponent.amount, -1)}, rewardEntity.rewardComponent.amount) :
													rewardType == 	'Modernization'	? subst('IDS_PL_MODERNIZATION_TITLE', [], {_amount: format(rewardEntity.rewardComponent.amount, -1)}, rewardEntity.rewardComponent.amount) :
													rewardType == 	'Resource'		? 	rewardEntity.rewardComponent.subtype == 'credits' ||
																						rewardEntity.rewardComponent.subtype == 'gold' ||
																						rewardEntity.rewardComponent.subtype == 'slots' ||
																						rewardEntity.rewardComponent.subtype == 'barCapacity'		? subst(toUpperCase('IDS_REWARDS_PL_' + rewardEntity.rewardComponent.subtype + '_TITLE'), [], {_amount:  format(rewardEntity.rewardComponent.amount, -1)}, rewardEntity.rewardComponent.amount) :
																						rewardEntity.rewardComponent.subtype == 'wows_premium' ||    
																						rewardEntity.rewardComponent.subtype == 'premium'			? subst(toUpperCase('IDS_REWARDS_PL_' + rewardEntity.rewardComponent.subtype + '_TITLE'), [], {_amount:  rewardEntity.rewardComponent.params.text})
																																					: subst(toUpperCase('IDS_REWARDS_PL_' + rewardEntity.rewardComponent.subtype + '_TITLE'), [], {_amount:  format(rewardEntity.rewardComponent.amount, -1)}, rewardEntity.rewardComponent.amount) :
													rewardType == 	'ResourceCoeff'	? toUpperCase('IDS_REWARD_' + rewardEntity.rewardComponent.subtype + '_TITLE') :
													rewardType == 	'Exchange'		? toUpperCase('IDS_PRMP_ITEM_' + rewardEntity.rewardComponent.subtype) :
													rewardType == 	'Lootbox'		? subst('IDS_PL_LOOTBOX_TITLE', [], {_amount: format(rewardEntity.rewardComponent.amount, -1)}, rewardEntity.rewardComponent.amount) :
													rewardType == 	'DogTag'		?  toUpperCase('IDS_DOGTAG_' + rewardEntity.rewardComponent.name + '_NAME') :
													rewardType == 	'Collection'	?  toUpperCase('IDS_' + rewardEntity.rewardComponent.name)
																					: 'NO IDS_REWARDS_SET'
																			: 'IDS_REWARDS_SET'"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="360px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$ContentIndents"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<bind name="instance" value="'IconAlDataItem'; isPromoReward ? {_iconSize: '80px', _imageData: imageData} : null"/>
					<bind name="instance" value="'IconAlItem'; !isPromoReward ? {_iconSize: '80px', _imageURL: 'url:../accountLevel/rewards/icon_reward_' + rewardIconPath + '_small.png'} : null"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<marginLeft value="12"/>
						<marginTop value="12"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefaultBold19NM"/>
						<style>
							<width value="100%"/>
							<alpha value="0.9"/>
						</style>
						<bind name="text" value="isPromoReward ? promoRewardTitle : rewardHeaderTextWithAmount"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$ContentIndents"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="child" value="	battlesToStep &lt; 1	? 0 :
						isAbuseStatusConfirmed	? 1
												: 2; { _battlesToStep: battlesToStep }; 'AccountLevelingItemAvailable';
																						'AccountLevelingItemAbused';
																						'AccountLevelingItemUnavailable'"/>
		</block>
		<block>
			<bind name="visible" value="!isTimelessPromoReward &amp;&amp; isPromoReward"/>
			<styleClass value="$ContentIndents"/>
			<style>
				<width value="100%"/>
				<marginTop value="8px"/>
			</style>
			<bind name="instance" value="'AccountLevelingItemDueDate'; !isTimelessPromoReward &amp;&amp; isPromoReward	? { _class: '$TextDefault17NM', _dueDate: promoRewardDueDate }
																								 : null"/>
		</block>
		<block>
			<bind name="visible" value="!_isSelect"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<bind name="instance" value="'MouseInstruction'; !_isSelect ? {_type: 'left', _instructionText: 'IDS_HINT_LEFT_CLICK_FOR_FURTHER_INFO', _maxWidth: 328} : null"/>
			</block>
		</block>
	</block>
	<block className="FeatureALTooltip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'accountLevelInfo'"/>
		<bind name="watch" value="'isAbuseStatusConfirmed'; accountLevelInfo.abuseStatus == 2"/>
		<bind name="entityDH" value="'accountLevelingStepEntity'; _featureEntityId"/>
		<bind name="watchDH" value="'accountStepPoints'; ['accountLevelingStepEntity.accountLevelingStep.evThisStepPointsChanged']; accountLevelingStepEntity.accountLevelingStep.thisStepPoints"/>
		<bind name="watchDH" value="'stepFeature'; ['accountLevelingStepEntity.accountLevelingStep.evFeaturesChanged'];	accountLevelingStepEntity.accountLevelingStep.features[0]"/>
		<bind name="primaryEntityDH" value="'featureEntity'; CC.accountFeature; stepFeature"/>
		<bind name="watchDH" value="'iconFeaturePath';	['featureEntity.accountFeature.evStateChanged']; featureEntity.accountFeature.iconPath"/>
		<bind name="watchDH" value="'titleFeature';		['featureEntity.accountFeature.evStateChanged']; featureEntity.accountFeature.title"/>
		<bind name="firstEntityDH" value="'accountLevelPointsEntity'; CC.accountLevelPoints"/>
		<bind name="watchDH" value="'currentProgressPoints'; ['accountLevelPointsEntity.accountLevelPoints.evCurrentLevelPointsChanged']; accountLevelPointsEntity.accountLevelPoints.currentLevelPoints"/>
		<bind name="watch" value="'battlesToStep'; accountStepPoints - currentProgressPoints"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="360px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$ContentIndents"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<width value="80px"/>
						<height value="80px"/>
						<backgroundSize value="cover"/>
					</style>
					<bind name="style" value="'backgroundImage'; ('url:' + iconFeaturePath + '_small.png')"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<marginLeft value="12"/>
						<marginTop value="12"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefaultBold19NM"/>
						<style>
							<width value="100%"/>
							<alpha value="0.9"/>
						</style>
						<bind name="text" value="titleFeature"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$ContentIndents"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="child" value="	battlesToStep &lt; 1 	? 0 :
						isAbuseStatusConfirmed	? 1
												: 2; {	_battlesToStep: battlesToStep,
														_isFeature: true}; 	'AccountLevelingItemAvailable';
																			'AccountLevelingItemAbused';
																			'AccountLevelingItemUnavailable'"/>
		</block>
		<block>
			<bind name="visible" value="!_isSelect"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<bind name="instance" value="'MouseInstruction'; !_isSelect ? {_type: 'left', _instructionText: 'IDS_HINT_LEFT_CLICK_FOR_FURTHER_INFO', _maxWidth: 328} : null"/>
			</block>
		</block>
	</block>
	<block className="PromoRewardBanner">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="appear" value="'addedToStage'; 0.2; _isPortBanner ? 0.1 : 0.25; {alpha: 0, top: 5}; {alpha: 1, top: 0}; 1"/>
		<bind name="collectionDH" value="CC.accountPromoRewardBanner; 'promoRewardCollection'; 'upcoming.sorted'"/>
		<bind name="watch" value="'isSinglePromoReward'; promoRewardCollection.length == 1"/>
		<bind name="var" value="{promoRewardIndex: 0}"/>
		<bind name="var" value="{isInited: false, test: 0}"/>
		<bind name="catch" value="'addedToStage'; {	promoRewardIndex:	(isSinglePromoReward 	? 0 :
														_isFromPortPromoBanner	? 1
																				: 0),
									isInited: true}"/>
		<bind name="dispatch" value="(isInited &amp;&amp; !isSinglePromoReward)	? 'evPromoRewardBannerClicked'
														: null; 'carouselRewardIndexChangedEv'; {}; 2; 0.05"/>
		<bind name="catch" value="'carouselRewardIndexChangedEv';	{promoRewardIndex: (_carouselItemSelectedIndex == -1*promoRewardBattles)	? ((promoRewardIndex + 1) == promoRewardCollection.length)	? 0
																																														: (promoRewardIndex + 1)
																																: promoRewardIndex, test: test+1}"/>
		<bind name="entityDH" value="'promoRewardEntity'; promoRewardCollection[promoRewardIndex].id"/>
		<bind name="watchDH" value="'promoRewardBattles';		['promoRewardEntity.accountPromoRewardBanner.evChanged']; promoRewardEntity.accountPromoRewardBanner.battles"/>
		<bind name="watchDH" value="'promoRewardLevel';			['promoRewardEntity.accountPromoRewardBanner.evChanged']; promoRewardEntity.accountPromoRewardBanner.level"/>
		<bind name="watchDH" value="'promoRewardImageSmall';		['promoRewardEntity.accountPromoRewardBanner.evChanged']; promoRewardEntity.accountPromoRewardBanner.imageSmall"/>
		<bind name="watchDH" value="'promoRewardImageMedium';	['promoRewardEntity.accountPromoRewardBanner.evChanged']; promoRewardEntity.accountPromoRewardBanner.imageMedium"/>
		<bind name="watch" value="'bannerImageUrl'; _isPortBanner ? promoRewardImageSmall : promoRewardImageMedium"/>
		<bind name="primaryEntityDH" value="'imageEntity'; CC.byteArrayData; bannerImageUrl"/>
		<bind name="watchDH" value="'imageData'; ['imageEntity.byteArrayData.evChanged']; imageEntity.byteArrayData.data"/>
		<bind name="firstEntityDH" value="'accountLevelPointsEntity'; CC.accountLevelPoints"/>
		<bind name="watchDH" value="'currentPoints'; ['accountLevelPointsEntity.accountLevelPoints.evCurrentLevelPointsChanged']; accountLevelPointsEntity.accountLevelPoints.currentLevelPoints"/>
		<bind name="watch" value="'battlesToPromoReward'; promoRewardBattles - currentPoints"/>
		<bind name="watch" value="'isBannerVisible'; ((promoRewardBattles != -1*_carouselItemSelectedIndex) &amp;&amp; isSinglePromoReward) || !isSinglePromoReward"/>
		<bind name="collectionDH" value="CC.accountPromoRewardBanner; 'promoRewardCollectionByBattles';  'byBattles.' + promoRewardBattles"/>
		<bind name="indexOf" value="promoRewardCollectionByBattles; indexOfPromoRewardInCollectionByBattles; { 'id': promoRewardEntity.id }"/>
		<bind name="dispatch" value="'click'; _isPortBanner ? null : 'evPromoRewardBannerClicked'; { carouselScrollIndex: promoRewardLevel - 1,
																					carouselItemSelectedIndex: -1*promoRewardBattles,
																					currentImageIdx: indexOfPromoRewardInCollectionByBattles + 1 }"/>
		<bind name="action" value="_isPortBanner ? 'click' : null; 'changeInset'; {	inset:		LobbyConstants.PLAYER_PROFILE,
																	page:		LobbyConstants.PLAYER_PROFILE_ACCOUNT,
																	pageData: { promoRewardBattles: promoRewardBattles,
																				promoRewardLevel: promoRewardLevel,
																				isPortBannerClicked: true,
																				rewardTypeReason: 'promo' } }"/>
		<bind name="watch" value="'bannerSize'; _isPortBanner ? '128px' : '164px'"/>
		<bind name="var" value="{ 
		ctRollOver: {
			redMultiplier: 1,
			greenMultiplier: 1,
			blueMultiplier: 1,
			alphaMultiplier: 1,
			redOffset: 30,
			greenOffset: 30,
			blueOffset: 30,
			alphaOffset: 0
		}
	}"/>
		<bind name="var" value="{ 
		ctMouseDown: {
			redMultiplier: 1,
			greenMultiplier: 1,
			blueMultiplier: 1,
			alphaMultiplier: 1,
			redOffset: -30,
			greenOffset: -30,
			blueOffset: -30,
			alphaOffset: 0
		}
	}"/>
		<block>
			<bind name="fade" value="isBannerVisible; isBannerVisible ? 0.1 : 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: 10}; 1; 0.1"/>
			<block>
				<bind name="visible" value="!isSinglePromoReward"/>
				<style>
					<position value="absolute"/>
				</style>
				<bind name="style" value="'width'; bannerSize"/>
				<bind name="style" value="'height'; bannerSize"/>
				<bind name="colorTransform" value="	(mouseDown)		? ctMouseDown :
									(rollOver)		? ctRollOver
													: {}"/>
				<bind name="instance" value="'IconAlItem'; isSinglePromoReward ? null : { 	_imageURL: _isPortBanner	? ('url:../accountLevel/promoRewardBanner/promoreward_bg_small.png')
																										: ('url:../accountLevel/promoRewardBanner/promoreward_bg_big.png'),
																			_iconSize: bannerSize }"/>
			</block>
			<block>
				<style>
					<backgroundSize value="cover"/>
				</style>
				<bind name="style" value="'width'; bannerSize"/>
				<bind name="style" value="'height'; bannerSize"/>
				<bind name="colorTransform" value="	(mouseDown)		? ctMouseDown :
									(rollOver)		? ctRollOver
													: {}"/>
				<bind name="style" value="'backgroundImageData'; imageData"/>
			</block>
			<block className="bg_tile_promo_reward_banner" type="native">
				<style>
					<width value="100%f"/>
					<height value="27px"/>
					<position value="absolute"/>
				</style>
				<bind name="style" value="'right'; _isPortBanner ? 24 : 64"/>
				<bind name="style" value="'bottom'; _isPortBanner ? -2 : 8"/>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<width value="100%f"/>
						<marginLeft value="12"/>
						<marginRight value="12"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefaultNM"/>
						<bind name="text" value="subst('IDS_BATTLES_TO_NEXT_STEP', [], { battles: battlesToPromoReward }, battlesToPromoReward)"/>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="PromoBannerTooltip">
		<bind name="collectionDH" value="CC.accountPromoRewardBanner; 'promoRewardCollection'; 'upcoming.sorted'"/>
		<bind name="entityDH" value="'promoRewardEntity'; promoRewardCollection[0].id"/>
		<bind name="watchDH" value="'promoRewardTitle'; 				['promoRewardEntity.accountPromoRewardBanner.evChanged']; promoRewardEntity.accountPromoRewardBanner.title"/>
		<bind name="watchDH" value="'promoRewardBattles'; 			['promoRewardEntity.accountPromoRewardBanner.evChanged']; promoRewardEntity.accountPromoRewardBanner.battles"/>
		<bind name="watchDH" value="'promoRewardShortDescription'; 	['promoRewardEntity.accountPromoRewardBanner.evChanged']; promoRewardEntity.accountPromoRewardBanner.shortDescription"/>
		<bind name="watchDH" value="'promoRewardDueDate';			['promoRewardEntity.accountPromoRewardBanner.evChanged']; promoRewardEntity.accountPromoRewardBanner.expirationTime"/>
		<bind name="watch" value="'isTimedPromoReward'; promoRewardDueDate &gt; 1"/>
		<bind name="watch" value="'isProgressBarWithSteps'; promoRewardBattles &lt; 16 &amp;&amp; promoRewardBattles &gt; 1 ? 0 : 1"/>
		<bind name="watch" value="'stepWidth'; math.floor(276/promoRewardBattles)"/>
		<bind name="watch" value="'stepsCountWithHackedLength'; stepWidth*promoRewardBattles &lt; 276 ? 276 - stepWidth*promoRewardBattles : false"/>
		<bind name="firstEntityDH" value="'accountLevelPointsEntity'; CC.accountLevelPoints"/>
		<bind name="watchDH" value="'currentPoints'; ['accountLevelPointsEntity.accountLevelPoints.evCurrentLevelPointsChanged']; accountLevelPointsEntity.accountLevelPoints.currentLevelPoints"/>
		<bind name="watch" value="'lineProgress'; (currentPoints*100)/promoRewardBattles"/>
		<bind name="watch" value="'battlesToPromoReward'; promoRewardBattles - currentPoints"/>
		<styleClass value="$DefaultInstantTooltipBehaviour"/>
		<style>
			<width value="300px"/>
			<hitTest value="false"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<styleClass value="$ContentIndents"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefaultBold19NM"/>
				<style>
					<maxWidth value="276"/>
					<alpha value="0.9"/>
				</style>
				<bind name="text" value="promoRewardTitle"/>
			</block>
		</block>
		<block>
			<style>
				<width value="276px"/>
				<alpha value="0.7"/>
				<marginLeft value="12px"/>
				<marginRight value="12px"/>
			</style>
			<bind name="style" value="'marginBottom'; isTimedPromoReward ? 0 : '12px'"/>
			<bind name="instance" value="'AccountLevelingItemUnavailable'; { _battlesToStep: battlesToPromoReward,
															_class: '$TextDefaultNM',
															_iconMarginRight: '8' }"/>
		</block>
		<block>
			<bind name="visible" value="isTimedPromoReward ? true : false"/>
			<style>
				<width value="276px"/>
				<marginLeft value="12px"/>
				<marginTop value="12px"/>
				<marginRight value="12px"/>
				<marginBottom value="12px"/>
			</style>
			<bind name="instance" value="'AccountLevelingItemDueDate'; isTimedPromoReward	? { _class: '$TextDefaultNM',
																				_dueDate: promoRewardDueDate,
																				_iconMarginRight: '8' }
																			: null"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<styleClass value="$PxHorizontalCorrection"/>
			</block>
			<block>
				<styleClass value="$ContentIndents"/>
				<style>
					<width value="100%"/>
					<alpha value="0.7"/>
				</style>
				<bind name="instance" value="'InstructionParagraphNM'; { _class: '$TextDefault17NM', _text: promoRewardShortDescription, _maxWidth: 276 }"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="-2px"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'MouseInstruction'; { _type: 'left', _instructionText: 'IDS_MOVE_TO_THE_PROMO_REWARD_WINDOW', _maxWidth: 256 }"/>
		</block>
	</block>
	<block className="AbuseStatusProfileTooltip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'accountLevelInfo'"/>
		<bind name="watch" value="'abuseData'; {	status: 		accountLevelInfo.abuseStatus,
								components: 	accountLevelInfo.abuseComponents,
								battlesToClean: accountLevelInfo.battlesForStatusClean}"/>
		<styleClass value="$DefaultInstantTooltipBehaviour"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<style>
			<width value="340px"/>
			<hitTest value="false"/>
		</style>
		<bind name="watch" value="'abuseStatusStr';	abuseData.status == 0	? 'NORMAL' :
									abuseData.status == 1	? 'SUSPECT'
																				: 'CONFIRMED'"/>
		<bind name="watch" value="'headerStr';	tr('IDS_ABUSE_STATUS_' + abuseStatusStr)"/>
		<bind name="watch" value="'abuseComponents'; abuseData.status != 0	? abuseData.components[AbuseStatus.SUSPECT]
																				: []"/>
		<bind name="watch" value="'headerClass'; (abuseData.status == 1)	? '$FontColorTeamkiller' :
								(abuseData.status == 2)	? '$FontColorCompareNegative'
																				: '$FontColorWhite'"/>
		<block>
			<style>
				<width value="100%"/>
				<margin value="12px"/>
			</style>
			<block type="text">
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="100%"/>
					<leading value="-3"/>
				</style>
				<styleClass value="$TextHeaderBold"/>
				<bind name="class" value="headerClass"/>
				<bind name="text" value="headerStr"/>
			</block>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<alpha value="1.4"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="12px"/>
					<marginTop value="8px"/>
					<marginRight value="12px"/>
					<marginBottom value="8px"/>
				</style>
				<bind name="repeat" value="abuseComponents; 'AbuseReasonMessage'; {}"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="-2px"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="12px"/>
				<marginTop value="8px"/>
				<marginRight value="12px"/>
				<marginBottom value="8px"/>
			</style>
			<block type="text">
				<style>
					<width value="100%"/>
					<leading value="-1"/>
				</style>
				<styleClass value="$TextDefault"/>
				<bind name="text" value="tr('IDS_ABUSE_STATUS_' + toUpperCase(abuseStatusStr) + '_PUNISHMENT')"/>
			</block>
			<block type="text">
				<bind name="visible" value="abuseData.status == 1"/>
				<style>
					<width value="100%"/>
					<marginTop value="4px"/>
					<marginBottom value="2px"/>
					<leading value="-1"/>
				</style>
				<styleClass value="$TextDefault"/>
				<text value="IDS_ABUSE_STATUS_SUSPECT_INFO"/>
			</block>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<alpha value="1.4"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="12px"/>
					<marginTop value="8px"/>
					<marginRight value="12px"/>
					<marginBottom value="12px"/>
				</style>
				<block type="text">
					<style>
						<width value="100%"/>
						<leading value="-2"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="text" value="tr('IDS_ABUSE_' + toUpperCase(abuseStatusStr) + '_STATUS_CLEAN')"/>
				</block>
				<block type="text">
					<style>
						<marginLeft value="10px"/>
					</style>
					<styleClass value="$TextDefaultBold"/>
					<bind name="text" value="abuseData.battlesToClean"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<bind name="visible" value="_mouseInstructionText.length &gt; 0"/>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="-2px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<bind name="instance" value="'MouseInstruction';  _mouseInstructionText.length &gt; 0 ? {_type: 'left', _instructionText: _mouseInstructionText, _maxWidth: 300	} : null"/>
			</block>
		</block>
		<block className="notification_frame_teamkiller" type="native">
			<bind name="visible" value="abuseData.status == 1"/>
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block className="notification_frame" type="native">
			<bind name="visible" value="abuseData.status == 2"/>
			<styleClass value="$FullsizeAbsolute"/>
		</block>
	</block>
	<block className="SlimClientStatusProfileTooltip">
		<styleClass value="$DefaultInstantTooltipBehaviour"/>
		<style>
			<width value="300px"/>
			<hitTest value="false"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block type="text">
			<styleClass value="$ContentIndents"/>
			<styleClass value="$TextDefault17NM"/>
			<style>
				<maxWidth value="276"/>
				<alpha value="0.9"/>
			</style>
			<bind name="text" value="IDS_TOOLTIP_AL_SLIM_CLIEN_STATUS"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'MouseInstruction'; { _type: 'left', _instructionText: 'IDS_QUESTION_CONFIRM_EXIT_AND_CONTINUE_DOWNLOADING', _maxWidth: 256 }"/>
		</block>
	</block>
	<css name="$TextHeaderLargeBold">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="21"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TableCell">
		<width value="100%"/>
		<height value="23px"/>
	</css>
	<css name="$TableHeaderCell">
		<width value="100%"/>
		<marginBottom value="12px"/>
		<height value="23px"/>
	</css>
	<css name="$TableCellTextValue">
		<position value="absolute"/>
		<right value="0px"/>
	</css>
	<css name="$TextAccentGreyBold1">
		<fontFamily value="$WWSDefaultFontBold"/>
		<textColor value="0xDDDDDD"/>
		<fontSize value="70"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
	</css>
	<block className="StatColumn">
		<style>
			<width value="33%"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMapCustom">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
			</style>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap5_feather" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="12px"/>
				<marginRight value="12px"/>
			</style>
			<bind name="repeat" value="array[$index]; 'StatRowProxy'; {statData: statData}"/>
		</block>
	</block>
	<block className="StatRowProxy">
		<style>
			<width value="100%"/>
		</style>
		<bind name="instance" value=" isHeader ? 'StatItemHeader' : 'StatRow'; {header: header, title:title, value:value, statData: statData, hintVehicleId: hintVehicleId}"/>
	</block>
	<block className="StatItemHeader">
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: title + '_TOOLTIP'}"/>
		<style>
			<backgroundColor value="0x01000000"/>
		</style>
		<styleClass value="$TableHeaderCell"/>
		<block type="text">
			<styleClass value="$TextHeaderLargeBold"/>
			<bind name="text" value="title"/>
		</block>
		<block type="text">
			<styleClass value="$TableCellTextValue"/>
			<styleClass value="$TextHeaderLargeBold"/>
			<bind name="text" value="value"/>
		</block>
	</block>
	<block className="StatRow">
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; hintVehicleId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<styleClass value="$TableCell"/>
		<bind name="tooltip" value="tooltipName; (tooltipName != null) ? tooltipParams  : null"/>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<bind name="tooltip" value="'StatsRowHint'; 	(tooltipName == null) ? { tooltipText: title + '_TOOLTIP', shipInfo: shipInfo, _hintVehicleId: hintVehicleId } : null"/>
				<style>
					<width value="100%"/>
					<backgroundColor value="0x01000000"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block type="text">
						<style>
							<width value="100%"/>
							<multiline value="false"/>
						</style>
						<styleClass value="$TextHeaderBigDefault"/>
						<bind name="text" value="title"/>
					</block>
				</block>
				<block>
					<bind name="visible" value="value != null"/>
					<block type="text">
						<styleClass value="$TextHeaderBigDefault"/>
						<bind name="style" value="'alpha'; (value == 0) || (value == '0%') ? 0.5 : 1"/>
						<bind name="text" value="value == '100%' ? value : format(value)"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="(playerPointsCounter != null) || (totalPointsCounter != null)"/>
				<bind name="instance" value="'ScoreRatioCounter'; { 	_playerPointsCounter: format(playerPointsCounter), 
													_totalPointsCounter: format(totalPointsCounter),
													_tooltipTextPlayerResult: tooltipTextPlayerResult, 
													_tooltipTextTotalResult: tooltipTextTotalResult }"/>
			</block>
			<block>
				<bind name="visible" value="currency != null"/>
				<bind name="instance" value="'PriceTag'; { priceInfo: {finalPrice: finalPrice, currency: currency}, _medium: true} "/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="title != null"/>
			<style>
				<width value="100%"/>
				<marginTop value="-2px"/>
			</style>
			<bind name="instance" value="'TableDivider'; {}"/>
		</block>
	</block>
	<block className="PlayerSummary">
		<bind name="var" value="{curSeasonIndex: 0}"/>
		<bind name="catch" value="'curItemIndexChanged'; {curSeasonIndex: 0}"/>
		<bind name="catch" value="'curSeasonIndexChanged'"/>
		<bind name="collectionDH" value="CC.rankedSeasonHistory; 'statDataEntities'; 'statToShow'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<bind name="entityDH" value="'statDataEntity'; statDataEntities[0].id"/>
		<bind name="watchDH" value="'statData'; ['statDataEntity.dataComponent.evDataChanged']; statDataEntity.dataComponent.data"/>
		<bind name="watchDH" value="'shipsList'; ['statDataEntity.dataComponent.evDataChanged']; statDataEntity.dataComponent.data.shipsList"/>
		<styleClass value="$Fullsize"/>
		<bind name="changeDispatch" value="_curItemIndex; 'curItemIndexChanged'; {}; 2"/>
		<bind name="watch" value="'battleType';	_curItemIndex == 0	? BattleTypes.COOPERATIVE_BATTLE :
								_curItemIndex == 1	? BattleTypes.RANDOM_BATTLE :
								_curItemIndex == 2	? BattleTypes.RANKED_BATTLE :
								_curItemIndex == 3	? BattleTypes.CLUB_BATTLE
													: BattleTypes.COOPERATIVE_BATTLE "/>
		<bind name="action" value="'battleType' + varChanged; 'battleTypeChanged'; {battleType: battleType}"/>
		<bind name="action" value="'addedToStage'; 'battleTypeChanged'; {battleType: battleType}"/>
		<style>
			<marginTop value="720:30,1080:80ah"/>
			<marginBottom value="720:0,1080:60ah"/>
		</style>
		<bind name="feature" value="3;''"/>
		<bind name="feature" value="16;''"/>
		<bind name="feature" value="24;	''"/>
		<bind name="firstEntityDH" value="'clubHistoryEntity'; CC.rankedSeasonHistory; 'byGameType.' + BattleTypes.CLUB_BATTLE"/>
		<bind name="watchDH" value="'hasClubHistoryData'; ['clubHistoryEntity.rankedSeasonHistory.evRankedSeasonHistoryDataUpdate']; clubHistoryEntity.rankedSeasonHistory.hasGamesPlayed"/>
		<bind name="watch" value="'battleTypes';  feature_3	== 'locked' ? ['IDS_COOPERATIVE_BATTLE'] :
								 feature_16 == 'locked'	? ['IDS_COOPERATIVE_BATTLE', 'IDS_RANDOM_BATTLE'] :
								 !hasClubHistoryData 	? ['IDS_COOPERATIVE_BATTLE', 'IDS_RANDOM_BATTLE', 'IDS_RANKED_BATTLE']
								 						: ['IDS_COOPERATIVE_BATTLE', 'IDS_RANDOM_BATTLE', 'IDS_RANKED_BATTLE', 'IDS_CLUB_BATTLE']"/>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="instance" value="'PlayerSummaryItem'; {_battleType: battleType, _curItemIndex: _curItemIndex, _curSeasonIndex: curSeasonIndex, statData:statData, currentVehicleId: statData.vehicleId}"/>
		</block>
		<block>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap5_feather" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<style>
				<position value="absolute"/>
				<width value="240px"/>
				<right value="1280:5,1920:40aw"/>
				<marginTop value="-33px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<height value="30px"/>
					</style>
					<styleClass value="$MiddleAligned"/>
					<bind name="instance" value="'RankedSeasonDropdown'; (battleType == BattleTypes.RANKED_BATTLE) ? {statData: statData, _curSeasonIndex: curSeasonIndex}: null"/>
				</block>
				<block>
					<bind name="watch" value="'currentSeasonId'; statData.seasonList[curSeasonIndex].id"/>
					<bind name="watch" value="'isJuniorRankedBattle'; (battleType == BattleTypes.RANKED_BATTLE) &amp;&amp; (statData.seasonList[curSeasonIndex].id &gt; 100)"/>
					<styleClass value="$MiddleAligned"/>
					<block>
						<style>
							<width value="152px"/>
						</style>
						<block className="icon_battletypes_big" type="native">
							<bind name="transition" value="statData.vehicleId != 0; 0.15; {alpha: 1}; {alpha: 0.7}"/>
							<styleClass value="$MiddleAligned"/>
							<bind name="gotoAndStop!" value="isJuniorRankedBattle ? 'RankedBattle_junior' : battleType"/>
						</block>
						<block className="battle_type_overlay_big" type="native">
							<bind name="visible" value="statData.vehicleId != 0"/>
							<styleClass value="$MiddleAligned"/>
							<style>
								<position value="absolute"/>
								<alpha value="0.6"/>
							</style>
						</block>
						<block>
							<style>
								<position value="absolute"/>
								<top value="-3"/>
								<left value="-10"/>
							</style>
							<bind name="instance" value="'RankedSeasonFlag'; battleType == BattleTypes.RANKED_BATTLE ? {_curSeasonIndex: curSeasonIndex, statData: statData}: null"/>
						</block>
						<block>
							<styleClass value="$MiddleAligned"/>
							<style>
								<position value="absolute"/>
								<bottom value="-10"/>
							</style>
							<bind name="instance" value="'ShipPrewiewItem'; {currentVehicleId: statData.vehicleId}"/>
						</block>
					</block>
					<block>
						<styleClass value="$MiddleAligned"/>
						<style>
							<marginBottom value="6px"/>
						</style>
						<bind name="name" value="'dropdown_battle_types'"/>
						<bind name="instance" value="'ItemChooser'; {	_items: battleTypes, curIndex: _curItemIndex,
														_choosedItemRenderer: 'LargeTextChoosedItemRenderer', _listItemRenderer: 'TextListItemRenderer',
														onItemSelectedEvent: 'battleTypeChanged', _itemChooserTooltipText: 'IDS_CHOOSE_BATTLETYPE_STATS'}"/>
					</block>
				</block>
				<block>
					<bind name="visible" value="statData.shipsList.length == 0"/>
					<style>
						<width value="100%"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<block className="HorizontalDivider">
							<styleClass value="$PxHorizontalCorrection"/>
							<style>
								<width value="100%"/>
								<height value="3px"/>
							</style>
							<block className="divider_h" type="native">
								<styleClass value="$Fullsize"/>
							</block>
						</block>
					</block>
					<block>
						<style>
							<marginTop value="3px"/>
						</style>
						<styleClass value="$MiddleAligned"/>
						<bind name="instance" value="'EmptyStatusParagraph'; {_text: 'IDS_NO_BATTLES_PLAYED_IN_' + toUpperCase(battleType), _maxWidth: 200}"/>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_SELECT_ALL_SHIPS_FOR_DETAILED_STAT'}], _maxWidth: 250}"/>
					<bind name="instance" value="'AllShipsSelectedItem'; statData.shipsList.length != 0 ? {shipListLength: statData.shipsList.length, totalWinRate: statData.diagStats.totalWinRate, battleType: battleType, currentVehicleId: statData.vehicleId, seasonId: seasonId, gamesPlayed: statData.diagStats.gamesPlayed} : null"/>
				</block>
				<block>
					<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
					<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
					<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
					<styleClass value="$DefaultScrollBar"/>
					<style>
						<maxHeight value="328"/>
						<width value="100%"/>
						<overflow value="scroll"/>
					</style>
					<bind name="repeat" value="shipsList; 'ShipRowItem'; {battleType: battleType, currentVehicleId: statData.vehicleId, curSeasonIndex: curSeasonIndex, seasonId: seasonId, _curItemIndex: _curItemIndex}; !(userPrefs.shipSortStatsDirection)"/>
				</block>
				<block>
					<styleClass value="$MiddleAligned"/>
					<bind name="instance" value="'ShipSortingDropdown'; statData.shipsList.length &gt;= 2 ? {statData: statData.shipsList} : null"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ShipStatsTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="300px"/>
			<hitTest value="false"/>
		</style>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; _vehicleId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'TooltipBackground'; {_isInBattle: _isInBattle}"/>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'ShipFlagIconLevelName'; {shipInfo: shipInfo, _multiline: true}"/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'MouseInstruction'; { _type: 'left', _instructionText: 'IDS_SELECT_SHIP_FOR_DETAILED_STAT', _maxWidth: 250}"/>
		</block>
	</block>
	<block className="ShipPrewiewItem">
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; currentVehicleId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<style>
			<width value="214px"/>
			<height value="126px"/>
		</style>
		<bind name="style" value="'backgroundImage'; 'url:' + shipInfo.pathPreview"/>
	</block>
	<block className="RankedSeasonDropdown">
		<bind name="catch" value="'ItemChooserInnerEvent.historySeasonChanged'"/>
		<bind name="var" value="{_curItemIndex: _curItemIndex ? _curItemIndex : 0}"/>
		<bind name="dispatch" value="'_curItemIndex' + varChanged; 'curSeasonIndexChanged'; {curSeasonIndex: _curItemIndex}; false"/>
		<bind name="action" value="'_curItemIndex' + varChanged; 'rankedSeasonChanged'; {seasonId: statData.seasonList[_curItemIndex].id}"/>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<bind name="instance" value="'ItemChooser'; {	_items: statData.seasonList, curIndex: _curItemIndex,
											_choosedItemRenderer: 'LargeTextChoosedItemRendererRankedSeason',
											_listItemRenderer: 'TextListItemRendererRankedSeason',
											onItemSelectedEvent: 'historySeasonChanged',
											_itemChooserTooltipText: 'IDS_CHOOSE_RANK_SEASON'}"/>
		</block>
	</block>
	<block className="RankedSeasonFlag">
		<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
		<block>
			<style>
				<width value="75px"/>
				<height value="60px"/>
			</style>
			<bind name="style" value="'backgroundImage'; _curSeasonIndex != 0 ? ('url:' + statData.seasonList[_curSeasonIndex].iconPath) : ('url:' + ' ')"/>
		</block>
	</block>
	<block className="ShipSortingDropdown">
		<bind name="var" value="{items:['IDS_SORT_BY_WIN_PERCENT', 'IDS_SORT_BY_BATTLES_COUNT', 'IDS_SORT_BY_LEVEL', 'IDS_SORT_BY_NATION', 'IDS_SORT_BY_SHIPTYPE']}"/>
		<block type="text">
			<style>
				<marginTop value="4px"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$TextHeaderBold"/>
			<bind name="class" value="'$FontColorBlueish'"/>
			<bind name="text" value="tr('IDS_SORTING_TYPE') + tr('IDS_COLON')"/>
		</block>
		<block>
			<style>
				<marginLeft value="2px"/>
				<marginTop value="-1px"/>
			</style>
			<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
			<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
			<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
			<bind name="watch" value="'_curItemIndex';	(userPrefs.shipStatsSortIndex == null) ? 0 : userPrefs.shipStatsSortIndex"/>
			<bind name="action" value="'shipSortStatsChanged'; 'setUserPref' ; {value: _curItemIndex, name: 'shipStatsSortIndex'}"/>
			<bind name="action" value="'shipSortStatsDirectionChanged'; 'setUserPref' ; {value: !(userPrefs.shipSortStatsDirection), name: 'shipSortStatsDirection'}"/>
			<bind name="request" value="'shipSortStatsChanged'; 'sortShipStats' ; {ids: items[_curItemIndex]}"/>
			<bind name="catch" value="'ItemChooser.shipsSortSelected'"/>
			<bind name="instance" value="'ItemChooser'; {	_items: items, curIndex: _curItemIndex, 
											_choosedItemRenderer: 'BluishTextChoosedItemRenderer', _listItemRenderer: 'TextListItemRenderer',
											onItemSelectedEvent: 'shipsSortSelected', _itemChooserTooltipText: 'IDS_HINT_SHIP_CAROUSEL_SORT'}"/>
			<bind name="changeDispatch" value="_curItemIndex; 'shipSortStatsChanged'"/>
			<bind name="changeDispatch" value="_direction; 'shipSortStatsDirectionChanged'"/>
		</block>
	</block>
	<block className="PlayerSummaryItem">
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="stageSize"/>
		<bind name="watch" value="'inset'; 0 "/>
		<bind name="catch" value="'changeInsetPlayerProfileSummaryInset'"/>
		<bind name="changeDispatch" value="inset; 'changeInsetInPrefs'"/>
		<bind name="action" value="'changeInsetInPrefs'; 'setUserPref' ; {value : inset, name : 'playerProfileSummaryInset'}"/>
		<styleClass value="$Fullsize"/>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="watch" value="'playerSummaryStatsType'; (_battleType == BattleTypes.PVE_BATTLE ? 'PVEStats' : 'commonStats')"/>
			<bind name="child" value="playerSummaryStatsType; {battleType: _battleType, _curItemIndex: _curItemIndex,
											 _curSeasonIndex: curSeasonIndex, statData:statData,
											 currentVehicleId: statData.vehicleId}; 
											 {commonStats: 'PlayerSummaryCommon', PVEStats: 'PlayerSummaryPve'}"/>
		</block>
		<block>
			<bind name="visible" value="(statData.diagStats.gamesPlayed &gt; 0) &amp;&amp; (statData.vehicleId == 0)"/>
			<style>
				<height value="190px"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<bind name="child" value="inset; {_curItemIndex: _curItemIndex, statData:statData, battleType: _battleType}; 'PlayerSummaryDiagrams'; 'PlayerSummaryBattleHeroes'"/>
		</block>
	</block>
	<block className="PlayerSummaryCommon">
		<styleClass value="$Fullsize"/>
		<style>
			<marginBottom value="20px"/>
		</style>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginBottom value="24px"/>
			</style>
			<bind name="appear" value="'addedToStage'; 0.15; 0.12; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<block className="ProfilePlayerPercentEfficiency">
				<block className="DeclareBlurLayer">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="transparentPixel" type="native">
						<bind name="blurLayer" value="0"/>
					</block>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block className="BlurMapCustom">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap5_feather" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
				<style>
					<width value="160px"/>
				</style>
				<block type="text">
					<styleClass value="$TextAccentGreyBold"/>
					<styleClass value="$MiddleAligned"/>
					<bind name="text" value="format(statData.basicStats.gamesPlayed, -1)"/>
					<bind name="name" value="'Stat_' + 'IDS_GAME_PLAYED'"/>
				</block>
				<block type="text">
					<style>
						<marginTop value="-12px"/>
					</style>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<bind name="class" value="'$Bold'"/>
					<bind name="text" value="'IDS_GAME_PLAYED'"/>
				</block>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_GAME_PLAYED' + '_TOOLTIP'}"/>
			</block>
			<block className="ProfilePlayerPercentEfficiency">
				<block className="DeclareBlurLayer">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="transparentPixel" type="native">
						<bind name="blurLayer" value="0"/>
					</block>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block className="BlurMapCustom">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap5_feather" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
				<style>
					<width value="160px"/>
				</style>
				<block type="text">
					<styleClass value="$TextAccentGreyBold"/>
					<styleClass value="$MiddleAligned"/>
					<bind name="text" value="statData.basicStats.winRate"/>
					<bind name="name" value="'Stat_' + 'IDS_VICTORY_PERCENT'"/>
				</block>
				<block type="text">
					<style>
						<marginTop value="-12px"/>
					</style>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<bind name="class" value="'$Bold'"/>
					<bind name="text" value="'IDS_VICTORY_PERCENT'"/>
				</block>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_VICTORY_PERCENT' + '_TOOLTIP'}"/>
			</block>
			<block className="ProfilePlayerPercentEfficiency">
				<block className="DeclareBlurLayer">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="transparentPixel" type="native">
						<bind name="blurLayer" value="0"/>
					</block>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block className="BlurMapCustom">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap5_feather" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
				<style>
					<width value="160px"/>
				</style>
				<block type="text">
					<styleClass value="$TextAccentGreyBold"/>
					<styleClass value="$MiddleAligned"/>
					<bind name="text" value="format(statData.basicStats.averageExp, -1)"/>
					<bind name="name" value="'Stat_' + 'IDS_EXPERIENCE_C_AVERAGE'"/>
				</block>
				<block type="text">
					<style>
						<marginTop value="-12px"/>
					</style>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<bind name="class" value="'$Bold'"/>
					<bind name="text" value="'IDS_EXPERIENCE_C_AVERAGE'"/>
				</block>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_EXPERIENCE_C_AVERAGE' + '_TOOLTIP'}"/>
			</block>
			<block className="ProfilePlayerPercentEfficiency">
				<block className="DeclareBlurLayer">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="transparentPixel" type="native">
						<bind name="blurLayer" value="0"/>
					</block>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block className="BlurMapCustom">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap5_feather" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
				<style>
					<width value="160px"/>
				</style>
				<block type="text">
					<styleClass value="$TextAccentGreyBold"/>
					<styleClass value="$MiddleAligned"/>
					<bind name="text" value="statData.basicStats.maxFrags"/>
					<bind name="name" value="'Stat_' + 'IDS_MAX_SHIPS_PER_BATTLE'"/>
				</block>
				<block type="text">
					<style>
						<marginTop value="-12px"/>
					</style>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<bind name="class" value="'$Bold'"/>
					<bind name="text" value="'IDS_MAX_SHIPS_PER_BATTLE'"/>
				</block>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_MAX_SHIPS_PER_BATTLE' + '_TOOLTIP'}"/>
			</block>
			<block className="ProfilePlayerPercentEfficiency">
				<block className="DeclareBlurLayer">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="transparentPixel" type="native">
						<bind name="blurLayer" value="0"/>
					</block>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block className="BlurMapCustom">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap5_feather" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
				<style>
					<width value="160px"/>
				</style>
				<block type="text">
					<styleClass value="$TextAccentGreyBold"/>
					<styleClass value="$MiddleAligned"/>
					<bind name="text" value="statData.basicStats.killDeath"/>
					<bind name="name" value="'Stat_' + 'IDS_DESTROY_RATIO'"/>
				</block>
				<block type="text">
					<style>
						<marginTop value="-12px"/>
					</style>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<bind name="class" value="'$Bold'"/>
					<bind name="text" value="'IDS_DESTROY_RATIO'"/>
				</block>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_DESTROY_RATIO' + '_TOOLTIP'}"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<bind name="appear" value="'addedToStage'; 0.15; 0.24; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<styleClass value="$DefaultScrollBar"/>
			<style>
				<height value="100%f"/>
				<overflow value="scroll"/>
			</style>
			<block>
				<style>
					<width value="62sw"/>
					<maxWidth value="1100"/>
				</style>
				<bind name="repeat" value="statData.basicStats.colData; 'StatColumn'; {array:statData.basicStats.colData, statData: statData}"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="PlayerSummaryDiagrams">
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<bind name="appear" value="'addedToStage'; 0.15; 0.36; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
		<style>
			<height value="190px"/>
			<flow value="horizontal"/>
		</style>
		<block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap5_feather" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<style>
				<height value="100%"/>
				<width value="1280:300,1920:310aw"/>
			</style>
			<block>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_STATISTICS_BY_NATIONS_TOOLTIP'}"/>
				<styleClass value="$MiddleAligned"/>
				<block type="text">
					<styleClass value="$TextHeaderLargeBold"/>
					<bind name="text" value="'IDS_NATIONS'"/>
				</block>
			</block>
			<block>
				<style>
					<marginTop value="5px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'NationsDiagram';  {gamesPlayed: statData.diagStats.gamesPlayed, battlesByNation: statData.diagStats.nations}"/>
			</block>
		</block>
		<block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap5_feather" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<style>
				<height value="100%"/>
				<width value="1280:250,1920:310aw"/>
			</style>
			<block>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_STATISTICS_BY_SHIP_TYPES_TOOLTIP'}"/>
				<styleClass value="$MiddleAligned"/>
				<block type="text">
					<styleClass value="$TextHeaderLargeBold"/>
					<text value="IDS_SHIP_TYPES"/>
				</block>
			</block>
			<block>
				<style>
					<marginTop value="5px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'ShipTypeDiagram'; {gamesPlayed: statData.diagStats.gamesPlayed, battlesByShipType: statData.diagStats.classes}"/>
			</block>
		</block>
		<block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap5_feather" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<style>
				<height value="100%"/>
				<width value="1280:280,1920:310aw"/>
			</style>
			<block>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_STATISTICS_BY_SHIP_LEVELS_TOOLTIP'}"/>
				<styleClass value="$MiddleAligned"/>
				<block type="text">
					<styleClass value="$TextHeaderLargeBold"/>
					<text value="IDS_LEVELS"/>
				</block>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<height value="140px"/>
					<marginTop value="5px"/>
				</style>
				<bind name="repeat" value="statData.diagStats.levels.shipLevels; 'LineDiagramItem'; {maxValue: statData.diagStats.levels.maxValue}"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="PlayerSummaryBattleHeroes">
		<bind name="appear" value="'addedToStage'; 0.15; 0.36; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
		<styleClass value="$MiddleAligned"/>
		<block type="text">
			<styleClass value="$TextHeaderLargeBold"/>
			<bind name="text" value="'PlayerSummaryBattleHeroes'"/>
		</block>
	</block>
	<block className="NationsDiagram">
		<bind name="catch" value="'sectorRollOver'"/>
		<bind name="catch" value="'sectorRollOut'"/>
		<bind name="var" value="{showGamesPlayed: true, currentItemId: null}"/>
		<style>
			<marginLeft value="62px"/>
			<height value="140px"/>
		</style>
		<block>
			<style>
				<marginTop value="70px"/>
				<position value="absolute"/>
			</style>
			<bind name="repeat" value="battlesByNation.diagram; 'CircleDiagramItem'; {currentItemId: currentItemId, showGamesPlayed: showGamesPlayed}"/>
			<block>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_GAME_PLAYED_TOOLTIP'}"/>
				<bind name="transition" value="showGamesPlayed; 0.2; {alpha: 0}; {alpha: 1}"/>
				<style>
					<position value="absolute"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$MiddleVAligned"/>
				<block type="text">
					<styleClass value="$TextHeaderLargeBold"/>
					<bind name="text" value="gamesPlayed"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<marginLeft value="75px"/>
				<flow value="vtile"/>
			</style>
			<bind name="style" value="'height';	battlesByNation.legend.length &lt;= 4 ? ((battlesByNation.legend.length * 35) +'px') : '140px' "/>
			<bind name="repeat" value="battlesByNation.legend; 'NationLegendItem'; {currentItemId: currentItemId, showGamesPlayed: showGamesPlayed}"/>
		</block>
	</block>
	<block className="ShipTypeDiagram">
		<bind name="catch" value="'sectorRollOver'"/>
		<bind name="catch" value="'sectorRollOut'"/>
		<bind name="var" value="{showGamesPlayed: true, currentItemId: null}"/>
		<style>
			<marginLeft value="62px"/>
			<height value="140px"/>
		</style>
		<block>
			<style>
				<marginTop value="70px"/>
				<position value="absolute"/>
			</style>
			<bind name="repeat" value="battlesByShipType.diagram; 'CircleDiagramItem'; {currentItemId: currentItemId, showGamesPlayed: showGamesPlayed}"/>
			<block>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_GAME_PLAYED_TOOLTIP'}"/>
				<bind name="transition" value="showGamesPlayed; 0.2; {alpha: 0}; {alpha: 1}"/>
				<style>
					<position value="absolute"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$MiddleVAligned"/>
				<block type="text">
					<styleClass value="$TextHeaderLargeBold"/>
					<bind name="text" value="gamesPlayed"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<marginLeft value="75px"/>
				<flow value="vtile"/>
			</style>
			<bind name="style" value="'height';	battlesByShipType.legend.length &lt;= 4 ? ((battlesByShipType.legend.length * 35) +'px') : '140px' "/>
			<bind name="repeat" value="battlesByShipType.legend; 'ShipTypeLegendItem'; {currentItemId: currentItemId, showGamesPlayed: showGamesPlayed}"/>
		</block>
	</block>
	<block className="CircleDiagramItem">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: text}"/>
		<bind name="dispatch" value="'rollOver'; 'sectorRollOver'; {currentItemId: itemId, showGamesPlayed: false}"/>
		<bind name="dispatch" value="'rollOut'; 'sectorRollOut'; {currentItemId: itemId, showGamesPlayed: true}"/>
		<style>
			<position value="absolute"/>
			<left value="0px"/>
			<top value="0px"/>
		</style>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<block className="lesta.display.Sector" type="native">
				<bind name="color" value="color"/>
				<bind name="offset" value="offset"/>
				<bind name="arc" value="arc"/>
				<bind name="appear" value="'addedToStage'; 0.2; 0.4; {radius: 44}; {radius: 62}; 1"/>
				<bind name="transition" value="rollOver || ((currentItemId == itemId) &amp;&amp; !(showGamesPlayed)); 0.15; {radius: 62}; {radius: 65}"/>
				<params>
					<param name="innerRadius" value="44"/>
					<param name="radius" value="62"/>
				</params>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$MouseDisable"/>
			<bind name="transition" value="rollOver || ((currentItemId == itemId) &amp;&amp; !(showGamesPlayed)); 0.2; {alpha: 0}; {alpha: 1}"/>
			<style>
				<position value="absolute"/>
				<top value="-15px"/>
			</style>
			<block type="text">
				<styleClass value="$TextHeaderLargeBold"/>
				<bind name="text" value="value"/>
			</block>
		</block>
	</block>
	<block className="NationLegendItem">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: text}"/>
		<bind name="dispatch" value="'rollOver'; 'sectorRollOver'; {currentItemId: itemId, showGamesPlayed: false}"/>
		<bind name="dispatch" value="'rollOut'; 'sectorRollOut'; {currentItemId: itemId, showGamesPlayed: true}"/>
		<style>
			<width value="55px"/>
			<backgroundColor value="0x01000000"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
				<height value="35px"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$MiddleVAligned"/>
				<block className="lesta.display.Circle" type="native">
					<style>
						<marginTop value="10px"/>
						<marginRight value="10px"/>
					</style>
					<bind name="color" value="color"/>
					<bind name="appear" value="'addedToStage'; 0.3; 0; {radius: 0}; {radius: 4}"/>
					<bind name="transition" value="rollOver || ((currentItemId == itemId) &amp;&amp; !(showGamesPlayed)); 0.15; {radius: 4}; {radius: 6}"/>
				</block>
				<block>
					<bind name="instance" value="'NationFlagsTiny'; {shipCountry: itemId}"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ShipTypeLegendItem">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: text}"/>
		<bind name="dispatch" value="'rollOver'; 'sectorRollOver'; {currentItemId: itemId, showGamesPlayed: false}"/>
		<bind name="dispatch" value="'rollOut'; 'sectorRollOut'; {currentItemId: itemId, showGamesPlayed: true}"/>
		<block>
			<style>
				<width value="46px"/>
				<height value="35px"/>
				<backgroundColor value="0x01000000"/>
			</style>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<block className="lesta.display.Circle" type="native">
					<style>
						<marginTop value="4px"/>
						<marginLeft value="8px"/>
					</style>
					<bind name="color" value="color"/>
					<bind name="transition" value="rollOver || ((currentItemId == itemId) &amp;&amp; !(showGamesPlayed)); 0.15; {radius: 4}; {radius: 6}"/>
					<bind name="appear" value="'addedToStage'; 0.3; 0; {radius: 0}; {radius: 4}"/>
				</block>
				<block className="icon_ship" type="native">
					<styleClass value="$MiddleVAligned"/>
					<bind name="style" value="'marginLeft'; itemId == 'Destroyer' ? '8px' : '10px' "/>
					<bind name="gotoAndStop!" value="itemId"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="LineDiagramItem">
		<bind name="watch" value="'animationTime'; (0.2 + value * 0.0007)"/>
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: text}"/>
		<bind name="changeDispatch" value="value; 'valueChanged'"/>
		<bind name="changeDispatch" value="maxValue; 'valueChanged'"/>
		<bind name="dispatch" value="'addedToStage'; 'valueChanged'"/>
		<style>
			<width value="26px"/>
			<height value="100%"/>
		</style>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<bottom value="0px"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<block type="text">
					<bind name="appear" value="'valueChanged'; animationTime; 0.4; {intValue: 0}; {intValue: value}; 1"/>
					<style>
						<textAlign value="center"/>
						<width value="30px"/>
					</style>
					<styleClass value="$TextSecondary"/>
					<bind name="style" value="'fontSize'; maxValue &gt; 999 ? 11 : 13"/>
					<bind name="text" value="value"/>
				</block>
			</block>
			<block>
				<bind name="appear" value="'valueChanged'; animationTime; 0.4; {height: 0}; {height: value ? ((value/maxValue) * 100) : 1}; 1"/>
				<styleClass value="$MiddleAligned"/>
				<style>
					<height value="0px"/>
					<width value="18px"/>
				</style>
				<bind name="style" value="'backgroundColor'; _columnColor ? _columnColor : 0xFF2DF0C9"/>
			</block>
			<block>
				<style>
					<marginTop value="8px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<block type="text">
					<styleClass value="$TextDefaultNM"/>
					<bind name="text" value="label"/>
				</block>
			</block>
		</block>
	</block>
	<block className="LargeTextChoosedItemRendererRankedSeason">
		<style>
			<height value="35px"/>
		</style>
		<block type="text">
			<styleClass value="$TextDockBig"/>
			<style>
				<hitTest value="false"/>
				<marginLeft value="4px"/>
				<marginTop value="1px"/>
			</style>
			<bind name="text" value="(_item.id == 0) ? ('IDS_ALL_SEASONS') : ('IDS_SEASON_TITLE_' + (tr(_item.id)))"/>
		</block>
	</block>
	<block className="TextListItemRendererRankedSeason">
		<style>
			<flow value="horizontal"/>
		</style>
		<styleClass value="$ContextMenuListItem"/>
		<bind name="dispatch" value="'click'; ('ItemChooserInnerEventDublicate.' + _onItemSelectedEvent)"/>
		<bind name="dispatch" value="'click'; ('ItemChooserInnerEvent.' + _onItemSelectedEvent); {_curItemIndex: $index}"/>
		<block className="MenuItemWithIconAndSelection">
			<styleClass value="$Fullsize"/>
			<bind name="name" value="id == 0 ? ('IDS_ALL_SEASONS') : ('IDS_SEASON_TITLE_' + id)"/>
			<style>
				<flow value="horizontal"/>
			</style>
			<block>
				<bind name="visible" value="id != 0"/>
				<styleClass value="$MiddleVAligned"/>
				<bind name="scaleX" value="0.4"/>
				<bind name="scaleY" value="0.4"/>
				<style>
					<width value="28px"/>
					<height value="22px"/>
					<marginLeft value="6px"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:' + iconPath"/>
			</block>
			<block className="dock_submenu_item" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="selected" value="(_curItemIndex == $index)"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<maxWidth value="250"/>
					<marginLeft value="6px"/>
				</style>
				<bind name="class" value="(_curItemIndex == $index) == true ? '$Bold' : '$None'"/>
				<bind name="text" value="(_toLowerCase ? toLowerCase(tr(id == 0 ? ('IDS_ALL_SEASONS') : ('IDS_SEASON_TITLE_' + id))) : (tr(id == 0 ? ('IDS_ALL_SEASONS') : ('IDS_SEASON_TITLE_' + id))))"/>
			</block>
		</block>
	</block>
	<block className="ShipRowItem">
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; vehicleId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="tooltip" value="'ShipStatsTooltip'; { _vehicleId: vehicleId, _maxWidth: 250}"/>
		<style>
			<width value="100%"/>
			<height value="36px"/>
		</style>
		<block className="dock_submenu_item" type="native">
			<styleClass value="$PxHorizontalCorrection"/>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="clickSplit"/>
			<style>
				<marginTop value="-1px"/>
				<marginBottom value="2px"/>
			</style>
			<bind name="action" value="'left_click'; 'vehicleIdChanged'; {vehicleId:vehicleId}"/>
			<bind name="selected" value="currentVehicleId == vehicleId"/>
			<bind name="style" value="'alpha'; currentVehicleId == vehicleId ? 2 : 1"/>
		</block>
		<block>
			<style>
				<height value="100%"/>
				<hitTest value="false"/>
			</style>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<block>
				<style>
					<width value="100%"/>
					<marginRight value="2px"/>
				</style>
				<bind name="instance" value="'ShipFlagIconLevelName'; {shipInfo: shipInfo}"/>
			</block>
			<block type="text">
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$TextHeaderBold"/>
				<bind name="text" value="(userPrefs.shipStatsSortIndex == 1)	? battlesCount : winRate"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<block className="AllShipsSelectedItem">
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; vehicleId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="watch" value="'currentVehicleId'; 0"/>
		<bind name="var" value="{vehicleId:0}"/>
		<style>
			<width value="100%"/>
			<height value="36px"/>
		</style>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block className="dock_submenu_item" type="native">
			<styleClass value="$PxHorizontalCorrection"/>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="clickSplit"/>
			<style>
				<marginBottom value="2px"/>
				<marginTop value="2px"/>
			</style>
			<bind name="action" value="'left_click'; 'vehicleIdChanged'; {vehicleId:0}"/>
			<bind name="selected" value="currentVehicleId == vehicleId"/>
			<bind name="style" value="'alpha'; currentVehicleId == vehicleId ? 2 : 1"/>
		</block>
		<block>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<style>
				<height value="100%"/>
				<hitTest value="false"/>
			</style>
			<block type="text">
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$TextHeaderBold"/>
				<bind name="text" value="tr('IDS_ALL_VEHICLES') +  ' ' + '(' + shipListLength + ')'"/>
			</block>
			<block type="text">
				<styleClass value="$MiddleVAligned"/>
				<style>
					<right value="0"/>
					<position value="absolute"/>
				</style>
				<styleClass value="$TextHeaderBold"/>
				<bind name="text" value="(userPrefs.shipStatsSortIndex == 1)	? gamesPlayed : totalWinRate"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
	</block>
	<block className="ShipFlagIconLevelName">
		<style>
			<flow value="horizontal"/>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<marginTop value="7px"/>
				<alpha value="0.7"/>
			</style>
			<bind name="instance" value="'NationFlagsTiny'; {shipCountry: shipInfo.flagName}"/>
		</block>
		<block>
			<style>
				<marginLeft value="-15px"/>
				<marginTop value="12px"/>
			</style>
			<block>
				<bind name="visible" value="shipInfo.isElite || shipInfo.isPremium || shipInfo.uiSpecial"/>
				<style>
					<position value="absolute"/>
					<left value="-5px"/>
					<top value="-8px"/>
				</style>
				<block className="icon_wreath" type="native">
					<bind name="gotoAndStop!" value="(shipInfo.isPremium || shipInfo.uiSpecial) 	? 'premium' : 'elite'"/>
				</block>
			</block>
			<block className="icon_ship" type="native">
				<bind name="gotoAndStop!" value="shipInfo.isPremium || shipInfo.uiSpecial ? shipInfo.subtype + '_P' : shipInfo.subtype"/>
			</block>
		</block>
		<block type="text">
			<style>
				<marginLeft value="6px"/>
				<marginTop value="4px"/>
				<multiline value="false"/>
			</style>
			<styleClass value="$TextHeaderBold"/>
			<bind name="class" value="shipInfo.isPremium || shipInfo.uiSpecial ? '$FontColorGold' : '$FontColorWhite'"/>
			<bind name="text" value="shipInfo.levelRome"/>
		</block>
		<block type="text">
			<style>
				<width value="100%"/>
				<marginLeft value="3px"/>
				<marginTop value="4px"/>
			</style>
			<bind name="style" value="'multiline'; _multiline ? _multiline : false"/>
			<styleClass value="$TextHeaderBold"/>
			<bind name="class" value="'$LetterSpacingSmall'"/>
			<bind name="class" value="shipInfo.isPremium || shipInfo.uiSpecial ? '$FontColorGold' : '$FontColorWhite'"/>
			<bind name="text" value="toUpperCase(tr(shipInfo.nameIDS))"/>
		</block>
	</block>
	<block className="StatsRowHint">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="300px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<style>
				<position value="absolute"/>
			</style>
			<styleClass value="$Fullsize"/>
		</block>
		<block type="text">
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<styleClass value="$TextHeaderBigDefault"/>
			<style>
				<maxWidth value="276"/>
			</style>
			<bind name="text" value="tooltipText"/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="_hintVehicleId &gt; 0"/>
			<styleClass value="$InfoBlockIndent"/>
			<block type="text">
				<styleClass value="$TextHeaderBigDefault"/>
				<bind name="class" value="'$FontColorBlueish'"/>
				<bind name="text" value="'IDS_ON_SHIP_STATS'"/>
			</block>
			<block>
				<style>
					<marginLeft value="6px"/>
					<marginTop value="-4px"/>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'ShipFlagIconLevelName'; {shipInfo: shipInfo, _multiline: true}"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="PlayerClubs">
		<styleClass value="$Fullsize"/>
		<bind name="firstEntityDH" value="'clubsCommonEntity'; CC.clubsCommon"/>
		<bind name="watchDH" value="'seasonId'; ['clubsCommonEntity.clubsCommon.evRulesChanged']; clubsCommonEntity.clubsCommon.seasonId"/>
		<bind name="action" value="'addedToStage'; seasonId &gt; 0 ? 'timeToStartTutorial' : null; { featureId: 19 }"/>
		<bind name="collectionDH" value="CC.clubsCommon; 'clubsCommonCollection'"/>
		<bind name="entityDH" value="'clubsCommonEntity'; clubsCommonCollection[0].id"/>
		<bind name="watchDH" value="'clubsCount'; ['clubsCommonEntity.clubsCommon.evClubsCountChanged']; clubsCommonEntity.clubsCommon.clubsCount"/>
		<bind name="watch" value="'isAnyClubExisted'; clubsCount &gt; 0"/>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="child" value="isAnyClubExisted ? isAnyClubExisted : 0; 'NoExistingClubsScreen'; 'ClubsExistedScreen'"/>
		</block>
		<bind name="dataRefDH" value="'chat'; 'dataHub.chat.ref.chat'"/>
		<bind name="watchDH" value="'isChatServerAvailable'; ['chat.evConnected', 'chat.evDisConnected']; chat.isConnected"/>
		<bind name="watchDH" value="'isClubServiceAvailable'; ['clubsCommonEntity.clubsCommon.evIsActiveChanged']; clubsCommonEntity.clubsCommon.isActive"/>
		<bind name="watch" value="'isServerAvailable'; isChatServerAvailable &amp;&amp; isClubServiceAvailable"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="!(isServerAvailable)"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<bind name="appear" value="'addedToStage'; 0.15; 0.23; {alpha: 0, top: 10};  {alpha: 1, top: 0}"/>
				<style>
					<top value="35sh"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'ServerIsUnavailable'; isServerAvailable ? null : {_type: 'CLUB', _isBig: true, _maxWidth: 800}"/>
			</block>
		</block>
	</block>
	<block className="ClubsExistedScreen">
		<bind name="collectionDH" value="CC.clubsCommon; 'clubsCommonCollection'"/>
		<bind name="entityDH" value="'clubsCommonEntity'; clubsCommonCollection[0].id"/>
		<bind name="collectionDH" value="CC.club; 'clubs'"/>
		<bind name="dataRefDH" value="'clubsMembershipLimit'; 'clubsCommonEntity.clubsCommon.clubsMembershipLimit'"/>
		<bind name="watchDH" value="'clubsCount'; ['clubsCommonEntity.clubsCommon.evClubsCountChanged']; clubsCommonEntity.clubsCommon.clubsCount"/>
		<bind name="stageSize"/>
		<bind name="style" value="'top'; (30 + (stageHeight-720)/4)+'px'"/>
		<bind name="watch" value="'cardHorizontalMargin'; (10+(stageWidth-1280)/13)+'px'"/>
		<bind name="handleEventDH" value="'clubsCommonEntity.clubsCommon.evClubsCountChanged'; 'curActiveClubChangedEvent'; {curActiveClubIndex: (clubsCount - 1)}"/>
		<styleClass value="$Fullsize"/>
		<block>
			<styleClass value="$MiddleAligned"/>
			<bind name="var" value="{curActiveClubIndex: 0}"/>
			<bind name="catch" value="'curActiveClubChangedEvent'"/>
			<block>
				<style>
					<width value="160px"/>
				</style>
				<bind name="style" value="'width'; stageWidth &lt; 1580 ? 160 : 0"/>
			</block>
			<block>
				<bind name="appear" value="'addedToStage'; 0.15; 0.05; {alpha: 0, top: 25}; {alpha: 1, top: 0}"/>
				<bind name="visible" value="clubs.length == 1"/>
				<style>
					<marginTop value="18px"/>
				</style>
				<bind name="style" value="'marginLeft'; cardHorizontalMargin"/>
				<bind name="style" value="'marginRight'; cardHorizontalMargin"/>
				<block className="BlurMapCustomOutbound">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<style>
						<position value="absolute"/>
						<width value="100%"/>
						<height value="100%"/>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap10_feather" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<style>
							<width value="110%"/>
							<height value="110%"/>
							<left value="-5%"/>
							<top value="-5%"/>
						</style>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
				<block type="text">
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$TextHeaderBold"/>
					<style>
						<marginBottom value="3px"/>
					</style>
					<bind name="text" value="toUpperCase(tr('IDS_CLUBS'))"/>
				</block>
				<bind name="repeat" value="clubs.length == 1 ? [{_paragraphText: 'IDS_PROFILE_CLUBS_INSTRUCTION_3'}, {_paragraphText: 'IDS_CLUBS_INTRO_0_0'}, {_paragraphText: 'IDS_PROFILE_CLUBS_INSTRUCTION_6'}] : 0; 'RepeatParagraphItem'; {_maxWidth: 250, _marginBottom: '6px',
																																						_class: '$TextHeaderBigDefault'}"/>
			</block>
			<block>
				<style>
					<width value="1px"/>
				</style>
				<bind name="watch" value="'clubsContainerWidth'; 520 + (clubs.length - 1) * 234 + (10+(stageWidth-1280)/13) * clubs.length * 2"/>
				<bind name="style" value="'width'; clubsContainerWidth"/>
				<bind name="repeat" value="clubs; 'ClubCard'; {_curActiveClubIndex: curActiveClubIndex, _cardHorizontalMargin: cardHorizontalMargin}"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="instance" value="'EmptyClubCard'; clubs.length &lt; clubsMembershipLimit ? {_cardHorizontalMargin: cardHorizontalMargin, _existedClubsCount: clubs.length, _activeClubEntityId: clubs[curActiveClubIndex].id } : null"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="EmptyClubCard">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'dockDefaultValues'; 'dockInitData,dockUpdateData'"/>
		<bind name="collectionDH" value="CC.clubsCommon; 'clubsCommonCollection'"/>
		<bind name="entityDH" value="'clubsCommonEntity'; clubsCommonCollection[0].id"/>
		<bind name="watchDH" value="'minPartyForBattle'; ['clubsCommonEntity.clubsCommon.evRulesChanged']; clubsCommonEntity.clubsCommon.minPartyForBattle"/>
		<bind name="entityDH" value="'entityClub'; _activeClubEntityId"/>
		<bind name="watchDH" value="'isCurPlayerCommander'; ['entityClub.party.evUpdate']; entityClub.party.isOwner"/>
		<bind name="watchDH" value="'isPartyMember'; ['entityClub.party.evUpdate']; entityClub.party.isMember"/>
		<bind name="watchDH" value="'isPartyCreated'; ['entityClub.club.evPartyCreatedChanged']; entityClub.club.partyCreated"/>
		<bind name="appear" value="'addedToStage'; 0.15; 0.05; {alpha: 0, top: 25}; {alpha: 1, top: 0}"/>
		<bind name="var" value="{ iconScale: 0.9 }"/>
		<bind name="style" value="'marginRight'; _cardHorizontalMargin"/>
		<bind name="style" value="'marginLeft'; _cardHorizontalMargin"/>
		<style>
			<marginTop value="52px"/>
			<width value="250px"/>
		</style>
		<block>
			<styleClass value="$MiddleAligned"/>
			<bind name="visible" value="!(dockDefaultValues.clubCreationEnabled) &amp;&amp; _existedClubsCount &lt; 3"/>
			<block className="BlurMapCustomOutbound">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<position value="absolute"/>
					<width value="100%"/>
					<height value="100%"/>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap10_feather" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<style>
						<width value="110%"/>
						<height value="110%"/>
						<left value="-5%"/>
						<top value="-5%"/>
					</style>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<block type="text">
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$TextHeaderBold"/>
				<style>
					<marginTop value="-34px"/>
					<marginBottom value="3px"/>
				</style>
				<bind name="text" value="toUpperCase(tr('IDS_HEADING_TO_BATTLE'))"/>
			</block>
			<bind name="watch" value="'instructionArray'; isCurPlayerCommander 	? 
											[	{_paragraphText: 'IDS_CLUBS_INTRO_1_0'},
												{_paragraphText: 'IDS_CLUBS_INTRO_2_0'},
												{_paragraphText: subst('IDS_CLUBS_INTRO_2_1', [], {minPlayers: minPartyForBattle})}]
										: isPartyMember			?
											[	{_paragraphText: 'IDS_CLUBS_INTRO_1_0'},
												{_paragraphText: subst('IDS_CLUBS_INTRO_2_1', [], {minPlayers: minPartyForBattle})}]
										: isPartyCreated 			?
											[	{_paragraphText: 'IDS_PROFILE_CLUBS_INSTRUCTION_9_1'},
												{_paragraphText: 'IDS_CLUBS_INTRO_1_0'},
												{_paragraphText: subst('IDS_CLUBS_INTRO_2_1', [], {minPlayers: minPartyForBattle})}]
										:	[	{_paragraphText: 'IDS_PROFILE_CLUBS_INSTRUCTION_9'}]
										"/>
			<bind name="repeat" value="instructionArray; 'RepeatParagraphItem'; {_maxWidth: 250, _marginBottom: '6px', _class: '$TextHeaderBigDefault'}"/>
		</block>
		<block>
			<bind name="visible" value="_existedClubsCount == 0 || dockDefaultValues.clubCreationEnabled"/>
			<style>
				<position value="absolute"/>
				<left value="50%"/>
				<marginLeft value="-45%"/>
			</style>
			<bind name="scaleX" value="iconScale"/>
			<bind name="scaleY" value="iconScale"/>
			<bind name="instance" value="'ClubHeaderIconCreateClub'; { _scale: iconScale }"/>
		</block>
	</block>
	<css name="$SqueezeHorizontal">
		<width value="90%"/>
		<left value="5%"/>
	</css>
	<css name="$SqueezeVertical">
		<top value="5%"/>
		<height value="90%"/>
	</css>
	<block className="ClubCard">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="entityDH" value="'entityClub'; id"/>
		<bind name="dataRefDH" value="'club'; 'entityClub.club'"/>
		<bind name="watchDH" value="'name';['entityClub.club.evNameChanged']; entityClub.club.name"/>
		<bind name="watchDH" value="'rating';['entityClub.club.evRatingChanged']; entityClub.club.rating"/>
		<bind name="watchDH" value="'league';['entityClub.club.evRatingChanged']; entityClub.club.league"/>
		<bind name="watchDH" value="'leaderDbId';['entityClub.club.evleaderIdChanged']; entityClub.club.leaderId"/>
		<bind name="watchDH" value="'ratingHistory';['entityClub.club.evRatingHistoryChanged']; entityClub.club.ratingHistory"/>
		<bind name="watchDH" value="'ratingHistoryTimes';['entityClub.club.evRatingHistoryChanged']; entityClub.club.ratingHistoryTimes"/>
		<bind name="watchDH" value="'ratingHistoryCounts';['entityClub.club.evRatingHistoryChanged']; entityClub.club.ratingHistoryCounts"/>
		<bind name="watchDH" value="'battlesCount';['entityClub.club.evRatingChanged']; entityClub.club.battlesCount"/>
		<bind name="watchDH" value="'winRate';['entityClub.club.evRatingChanged']; entityClub.club.winRate"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
		<bind name="dispatch" value="'click'; 'curActiveClubChangedEvent'; {curActiveClubIndex: $index}"/>
		<bind name="soundSet" value="isActiveClubCard ? '' : 'default_button'"/>
		<bind name="style" value="'marginRight'; _cardHorizontalMargin"/>
		<bind name="style" value="'marginLeft'; _cardHorizontalMargin"/>
		<bind name="watchDH" value="'isPartyCreated'; ['entityClub.club.evPartyCreatedChanged']; entityClub.club.partyCreated"/>
		<bind name="watchDH" value="'isPartyInBattle'; ['entityClub.party.evUpdate']; entityClub.party.isInBattle"/>
		<bind name="watch" value="'isActiveClubCard'; _curActiveClubIndex == $index"/>
		<bind name="changeDispatch" value="isActiveClubCard; 'evSetPartyFullUpdate'"/>
		<bind name="watchDH" value="'isPartyFullUpdate'; ['entityClub.party.evUpdate']; entityClub.party.isDataFull"/>
		<bind name="changeDispatch" value="isPartyFullUpdate; 'evSetPartyFullUpdate'"/>
		<bind name="action" value="'evSetPartyFullUpdate'; isActiveClubCard &amp;&amp; !(isPartyFullUpdate) ? 'setActiveParty' : ''; {clubId: entityClub.club.id}"/>
		<style>
			<width value="234px"/>
			<height value="458px"/>
		</style>
		<bind name="var" value="{easing: 0}"/>
		<bind name="appear" value="'addedToStage'; 0.15; $index*0.1+0.05; {alpha: 0, top: 25}; {alpha: 1, top: 0}"/>
		<bind name="transition" value="isActiveClubCard; 0.2; {width: 234, height: 266}; {width: 520, height: 458}; {width: 234, height: 266}; easing"/>
		<block>
			<bind name="transition" value="isActiveClubCard; 0.2; {alpha: 0}; {alpha: 1}; {alpha: 0}; easing"/>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="stageSize"/>
			<bind name="class" value="stageWidth &lt; 1500 ? '$SqueezeHorizontal' : '$None'"/>
			<bind name="class" value="stageHeight &lt; 870 ? '$SqueezeVertical' : '$None'"/>
			<block className="BlurMapCustomOutbound">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<position value="absolute"/>
					<width value="100%"/>
					<height value="100%"/>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap10_feather" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<style>
						<width value="110%"/>
						<height value="110%"/>
						<left value="-5%"/>
						<top value="-5%"/>
					</style>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
		</block>
		<bind name="watch" value="'clubIconState'; 	isPartyInBattle	? 'InBattle' :
									isPartyCreated	? 'Party'
													: 'Rating'"/>
		<block>
			<style>
				<top value="38px"/>
				<position value="absolute"/>
			</style>
			<bind name="transition" value="isActiveClubCard; 0.13; {scaleX: 0.9, scaleY: 0.9, top: 12}; {top: 0, scaleX: 1, scaleY: 1}; {scaleX: 0.9, scaleY: 0.9, top: 12}; easing; (isActiveClubCard ? 0 : 0.07)"/>
			<bind name="instance" value="'ClubHeaderIcon'; {	_clubIconState: clubIconState,
											_isLeader: (selfPlayerDbId == leaderDbId),
											_isActiveClubIcon: (isActiveClubCard || rollOver),
											_clubEntityId: entityClub.id}"/>
		</block>
		<block>
			<bind name="transition" value="isActiveClubCard; 0.2; {height: 74}; {height: 42}; {height: 74}; easing"/>
			<style>
				<marginTop value="8px"/>
				<marginBottom value="16px"/>
				<height value="90px"/>
			</style>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<block>
				<style>
					<height value="100%"/>
				</style>
				<block className="button_dock" type="native">
					<bind name="name" value="'contextMenuClub'"/>
					<bind name="style" value="'hitTest'; isActiveClubCard"/>
					<style>
						<width value="100%"/>
						<height value="45px"/>
						<marginRight value="-18px"/>
						<position value="absolute"/>
					</style>
					<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: (selfPlayerDbId == leaderDbId) &amp;&amp; realmConstants.clubNaming ? [{_type: 'left', _instructionText: 'IDS_CLUB_CONTEXT_MENU_HINT_LEAD' }]
																											 								: [{_type: 'left', _instructionText: 'IDS_CLUB_CONTEXT_MENU_HINT' }],
															_maxWidth: 250 }; 0"/>
					<bind name="tooltip" value="'ClubDropDownMenu'; {_dropDown: true, _clubEntityId: entityClub.id}; TooltipBehaviour.verticalInfoWidget"/>
				</block>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<bind name="style" value="'hitTest'; !(isActiveClubCard)"/>
					<style>
						<marginLeft value="8px"/>
						<marginRight value="4px"/>
					</style>
					<block type="text">
						<bind name="transition" value="isActiveClubCard; 0.15; {alpha: 0.7}; {alpha: 1}; {alpha: 0.7}; easing"/>
						<style>
							<leading value="-4"/>
						</style>
						<bind name="style" value="'maxWidth'; isActiveClubCard ? '500': '200'"/>
						<bind name="style" value="'textAlign'; isActiveClubCard ? 'left': 'center'"/>
						<bind name="class" value="isActiveClubCard ? '$FontSizeHeader3' : '$FontSizeHeader4'"/>
						<styleClass value="$TextAccentBold"/>
						<bind name="text" value="name"/>
					</block>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<marginTop value="16px"/>
						<right value="-12"/>
						<hitTest value="false"/>
					</style>
					<block className="icon_navigate" type="native">
						<bind name="visible" value="isActiveClubCard"/>
						<bind name="gotoAndStop!" value="'down'"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<style>
				<top value="57px"/>
				<marginLeft value="260px"/>
				<marginBottom value="12px"/>
				<position value="absolute"/>
			</style>
			<bind name="transition" value="isActiveClubCard; 0.15; {scaleX: 0, scaleY: 0.7}; {scaleX: 1, scaleY: 1}; {scaleX: 0, scaleY: 0.7}; easing; (isActiveClubCard ? 0.05 : 0)"/>
			<bind name="transition" value="isActiveClubCard; 0.1; {alpha: 0}; {alpha: 1}; {alpha: 0}; easing; (isActiveClubCard ? 0.1 : 0)"/>
			<bind name="style" value="'hitTest'; isActiveClubCard"/>
			<bind name="child" value="isPartyCreated ? isPartyCreated : 0; {_clubEntityId: entityClub.id}; 'ClubMembersList'; 'PartyMembersList'"/>
		</block>
		<block>
			<style>
				<left value="208px"/>
				<top value="61px"/>
				<position value="absolute"/>
			</style>
			<bind name="transition" value="isActiveClubCard; 0.1; {alpha: 0}; {alpha: 1}; {alpha: 0}; easing; (isActiveClubCard ? 0.1 : 0)"/>
			<block className="icon_info_big" type="native">
				<bind name="tooltip" value="'ClubInfoTooltip'; {_clubEntityId: entityClub.id}; TooltipBehaviour.simple"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="battlesCount &gt; 0"/>
			<bind name="transition" value="isActiveClubCard; 0.11; {scaleX: 0.9, scaleY: 0.9, top: -54, alpha: 0}; {top: 0, scaleX: 1, scaleY: 1, alpha: 1}; {scaleX: 0.9, scaleY: 0.9, top: -54, alpha: 0}; easing; (isActiveClubCard ? 0.03 : 0.1)"/>
			<style>
				<top value="326px"/>
				<width value="230px"/>
				<marginLeft value="15px"/>
				<height value="90px"/>
				<position value="absolute"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<top value="-38px"/>
					<marginLeft value="30px"/>
					<marginRight value="30px"/>
					<position value="absolute"/>
				</style>
				<block>
					<bind name="tooltip" value="'MouseInstructionTooltip'; {	_multiParagraphArray: [{_paragraphText: 'IDS_TOTAL_BATTLES'}]}"/>
					<block type="text">
						<styleClass value="$MiddleAligned"/>
						<styleClass value="$TextAccentBoldAccountLevel2"/>
						<bind name="text" value="battlesCount"/>
					</block>
					<block type="text">
						<style>
							<marginTop value="-10px"/>
						</style>
						<styleClass value="$MiddleAligned"/>
						<styleClass value="$TextDefault"/>
						<bind name="pluralText" value="'IDS_PL_BATTLES_COUNT'; battlesCount"/>
					</block>
				</block>
				<block>
					<bind name="tooltip" value="'MouseInstructionTooltip'; {	_multiParagraphArray: [{_paragraphText: 'IDS_WIN_RATE'}]}"/>
					<style>
						<right value="0"/>
						<position value="absolute"/>
					</style>
					<block type="text">
						<styleClass value="$MiddleAligned"/>
						<styleClass value="$TextAccentBoldAccountLevel2"/>
						<bind name="text" value="winRate+'%'"/>
					</block>
					<block type="text">
						<style>
							<marginTop value="-10px"/>
						</style>
						<styleClass value="$MiddleAligned"/>
						<styleClass value="$TextDefault"/>
						<bind name="text" value="toLowerCase(tr('IDS_VICTORIES'))"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<style>
					<bottom value="-5px"/>
					<width value="230px"/>
					<height value="80px"/>
					<backgroundColor value="0x01000000"/>
					<position value="absolute"/>
				</style>
				<bind name="var" value="{ color: '99ffcc', dotColor: '0xccfbe3' }"/>
				<bind name="watch" value="'freq'; (ratingHistory.length &gt; 40)	? 3 :
								 (ratingHistory.length &gt; 20)	? 2
								 								: 1"/>
				<bind name="linearChart" value="ratingHistory ? ratingHistory : [0]; {	chartStyle: {lineColor : ('0xff'+color), thickness: 1.5, gradient : [('0x00'+color), ('0x15'+color), ('0x60'+color)], offsetTop : 10, offsetBottom : 10},
																		guidesStyle: {lineColor : ('0x77'+color), thickness: 1, dashWidth: 14, dashDuty: 0.5, bottomGap : -1, leftGap : -1, rightGap : 0},
																		verticalHintsStyle: {lineColor : ('0x77'+color), thickness: 1, freq : freq}}"/>
				<bind name="changeDispatch" value="pointData; 'pointPositionChanged'"/>
			</block>
			<block>
				<bind name="appear" value="'pointPositionChanged'; 0.1; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="visible" value="pointData != null"/>
				<bind name="transition" value="pointData; 0; {left: pointX, top: pointY}; {left: pointX, top: pointY}"/>
				<style>
					<marginTop value="10px"/>
					<hitTest value="false"/>
				</style>
				<block className="lesta.display.Circle" type="native">
					<bind name="color" value="dotColor"/>
					<params>
						<param name="radius" value="3"/>
					</params>
				</block>
				<block>
					<style>
						<marginTop value="-108%"/>
						<width value="170px"/>
						<position value="absolute"/>
					</style>
					<block className="DeclareBlurLayer">
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
						<bind name="visible" value="optionData.blurEnabled"/>
						<block className="transparentPixel" type="native">
							<bind name="blurLayer" value="0"/>
						</block>
						<style>
							<position value="absolute"/>
						</style>
					</block>
					<block className="BlurMap">
						<bind name="visible" value="optionData.blurEnabled"/>
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
						<style>
							<hitTest value="false"/>
						</style>
						<styleClass value="$FullsizeAbsolute"/>
						<block className="mc_blurmap_medium" type="native">
							<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
							<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
							<styleClass value="$FullsizeAbsolute"/>
							<bind name="blurMap" value="0"/>
						</block>
						<block className="inner_panel" type="native">
							<style>
								<alpha value="0.5"/>
							</style>
							<styleClass value="$FullsizeAbsolute"/>
						</block>
					</block>
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<block className="contrast_panel" type="native">
						<styleClass value="$FullsizeAbsolute"/>
						<bind name="visible" value="optionData.contrast"/>
					</block>
					<block className="hint_panel" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
					<block>
						<styleClass value="$InfoBlockIndent"/>
						<block type="text">
							<bind name="visible" value="ratingHistoryCounts[pointData.index] == 0"/>
							<style>
								<marginBottom value="4px"/>
							</style>
							<styleClass value="$TextHeaderBold"/>
							<bind name="text" value="tr('IDS_CLUB_CREATION')"/>
						</block>
						<block>
							<style>
								<width value="100%"/>
							</style>
							<bind name="timeFormat" value="ratingHistoryTimes[pointData.index]; 'dd.MM.yyyy'; 'battleTime'; false"/>
							<block type="text">
								<styleClass value="$TextDefault"/>
								<text value="IDS_DATE"/>
							</block>
							<block type="text">
								<style>
									<position value="absolute"/>
									<right value="0"/>
								</style>
								<styleClass value="$TextDefaultBold"/>
								<bind name="text" value="battleTime"/>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
						<block>
							<style>
								<width value="100%"/>
							</style>
							<block type="text">
								<styleClass value="$TextDefault"/>
								<text value="IDS_RATING"/>
							</block>
							<block type="text">
								<style>
									<position value="absolute"/>
									<right value="0"/>
								</style>
								<styleClass value="$TextDefaultBold"/>
								<bind name="text" value="pointData.value"/>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
						<block>
							<bind name="visible" value="ratingHistoryCounts[pointData.index] &gt; 0"/>
							<style>
								<width value="100%"/>
							</style>
							<block type="text">
								<styleClass value="$TextDefault"/>
								<text value="IDS_BATTLE_NUMBER"/>
							</block>
							<block type="text">
								<style>
									<position value="absolute"/>
									<right value="0"/>
								</style>
								<styleClass value="$TextDefaultBold"/>
								<bind name="text" value="ratingHistoryCounts[pointData.index]"/>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="ClubHeaderIconCreateClub">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="collectionDH" value="CC.clubsCommon; 'clubsCommonCollection'"/>
		<bind name="entityDH" value="'clubsCommonEntity'; clubsCommonCollection[0].id"/>
		<bind name="collectionDH" value="CC.club; 'clubs'"/>
		<bind name="watchDH" value="'clubsCountCreatedByMe'; ['clubsCommonEntity.clubsCommon.evClubsCountChanged']; clubsCommonEntity.clubsCommon.clubsCountCreatedByMe"/>
		<bind name="watch" value="'clubCreatePriceType'; clubsCountCreatedByMe &lt; 2 ? 'CREATE_CLUB' + clubsCountCreatedByMe + '_Cost' : 'CREATE_CLUB2_Cost'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY + clubCreatePriceType; 'clubCreatePrice'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'dockDefaultValues'; 'dockInitData,dockUpdateData'"/>
		<bind name="tooltip" value="'MouseInstructionTooltip'; {	_multiParagraphArray: 	((clubs.length == 0 &amp;&amp; !(dockDefaultValues.clubCreationEnabled))	? [ {_paragraphText: 'IDS_PROFILE_CLUBS_INSTRUCTION_5'},
																																			{_paragraphText: subst('IDS_PROFILE_CLUBS_INSTRUCTION_11',[],{minBattles: dockDefaultValues.clubCreationBattlesLimit})}]
																																			: [ {_paragraphText: 'IDS_PROFILE_CLUBS_INSTRUCTION_5'}]),
												_mouseInstructions:		[{_type: 'left', _instructionText: 'IDS_CREATE_CLUB'}],
												_maxWidth: 260 }"/>
		<bind name="soundOn" value="'click'; 'press'; 'default_button'"/>
		<style>
			<width value="260px"/>
			<height value="330px"/>
		</style>
		<bind name="catch" value="'selectedPriceChanged'"/>
		<bind name="var" value="{selectedPriceIndex: 0}"/>
		<block>
			<bind name="visible" value="_blurOff ? false : true"/>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap5_feather" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="transition" value="rollOver; 0.15; {alpha: 0.8}; {alpha: 1}; {alpha: 0.65}; 0"/>
			<style>
				<backgroundSize value="cover"/>
				<backgroundImage value="symbol:club_header_bgr_create"/>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<bind name="transition" value="rollOver; 0.15; {alpha: 0.8}; {alpha: 1}; {alpha: 0.85}; 0"/>
			<style>
				<width value="164px"/>
				<height value="164px"/>
				<marginTop value="35px"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<backgroundColor value="0x01000000"/>
				</style>
				<bind name="action" value="'click'; 'createClubWindow'; { selectedPriceIndex: selectedPriceIndex }"/>
			</block>
			<block>
				<bind name="name" value="'createClub'"/>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$MiddleVAligned"/>
				<block type="text">
					<style>
						<marginTop value="6px"/>
						<maxWidth value="120"/>
						<textAlign value="center"/>
						<leading value="-5"/>
						<letterSpacing value="0.7"/>
						<hitTest value="false"/>
					</style>
					<styleClass value="$TextLargeHeaderBold"/>
					<bind name="text" value="toUpperCase(tr('IDS_CREATE_CLUB'))"/>
				</block>
				<block>
					<bind name="visible" value="clubCreatePrice.prices[0].finalPrice != 0"/>
					<bind name="style" value="'hitTest'; clubCreatePrice.prices.length &gt; 1"/>
					<bind name="style" value="'marginLeft'; -(50 / _scale) + '%'"/>
					<bind name="scaleX" value="1/_scale"/>
					<bind name="scaleY" value="1/_scale"/>
					<style>
						<marginTop value="-4px"/>
						<marginBottom value="-6px"/>
						<left value="50%"/>
					</style>
					<bind name="instance" value="'AlterablePriceTag'; {_prices: clubCreatePrice.prices, _selectedPriceIndex: selectedPriceIndex, _large: clubCreatePrice.prices.length &lt; 2, _medium: clubCreatePrice.prices.length &gt;= 2 }"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<backgroundImage value="symbol:club_header_league_-1"/>
				<backgroundSize value="cover"/>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
		</block>
	</block>
	<block className="PartyMembersList"/>
	<block className="ReadyForPartyInviteClubMember">
		<style>
			<width value="100%"/>
			<height value="30px"/>
		</style>
		<bind name="instance" value="'PlayerContactItemWithRollover'; {	_isClubMembersList: true, _entityAccountId: $dataRef.ref.id,
														_playerContext: {type: 'inviteToPartyFromClubMembersList', clubId: _clubId, clubEntityId: _clubEntityId, clubLeaderDbId: _clubLeaderDbId}}"/>
	</block>
	<block className="PartyPlayer"/>
	<block className="InvitedPartyPlayer"/>
	<block className="ClubMembersList">
		<bind name="collectionDH" value="CC.clubsCommon; 'clubsCommonCollection'"/>
		<bind name="entityDH" value="'clubsCommonEntity'; clubsCommonCollection[0].id"/>
		<bind name="dataRefDH" value="'maxClubsCapacity'; 'clubsCommonEntity.clubsCommon.maxClubsCapacity'"/>
		<bind name="entityDH" value="'entityClub'; _clubEntityId"/>
		<bind name="watchDH" value="'leaderDbId';['entityClub.club.evleaderIdChanged']; entityClub.club.leaderId"/>
		<bind name="dataRefDH" value="'club'; 'entityClub.club'"/>
		<bind name="watchDH" value="'clubMembers'; ['entityClub.club.evMembersChanged']; entityClub.club.members"/>
		<bind name="watchDH" value="'invitedPlayers'; ['entityClub.club.evInvitedClubmansChanged']; entityClub.club.invitedClubmans"/>
		<style>
			<width value="260px"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="repeat" value="clubMembers; 'ClubMember'; {_clubEntityId: _clubEntityId, _clubId: club.id, _clubLeaderDbId: leaderDbId}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="repeat" value="invitedPlayers; 'InvitedToClubPlayer'; {_clubId: club.id}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="repeat" value="(maxClubsCapacity - clubMembers.length - invitedPlayers.length); 'InvitePlayerListItem'; {_clubId: club.id, _type: 'inviteToClub', _clubLeaderDbId: leaderDbId, _clubEntityId: _clubEntityId}"/>
		</block>
		<block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionData'"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
			<style>
				<marginTop value="12px"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<bind name="instance" value="'ProfileClubFormationReadySwitcher'; {_clubEntityId: _clubEntityId, _isCreateParty: true}"/>
		</block>
	</block>
	<block className="ProfileClubFormationReadySwitcher"/>
	<block className="InvitedToClubPlayer">
		<style>
			<width value="100%"/>
			<height value="30px"/>
		</style>
		<bind name="instance" value="'PlayerContactItemWithRollover'; {	_isClubMembersList: true, _entityAccountId: accountEntityId,
														_playerContext: {	type: 'invitedToClubPlayers', clubId: _clubId, invatorDbId: invatorDbId}}"/>
	</block>
	<block className="ClubMemberEntity">
		<style>
			<width value="100%"/>
		</style>
		<bind name="instance" value="'ClubMember'; {_clubEntityId: _clubEntityId, _clubId: entityClub.club.id, _clubLeaderDbId: leaderDbId, $value: $dataRef.ref.id}"/>
	</block>
	<block className="ClubMember">
		<style>
			<width value="100%"/>
			<height value="30px"/>
		</style>
		<bind name="instance" value="'PlayerContactItemWithRollover'; {	_isClubMembersList: true, _entityAccountId: $value,
														_playerContext: {type: 'clubMembersList', clubId: _clubId, clubEntityId: _clubEntityId, clubLeaderDbId: _clubLeaderDbId}}"/>
	</block>
	<block className="InvitePlayerListItem">
		<bind name="name" value="'invitePlayerItem_' + $index"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<style>
			<width value="100%"/>
			<height value="30px"/>
		</style>
		<block className="dock_submenu_item_bg" type="native">
			<bind name="transition" value="(rollOver || contactsInfotipIsVisible); 0.15; {alpha: 0}; {alpha: 1.0}"/>
			<styleClass value="$PxHorizontalCorrection"/>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="tooltip" value="'MouseInstructionTooltip'; 	{	_multiParagraphArray:	_type == 'inviteToClub' 	? 	[	{_paragraphText: 'IDS_HINT_INVITE_PLAYERS_TO_CLUB', _class: '$TextDefault'}] :
																				_type == 'inviteToParty'	?	[	{_paragraphText: 'IDS_HINT_INVITE_PLAYERS_TO_PARTY_0', _class: '$TextDefault'},
																													{_paragraphText: 'IDS_HINT_INVITE_PLAYERS_TO_PARTY_1', _class: '$TextDefault'}]
																											: [	{_paragraphText: 'IDS_HINT_INVITE_PLAYERS', _class: '$TextDefault'}],
													_maxWidth: 270}"/>
			<bind name="tooltip" value="'ContactsAndChannelsInfotip'; (_type == 'inviteToClub')	? {_playerContext: {type: 'inviteToClub', clubId: _clubId, clubEntityId: _clubEntityId, clubLeaderDbId: _clubLeaderDbId}}
																				: null ; TooltipBehaviour.infotip; null; 'contactsInfotipIsVisible'"/>
			<bind name="tooltip" value="'DivisionEntranceInfotip'	; (_type == 'inviteToParty') ? {_playerContext: {type: 'inviteToParty'}}
																				 : null; TooltipBehaviour.infotip; null; 'contactsInfotipIsVisible'"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="4px"/>
				<hitTest value="false"/>
			</style>
			<bind name="style" value="'marginLeft'; _centered ? '0px' : '13px'"/>
			<block>
				<bind name="class" value="_centered ? '$MiddleAligned' : '$None'"/>
				<block className="icon_plus" type="native">
					<styleClass value="$MiddleVAligned"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefaultBold"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<style>
						<marginLeft value="2px"/>
					</style>
					<bind name="text" value="_type == 'inviteToClub' ? 'IDS_HINT_LEFT_CLICK_TO_IVITE_TO_CLUB' : 'IDS_HINT_LEFT_CLICK_TO_IVITE_TO_PARTY'"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="EnterPartyListItem"/>
	<block className="ClubDropDownMenu">
		<bind name="entityDH" value="'entityClub'; _clubEntityId"/>
		<bind name="dataRefDH" value="'club'; 'entityClub.club'"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<bind name="watchDH" value="'leaderDbId';['entityClub.club.evleaderIdChanged']; entityClub.club.leaderId"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
		<styleClass value="$DefaultMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<block className="MenuBg">
			<styleClass value="$FullsizeAbsolute"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<bind name="visible" value="optionData.contrast &amp;&amp; !(_dropDown)"/>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="!(_dropDown)"/>
				<block className="hint_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="_dropDown"/>
				<block className="dock_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginBottom value="-19px"/>
						<marginRight value="-14px"/>
						<marginLeft value="-14px"/>
						<marginTop value="-9px"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<bind name="name" value="'leaveClub'"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItemWithAction">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_LEAVE_CLUB'"/>
				</block>
				<bind name="action" value="'click'; 'leaveClubWindow'; {clubEntityId: _clubEntityId}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="(leaderDbId == selfPlayerDbId) &amp;&amp; realmConstants.clubNaming"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItemWithAction">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_RENAME_CLUB'"/>
				</block>
				<bind name="action" value="'click'; 'renameClubWindow'; {clubEntityId: _clubEntityId}"/>
			</block>
		</block>
	</block>
	<block className="NoExistingClubsScreen">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'operationsAccountLocked';	['resourceEntity.accountResource.evOperationsLockChanged'];	resourceEntity.accountResource.operationsLocked"/>
		<styleClass value="$Fullsize"/>
		<block>
			<style>
				<height value="100%"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<block>
				<style>
					<top value="25sh"/>
				</style>
				<block>
					<style>
						<width value="220px"/>
						<marginTop value="-50px"/>
					</style>
					<block className="BlurMapCustomOutbound">
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
						<style>
							<position value="absolute"/>
							<width value="100%"/>
							<height value="100%"/>
							<hitTest value="false"/>
						</style>
						<bind name="visible" value="optionData.blurEnabled"/>
						<block className="mc_blurmap10_feather" type="native">
							<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
							<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
							<style>
								<width value="110%"/>
								<height value="110%"/>
								<left value="-5%"/>
								<top value="-5%"/>
							</style>
							<bind name="blurMap" value="0"/>
						</block>
					</block>
					<block>
						<bind name="appear" value="'addedToStage'; 0.15; 0 + 1*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
						<style>
							<width value="100%"/>
							<marginBottom value="12px"/>
							<backgroundColor value="0x01000000"/>
						</style>
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionData'"/>
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
						<bind name="tooltip" value="'SimpleWarningTooltip'; {_text: tr('IDS_CLUB_BATTLES_SEASON_OFF')}"/>
						<block className="dock_submenu_item" type="native">
							<bind name="tooltip" value="'SimpleTooltip'; divisionData.divisionExist ? null : {tooltipText: divisionEntranceData.seekerStatus ? tr('IDS_NOT_VISIBLE_FOR_OTHER_PLAYERS_PARTY')
																																			: tr('IDS_VISIBLE_FOR_OTHER_PLAYERS_PARTY')}"/>
							<bind name="style" value="'alpha'; 0.3"/>
							<bind name="action" value="'buttonClick'; 'setBattleType'; {battleType: BattleTypes.CLUB_BATTLE}"/>
							<bind name="action" value="'buttonClick'; 'toggleDivisionSeekerStatus'; {comment: '', status: divisionEntranceData.seekerStatus}"/>
							<params>
								<param name="soundSet" value="dropmenu_button"/>
							</params>
							<styleClass value="$MiddleAligned"/>
							<style>
								<flow value="horizontal"/>
								<height value="40px"/>
							</style>
							<block>
								<style>
									<hitTest value="false"/>
									<marginLeft value="12px"/>
									<marginRight value="21px"/>
									<marginTop value="3px"/>
									<marginBottom value="3px"/>
								</style>
								<block className="icon_formation" type="native">
									<bind name="gotoAndStop!" value="'seeker_party'"/>
									<style>
										<marginRight value="2px"/>
									</style>
								</block>
								<block>
									<styleClass value="$MiddleVAligned"/>
									<block type="text">
										<styleClass value="$TextHeaderBold"/>
										<bind name="class" value="divisionEntranceData.seekerStatus &amp;&amp; (divisionEntranceData.divisionType == 'party') ? '$FontColorParty' : '$FontColorWhite'"/>
										<text value="IDS_WANT_IN_PARTY"/>
									</block>
									<block type="text">
										<bind name="fade" value="(divisionEntranceData.seekerStatus &amp;&amp; (divisionEntranceData.divisionType == 'party')); 0.15; {alpha: 0, top: 3, ubScaleY: 0}; {alpha: 1, top: 0, ubScaleY: 1 }; {alpha: 0, top: -3, ubScaleY: 0}; 1; 0.1"/>
										<styleClass value="$TextDefaultTech"/>
										<styleClass value="$MiddleAligned"/>
										<style>
											<marginTop value="-5px"/>
											<height value="22px"/>
										</style>
										<bind name="text" value="tr('IDS_STATUS_IS_ESTABLISHED')"/>
									</block>
								</block>
								<style>
									<flow value="horizontal"/>
								</style>
							</block>
						</block>
					</block>
					<block>
						<bind name="appear" value="'addedToStage'; 0.15; 0 + 2*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
						<styleClass value="$MiddleAligned"/>
						<bind name="repeat" value="[{_paragraphText: 'IDS_WANT_IN_PARTY_INFO_0'}, {_paragraphText: 'IDS_WANT_IN_PARTY_INFO_1'}]; 'RepeatParagraphItem'; {_maxWidth: 280, _marginBottom: '6px',
																																						_middleAligned: true, _class: '$TextHeaderBigDefault',
																																						_textAlign: 'center'}"/>
					</block>
				</block>
				<block>
					<style>
						<marginLeft value="4sw"/>
						<marginRight value="4sw"/>
						<backgroundColor value="0x01000000"/>
					</style>
					<styleClass value="$MiddleVAligned"/>
					<block className="CreateClubElement">
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
						<bind name="appear" value="'addedToStage'; 0.15; 0 + 1*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
						<bind name="var" value="{ iconScale: 1.1 }"/>
						<block>
							<bind name="ubScaleX" value="iconScale"/>
							<bind name="ubScaleY" value="iconScale"/>
							<bind name="scaleX" value="iconScale"/>
							<bind name="scaleY" value="iconScale"/>
							<style>
								<alpha value="0.7"/>
							</style>
							<bind name="instance" value="'ClubHeaderIconCreateClub'; { _scale: iconScale }"/>
						</block>
					</block>
				</block>
				<block>
					<style>
						<width value="220px"/>
						<marginTop value="-50px"/>
					</style>
					<block className="BlurMapCustomOutbound">
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
						<style>
							<position value="absolute"/>
							<width value="100%"/>
							<height value="100%"/>
							<hitTest value="false"/>
						</style>
						<bind name="visible" value="optionData.blurEnabled"/>
						<block className="mc_blurmap10_feather" type="native">
							<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
							<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
							<style>
								<width value="110%"/>
								<height value="110%"/>
								<left value="-5%"/>
								<top value="-5%"/>
							</style>
							<bind name="blurMap" value="0"/>
						</block>
					</block>
					<block>
						<bind name="appear" value="'addedToStage'; 0.15; 0 + 1*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
						<style>
							<marginBottom value="12px"/>
							<height value="40px"/>
						</style>
						<styleClass value="$MiddleAligned"/>
						<block>
							<bind name="appear" value="'addedToStage'; 0.15; 0 + 1.5*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
							<styleClass value="$MiddleVAligned"/>
							<bind name="tooltip" value="'SimpleWarningTooltip'; {_text: tr('IDS_CLUB_BATTLES_SEASON_OFF')}"/>
							<bind name="instance" value="'ButtonSpecial'; {	_enabled: true,
															_label: toUpperCase(tr('IDS_START_CLUB_BATTLE'))}"/>
						</block>
					</block>
					<block>
						<bind name="appear" value="'addedToStage'; 0.15; 0 + 2*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
						<styleClass value="$MiddleAligned"/>
						<bind name="repeat" value="[{_paragraphText: 'IDS_CLUB_BATTLE_INFO_0'}, {_paragraphText: 'IDS_CLUB_BATTLE_INFO_1'}]; 'RepeatParagraphItem'; {_maxWidth: 280, _marginBottom: '6px',
																										_middleAligned: true, _class: '$TextHeaderBigDefault',
																										_textAlign: 'center'}"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="CreateClubElement">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<bind name="appear" value="'addedToStage'; 0.15; 0 + 1*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
		<bind name="var" value="{ iconScale: 1.1 }"/>
		<block>
			<bind name="ubScaleX" value="iconScale"/>
			<bind name="ubScaleY" value="iconScale"/>
			<bind name="scaleX" value="iconScale"/>
			<bind name="scaleY" value="iconScale"/>
			<style>
				<alpha value="0.7"/>
			</style>
			<bind name="instance" value="'ClubHeaderIconCreateClub'; { _scale: iconScale }"/>
		</block>
	</block>
	<block className="ClubRulesInfoTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<styleClass value="$DefaultTooltipWidth"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<bind name="collectionDH" value="CC.clubsCommon; 'clubsCommonCollection'"/>
		<bind name="entityDH" value="'clubsCommonEntity'; clubsCommonCollection[0].id"/>
		<bind name="watchDH" value="'shipLevelMin'; ['clubsCommonEntity.clubsCommon.evRulesChanged']; clubsCommonEntity.clubsCommon.shipLevelMin"/>
		<bind name="watchDH" value="'shipLevelMax'; ['clubsCommonEntity.clubsCommon.evRulesChanged']; clubsCommonEntity.clubsCommon.shipLevelMax"/>
		<bind name="watchDH" value="'primeTimes'; ['clubsCommonEntity.clubsCommon.evRulesChanged']; clubsCommonEntity.clubsCommon.primeTimes"/>
		<bind name="watchDH" value="'isPrimeTimeOn'; ['clubsCommonEntity.clubsCommon.evRulesChanged']; clubsCommonEntity.clubsCommon.isPrimeTimeOn"/>
		<bind name="watchDH" value="'primeTimeFinishTime'; ['clubsCommonEntity.clubsCommon.evRulesChanged']; clubsCommonEntity.clubsCommon.primeTimeFinishTime"/>
		<bind name="watchDH" value="'primeTimeStartTime'; ['clubsCommonEntity.clubsCommon.evRulesChanged']; clubsCommonEntity.clubsCommon.primeTimeStartTime"/>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<styleClass value="$TextHeaderBigDefault"/>
					<style>
						<marginBottom value="-3px"/>
						<width value="100%"/>
					</style>
					<text value="IDS_DAILY_CLUB_BATTLES"/>
				</block>
				<block>
					<bind name="repeat" value="primeTimes; 'ClubBattlePrimeTimeStamp'; {_times: primeTimes, _useLocalTime: true}"/>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="timeFormat" value="primeTimes[0][0]; 'hh:mm'; 'startTime'; true"/>
				<block type="text">
					<styleClass value="$TextHeaderBigDefault"/>
					<style>
						<maxWidth value="300"/>
						<marginTop value="6px"/>
					</style>
					<bind name="text" value="tr('IDS_TIMEZONE_IS_LOCAL') + ' ' + startTime_TimeZoneName + (startTime_TimeZone == '+0' ? '' : (' ' + startTime_TimeZone))"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="visible" value="(startTime_TimeZoneName + startTime_TimeZone) != 'UTC+0'"/>
					<block type="text">
						<styleClass value="$TextHeaderBigDefault"/>
						<style>
							<maxWidth value="300"/>
							<marginTop value="9px"/>
							<marginBottom value="-3px"/>
						</style>
						<text value="IDS_UTC0_PERIODS"/>
					</block>
					<block>
						<style>
							<width value="100%"/>
							<flow value="htile"/>
							<marginBottom value="9px"/>
						</style>
						<bind name="repeat" value="primeTimes; 'ClubBattlePrimeTimeStamp'; {_times: primeTimes, _useLocalTime: false}"/>
					</block>
				</block>
			</block>
			<block type="text">
				<styleClass value="$TextHeaderBigDefault"/>
				<style>
					<width value="100%"/>
					<marginBottom value="6px"/>
				</style>
				<bind name="watch" value="'shipsRestrictionString'; 	shipLevelMin &lt;= 1 &amp;&amp; shipLevelMax &lt; 10 	? 	'IDS_CLUB_BATTLES_ALLOWED_SHIPS_TO' :
													shipLevelMin &gt; 1 &amp;&amp; shipLevelMax &gt;= 10 	? 	'IDS_CLUB_BATTLES_ALLOWED_SHIPS_FROM' :
																								'IDS_CLUB_BATTLES_ALLOWED_SHIPS_FROM_TO'"/>
				<bind name="text" value="subst(shipsRestrictionString, [], {levelMin: RDigits[shipLevelMin], levelMax: RDigits[shipLevelMax]})"/>
			</block>
		</block>
	</block>
	<block className="ClubRulesInfo">
		<bind name="collectionDH" value="CC.clubsCommon; 'clubsCommonCollection'"/>
		<bind name="entityDH" value="'clubsCommonEntity'; clubsCommonCollection[0].id"/>
		<bind name="watchDH" value="'shipLevelMin'; ['clubsCommonEntity.clubsCommon.evRulesChanged']; clubsCommonEntity.clubsCommon.shipLevelMin"/>
		<bind name="watchDH" value="'shipLevelMax'; ['clubsCommonEntity.clubsCommon.evRulesChanged']; clubsCommonEntity.clubsCommon.shipLevelMax"/>
		<bind name="watchDH" value="'primeTimes'; ['clubsCommonEntity.clubsCommon.evRulesChanged']; clubsCommonEntity.clubsCommon.primeTimes"/>
		<bind name="watchDH" value="'isPrimeTimeOn'; ['clubsCommonEntity.clubsCommon.evRulesChanged']; clubsCommonEntity.clubsCommon.isPrimeTimeOn"/>
		<bind name="watchDH" value="'primeTimeFinishTime'; ['clubsCommonEntity.clubsCommon.evRulesChanged']; clubsCommonEntity.clubsCommon.primeTimeFinishTime"/>
		<bind name="watchDH" value="'primeTimeStartTime'; ['clubsCommonEntity.clubsCommon.evRulesChanged']; clubsCommonEntity.clubsCommon.primeTimeStartTime"/>
		<bind name="watchDH" value="'clubBattlesSeasonId'; ['clubsCommonEntity.clubsCommon.evRulesChanged']; clubsCommonEntity.clubsCommon.seasonId"/>
		<styleClass value="$Fullsize"/>
		<block type="text">
			<bind name="visible" value="clubBattlesSeasonId &gt; 0"/>
			<style>
				<marginTop value="4px"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$TextAccentBold"/>
			<bind name="class" value="isPrimeTimeOn ? '$FontColorComparePositive' : '$None'"/>
			<bind name="text" value="isPrimeTimeOn ? toUpperCase(tr('IDS_BATTLES_ON')) : toUpperCase(tr('IDS_SCHEDULLE'))"/>
		</block>
		<bind name="watch" value="'nextMileStoneTime'; isPrimeTimeOn ? primeTimeFinishTime : primeTimeStartTime"/>
		<bind name="countdown" value="nextMileStoneTime; 'nextMileStoneCountdown'; 'HIGHEST'"/>
		<block>
			<bind name="visible" value="clubBattlesSeasonId &gt; 0"/>
			<style>
				<width value="100%"/>
				<position value="absolute"/>
			</style>
			<styleClass value="$MiddleVAligned"/>
			<block type="text">
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$TextHeaderBigDefault"/>
				<style>
					<alpha value="0.8"/>
					<marginTop value="6px"/>
				</style>
				<bind name="text" value="isPrimeTimeOn ? toLowerCase(tr('IDS_TILL_END')) : toLowerCase(tr('IDS_TILL_START'))"/>
			</block>
			<block type="text">
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$TextLargeHeaderBold"/>
				<style>
					<marginTop value="-5px"/>
				</style>
				<bind name="style" value="'fontSize'; 21"/>
				<bind name="text" value="nextMileStoneCountdown"/>
			</block>
		</block>
		<block type="text">
			<bind name="visible" value="clubBattlesSeasonId &gt; 0"/>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$TextHeaderBigDefault"/>
			<style>
				<alpha value="0.8"/>
				<position value="absolute"/>
				<bottom value="6px"/>
			</style>
			<bind name="text" value="tr('IDS_LEVELS') + ' ' + ShipLevels.RLEVELS[shipLevelMin] + '-' + ShipLevels.RLEVELS[shipLevelMax]"/>
		</block>
		<block type="text">
			<bind name="visible" value="clubBattlesSeasonId &lt;= 0"/>
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextHeaderBigDefault"/>
			<bind name="class" value="'$FontColorUnready'"/>
			<style>
				<width value="100%"/>
				<textAlign value="center"/>
			</style>
			<bind name="text" value="'IDS_CLUB_BATTLES_SEASON_OFF'"/>
		</block>
	</block>
	<block className="ClubBattlePrimeTimeStamp">
		<bind name="timeFormat" value="_times[$index][0]+1; 'hh:mm'; 'startTime'; _useLocalTime"/>
		<bind name="timeFormat" value="_times[$index][1]+1; 'hh:mm'; 'finishTime'; _useLocalTime"/>
		<bind name="watch" value="'last'; $index &gt; 0 &amp;&amp; $index == (_times.length - 1)"/>
		<bind name="watch" value="'next'; $index &gt; 0 &amp;&amp; $index != (_times.length - 1)"/>
		<style>
			<marginBottom value="-3px"/>
		</style>
		<block type="text">
			<styleClass value="$TextHeaderBigDefault"/>
			<bind name="text" value="_small ? startTime + '-' + finishTime
							: (last ? (tr('IDS_AND') + ' ') : next ? ', ' : '') + startTime + '-' + finishTime"/>
		</block>
	</block>
	<block className="BackgroundAnimatedSwitcher">
		<bind name="var" value="{curBgSymbol: ''}"/>
		<bind name="var" value="{animate: false}"/>
		<bind name="var" value="{animationTime: 0.13}"/>
		<bind name="changeDispatch" value="_bgSymbol; 'bgShouldChange'; {}; 2"/>
		<bind name="catch" value="'bgShouldChange'; {animate: (curBgSymbol != '' ? true : false),
									curBgSymbol: (curBgSymbol != '' ? curBgSymbol : _bgSymbol)}"/>
		<bind name="dispatch" value="'bgShouldChange'; 'bgChanged'; {}; 2; animationTime + 0.03"/>
		<bind name="catch" value="'bgChanged'; {animate: false, curBgSymbol: _bgSymbol}"/>
		<styleClass value="$FullsizeAbsolute"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="style" value="'backgroundImage'; curBgSymbol"/>
			<style>
				<backgroundSize value="cover"/>
			</style>
		</block>
		<block>
			<bind name="fade" value="animate; 0.13; {alpha: 0}; {alpha: 1}; {alpha: 0}; 0; 0.01"/>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="style" value="'backgroundImage'; _bgSymbol"/>
			<style>
				<backgroundSize value="cover"/>
			</style>
		</block>
	</block>
	<css name="$CollectionMarginTop">
		<marginTop value="1280:10,1920:15aw"/>
	</css>
	<css name="$TextHeaderBoldadsdasdas">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="19"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<block className="PlayerCollection">
		<bind name="primaryEntityDH" value="'pageEntity'; CC.insetPage; LobbyConstants.PLAYER_PROFILE"/>
		<bind name="watchDH" value="'page'; ['pageEntity.insetPage.evUpdate']; pageEntity.insetPage.page"/>
		<bind name="watchDH" value="'pageData'; ['pageEntity.dataComponent.evDataChanged']; pageEntity.dataComponent.data"/>
		<bind name="primaryEntityDH" value="'collectionPageDataId'; CC.collectionAlbum; pageData.collectionId"/>
		<bind name="firstEntityDH" value="'firstCollectionEntity'; CC.collectionAlbum"/>
		<bind name="collectionDH" value="CC.collectionAlbum; 'albumCollection'; 'validAlbums.sortedAlbums'"/>
		<bind name="watch" value="'newCollectionId'; collectionPageDataId.id ? collectionPageDataId.id
															: albumCollection[0].id"/>
		<bind name="entityDH" value="'collectionEntity'; newCollectionId"/>
		<styleClass value="$Fullsize"/>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginTop value="6sh"/>
			</style>
			<bind name="instance" value="'CollectionCarouselAndContent'; { _selectedAlbumID: collectionEntity.collectionAlbum.id}"/>
		</block>
	</block>
	<block className="CollectionCarouselAndContent">
		<bind name="primaryEntityDH" value="'pageEntity'; CC.insetPage; LobbyConstants.PLAYER_PROFILE"/>
		<bind name="watchDH" value="'page'; ['pageEntity.insetPage.evUpdate']; pageEntity.insetPage.page"/>
		<bind name="watchDH" value="'pageData'; ['pageEntity.dataComponent.evDataChanged']; pageEntity.dataComponent.data"/>
		<bind name="primaryEntityDH" value="'collectionEntity'; CC.collectionAlbum; _selectedAlbumID"/>
		<bind name="entityDH" value="'subCollectionEntity'; collectionPageID"/>
		<bind name="watch" value="'collectionPageID'; 	(pageID != null)				? pageID :
										(pageData.subAlbum != null)		? subAlbums[pageData.subAlbum]
																		: subAlbums[0]"/>
		<bind name="watchDH" value="'inSubscription';		['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.inSubscription"/>
		<bind name="watchDH" value="'subscriptionEnable';	['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.subscriptionEnable"/>
		<bind name="watchDH" value="'isFull';				['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.isFull"/>
		<bind name="watchDH" value="'cardsCollection';		['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.cards"/>
		<bind name="watchDH" value="'subAlbums';				['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.subAlbums"/>
		<bind name="watchDH" value="'albumID';				['subCollectionEntity.collectionSubAlbum.evUpdate']; subCollectionEntity.collectionSubAlbum.albumID"/>
		<bind name="watchDH" value="'name';					['subCollectionEntity.collectionSubAlbum.evUpdate']; subCollectionEntity.collectionSubAlbum.name"/>
		<bind name="watchDH" value="'subAlbumID';			['subCollectionEntity.collectionSubAlbum.evUpdate']; subCollectionEntity.collectionSubAlbum.subAlbumID"/>
		<bind name="watchDH" value="'description';			['subCollectionEntity.collectionSubAlbum.evUpdate']; subCollectionEntity.collectionSubAlbum.description"/>
		<bind name="watchDH" value="'cardsSubCollection';	['subCollectionEntity.collectionSubAlbum.evUpdate']; subCollectionEntity.collectionSubAlbum.cards"/>
		<bind name="watchDH" value="'rewards';				['subCollectionEntity.collectionSubAlbum.evUpdate']; subCollectionEntity.collectionSubAlbum.rewards"/>
		<bind name="var" value="{windowAppearLag: 0.2}"/>
		<bind name="catch" value="'selectedPageChanged'"/>
		<style>
			<width value="1280:930,1920:1430aw"/>
		</style>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 0 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 0 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<position value="absolute"/>
					<width value="100%"/>
					<marginLeft value="10px"/>
					<marginRight value="10px"/>
					<bottom value="0px"/>
				</style>
				<block className="scroll_line" type="native">
					<style>
						<width value="100%"/>
					</style>
				</block>
			</block>
			<block>
				<style>
					<marginTop value="70px"/>
				</style>
				<block className="button_slide_left" type="native">
					<params>
						<param name="focusable" value="false"/>
					</params>
					<bind name="name" value="'buttonCarouselLeft'"/>
					<bind name="dispatch" value="'buttonClick'; 'collectionCarousel.scrollOneUnitLeft'; null; true"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="20px"/>
					<marginRight value="20px"/>
				</style>
				<block>
					<bind name="event" value="'collectionCarousel.scrollOneUnitLeft'; scrollLeftByOneUnit"/>
					<bind name="event" value="'collectionCarousel.scrollOneUnitRight'; scrollRightByOneUnit"/>
					<bind name="controller" value="lesta.unbound.controls.UbCarouselController"/>
					<style>
						<width value="100%f"/>
						<overflow value="scroll"/>
						<scrollbarController value="lesta.unbound.style.UbScrollingControllerTouch"/>
						<layout value="lesta.unbound.layout.measure.CarouselLayout"/>
						<scrollArea value="ModernScrollAreaHorizontal"/>
						<wheelScrollSpeed value="150"/>
						<itemWidth value="150px"/>
						<itemHeight value="150px"/>
					</style>
					<bind name="generatorDH" value="CC.collectionAlbum; 'CollectionCarouselItem'; 'validAlbums.sortedAlbums'; { onCarouselItemClick: onCarouselItemClick, _selectedAlbumID: _selectedAlbumID }"/>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block>
				<style>
					<marginTop value="70px"/>
				</style>
				<block className="button_slide_right" type="native">
					<params>
						<param name="focusable" value="false"/>
					</params>
					<bind name="name" value="'buttonCarouselRight'"/>
					<bind name="dispatch" value="'buttonClick'; 'collectionCarousel.scrollOneUnitRight'; null; true"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<bind name="watch" value="'currentCollectionCards'; (subAlbums.length &gt; 0) ? cardsSubCollection : cardsCollection"/>
		<bind name="var" value="{ needRepeatUpdate: false }"/>
		<bind name="dispatch" value="'_selectedAlbumID' + varChanged; 'selectedAlbumChangedEv'; null; 2"/>
		<bind name="dispatch" value="'collectionPageID' + varChanged; 'selectedAlbumChangedEv'; null; 2"/>
		<bind name="catch" value="'selectedAlbumChangedEv'; { needRepeatUpdate: true }"/>
		<bind name="dispatch" value="'selectedAlbumChangedEv'; 'selectedAlbumChangedDelayed'; {}; 2; 0.1"/>
		<bind name="catch" value="'selectedAlbumChangedDelayed'; { needRepeatUpdate: false }"/>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 1 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 1 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="BlurMapCustom">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap_half_sphere" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
				<block className="gradient_half_sphere" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 1 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
					<bind name="appear" value="'startHide'; 0.15; 1 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
					<style>
						<width value="1280:650,1920:1060aw"/>
						<height value="720:400,1080:700ah"/>
					</style>
					<bind name="appear" value="'_selectedAlbumID' + varChanged; 0.2; 0.2; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
					<block>
						<styleClass value="$MiddleAligned"/>
						<styleClass value="$MiddleVAligned"/>
						<bind name="appear" value="'collectionPageID' + varChanged; 0.15; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
						<bind name="instance" value="'CardsCollectionRepeat'; needRepeatUpdate ? null : { 	_layoutItems: currentCollectionCards.length,
																							_currentCollectionCards: currentCollectionCards, 
																							_collectionPageID: collectionPageID}"/>
					</block>
					<block>
						<styleClass value="$MiddleAligned"/>
						<style>
							<position value="absolute"/>
							<bottom value="-30px"/>
						</style>
						<bind name="visible" value="subAlbums.length &gt; 0"/>
						<bind name="repeat" value="subAlbums; 'RadioButtonControl'; { _collectionPageID: collectionPageID }"/>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
				<block>
					<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
					<bind name="appear" value="'startHide'; 0.15; 2 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
					<bind name="appear" value="'_selectedAlbumID' + varChanged; 0.2; 0.2; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
					<style>
						<position value="absolute"/>
						<right value="10px"/>
					</style>
					<block>
						<style>
							<width value="1280:250,1920:340aw"/>
							<height value="720:400,1080:700ah"/>
						</style>
						<bind name="instance" value="'CollectionDescription'; { _collectionID: _selectedAlbumID, _collectionPageID: collectionPageID, _selectedAlbumID: _selectedAlbumID }"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="CardsCollectionRepeat">
		<style>
			<flow value="htile"/>
			<align value="center"/>
		</style>
		<bind name="style" value="'width';	_layoutItems &lt;= 4	?	smallResolution		? '388px' :
													mediumResolution	? '440px' 
																		: '560px'
												:

							_layoutItems &lt;= 6	?	smallResolution		? '582px' :
													mediumResolution	? '660px' 
																		: '840px'
												: '1280:650,1920:1060aw' "/>
		<bind name="stageSize"/>
		<bind name="watch" value="'smallResolution';		(stageWidth &lt;= 1300) || (stageHeight &lt; 960)"/>
		<bind name="watch" value="'mediumResolution';	(stageWidth &gt; 1300) &amp;&amp; (stageWidth &lt; 1700) &amp;&amp; (stageHeight &gt;= 960)"/>
		<bind name="watch" value="'normalResolution';	(stageWidth &gt; 1700) &amp;&amp; (stageHeight &gt;= 960)"/>
		<bind name="watch" value="'resolutionGrade';	smallResolution		? 'smallResolution' :
									mediumResolution	? 'mediumResolution'
														: 'normalResolution' "/>
		<bind name="repeat" value="_currentCollectionCards; 'CollectionCardItem'; {	_collectionPageID: _collectionPageID,
																	_bigCards: _layoutItems &lt;= 6,
																	_resolutionGrade: resolutionGrade }"/>
	</block>
	<block className="CollectionCarouselItem">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="dataRefDH" value="'collectionEntity'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'id';					['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.id"/>
		<bind name="watchDH" value="'name';					['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.name"/>
		<bind name="watchDH" value="'comingSoon';			['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.comingSoon"/>
		<bind name="watchDH" value="'inSubscription';		['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.inSubscription"/>
		<bind name="watchDH" value="'subscriptionEnable';	['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.subscriptionEnable"/>
		<bind name="watchDH" value="'isFull';				['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.isFull"/>
		<bind name="watchDH" value="'startTimeDescription';	['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.startTimeDescription"/>
		<bind name="watchDH" value="'endTimeDescription';	['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.endTimeDescription"/>
		<bind name="watchDH" value="'hasTimeLimits';			['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.hasTimeLimits"/>
		<bind name="timeFormat" value="startTimeDescription; 'dd.MM'; 'formattedStartTime'; true"/>
		<bind name="timeFormat" value="endTimeDescription; 	'dd.MM'; 'formattedEndTime'; true"/>
		<block>
			<style>
				<width value="150px"/>
				<height value="120px"/>
				<backgroundColor value="0x01000000"/>
			</style>
			<bind name="soundSet" value="'default_button'"/>
			<bind name="watch" value="'collectionNameQuotes'; (tr('IDS_' +  toUpperCase(name) + '_QUOTES'))"/>
			<bind name="tooltip" value="'SimpleTooltip'; !hasTimeLimits || isFull ? { tooltipText: comingSoon ? 'IDS_TOOLTIP_LEVEL_COMING_SOON' : subst('IDS_COLLECTION_NAME', [], { _collectionName: collectionNameQuotes })}
																: null"/>
			<bind name="tooltip" value="'SubTextTooltip'; (!isFull &amp;&amp; hasTimeLimits) ? 	{tooltipText: 	subst('IDS_COLLECTION_NAME', [], { _collectionName: collectionNameQuotes }), 
																		tooltipSubText: subst('IDS_COLLECTION_TIMER', [], { _collectionName: collectionNameQuotes, _formattedStartTime: formattedStartTime, _formattedEndTime: formattedEndTime })
																		} 
																	: null"/>
			<bind name="action" value="'click'; comingSoon ? null : 'goToReward'; {	type: 'Lootbox', subtype: name, subAlbum: -1 }"/>
			<bind name="transition" value="(id == _selectedAlbumID); 0.1; { scaleX: 0.8, scaleY: 0.8, top: 15, left: 15 }; { scaleX: 1, scaleY: 1, top: 0, left: 0 }"/>
			<block>
				<styleClass value="$Fullsize"/>
				<bind name="style" value="'alpha'; comingSoon ? 0.7 : 1"/>
				<bind name="style" value="'backgroundImage'; comingSoon 	? 'url:../collections/collection_icons/small/key_coming_soon.png'
														: 'url:../collections/collection_icons/small/' + name + '_disabled.png'"/>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="fade" value="(subscriptionEnable &amp;&amp; (inSubscription || isFull)) || !(subscriptionEnable); 0.1; {alpha: 0}; {alpha: 1}; {alpha: 0}"/>
				<bind name="style" value="'backgroundImage'; 'url:../collections/collection_icons/small/' + name + '.png'"/>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="transition" value="rollOver &amp;&amp; !comingSoon; 0.15; {alpha: 0}; {alpha: 1}"/>
				<bind name="style" value="'backgroundImage'; subscriptionEnable 	? (inSubscription || isFull) 	? 'url:../collections/collection_icons/small/' + name + '_over.png'
																								: 'url:../collections/collection_icons/small/' + name + '_disabled_over.png'
																: 'url:../collections/collection_icons/small/' + name + '_over.png'"/>
			</block>
			<block>
				<bind name="visible" value="isFull"/>
				<style>
					<position value="absolute"/>
					<top value="35%"/>
					<left value="35%"/>
					<alpha value="0.9"/>
					<hitTest value="false"/>
				</style>
				<block className="icon_issued" type="native">
					<bind name="scaleX" value="0.8"/>
					<bind name="scaleY" value="0.8"/>
					<bind name="rotation" value="-3"/>
					<bind name="gotoAndStop!" value="'issued'"/>
					<innerBind elementName="item.item" name="text" value="toUpperCase(tr('IDS_COLLECTION_FULL_STAMP'))"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="watchDH" value="'newCardsCounter';['collectionEntity.newItem.evCountChanged']; collectionEntity.newItem.count"/>
			<bind name="fade" value="(!comingSoon &amp;&amp; (newCardsCounter &gt; 0)); 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<style>
				<position value="absolute"/>
				<right value="0px"/>
				<top value="0px"/>
			</style>
			<bind name="instance" value="'MarkerNewCounter'; { _newContentCounter: newCardsCounter }"/>
		</block>
		<block>
			<bind name="fade" value="(id == _selectedAlbumID); 0.1; {alpha: 0}; {alpha: 1}"/>
			<style>
				<marginTop value="14px"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<block>
				<style>
					<position value="absolute"/>
					<bottom value="0px"/>
					<height value="20px"/>
					<width value="100%"/>
				</style>
				<block className="BlurMapCustom">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap_empty" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
			</block>
			<block className="scroll_arrow" type="native"/>
		</block>
	</block>
	<block className="CollectionCardItem">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="primaryEntityDH" value="'collectionCardEntity'; CC.collectionCard; $value"/>
		<bind name="primaryEntityDH" value="'collectionEntity'; CC.collectionAlbum; collectionId"/>
		<bind name="entityDH" value="'subCollectionEntity'; _collectionPageID"/>
		<bind name="watch" value="'isSeen';	collectionCardEntity.newItem == null"/>
		<bind name="watchDH" value="'name';						['collectionCardEntity.collectionCard.evUpdate']; collectionCardEntity.collectionCard.name"/>
		<bind name="watchDH" value="'collectionId';				['collectionCardEntity.collectionCard.evUpdate']; collectionCardEntity.collectionCard.collectionId"/>
		<bind name="watchDH" value="'isOwned';					['collectionCardEntity.collectionCard.evOwn']; collectionCardEntity.collectionCard.isOwned"/>
		<bind name="watchDH" value="'unPastedCardIndex';			['collectionEntity.collectionAlbum.evUnPastedCardIndexChanged']; collectionEntity.collectionAlbum.unPastedCardIndex"/>
		<bind name="watchDH" value="'congratulationShown';		['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.congratulationShown"/>
		<bind name="watchDH" value="'unPastedCardIndexSubColl';	['subCollectionEntity.collectionSubAlbum.evUnPastedCardIndexChanged']; subCollectionEntity.collectionSubAlbum.unPastedCardIndex"/>
		<bind name="watchDH" value="'cardsSubCollection';		['subCollectionEntity.collectionSubAlbum.evUpdate']; subCollectionEntity.collectionSubAlbum.cards"/>
		<bind name="watchDH" value="'congratulationShownSubColl';['subCollectionEntity.collectionSubAlbum.evUpdate']; subCollectionEntity.collectionSubAlbum.congratulationShown"/>
		<bind name="dispatch" value="'addedToStage'; ($value == unPastedCardIndex) || ($value == unPastedCardIndexSubColl) ? 'startFlameAnimation' : null; { flameStarted: true }; 2; 0.2"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'inset'; ['dockEntity.insetComponent.evUpdate']; dockEntity.insetComponent.inset"/>
		<bind name="primaryEntityDH" value="'pageEntity'; CC.insetPage; LobbyConstants.PLAYER_PROFILE"/>
		<bind name="watchDH" value="'page'; ['pageEntity.insetPage.evUpdate']; pageEntity.insetPage.page"/>
		<bind name="watch" value="'isOnScreen'; (inset == LobbyConstants.PLAYER_PROFILE &amp;&amp; page == LobbyConstants.PLAYER_PROFILE_COLLECTIONS)"/>
		<bind name="dispatch" value="'unPastedCardIndex' 		+ varChanged; (($value == unPastedCardIndex) &amp;&amp; isOnScreen) 		? 'startFlameAnimation' : null; { flameStarted: true }; 2; 0.2"/>
		<bind name="dispatch" value="'unPastedCardIndexSubColl' 	+ varChanged; (($value == unPastedCardIndexSubColl) &amp;&amp; isOnScreen) 	? 'startFlameAnimation' : null; { flameStarted: true }; 2; 0.2"/>
		<bind name="soundOn" value="'startFlameAnimation'; 'collection_paste'; 'collection_soundset'"/>
		<bind name="catch" value="'startUnglowAnimation'"/>
		<bind name="catch" value="'startFlameAnimation'"/>
		<bind name="var" value="{ unglowStarted: false }"/>
		<bind name="var" value="{ flameStarted: false }"/>
		<bind name="stageSize"/>
		<bind name="watch" value="'cardMargins';		_resolutionGrade == 'smallResolution'	? _bigCards 	? '12px' : '10px' :
									_resolutionGrade == 'mediumResolution' 	? _bigCards 	? '16px' : '12px' :
									_resolutionGrade == 'normalResolution' 	? _bigCards 	? '20px' : '16px'
																			: _bigCards 	? '20px'
																			: '20px'"/>
		<bind name="watch" value="'cardSizeSmall'; 	_resolutionGrade == 'smallResolution'	? '80px' :
									_resolutionGrade == 'mediumResolution' 	? '90px' :
									_resolutionGrade == 'normalResolution' 	? '100px'
																			: '120px'"/>
		<bind name="watch" value="'cardSizeBig'; 	_resolutionGrade == 'smallResolution'	? '170px' :
									_resolutionGrade == 'mediumResolution'	? '180px' :
									_resolutionGrade == 'normalResolution' 	? '220px'
																			: '220px'"/>
		<bind name="watch" value="'cardSize'; _bigCards ? cardSizeBig : cardSizeSmall"/>
		<bind name="name" value="isSeen ? 'card_pasted_' + name : 'card_' + name"/>
		<bind name="soundSet" value="'default_button'"/>
		<bind name="tooltip" value="'CollectionCardItemTooltip'; { _objID: $value }"/>
		<bind name="request" value="'click'; isOwned 	? isSeen 	? 'showPreviewWindow' 
													: null
										: 'buyObjectWindow'; { objID: $value }"/>
		<bind name="style" value="'width';  cardSize"/>
		<bind name="style" value="'height'; cardSize"/>
		<bind name="style" value="'marginTop'; 		cardMargins"/>
		<bind name="style" value="'marginBottom';	cardMargins"/>
		<bind name="style" value="'marginLeft'; 		cardMargins"/>
		<bind name="style" value="'marginRight'; 	cardMargins"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundSize value="cover"/>
			</style>
			<bind name="style" value="'backgroundImage'; ((isSeen || unglowStarted) &amp;&amp; isOwned) 	? 'url:../collections/object_icons/small/' + name + '.png'
																				: 'url:../collections/object_icons/small/' + name + '_des.png'"/>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundSize value="cover"/>
			</style>
			<bind name="transition" value="rollOver &amp;&amp; isSeen; 0.15; {alpha: 0}; {alpha: 0.1}"/>
			<bind name="style" value="'backgroundImage'; 'url:../collections/object_icons/small/' + name + '_over.png'"/>
		</block>
		<block>
			<bind name="visible" value="flameStarted == true"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundSize value="cover"/>
				<alpha value="0.7"/>
			</style>
			<bind name="appear" value="'addedToStage'; 0; 0; {alpha: 0.7}; {alpha: 0.7}"/>
			<bind name="appear" value="'startUnglowAnimation'; 0.2; 0; {alpha: 0.7}; {alpha: 0}"/>
			<bind name="style" value="'backgroundImage'; 'url:../collections/object_icons/small/' + name + '_over.png'"/>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<position value="absolute"/>
				<hitTest value="false"/>
			</style>
			<block className="sparks_collection_animation" type="native">
				<bind name="scaleX" value="_bigCards ? 1.6 : 1"/>
				<bind name="scaleY" value="_bigCards ? 1.6 : 1"/>
				<bind name="gotoAndPlay!" value="(flameStarted == true) ? 'unpasted-pasted' : 'unpasted'"/>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<position value="absolute"/>
				<hitTest value="false"/>
			</style>
			<block className="flame_collection_animation" type="native">
				<bind name="scaleX" value=" _bigCards ? 1.6 : 1"/>
				<bind name="scaleY" value=" _bigCards ? 1.6 : 1"/>
				<bind name="dispatch" value="'startUnglowAnimationTL'; 'startUnglowAnimation'; { unglowStarted: true }; 2"/>
				<bind name="action" value="'pasteCardAnimationFinishedTL'; 'makeSeen'; { entityId: collectionCardEntity.id }"/>
				<bind name="catch" value="'pasteCardAnimationFinishedTL'; { flameStarted: false, unglowStarted: false }"/>
				<bind name="gotoAndPlay!" value="(flameStarted == true) ? 'unpasted-pasted' : 'unpasted'"/>
			</block>
		</block>
		<block>
			<bind name="fade" value="!isSeen; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<style>
				<position value="absolute"/>
				<right value="0px"/>
				<top value="0px"/>
			</style>
			<bind name="instance" value="'MarkerNewAttention'; { }"/>
		</block>
		<bind name="handleEventDH" value="'collectionEntity.collectionAlbum.evFull'; 'haveAllCards'"/>
		<bind name="request" value="'haveAllCards'; (congratulationShown == true) ? null : 'openCongratulationWindowCollection'; { collectionID: collectionId }"/>
		<bind name="handleEventDH" value="'subCollectionEntity.collectionSubAlbum.evFull'; 'haveAllCardsSub'"/>
		<bind name="request" value="'haveAllCardsSub'; (congratulationShownSubColl == true) ? null : 'openCongratulationWindowSubAlbum'; { collectionID: collectionId, collectionPageID: _collectionPageID }"/>
	</block>
	<block className="CollectionCardItemTooltip">
		<bind name="primaryEntityDH" value="'collectionCardEntity'; CC.collectionCard; _objID"/>
		<bind name="watchDH" value="'name';			[]; collectionCardEntity.collectionCard.name"/>
		<bind name="watchDH" value="'collectionId';	[]; collectionCardEntity.collectionCard.collectionId"/>
		<bind name="watchDH" value="'collectionName';[]; collectionCardEntity.collectionCard.collectionName"/>
		<bind name="watchDH" value="'isOwned';		['collectionCardEntity.collectionCard.evOwn']; collectionCardEntity.collectionCard.isOwned"/>
		<bind name="watch" value="'collectionNameQuotes'; (tr('IDS_' +  toUpperCase(collectionName) + '_QUOTES'))"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="330px"/>
			<hitTest value="false"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block className="GUIContrast">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="contrast_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<block>
				<style>
					<backgroundSize value="cover"/>
					<width value="120px"/>
					<height value="120px"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:../collections/object_icons/small/' + name + '.png'"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="12px"/>
				</style>
				<block type="text">
					<style>
						<maxWidth value="180"/>
					</style>
					<styleClass value="$TextHeaderBoldadsdasdas"/>
					<bind name="class" value="isOwned ? '$FontColorGolden' : '$None'"/>
					<bind name="text" value="toUpperCase(tr('IDS_' + name))"/>
				</block>
				<block type="text">
					<style>
						<maxWidth value="180"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="text" value="subst('IDS_COLLECTION_NAME', [], { _collectionName: collectionNameQuotes })"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="isOwned == true"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<block className="icon_module_state" type="native">
					<styleClass value="$MiddleVAligned"/>
					<bind name="gotoAndStop!" value="'installed'"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorGolden'"/>
					<text value="IDS_ACHIEVED"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="isOwned == false"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<block className="icon_warning_orange" type="native">
					<styleClass value="$MiddleVAligned"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorUnready'"/>
					<text value="IDS_NOT_ACHIEVED"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'MouseInstruction'; {_type: 'left', _instructionText: isOwned ? 'IDS_GO_TO_OBJECT_SCREEN' : 'IDS_BUY_COLLECTION_FOR_DUPLICATE', _maxWidth: 286}"/>
		</block>
	</block>
	<block className="CollectionDescription">
		<bind name="primaryEntityDH" value="'collectionEntity'; CC.collectionAlbum; _collectionID"/>
		<bind name="entityDH" value="'subCollectionEntity'; subAlbums"/>
		<bind name="watchDH" value="'subAlbums';		[]; collectionEntity.collectionAlbum.subAlbums"/>
		<bind name="watchDH" value="'name';			[]; collectionEntity.collectionAlbum.name"/>
		<bind name="watchDH" value="'description';	[]; collectionEntity.collectionAlbum.description"/>
		<bind name="watchDH" value="'duplicates';	['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.duplicates"/>
		<bind name="watch" value="'collectionNameQuotes'; (tr('IDS_' +  toUpperCase(name) + '_QUOTES'))"/>
		<bind name="watchDH" value="'isFull';				['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.isFull"/>
		<bind name="watchDH" value="'startTimeDescription';	['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.startTimeDescription"/>
		<bind name="watchDH" value="'endTimeDescription';	['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.endTimeDescription"/>
		<bind name="watchDH" value="'hasTimeLimits';			['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.hasTimeLimits"/>
		<bind name="timeFormat" value="startTimeDescription; 'dd.MM'; 'formattedStartTime'; true"/>
		<bind name="timeFormat" value="endTimeDescription; 	'dd.MM'; 'formattedEndTime'; true"/>
		<styleClass value="$Fullsize"/>
		<bind name="stageSize"/>
		<block type="text">
			<styleClass value="$TextAccentBold"/>
			<styleClass value="$CollectionMarginTop"/>
			<style>
				<maxWidth value="320"/>
				<leading value="-4"/>
			</style>
			<bind name="text" value="subst('IDS_COLLECTION_NAME', [], { _collectionName: collectionNameQuotes })"/>
		</block>
		<block>
			<style>
				<marginTop value="15px"/>
			</style>
			<bind name="watchDH" value="'subscriptionEnable';	['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.subscriptionEnable"/>
			<bind name="visible" value="subscriptionEnable &amp;&amp; !isFull"/>
			<bind name="instance" value="'SubscriptionSwitcher'; { _selectedAlbumID: _selectedAlbumID }"/>
		</block>
		<block>
			<bind name="visible" value="!isFull &amp;&amp; hasTimeLimits"/>
			<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: subst('IDS_COLLECTION_TIMER', [], { _collectionName: collectionNameQuotes, _formattedStartTime: formattedStartTime, _formattedEndTime: formattedEndTime}) }; 0"/>
			<block type="text">
				<styleClass value="$TextAccentBold"/>
				<style>
					<maxWidth value="250"/>
					<leading value="-4"/>
					<alpha value="0.7"/>
				</style>
				<bind name="text" value="formattedStartTime + '–' + formattedEndTime"/>
			</block>
		</block>
		<block>
			<styleClass value="$CollectionMarginTop"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'CollectionRewardAndProgress'; { _collectionID: _collectionID }"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<height value="100%f"/>
			</style>
			<styleClass value="$CollectionMarginTop"/>
			<block>
				<styleClass value="$DefaultScrollBar"/>
				<style>
					<overflow value="scroll"/>
					<width value="100%"/>
					<height value="100%f"/>
				</style>
				<block type="text">
					<bind name="style" value="'maxWidth'; (stageWidth &gt;= 1600) ? '330' : '240'"/>
					<bind name="class" value="(stageWidth &gt;= 1600) ? '$TextHeaderBigDefault' : '$TextDefault'"/>
					<bind name="text" value="description"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="appear" value="'_collectionPageID' + varChanged; 0.15; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<bind name="visible" value="subAlbums.length &gt; 0"/>
			<styleClass value="$CollectionMarginTop"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<marginBottom value="10px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'SubCollectionRewardAndProgress'; { _collectionID: _collectionID, _collectionPageID: _collectionPageID }"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="10px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="CollectionRewardAndProgress">
		<bind name="primaryEntityDH" value="'collectionEntity'; CC.collectionAlbum; _collectionID"/>
		<bind name="watchDH" value="'rewards';		['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.rewards"/>
		<bind name="watchDH" value="'duplicates';	['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.duplicates"/>
		<bind name="watchDH" value="'ownCards';		['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.ownCards"/>
		<bind name="watchDH" value="'cards';			['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.cards"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$TextHeaderBigDefault"/>
				<style>
					<marginTop value="1px"/>
					<marginRight value="5px"/>
				</style>
				<bind name="text" value="'IDS_COLLECTION_CARDS_AMOUNT'"/>
			</block>
			<bind name="instance" value="'ScoreRatioCounter'; { 	_playerPointsCounter: ownCards.length, 
												_totalPointsCounter: cards.length,
												_tooltipTextPlayerResult: 'IDS_COLLECTION_PLAYAER_POINTS_COUNTER',
												_tooltipTextTotalResult: 'IDS_COLLECTION_TOTAL_POINTS_COUNTER' }"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="-3px"/>
			</style>
			<block type="text">
				<styleClass value="$TextHeaderBigDefault"/>
				<style>
					<marginTop value="3px"/>
					<marginRight value="5px"/>
				</style>
				<bind name="text" value="'IDS_DUPLICATES'"/>
			</block>
			<block type="text">
				<style>
					<marginTop value="1px"/>
				</style>
				<styleClass value="$TextHeaderWhiteBold"/>
				<bind name="text" value="duplicates"/>
			</block>
			<block>
				<style>
					<marginTop value="3px"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:../collections/duplicate_icons/duplicate_medium.png'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="tooltip" value="'RewardContainerTooltip'; { _rewards: rewards, _tooltipHeader: 'IDS_REWARD_FOR_COLLECTION', _isDH20: true}"/>
			<style>
				<right value="0px"/>
				<marginTop value="-6px"/>
				<position value="absolute"/>
			</style>
			<block className="icon_giftbox" type="native">
				<bind name="scaleY" value="0.7"/>
				<bind name="scaleX" value="0.7"/>
			</block>
			<block>
				<bind name="visible" value="ownCards.length == cards.length"/>
				<style>
					<position value="absolute"/>
					<top value="55%"/>
					<left value="50%"/>
					<hitTest value="false"/>
				</style>
				<block className="icon_issued" type="native">
					<bind name="rotation" value="-2"/>
					<innerBind elementName="item.item" name="text" value="'IDS_ISSUED_STAMP'"/>
					<bind name="gotoAndStop!" value="'issued'"/>
				</block>
			</block>
		</block>
	</block>
	<block className="SubCollectionRewardAndProgress">
		<bind name="primaryEntityDH" value="'collectionEntity'; CC.collectionAlbum; _collectionID"/>
		<bind name="entityDH" value="'subCollectionEntity'; _collectionPageID"/>
		<bind name="watchDH" value="'cards';		['collectionEntity.collectionAlbum.evUpdate']; subCollectionEntity.collectionSubAlbum.cards"/>
		<bind name="watchDH" value="'ownCards';	['collectionEntity.collectionAlbum.evUpdate']; subCollectionEntity.collectionSubAlbum.ownCards"/>
		<bind name="watchDH" value="'name';		[]; subCollectionEntity.collectionSubAlbum.name"/>
		<bind name="watchDH" value="'rewards';	[]; subCollectionEntity.collectionSubAlbum.rewards"/>
		<style>
			<width value="100%"/>
			<flow value="horizontal"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<style>
					<width value="100%"/>
				</style>
				<styleClass value="$TextLargeHeaderBold"/>
				<bind name="text" value="name"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<styleClass value="$TextHeaderBigDefault"/>
					<style>
						<marginTop value="1px"/>
						<marginRight value="5px"/>
					</style>
					<bind name="text" value="'IDS_COLLECTION_CARDS_AMOUNT'"/>
				</block>
				<block>
					<bind name="instance" value="'ScoreRatioCounter'; { 	_playerPointsCounter: ownCards.length, 
														_totalPointsCounter: cards.length,
														_tooltipTextPlayerResult: 'IDS_COLLECTION_PLAYAER_POINTS_COUNTER',
														_tooltipTextTotalResult: 'IDS_COLLECTION_TOTAL_POINTS_COUNTER' }"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<bind name="tooltip" value="'RewardContainerTooltip'; { _rewards: rewards, _tooltipHeader: 'IDS_REWARD_FOR_SUBCOLLECTION', _isDH20: true}"/>
			<style>
				<marginLeft value="8px"/>
			</style>
			<styleClass value="$MiddleVAligned"/>
			<block className="icon_giftbox_small" type="native"/>
			<block>
				<bind name="visible" value="ownCards.length == cards.length"/>
				<style>
					<position value="absolute"/>
					<top value="55%"/>
					<left value="50%"/>
					<hitTest value="false"/>
				</style>
				<block className="icon_issued_small" type="native">
					<bind name="rotation" value="-2"/>
					<bind name="scaleX" value="0.9"/>
					<bind name="scaleY" value="0.9"/>
					<innerBind elementName="item.item" name="text" value="'IDS_ISSUED_STAMP'"/>
					<bind name="gotoAndStop!" value="'issued'"/>
				</block>
			</block>
		</block>
	</block>
	<block className="SubscriptionSwitcher">
		<bind name="primaryEntityDH" value="'collectionEntity'; CC.collectionAlbum; _selectedAlbumID"/>
		<bind name="watchDH" value="'inSubscription';		['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.inSubscription"/>
		<bind name="watchDH" value="'subscriptionEnable';	['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.subscriptionEnable"/>
		<block className="tab_bar_bg" type="native">
			<block>
				<style>
					<marginLeft value="2px"/>
					<marginRight value="2px"/>
				</style>
				<block>
					<style>
						<position value="absolute"/>
					</style>
					<block>
						<style>
							<position value="absolute"/>
						</style>
						<bind name="transition" value="inSubscription == false; 0.2; {x: 0}; {x: 102}; {x: 0}; 2; 0.2"/>
						<bind name="fade" value="inSubscription == false; 0.2; {alpha: 1}; {alpha: 0}; {alpha: 0}; 0; 0.2"/>
						<block className="status_transition_element" type="native">
							<style>
								<marginTop value="2px"/>
								<position value="absolute"/>
								<height value="23px"/>
							</style>
						</block>
					</block>
					<block>
						<style>
							<position value="absolute"/>
						</style>
						<bind name="transition" value="inSubscription == true; 0.2; {x: 102}; {x: 0}; {x: 102}; 2; 0.2"/>
						<bind name="fade" value="inSubscription == true; 0.2; {alpha: 1}; {alpha: 0}; {alpha: 0}; 0; 0.2"/>
						<block className="status_transition_element" type="native">
							<style>
								<marginTop value="2px"/>
								<position value="absolute"/>
								<height value="23px"/>
							</style>
						</block>
					</block>
				</block>
				<block>
					<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
					<bind name="watchDH" value="'operationsAccountLocked';	['resourceEntity.accountResource.evOperationsLockChanged'];	resourceEntity.accountResource.operationsLocked"/>
					<bind name="style" value="'hitTest'; operationsAccountLocked ? false : true"/>
					<block className="status_ready_item" type="native">
						<style>
							<width value="120px"/>
							<height value="27px"/>
						</style>
						<bind name="style" value="'colorMatrixFilter'; !subscriptionEnable ? '0 -100 0 0' : '0 0 0 0'"/>
						<bind name="action" value="'buttonClick'; (operationsAccountLocked || (inSubscription == true)) ? null : 'CollectionProxy.changeAlbumSubscription'; { albumID: _selectedAlbumID }"/>
						<bind name="selected" value="inSubscription == true"/>
						<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_START_COLLECTING' }; 0"/>
						<bind name="label" value="inSubscription == true ? toUpperCase(tr('IDS_COLLECTING')) : toUpperCase(tr('IDS_COLLECT'))"/>
					</block>
					<block className="divider_v" type="native">
						<style>
							<height value="27px"/>
						</style>
					</block>
					<block className="status_not_ready_item" type="native">
						<style>
							<width value="120px"/>
							<height value="27px"/>
						</style>
						<bind name="action" value="'buttonClick'; (operationsAccountLocked || (inSubscription == false)) ? null : 'CollectionProxy.stopAlbumSubscription'; {}"/>
						<bind name="selected" value="inSubscription == false"/>
						<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_STOP_COLLECTING' }; 0"/>
						<bind name="label" value="inSubscription == false ? toUpperCase(tr('IDS_NO_COLLECTING')): toUpperCase(tr('IDS_DO_NOT_COLLECT'))"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="RadioButtonControl">
		<bind name="dataRefDH" value="'collectionPageButtonID'; '$dataRef.ref'"/>
		<bind name="entityDH" value="'subCollectionEntity'; collectionPageButtonID"/>
		<bind name="watchDH" value="'albumId'; ['subCollectionEntity.collectionSubAlbum.evUpdate']; subCollectionEntity.collectionSubAlbum.albumID"/>
		<bind name="primaryEntityDH" value="'collectionEntity'; CC.collectionAlbum; albumId"/>
		<bind name="watchDH" value="'albumName'; ['collectionEntity.collectionAlbum.evUpdate']; collectionEntity.collectionAlbum.name"/>
		<bind name="action" value="'click'; 'goToReward'; {type: 'Lootbox', subtype: albumName, subAlbum: $index}"/>
		<style>
			<marginLeft value="12px"/>
			<marginRight value="12px"/>
		</style>
		<block className="radiobutton_notext_big" type="native">
			<bind name="selected" value="collectionPageButtonID == _collectionPageID"/>
		</block>
		<block>
			<bind name="watchDH" value="'newCardsCounter'; ['subCollectionEntity.newItem.evCountChanged']; subCollectionEntity.newItem.count"/>
			<bind name="fade" value="(newCardsCounter &gt; 0); 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<style>
				<position value="absolute"/>
				<right value="-12px"/>
				<top value="-8px"/>
			</style>
			<bind name="instance" value="'MarkerNewCounter'; { _newContentCounter: newCardsCounter }"/>
		</block>
	</block>
	<block className="BranchTypeLabel">
		<style>
			<position value="absolute"/>
			<width value="1px"/>
		</style>
		<bind name="left" value="x * 84"/>
		<bind name="width" value="164"/>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<backgroundColor value="0x01000000"/>
			</style>
			<bind name="watch" value="'shipType';	nameIDS == 'IDS_DESTROYER'	? 'Destroyer' :
									nameIDS == 'IDS_CARRIER'	? 'AirCarrier' :
									nameIDS == 'IDS_CRUISER'	? 'Cruiser' :
									nameIDS == 'IDS_BATTLESHIP'	? 'BattleShip'
																: 'premiumShip' "/>
			<bind name="watch" value="'shipDescriptionText'; nameIDS != 'IDS_PREMIUM' 	?	[{_paragraphText: (nameIDS + '_DESCRIPTION'), _leading: -2}] 
																		: 	
																			[{_paragraphText: (nameIDS + '_SHIP_DESCRIPTION_1'), _leading: -2},																			
																			{_paragraphText: 'IDS_PREMIUM_SHIP_DESCRIPTION_2', _leading: -2},
																			{_paragraphText: 'IDS_PREMIUM_SHIP_DESCRIPTION_3', _leading: -2},
																			{_paragraphText: 'IDS_PREMIUM_SHIP_DESCRIPTION_4', _leading: -2},
																			{_paragraphText: 'IDS_PREMIUM_SHIP_DESCRIPTION_5', _leading: -2}]"/>
			<bind name="watch" value="'brunchTitle'; (nameIDS + 'S')"/>
			<bind name="tooltip" value="'MultiParagraphHelpTooltip'; {_tooltipHeader: brunchTitle, _multiParagraphArray: shipDescriptionText, _iconType: 'ship', _shipType: shipType}"/>
			<block className="mc_icon_ship" type="native">
				<bind name="visible" value="shipType != 'premiumShip'"/>
				<style>
					<marginRight value="8px"/>
				</style>
				<styleClass value="$MiddleVAligned"/>
				<bind name="gotoAndStop!" value="shipType"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefaultBoldNM"/>
				<bind name="class" value="(nameIDS == 'IDS_PREMIUM' ? '$FontColorGolden' : '$None')"/>
				<bind name="text" value="brunchTitle"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="BranchTypeLabelDark">
		<style>
			<position value="absolute"/>
			<width value="1px"/>
		</style>
		<bind name="left" value="x * $parent.blockWidth"/>
		<bind name="width" value="$parent.blocHalfWidth * 2"/>
		<bind name="class" value="_noMiddle == true ? null : '$MiddleVAligned'"/>
		<block>
			<bind name="class" value="_noMiddle == true ? null : '$MiddleAligned'"/>
			<block type="text">
				<styleClass value="$TextSecondary"/>
				<style>
					<position value="absolute"/>
					<maxWidth value="110"/>
					<textAlign value="center"/>
					<alpha value="0.35"/>
					<top value="1px"/>
				</style>
				<bind name="text" value="nameIDS"/>
			</block>
			<block type="text">
				<styleClass value="$TextSecondary"/>
				<style>
					<position value="absolute"/>
					<maxWidth value="110"/>
					<textAlign value="center"/>
					<alpha value="0.1"/>
					<top value="-1px"/>
				</style>
				<bind name="text" value="nameIDS"/>
			</block>
			<block type="text">
				<styleClass value="$TextSecondary"/>
				<style>
					<position value="absolute"/>
					<maxWidth value="110"/>
					<textAlign value="center"/>
					<alpha value="0.15"/>
					<left value="1px"/>
				</style>
				<bind name="text" value="nameIDS"/>
			</block>
			<block type="text">
				<styleClass value="$TextSecondary"/>
				<style>
					<position value="absolute"/>
					<maxWidth value="110"/>
					<textAlign value="center"/>
					<alpha value="0.15"/>
					<left value="-1px"/>
				</style>
				<bind name="text" value="nameIDS"/>
			</block>
			<block type="text">
				<styleClass value="$TextSecondary"/>
				<style>
					<maxWidth value="110"/>
					<textAlign value="center"/>
				</style>
				<bind name="text" value="nameIDS"/>
			</block>
			<block type="text">
				<styleClass value="$TextSecondary"/>
				<style>
					<position value="absolute"/>
					<maxWidth value="110"/>
					<textAlign value="center"/>
				</style>
				<bind name="text" value="nameIDS"/>
			</block>
		</block>
	</block>
	<block className="CurrentFreeXP">
		<styleClass value="$InfoLineBoundaries"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<params>
			<param name="name" value="upgrade_tree_CurrentFreeXP"/>
		</params>
		<block type="text">
			<styleClass value="$TextHeaderBigDefault"/>
			<bind name="class" value="'$FontColorBlueish'"/>
			<styleClass value="$MiddleVAligned"/>
			<bind name="text" value="_label"/>
		</block>
		<block type="text">
			<styleClass value="$TextDefaultBold"/>
			<styleClass value="$MiddleVAligned"/>
			<bind name="class" value="'$FontSizeLarge'"/>
			<bind name="class" value="'$FontColorFreeExp'"/>
			<bind name="text" value="format(_freeXP, -1)"/>
		</block>
		<block className="icon_exp_free" type="native">
			<style>
				<marginBottom value="-2px"/>
			</style>
			<styleClass value="$MiddleVAligned"/>
		</block>
	</block>
	<block className="CurrentXP">
		<styleClass value="$InfoLineBoundaries"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<params>
			<param name="name" value="upgrade_tree_CurrentShipXP"/>
		</params>
		<block type="text">
			<styleClass value="$TextHeaderBigDefault"/>
			<styleClass value="$MiddleVAligned"/>
			<bind name="class" value="_light ? '$None' : '$FontColorBlueish'"/>
			<bind name="class" value="_light ? '$None' : '$Bold'"/>
			<bind name="text" value="_label"/>
		</block>
		<block type="text">
			<styleClass value="$TextDefaultBold"/>
			<styleClass value="$MiddleVAligned"/>
			<bind name="class" value="'$FontSizeLarge'"/>
			<bind name="class" value="'$FontColorExp'"/>
			<bind name="text" value="format(_exp, -1)"/>
		</block>
		<block className="icon_exp" type="native">
			<style>
				<marginBottom value="-2px"/>
			</style>
			<styleClass value="$MiddleVAligned"/>
		</block>
	</block>
	<block className="CurrentXPLarge">
		<styleClass value="$InfoLineBoundaries"/>
		<style>
			<marginBottom value="-6px"/>
		</style>
		<params>
			<param name="name" value="upgrade_tree_CurrentShipXP"/>
		</params>
		<block>
			<block type="text">
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$TextLargeHeaderBold"/>
				<bind name="class" value="'$FontColorExp'"/>
				<bind name="text" value="format(_exp, -1)"/>
			</block>
			<block className="icon_exp" type="native">
				<styleClass value="$MiddleVAligned"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block type="text">
			<style>
				<marginTop value="2px"/>
				<alpha value="0.8"/>
			</style>
			<styleClass value="$TextDefaultWhite"/>
			<bind name="text" value="_label"/>
		</block>
	</block>
	<block className="StatusLineBig">
		<block>
			<block type="text">
				<style>
					<maxWidth value="300"/>
					<textAlign value="center"/>
				</style>
				<styleClass value="$TextHeader"/>
				<styleClass value="$MiddleVAligned"/>
				<bind name="class" value="_positive ? '$FontColorComparePositive' : '$FontColorUnready'"/>
				<bind name="text" value="_text"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="StatusLineMedium">
		<block type="text">
			<style>
				<maxWidth value="300"/>
				<textAlign value="center"/>
			</style>
			<styleClass value="$TextHeaderBigDefault"/>
			<bind name="class" value="'$FontColorUnready'"/>
			<bind name="text" value="_text"/>
		</block>
	</block>
	<block className="StatusLineWithIcon">
		<block>
			<block className="icon_warning_orange" type="native">
				<bind name="style" value="'top'; _small 	? '4'
										: _large ? '7' : '4'"/>
				<style>
					<marginRight value="2px"/>
				</style>
			</block>
			<block type="text">
				<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 264"/>
				<bind name="class" value="_large ? '$TextHeaderBigDefault' 
								:_small ? '$TextSecondary' : '$TextDefault'"/>
				<bind name="class" value="_positive ? '$FontColorComparePositive' : '$FontColorUnready'"/>
				<bind name="class" value="_bold ? '$Bold' : '$None'"/>
				<bind name="text" value="_text"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ModuleStatus">
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<bind name="instance" value="'ModuleStatusIcon'; _count.Installed &gt; 0								? { _state: 'installed' } :
											!(_isExplored) &amp;&amp; !(_isStock)						? { _state: 'action' } :
											(_count.Available &gt; 0) &amp;&amp; (_count.toPurchase &gt; 0)	? { _state: 'not_enough' }
																								: null "/>
		</block>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="_count.Installed &gt; 0 	? '$FontColorGolden'
												: _count.Available &gt; 0 	? '$FontColorWhite'
																		: _isExplored 	? '$FontColorUnready'
																						: _isStock 	? '$FontColorDefault'
																									: '$FontColorUnready'"/>
				<bind name="text" value="_count.Installed &gt; 0 	? 'IDS_INSTALLED'
												: _isExplored 	? 	(_count.Available &gt; 0 	? (_count.toPurchase &gt; 0 	? 'IDS_IN_STOCK_Q'
																														: 'IDS_IN_STOCK')
																							: 'IDS_NOT_PURCHASED'
																	)
																: _isStock 	? 'IDS_STOCK'
																			: 'IDS_NOT_RESEARCHED' "/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="_count.Installed &gt; 0 	? '$FontColorGolden'
												: _count.Available &gt; 0 	? '$FontColorWhite'
																		: _isExplored 	? '$FontColorDefault'
																						: '$FontColorExp'"/>
				<bind name="text" value="_count.Installed &gt; 0 	? ''
												: _isExplored	? 	((_count.Available &gt; 0) &amp;&amp; (_count.toPurchase &gt; 0) 	? _count.Available + 0
																														: ''
																	)
																: '' "/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorCompareNegative'"/>
				<style>
					<marginLeft value="3px"/>
				</style>
				<bind name="text" value="(_count.Available &gt; 0) &amp;&amp; (_count.toPurchase &gt; 0) 	? 'IDS_TO_BUY_Q'
																			: '' "/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorCompareNegative'"/>
				<bind name="text" value="(_count.Available &gt; 0) &amp;&amp; (_count.toPurchase &gt; 0) 	? _count.toPurchase
																			: '' "/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ModuleStatusIcon">
		<block className="icon_module_state" type="native">
			<bind name="gotoAndStop!" value="_state"/>
		</block>
	</block>
	<block className="ShipHeaderModuleTree">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'accountFreeXP';		['resourceEntity.accountResource.evChangedFreeXP'];	resourceEntity.accountResource.freeXP"/>
		<bind name="watchDH" value="'accountGold';		['resourceEntity.accountResource.evChangedGold'];	resourceEntity.accountResource.gold"/>
		<style>
			<flow value="horizontal"/>
			<width value="100%"/>
			<height value="34px"/>
		</style>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<top value="-5px"/>
			</style>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap_h_no_right" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
			<block className="inner_panel" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="tooltip" value="'ShipExtendedTooltip'; { shipId: _shipId }; 0"/>
			<style>
				<marginTop value="5px"/>
				<marginLeft value="3px"/>
			</style>
			<block className="icon_wreath" type="native">
				<styleClass value="$MouseDisable"/>
				<style>
					<position value="absolute"/>
					<top value="-6px"/>
				</style>
				<bind name="visible" value="_isElite || _isPremium || _uiSpecial"/>
				<bind name="gotoAndStop!" value="(shipInfo.isPremium || shipInfo.uiSpecial) 	? 'premium' : 'elite'"/>
			</block>
			<block className="icon_ship" type="native">
				<styleClass value="$MouseDisable"/>
				<style>
					<marginLeft value="5px"/>
					<marginTop value="2px"/>
				</style>
				<bind name="gotoAndStop!" value="_isPremium || _uiSpecial	? _subtype + '_P'
											: _unavailable 	? _subtype + '_U'
															: _subtype"/>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<marginLeft value="3px"/>
				</style>
				<bind name="class" value="_unavailable ? '$BlockGlowFilterBright' : '$GlowDisabler'"/>
				<block type="text">
					<styleClass value="$FontShipnameWhite"/>
					<style>
						<position value="absolute"/>
						<alpha value="0.25"/>
						<top value="1px"/>
					</style>
					<bind name="visible" value="_unavailable"/>
					<bind name="class" value="'$FontGlowFilterBright'"/>
					<bind name="style" value="'letterSpacing'; _letterSpacing ? _letterSpacing : '0'"/>
					<bind name="text" value="_levelRome + ' ' + tr(_shipName)"/>
				</block>
				<block type="text">
					<styleClass value="$FontShipnameWhite"/>
					<style>
						<position value="absolute"/>
						<alpha value="0.15"/>
						<top value="-1px"/>
					</style>
					<bind name="visible" value="_unavailable"/>
					<bind name="style" value="'letterSpacing'; _letterSpacing ? _letterSpacing : '0'"/>
					<bind name="text" value="_levelRome + ' ' + tr(_shipName)"/>
				</block>
				<block type="text">
					<styleClass value="$FontShipnameWhite"/>
					<bind name="style" value="'letterSpacing'; _letterSpacing ? _letterSpacing : '0'"/>
					<bind name="class" value="_isPremium || _uiSpecial 	? '$FontShipnameGolden'
										: _unavailable 	? '$FontShipnameBlack' : '$FontShipnameWhite'"/>
					<bind name="text" value="_levelRome + ' ' + tr(_shipName)"/>
				</block>
			</block>
			<block className="icon_check" type="native">
				<style>
					<marginLeft value="-2px"/>
					<marginTop value="-4px"/>
				</style>
				<bind name="visible" value="_isOwned"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="!_isDownloaded"/>
			<style>
				<marginTop value="-3px"/>
			</style>
			<bind name="instance" value="'IconSlimClient'; !_isDownloaded ? { _isEventLike: _eventShips } : null"/>
		</block>
		<block>
			<style>
				<marginLeft value="6px"/>
				<marginTop value="-1px"/>
				<right value="12"/>
				<position value="absolute"/>
			</style>
			<block>
				<style>
					<marginLeft value="6px"/>
				</style>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_SHIP_EXPERIENCE'}"/>
				<bind name="instance" value="'CurrentXP'; _isOwned ? { _exp: _shipExp} : null "/>
				<bind name="name" value="'AvailableExpBalanceModuleTreeHeader'"/>
			</block>
			<block>
				<style>
					<marginLeft value="9px"/>
				</style>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_FREE_EXPERIENCE_C'}"/>
				<bind name="feature" value="5; ''"/>
				<bind name="visible" value="feature_5 != 'locked' &amp;&amp; _isOwned"/>
				<bind name="instance" value="'CurrentFreeXP'; { _freeXP: accountFreeXP }"/>
				<bind name="name" value="'freeExpBalanceModuleTreeHeader'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<bind name="firstEntityDH" value="'loginEntity'; CC.loginData"/>
		<bind name="watchDH" value="'isLazyLogin'; ['loginEntity.loginData.evUpdate']; (loginEntity.loginData.currentLoginType == 'DEMO')"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; _shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="watch" value="'goldDeficit'; (_buyPriceFinal - accountGold)"/>
		<bind name="watch" value="'enoughGold'; goldDeficit &lt;= 0"/>
		<bind name="watch" value="'enoughCredits'; _creditsDeficit &lt;= 0"/>
		<bind name="watch" value="'isGoldCurrency'; _buyPrice.currency == 'gold'"/>
		<bind name="watch" value="'defaultButtonCostSmallData';
		_isOwned || !(_dependencyResearched	||  _isExplored) ? null : 
												!(_isExplored) &amp;&amp;
													(_expDeficit &lt;= 0) &amp;&amp;
													(_group == 'upgradeable' || _group == 'upgradeableExclusive')		?   {   _label: toUpperCase(tr('IDS_DO_RESEARCH')),
																																priceInfo: (_totalCostXP == _explorePriceFinal  ? _explorePrice 
																																												: { finalPrice: _totalCostXP, currency: 'exp' }),
																																_action: (isLazyLogin &amp;&amp; (shipInfo.level &gt; realmConstants.lazyAccountMaxShipTier)) ? null : 'researchShip',
																																_actionParams: { shipId: _shipId },
																																_enabled: true,
																																_showDiscountTag:true
																															}  :
												_isExplored &amp;&amp; 
													((!(_isPremium) &amp;&amp; enoughCredits) || (_isPremium &amp;&amp; enoughGold))	?	{	_label: toUpperCase(tr('IDS_DO_PURCHASE')),
																																priceInfo: _buyPrice,
																																_action: (isLazyLogin &amp;&amp; (shipInfo.level &gt; realmConstants.lazyAccountMaxShipTier)) ? null : 'purchaseShip',
																																_actionParams: { shipId: _shipId },
																																_enabled: isGoldCurrency ? enoughGold : enoughCredits,
																																_showDiscountTag:true
																															}  
																														: 	null "/>
		<bind name="watch" value="'priceTagWithLabelData';   _isOwned ? null : 
											!(_isExplored) &amp;&amp; (!(_dependencyResearched) || (_expDeficit &gt; 0))		?	{
																															priceInfo: { finalPrice: _totalCostXP, currency: _group == 'upgradeableExclusive' ? 'freexp' : 'exp' },
																															_label: 'IDS_RESEARCH_COST', _small : true
																														}	:
											_isExplored &amp;&amp;
											((!(_isPremium) &amp;&amp; !enoughCredits) || (_isPremium &amp;&amp; !enoughGold)) 		? 	{
																															priceInfo: _buyPrice,
																															_label: 'IDS_PURCHASE_COST',
																															_small : true
																														}
																													: null"/>
		<bind name="watch" value="'priceDeficitData'; _isOwned || !(_dependencyResearched) ? null : 
									!(_isExplored) &amp;&amp; _expDeficit &gt; 0 											?   {
																														priceInfo: { finalPrice: _totalCostXP, currency: _group == 'upgradeableExclusive' ? 'freexp' : 'exp' },
																														_small : true,
																														_tooltipText: 'IDS_TOOLTIP_NO_XP',
																														_deficit: _expDeficit
																													}	: 
									_isExplored &amp;&amp; 
										((!(_isPremium) &amp;&amp; !enoughCredits) || (_isPremium &amp;&amp; !enoughGold)) 		? 	{ 
																														priceInfo: _buyPrice,
																														_label: 'IDS_PURCHASE_COST',
																														_small : true,
																														_tooltipText: isGoldCurrency ? 'IDS_TOOLTIP_NO_GOLD' : 'IDS_TOOLTIP_NO_CREDITS',
																														_deficit: isGoldCurrency ? goldDeficit : _creditsDeficit
																													}
																												: null"/>
		<bind name="watch" value="'statusLineWithIconData'; (_dependencyResearched || _isExplored) 	? null
																					: { _text: 'IDS_RESEARCH_PREVIOUS_SHIPS', _positive: false, _small: true, _maxWidth: 300}"/>
		<block>
			<bind name="visible" value="!_eventShips"/>
			<style>
				<position value="absolute"/>
				<right value="6px"/>
			</style>
			<block>
				<bind name="visible" value="!!defaultButtonCostSmallData"/>
				<bind name="name" value="'ButtonShipResearchOrPurchaseSmall'"/>
				<bind name="tooltip" value="'ShipTooltipWithPrice'; { shipId: _shipId }; 0"/>
				<style>
					<position value="absolute"/>
					<right value="-3px"/>
					<marginTop value="-2px"/>
				</style>
				<bind name="action" value="'click'; (isLazyLogin &amp;&amp; (shipInfo.level &gt; realmConstants.lazyAccountMaxShipTier)) ? 'forceCreateAccount' : null"/>
				<bind name="instance" value="'ButtonCostSpecial'; !!defaultButtonCostSmallData ? defaultButtonCostSmallData : null"/>
				<bind name="watch" value="'contextGuidingTipId'; _isExplored ? SC.Context_guiding_tip.TIP_TYPES.MODULES_BUY : SC.Context_guiding_tip.TIP_TYPES.MODULES_EXPLORE"/>
				<bind name="instance" value="'ContextGuidingTipHub'; {
												_tooltipID: contextGuidingTipId, 
												_tipPositioning: 'bottom', 
												_extraCondition: true, 
												_offset: 5, 
												_screenOffset : 0, 
												_hideOnReasonClick :false

							}"/>
			</block>
			<block>
				<bind name="visible" value="!defaultButtonCostSmallData"/>
				<style>
					<marginTop value="-6px"/>
				</style>
				<block>
					<bind name="visible" value="!!priceTagWithLabelData"/>
					<style>
						<right value="0px"/>
					</style>
					<bind name="instance" value="'PriceTagWithLabel'; !!priceTagWithLabelData ? priceTagWithLabelData : null"/>
				</block>
				<block>
					<bind name="visible" value="!!statusLineWithIconData"/>
					<style>
						<right value="0px"/>
						<marginTop value="-5px"/>
					</style>
					<bind name="instance" value="'StatusLineWithIcon'; !!statusLineWithIconData ? statusLineWithIconData : null"/>
				</block>
				<block>
					<bind name="visible" value="!!priceDeficitData"/>
					<style>
						<right value="0px"/>
						<marginTop value="-5px"/>
					</style>
					<bind name="instance" value="'PriceDeficit'; !!priceDeficitData ? priceDeficitData : null"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="_eventShips &amp;&amp; !_isOwned"/>
			<style>
				<width value="80px"/>
				<right value="0px"/>
				<position value="absolute"/>
			</style>
			<block className="icon_issued_small" type="native">
				<style>
					<marginTop value="12px"/>
					<marginLeft value="30px"/>
				</style>
				<bind name="rotation" value="-3"/>
				<innerBind elementName="item.item" name="text" value="toUpperCase(tr('IDS_UNAVAILABLE_TO_DISPLAY_SOON'))"/>
				<bind name="gotoAndPlay!" value="'issued'"/>
			</block>
		</block>
	</block>
	<block className="LevelItem">
		<style>
			<height value="85px"/>
			<marginBottom value="85px"/>
			<width value="100%"/>
			<backgroundColor value="0x10000000"/>
		</style>
	</block>
	<block className="IncompatiblesBlock">
		<style>
			<width value="100%"/>
		</style>
		<block>
			<block className="icon_warning_orange" type="native">
				<style>
					<marginTop value="7px"/>
					<marginLeft value="12px"/>
				</style>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorUnready'"/>
				<style>
					<marginTop value="3px"/>
					<marginBottom value="6px"/>
					<marginLeft value="2px"/>
					<marginRight value="12px"/>
				</style>
				<text value="IDS_INSTALL_COMPATIBLE_MODULE"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$Fullsize"/>
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block>
				<block className="icon_warning_red" type="native">
					<style>
						<marginTop value="7px"/>
						<marginLeft value="12px"/>
					</style>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorCompareNegative'"/>
					<style>
						<marginTop value="3px"/>
						<marginLeft value="2px"/>
						<marginRight value="12px"/>
					</style>
					<text value="IDS_MODULE_INCOMPATIBLE_WITH"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginBottom value="3px"/>
				</style>
				<bind name="repeat" value="_incompatibleModules; 'DependencyRepeatItem'; {_type: _type}"/>
			</block>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
	</block>
	<block className="ModuleDependenciesBlock">
		<style>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<flow value="horizontal"/>
				<width value="100%"/>
				<marginLeft value="12px"/>
				<marginRight value="12px"/>
				<marginTop value="8px"/>
				<marginBottom value="3px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'PriceTagWithLabel'; 	_type[1] == 'research' ? { priceInfo: _priceInfo, _label: 'IDS_RESEARCH_COST', _techText:true, _showDiscountTag:true}
													: _type[1] == 'purchase' ? { priceInfo:_priceInfo, _label: 'IDS_PURCHASE_COST', _techText:true, _showDiscountTag:true}
													: null"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorBlueish'"/>
				<bind name="text" value="_type[1] == 'mount' ? 'IDS_HAVE_TO_BE_MOUNTED' : ''"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$Fullsize"/>
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorBlueish'"/>
				<bind name="visible" value="_type[1] != 'mount'"/>
				<style>
					<marginTop value="4px"/>
					<marginLeft value="12px"/>
					<marginRight value="12px"/>
				</style>
				<bind name="text" value="_type[1] == 'research' ? 'IDS_WILL_BE_ALSO_RESEARCHED' 
												: _type[1] == 'purchase' 	? 'IDS_HAVE_TO_BE_PURCHASED' 
																			: ''"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginBottom value="3px"/>
				</style>
				<bind name="repeat" value="_dependentModules;  'DependencyRepeatItem' ; {_type: _type}"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="-1px"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<block className="DependencyRepeatItem">
		<style>
			<width value="100%"/>
			<marginLeft value="12px"/>
			<marginRight value="12px"/>
			<marginTop value="3px"/>
			<marginBottom value="3px"/>
		</style>
		<bind name="child" value="_type[0]; {dataArray:dataArray};'ResearchDependenciesListItem'; 'PurchaseDependenciesListItem'; 'MountDependenciesListItem'"/>
	</block>
	<block className="ResearchDependenciesListItem">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_EXPLORE + dataArray[1]; 'moduleExplorePrice'"/>
		<style>
			<width value="100%"/>
			<height value="40px"/>
			<flow value="horizontal"/>
		</style>
		<block className="icon_tree_module_states" type="native">
			<styleClass value="$MouseDisable"/>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<width value="44px"/>
				<height value="44px"/>
			</style>
			<bind name="gotoAndStop!" value="dataArray[3] + '_P'"/>
		</block>
		<block>
			<block type="text">
				<style>
					<marginTop value="3px"/>
				</style>
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorExp'"/>
				<bind name="text" value="toUpperCase(dataArray[2])"/>
			</block>
			<block type="text">
				<styleClass value="$TextSecondary"/>
				<bind name="class" value="'$FontColorBlueish'"/>
				<style>
					<marginTop value="-4px"/>
				</style>
				<bind name="text" value="dataArray[4]"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!($parent.$parent._incompatibleModules)"/>
			<styleClass value="$AlignRight"/>
			<bind name="instance" value="'PriceTag'; { priceInfo: moduleExplorePrice.prices[0], _showDiscountTag:true}"/>
		</block>
	</block>
	<block className="PurchaseDependenciesListItem">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY + dataArray[2]; 'moduleBuyPrice'"/>
		<style>
			<width value="100%"/>
			<height value="40px"/>
			<flow value="horizontal"/>
		</style>
		<block className="icon_tree_module_states" type="native">
			<styleClass value="$MouseDisable"/>
			<styleClass value="$MiddleVAligned"/>
			<bind name="gotoAndStop!" value="dataArray[3] + '_P'"/>
		</block>
		<block>
			<block type="text">
				<style>
					<marginTop value="1px"/>
				</style>
				<styleClass value="$TextDefault"/>
				<bind name="text" value="dataArray[0]"/>
			</block>
			<block type="text">
				<styleClass value="$TextSecondary"/>
				<bind name="class" value="'$FontColorBlueish'"/>
				<style>
					<marginTop value="-5px"/>
				</style>
				<bind name="text" value="dataArray[4]"/>
			</block>
		</block>
		<block>
			<styleClass value="$AlignRight"/>
			<block>
				<bind name="visible" value="dataArray[1] &gt; 1"/>
				<styleClass value="$MiddleVAligned"/>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorWhite'"/>
					<bind name="text" value="dataArray[1] + ' x'"/>
				</block>
			</block>
			<block>
				<bind name="instance" value="'PriceTag'; { priceInfo: moduleBuyPrice.prices[0], _showDiscountTag:true}"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="MountDependenciesListItem">
		<style>
			<width value="100%"/>
			<height value="40px"/>
			<flow value="horizontal"/>
		</style>
		<block className="icon_tree_module_states" type="native">
			<styleClass value="$MouseDisable"/>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<width value="44px"/>
				<height value="44px"/>
			</style>
			<bind name="gotoAndStop!" value="dataArray[1] + '_P'"/>
		</block>
		<block>
			<block type="text">
				<style>
					<marginTop value="1px"/>
				</style>
				<styleClass value="$TextDefault"/>
				<bind name="text" value="dataArray[0]"/>
			</block>
			<block type="text">
				<styleClass value="$TextSecondary"/>
				<bind name="class" value="'$FontColorBlueish'"/>
				<style>
					<marginTop value="-5px"/>
				</style>
				<bind name="text" value="'IDS' + toUpperCase(dataArray[1])"/>
			</block>
		</block>
	</block>
	<block className="IncompatibleListItem">
		<style>
			<flow value="horizontal"/>
			<width value="100%"/>
			<height value="30px"/>
			<marginLeft value="12px"/>
			<marginRight value="12px"/>
		</style>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextDefault"/>
			<bind name="text" value="dataArray[0]"/>
		</block>
	</block>
	<block className="PremiumShipPointsItem">
		<block type="text">
			<style>
				<maxWidth value="480"/>
			</style>
			<styleClass value="$TextDefault"/>
			<bind name="text" value="_text"/>
		</block>
	</block>
	<block className="CostSmallTransparent">
		<bind name="controller" value="lesta.unbound.core.UbController"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<styleClass value="$InfoLineBoundaries"/>
		<params>
			<param name="name" value="upgrade_tree_CostXP"/>
		</params>
		<block type="text">
			<styleClass value="$TextHeaderBigDefault"/>
			<styleClass value="$MiddleVAligned"/>
			<bind name="text" value="_label"/>
		</block>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<block type="text">
				<styleClass value="$FontCostNormal"/>
				<bind name="class" value="_deficit ? '$FontColorDefault' : '$FontColorAlmostBlack'"/>
				<style>
					<position value="absolute"/>
					<alpha value="0.35"/>
					<top value="1px"/>
				</style>
				<bind name="text" value="format(_costXP != null ? _costXP : _costCR, -1)"/>
			</block>
			<block type="text">
				<styleClass value="$FontCostNormal"/>
				<bind name="class" value="_deficit ? '$FontColorDefault' : '$FontColorAlmostBlack'"/>
				<style>
					<position value="absolute"/>
					<alpha value="0.1"/>
					<top value="-1px"/>
				</style>
				<bind name="text" value="format(_costXP != null ? _costXP : _costCR, -1)"/>
			</block>
			<block type="text">
				<styleClass value="$FontCostNormal"/>
				<bind name="class" value="_deficit ? '$FontColorDefault' : '$FontColorAlmostBlack'"/>
				<style>
					<position value="absolute"/>
					<alpha value="0.15"/>
					<left value="1px"/>
				</style>
				<bind name="text" value="format(_costXP != null ? _costXP : _costCR, -1)"/>
			</block>
			<block type="text">
				<styleClass value="$FontCostNormal"/>
				<bind name="class" value="_deficit ? '$FontColorDefault' : '$FontColorAlmostBlack'"/>
				<style>
					<position value="absolute"/>
					<alpha value="0.15"/>
					<left value="-1px"/>
				</style>
				<bind name="text" value="format(_costXP != null ? _costXP : _costCR, -1)"/>
			</block>
			<block type="text">
				<bind name="class" value="_deficit ? '$FontCostBlack' : '$FontCostNormal'"/>
				<bind name="text" value="format(_costXP != null ? _costXP : _costCR, -1)"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="_costXP != null"/>
			<styleClass value="$MiddleVAligned"/>
			<block className="icon_exp_small" type="native"/>
		</block>
		<block>
			<bind name="visible" value="_costCR != null"/>
			<styleClass value="$MiddleVAligned"/>
			<block className="icon_credit_small" type="native"/>
		</block>
	</block>
	<block className="ShipTreeMenu">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; shipId"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="watchDH" value="'upgradableShipInfo'; ['shipEntity.upgradableShipInfo.evUpdate']; shipEntity.upgradableShipInfo"/>
		<bind name="watch" value="'isOwned'; shipOwnEntity != null"/>
		<bind name="watchDH" value="'isPrimary';			['shipOwnEntity.ownShip.evIsPrimaryChanged'];	shipOwnEntity.ownShip.isPrimary"/>
		<bind name="watchDH" value="'isNeedRepair';		['shipOwnEntity.ownShip.evUpdateDockState'];	shipOwnEntity.ownShip.isNeedRepair"/>
		<bind name="watchDH" value="'timeRent';			['shipOwnEntity.ownShip.evUpdateDockState'];	shipOwnEntity.ownShip.timeRent"/>
		<bind name="watchDH" value="'isLocked';			['shipOwnEntity.ownShip.evUpdateLock'];			shipOwnEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'isInFormation';		['shipOwnEntity.ownShip.evUpdateLock'];			shipOwnEntity.ownShip.isInFormation"/>
		<bind name="watchDH" value="'sellable';			['shipOwnEntity.ownShip.evUpdateConfig'];		shipOwnEntity.ownShip.sellable"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'slimClientData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
		<bind name="visible" value="slimClientData.isFull"/>
		<styleClass value="$DefaultMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<bind name="feature" value="'17'; ''"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<bind name="name" value="'ShipContextMenu'"/>
		<block>
			<bind name="visible" value="isOwned"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="dock_submenu_item" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="name" value="'ShipContextMenu_Primary'"/>
				<bind name="request" value="'buttonClick'; 'primaryThisShip'; {shipId: shipId}"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$ContextMenuListItemContent"/>
				<bind name="text" value="isPrimary ? 'IDS_REMOVE_PRIMARY' : 'IDS_ASSIGN_PRIMARY'"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="	feature_17 != 'locked' &amp;&amp;
						!_disableShipActions"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="dock_submenu_item" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="name" value="'ShipContextMenu_Modules'"/>
				<bind name="action" value="'buttonClick'; 'selectShipUpgrade'; {shipId : shipId}"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$ContextMenuListItemContent"/>
				<text value="IDS_MODULES"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="	feature_17 != 'locked' &amp;&amp;
						isOwned &amp;&amp;
						sellable &amp;&amp;
						(timeRent == 0) &amp;&amp;
						!(isLocked || isNeedRepair || isInFormation) &amp;&amp;
						!_disableShipActions"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="dock_submenu_item" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="name" value="'ShipContextMenu_Sell'"/>
				<bind name="request" value="'buttonClick'; 'sellShipWindow'; {shipName: shipInfo.fullName, shipId: shipId}"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$ContextMenuListItemContent"/>
				<text value="IDS_SELL"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="	feature_17 != 'locked' &amp;&amp;
						(!isOwned || (timeRent != 0)) &amp;&amp;
						upgradableShipInfo.isExplored &amp;&amp;
						shipInfo.canBuy &amp;&amp;
						!_disableShipActions"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="dock_submenu_item" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="name" value="'ShipContextMenu_Purchase'"/>
				<bind name="action" value="'buttonClick'; 'purchaseShip'; { shipId: shipId}"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$ContextMenuListItemContent"/>
				<text value="IDS_DO_PURCHASE"/>
			</block>
		</block>
		<bind name="firstEntityDH" value="'loginEntity'; CC.loginData"/>
		<bind name="watchDH" value="'isLazyLogin'; ['loginEntity.loginData.evUpdate']; (loginEntity.loginData.currentLoginType == 'DEMO')"/>
		<block>
			<bind name="visible" value="	feature_17 != 'locked'&amp;&amp;
						!(upgradableShipInfo.isExplored) 
						&amp;&amp; upgradableShipInfo.dependencyResearched 
						&amp;&amp; upgradableShipInfo.expDeficit &lt;= 0 
						&amp;&amp; !shipInfo.isEventLike
						&amp;&amp; shipInfo.group != 'earlyAccess'"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="dock_submenu_item" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="name" value="'ShipContextMenu_Research'"/>
				<bind name="action" value="'buttonClick'; isLazyLogin &amp;&amp; (shipInfo.level &gt; realmConstants.lazyAccountMaxShipTier) ? null : 'researchShip'; { shipId: shipId }"/>
				<bind name="action" value="'click'; (isLazyLogin &amp;&amp; (shipInfo.level &gt; realmConstants.lazyAccountMaxShipTier)) ? 'forceCreateAccount' : null"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$ContextMenuListItemContent"/>
				<text value="IDS_DO_RESEARCH"/>
			</block>
		</block>
	</block>
	<block className="ShipInfoArmourBlock">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'dockDefaultValues'; 'dockInitData,dockUpdateData'"/>
		<style>
			<width value="100%"/>
			<height value="0px"/>
		</style>
		<bind name="transition" value="dockDefaultValues.armourVisibility; 0.15; {height: 0, alpha: 0}; {height: 110, alpha: 1}; {height: 0, alpha: 0}"/>
		<block>
			<style>
				<position value="absolute"/>
				<top value="-3px"/>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="instance" value="'ArmourPickerControls'; dockDefaultValues.armourVisibility ? {shipId: shipId} : null"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<bottom value="0"/>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ShipInfoCrewBlock">
		<bind name="feature" value="13; 'click'"/>
		<style>
			<width value="100%"/>
			<height value="80px"/>
		</style>
		<bind name="transition" value="_isNotExpanded; 0.15; {height: 80}; {height: 30}; {height: 80}"/>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="instance" value="'CrewShipPanelBlock';		(_crewId &gt; 0)	? { _crewId: _crewId, _isNotExpanded: _isNotExpanded } : null"/>
			<bind name="instance" value="'CrewHireShipPanelBlock';	(_crewId == 0)	? {} : null "/>
		</block>
		<block>
			<bind name="fade" value="(feature_13 == 'new'); 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<style>
				<position value="absolute"/>
				<bottom value="18px"/>
				<right value="5px"/>
			</style>
			<bind name="instance" value="'MarkerNewAttention'; {}"/>
		</block>
		<block>
			<bind name="visible" value="_isNotExpanded == false"/>
			<style>
				<position value="absolute"/>
				<bottom value="-1"/>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ShipExtendedTooltip">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_EXPLORE + shipId; 'shipExplorePrice'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY + shipId; 'shipBuyPrice'"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; shipId"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="watchDH" value="'upgradableShipInfo'; ['shipEntity.upgradableShipInfo.evUpdate']; shipEntity.upgradableShipInfo"/>
		<bind name="watch" value="'isOwned'; shipOwnEntity != null"/>
		<bind name="watchDH" value="'isLocked';			['shipOwnEntity.ownShip.evUpdateLock'];			shipOwnEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'isInFormation';		['shipOwnEntity.ownShip.evUpdateLock'];			shipOwnEntity.ownShip.isInFormation"/>
		<bind name="watchDH" value="'playerShipParams';	['shipOwnEntity.ownShip.evShipParamsUpdate'];	shipOwnEntity.ownShip.params"/>
		<bind name="watchDH" value="'ownShipExp';		['shipOwnEntity.ownShip.evUpdateConfig'];		shipOwnEntity.ownShip.exp"/>
		<bind name="style" value="'userData'; { rightOffset: _hOffset }"/>
		<styleClass value="$ShipTreeTooltipBehaviour"/>
		<params>
			<param name="name" value="upgrade_tree_Ship_info"/>
		</params>
		<style>
			<width value="300px"/>
			<hitTest value="false"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'ShipInfoTabHeader'; {	_isNotMyShip: _isNotMyShip, _inSideCompare: inSideCompare, shipId: shipId }"/>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<marginTop value="-40px"/>
					<marginBottom value="-20px"/>
					<width value="214px"/>
					<height value="126px"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:' + shipInfo.pathPreview"/>
			</block>
			<block>
				<bind name="visible" value="(inSideCompare != true) &amp;&amp; !(inIntromissionWindow)"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<bind name="instance" value="'CurrentXPLarge'; shipOwnEntity != null ? { _exp: ownShipExp, _label: 'IDS_SHIP_EXPERIENCE'} : null"/>
				</block>
				<block>
					<bind name="visible" value="!isOwned &amp;&amp; !(_inRewards) &amp;&amp; !(shipInfo.isEventLike)"/>
					<style>
						<width value="100%"/>
						<marginTop value="12px"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<bind name="instance" value="'PriceInLine'; !(upgradableShipInfo.isExplored)	? { priceInfo: shipInfo.group == 'upgradeableExclusive' ? { finalPrice: shipExplorePrice.prices[0].finalPrice,
																																				basePrice: shipExplorePrice.prices[0].basePrice,
																																				till: shipExplorePrice.prices[0].till,
																																				discountEventName: shipExplorePrice.prices[0].discountEventName,
																																				currency: 'freexp' } 
																																			: shipExplorePrice.prices[0],
																						_label: 'IDS_RESEARCH_COST',
																						_medium: true,
																						_showDiscountTag: true }
																					: null"/>
					</block>
					<block>
						<bind name="style" value="'marginTop'; upgradableShipInfo.isExplored ? '0px' : '9px'"/>
						<style>
							<width value="100%"/>
						</style>
						<bind name="instance" value="'PriceInLine'; 	upgradableShipInfo.isExplored &amp;&amp; isOwned ? null
															:!(isOwned) ? { priceInfo: shipBuyPrice.prices[0], _label: 'IDS_PURCHASE_COST', _medium : true, _showDiscountTag:true}
															: null"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="shipInfo.group == 'earlyAccess' &amp;&amp; !isOwned"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<width value="21px"/>
						<height value="21px"/>
						<backgroundImage value="url:../service_kit/icons/icon_rent_yellow.png"/>
					</style>
				</block>
				<block type="text">
					<style>
						<marginLeft value="4px"/>
						<width value="100%"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorGolden'"/>
					<bind name="text" value="'IDS_EARLY_ACCESS_TOOLTIP'"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<bind name="visible" value="inSideCompare != true"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<position value="absolute"/>
					<marginBottom value="-1px"/>
					<marginTop value="1px"/>
				</style>
				<styleClass value="$PxHorizontalCorrection"/>
				<styleClass value="$Fullsize"/>
			</block>
			<bind name="instance" value="'ShipDescription'; {_shipNameIDS: shipInfo.nameIDS, _needShowProjectYear: shipInfo.needShowProjectYear, _isPaperShip: shipInfo.isPaperShip, _peculiarity: shipInfo.peculiarity}"/>
		</block>
		<bind name="watch" value="'showStats'; !(shipInfo.isEventLike) || isOwned)"/>
		<bind name="watch" value="'showLabelComingSoon'; shipInfo.isEventLike &amp;&amp; (shipInfo.group != 'event')"/>
		<block>
			<bind name="visible" value="showStats"/>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="style" value="'marginTop'; (inSideCompare == true) ? '18px' : '0px'"/>
			<bind name="instance" value="'ShipParamsTooltipList'; _testShipParams ?
			{ inSideCompare: inSideCompare, typeList : 'tooltipShipParams', params: _testShipParams, testParams: (nonPlayerShipParams ? nonPlayerShipParams : (shipOwnEntity != null ? playerShipParams : shipInfo.params)), testObjectIsBaseForView: 1, testObjectIsBaseForCompare: 0, showCompareWithZero: 1}
			: { typeList : 'tooltipShipParams', params: (shipOwnEntity != null ? playerShipParams : shipInfo.params)}"/>
		</block>
		<block>
			<bind name="visible" value="showLabelComingSoon"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'LabelComingSoon'; { _showTestSampleLabel: showStats }"/>
		</block>
		<block>
			<bind name="visible" value="(_inRewards == true) &amp;&amp; (_isPRMP != true)"/>
			<style>
				<width value="100%"/>
				<marginBottom value="9px"/>
			</style>
			<bind name="instance" value="'RewardReasonsList'; _inRewards ? { _rewardReasons: _rewardReasons } : null"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="class" value="	(inSideCompare != true) &amp;&amp; 
						(_needService ||
						(isLocked &amp;&amp; !isInFormation))			? '$InfoBlockIndent'
																: '$None'"/>
			<bind name="instance" value="'InstructionWarning';	(inSideCompare == true)				? null :
												_needService 						? { _instructionText: 'IDS_SHIP_NEEDS_SERVICE_MESSAGE', _maxWidth: '280'} :
												isLocked &amp;&amp; !isInFormation)			? { _instructionText: 'IDS_SHIP_IN_BATTLE_MESSAGE', _maxWidth: '280'}
																					: null"/>
		</block>
		<block>
			<bind name="visible" value="(shipInfoSlim.isDownloaded ? false : true)"/>
			<style>
				<width value="100%"/>
			</style>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="repeat" value="[	{_type: 'warning', _instructionText: _isEventLike	? 'IDS_ENTER_IN_FULL_VERSION_FOR_ANNOUNCE_SHIPS'
																			: 'IDS_ENTER_IN_FULL_VERSION_FOR_SHIPS'},
						{_type: 'left', _instructionText: 'IDS_EXIT_AND_CONTINUE_DOWNLOADING_MOUSE_INSTRUCTION'}]; 'MouseInstructionRepeater'; {_maxWidth: 260, _lastIndex: 1}"/>
		</block>
	</block>
	<block className="ShipExtendedTooltipUB2">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_EXPLORE + shipId; 'shipExplorePrice'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY + shipId; 'shipBuyPrice'"/>
		<styleClass value="$ShipTreeTooltipBehaviour"/>
		<params>
			<param name="name" value="upgrade_tree_Ship_info"/>
		</params>
		<styleClass value="$MouseDisable"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block className="ShipExtendedTooltip" type="ublock">
			<params>
				<param name="name" value="upgrade_tree_Ship_info_ub2"/>
			</params>
			<bind name="build!" value="$ubPlayerProxy; {__shipId: shipId, __needService: _needService, __isLocked: _isLocked}"/>
			<bind name="externalArgs" value="{_shipId: shipId, _needService: _needService, _isLocked: _isLocked}"/>
		</block>
	</block>
	<block className="ShipTooltipWithPrice">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_EXPLORE + shipId; 'shipExplorePrice'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_BUY + shipId; 'shipBuyPrice'"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; shipId"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="watchDH" value="'upgradableShipInfo'; ['shipEntity.upgradableShipInfo.evUpdate']; shipEntity.upgradableShipInfo"/>
		<bind name="watch" value="'isOwned'; shipOwnEntity != null"/>
		<bind name="style" value="'userData'; { rightOffset: _hOffset }"/>
		<styleClass value="$ShipTreeTooltipBehaviour"/>
		<style>
			<width value="300px"/>
		</style>
		<styleClass value="$MouseDisable"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginBottom value="4px"/>
			</style>
			<bind name="instance" value="'ShipInfoTabHeader'; {	_isNotMyShip: _isNotMyShip, _inSideCompare: inSideCompare, shipId: shipId, _isHideFlag: true }"/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<marginLeft value="1px"/>
					<marginRight value="1px"/>
					<marginBottom value="1px"/>
				</style>
			</block>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<bind name="name" value="'ResearchPrice'"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="instance" value="'PriceInLine'; !(upgradableShipInfo.isExplored)	?   { priceInfo: shipInfo.group == 'upgradeableExclusive' 	? 	{ finalPrice: shipExplorePrice.prices[0].finalPrice,
																																				  basePrice: shipExplorePrice.prices[0].basePrice,
																																				  till: shipExplorePrice.prices[0].till,
																																				  discountEventName: shipExplorePrice.prices[0].discountEventName,
																																				  currency: 'freexp' }
																																			: 	shipExplorePrice.prices[0],
																					  _label: 'IDS_RESEARCH_COST',
																					  _showDiscountTag: true }
																				: null"/>
				</block>
				<block>
					<bind name="name" value="'PurchasePrice'"/>
					<bind name="style" value="'marginTop'; upgradableShipInfo.isExplored ? '0px' : '9px'"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="instance" value="'PriceInLine'; 	upgradableShipInfo.isExplored &amp;&amp; isOwned ? null
														:!(isOwned) ? { priceInfo: shipBuyPrice.prices[0], _label: 'IDS_PURCHASE_COST', _showDiscountTag:true}
														: null"/>
				</block>
			</block>
		</block>
	</block>
	<css name="$MetaTooltipTextWidth">
		<maxWidth value="250"/>
	</css>
	<block className="SimpleShipParamTooltip">
		<block>
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<block type="text">
				<styleClass value="$TextHeaderBold"/>
				<styleClass value="$MetaTooltipTextWidth"/>
				<style>
					<leading value="-3"/>
				</style>
				<bind name="text" value="$parent.nameIDS"/>
			</block>
			<block type="text">
				<styleClass value="$TextHeaderBigDefault"/>
				<styleClass value="$MetaTooltipTextWidth"/>
				<style>
					<leading value="-3"/>
				</style>
				<bind name="text" value="$parent.tooltipIDS"/>
			</block>
		</block>
	</block>
	<block className="SecondLevelShipParamTooltip">
		<style>
			<width value="100%"/>
		</style>
		<bind name="name" value="'secondLevelParamsTooltip_' + $parent.id"/>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<block type="text">
				<styleClass value="$TextHeaderBold"/>
				<styleClass value="$FullWidth"/>
				<style>
					<leading value="-3"/>
				</style>
				<bind name="text" value="$parent.nameIDS"/>
			</block>
			<block type="text">
				<styleClass value="$TextHeaderBigDefault"/>
				<styleClass value="$FullWidth"/>
				<style>
					<leading value="-3"/>
				</style>
				<bind name="text" value="$parent.tooltipIDS"/>
			</block>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<styleClass value="$PxHorizontalCorrection"/>
			</block>
			<block>
				<bind name="visible" value="_deepWaterTorpedoBombers == true"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$InfoBlockIndent"/>
					<bind name="instance" value="'TorpedoAffectedShipsParamRow'; (_deepWaterTorpedoBombers == true) ? { _torpedoId: _torpedoId, _isTooltip: true } : null"/>
				</block>
			</block>
			<bind name="instance" value="'ShipParamsListView'; { viewParams: $parent.secondLevel, secondLevelTooltip: true }"/>
		</block>
	</block>
	<block className="ShipParamTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<bind name="class" value="meta ? '$None' : '$DefaultTooltipWidth'"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; (_isArmour &amp;&amp; (_armourOff != true)) ? 'dockDefaultValues' : null; 'dockInitData,dockUpdateData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<style>
				<position value="absolute"/>
			</style>
			<styleClass value="$Fullsize"/>
		</block>
		<block>
			<bind name="class" value="(secondLevel == null || secondLevel.length == 0) ? '$None' : '$FullWidth'"/>
			<bind name="child" value="(secondLevel == null || secondLevel.length == 0) ? 0 : 1; { _torpedoId: _torpedoId, _deepWaterTorpedoBombers: _deepWaterTorpedoBombers }; 'SimpleShipParamTooltip'; 'SecondLevelShipParamTooltip'"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="-3px"/>
			</style>
			<bind name="visible" value="_hasExcursion || (_isArmour &amp;&amp; (_armourOff != true))"/>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockIndentNoWidth"/>
				<bind name="instance" value="'MouseInstruction'; _hasExcursion 							? { _type: 'left', _instructionText: 'IDS_INSTRUCTION_SHIP_COMPONENT_DEMO', _maxWidth: '250'} :
												(_isArmour &amp;&amp; (_armourOff != true))		? { _type: 'left', _instructionText: dockDefaultValues.armourVisibility ? 'IDS_INSTRUCTION_SHIP_ARMOUR_DEMO_OFF' : 'IDS_INSTRUCTION_SHIP_ARMOUR_DEMO_ON', _maxWidth: '250' }
																						: null"/>
			</block>
		</block>
	</block>
	<block className="ShipInfoTooltipRow">
		<style>
			<width value="100%"/>
		</style>
		<bind name="height" value="meta ? 27 : $block.measuredHeight"/>
		<block>
			<style>
				<width value="100%"/>
				<position value="absolute"/>
				<bottom value="-1px"/>
			</style>
			<bind name="visible" value="meta"/>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
				<left value="1px"/>
				<overflow value="hidden"/>
			</style>
			<bind name="instance" value="'StatValueBar'; meta ? {_width: _width ? _width : 298, _hasDiff: root.hasDiff || inSideCompare, _currentValue: root.values[0], _diffValue: root.diffData[0].value, _isGood: root.diffData[0].isGood, _expand: true, _invert: ident == 'visibility' } : null"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="12px"/>
				<marginRight value="12px"/>
				<marginTop value="1px"/>
				<marginBottom value="3px"/>
			</style>
			<bind name="style" value="'marginTop'; ($parent.viewParams.list[$index - 1] == null) &amp;&amp; !(meta) ? '5px' : '1px'"/>
			<bind name="style" value="'marginBottom'; $parent.viewParams.list[$index + 1] == null &amp;&amp; !(meta) ? '8px' : '3px'"/>
			<block>
				<block type="text">
					<style>
						<alpha value="0.8"/>
						<leading value="-4"/>
						<maxWidth value="160"/>
					</style>
					<bind name="class" value="meta ? '$TextMetaHeader' : '$TextMetaInfo'"/>
					<bind name="text" value="nameIDS"/>
				</block>
				<block>
					<style>
						<alpha value="0.8"/>
						<marginLeft value="-7px"/>
					</style>
					<bind name="style" value="'marginTop'; title ? '-7px' : '0px'"/>
					<bind name="instance" value="'ParamElement'; title"/>
				</block>
			</block>
			<block>
				<styleClass value="$AlignRight"/>
				<block>
					<bind name="instance" value="'ParamElement'; value"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ShipParamsTooltipList">
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerParams"/>
		<style>
			<width value="100%"/>
		</style>
		<bind name="repeat" value="viewParams.list; 'ShipInfoTooltipRow'; { inSideCompare: inSideCompare }"/>
	</block>
	<block className="ShipParamsTooltipListView">
		<style>
			<width value="100%"/>
		</style>
		<bind name="repeat" value="viewParams.list;'ShipInfoTooltipRow'; { _width: _width }"/>
	</block>
	<block className="ShipSideCompareTooltip">
		<styleClass value="$ShipTreeTooltipBehaviour"/>
		<params>
			<param name="name" value="ShipSideCompareTooltip"/>
		</params>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; _selfPlayerShipId"/>
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="watch" value="'showOwnShip'; (userPrefs.showOwnShipInCompare == null) ? false : userPrefs.showOwnShipInCompare "/>
		<bind name="watchDH" value="'selfPlayerShipParams';	['shipOwnEntity.ownShip.evShipParamsUpdate'];	shipOwnEntity.ownShip.params"/>
		<style>
			<flow value="horizontal"/>
			<hitTest value="false"/>
		</style>
		<block>
			<bind name="visible" value="showOwnShip || _isSelf"/>
			<style>
				<marginRight value="3px"/>
			</style>
			<block type="text">
				<styleClass value="$TextHeaderBold"/>
				<style>
					<right value="0px"/>
				</style>
				<text value="IDS_YOUR_SHIP"/>
			</block>
			<block>
				<bind name="instance" value="'ShipExtendedTooltip'; { _isNotMyShip: false, shipId: _selfPlayerShipId, _testShipParams: _isSelf ? null : _nonPlayerShipParams,
													 inSideCompare: true}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!(_isSelf)"/>
			<block type="text">
				<styleClass value="$TextHeaderBold"/>
				<style>
					<right value="0px"/>
				</style>
				<bind name="text" value="_nickname"/>
			</block>
			<block>
				<bind name="instance" value="'ShipExtendedTooltip'; relation != 0	? { _isNotMyShip: true, shipId: _shipId, _testShipParams: selfPlayerShipParams,
																		nonPlayerShipParams: _nonPlayerShipParams, inSideCompare: true}
																	: null"/>
			</block>
		</block>
	</block>
	<block className="ParamsAfterMount">
		<style>
			<width value="100%"/>
		</style>
		<block type="text">
			<style>
				<width value="100%"/>
				<marginTop value="8px"/>
				<marginBottom value="3px"/>
			</style>
			<styleClass value="$TextDefault"/>
			<bind name="class" value="'$FontColorBlueish'"/>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<bind name="text" value="_title"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block className="inner_panel" type="native">
				<styleClass value="$Fullsize"/>
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<position value="absolute"/>
					<marginBottom value="1px"/>
					<marginTop value="3px"/>
				</style>
			</block>
			<bind name="instance" value="'ShipParamsTooltipListView'; { viewParams: _viewParams, _width: _width }"/>
		</block>
	</block>
	<css name="$CrewPortraitSizeSmall">
		<width value="82px"/>
		<height value="75px"/>
	</css>
	<css name="$CrewPortraitSizeNormal">
		<width value="90px"/>
		<height value="82px"/>
	</css>
	<css name="$CrewPortraitSizeBig">
		<width value="125px"/>
		<height value="114px"/>
	</css>
	<css name="$CrewPortraitSizeMax">
		<width value="160px"/>
		<height value="147px"/>
	</css>
	<css name="$TextSkillTierLabel">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="21"/>
		<selectable value="false"/>
		<textColor value="0x9CBABA"/>
	</css>
	<css name="$TextSkillTierLabelBlack">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="21"/>
		<selectable value="false"/>
		<textColor value="0x08222a"/>
	</css>
	<block className="SkillColumnLabel">
		<bind name="name" value="'SkillsColumnLabel_' + _label"/>
		<style>
			<width value="1px"/>
		</style>
		<bind name="style" value="'width'; (_iconSize * 2 + _iconHorizontalPadding) + 'px'"/>
		<bind name="style" value="'marginLeft'; (($index != 0) ? (_iconHorizontalPadding + (_iconHorizontalPadding * _groupPaddingCoeff)) : 0) + 'px')"/>
		<block type="text">
			<styleClass value="$TextHeaderBold"/>
			<bind name="class" value="'$FontColorBlueish'"/>
			<style>
				<textAlign value="center"/>
				<width value="100%"/>
				<leading value="-4"/>
			</style>
			<bind name="text" value="toUpperCase(tr(_label))"/>
		</block>
	</block>
	<block className="CrewListItemRendererSilhouette">
		<styleClass value="$Fullsize"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<alpha value="0.7"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:' + _bgPath"/>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<alpha value="0.8"/>
				<colorMatrixFilter value="0 -100 0 0"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:' + _fgPath"/>
		</block>
	</block>
	<block className="CrewListItemRenderer">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="dataRefDH" value="'crewEntity'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'crewId'; []; crewEntity.crew.id"/>
		<bind name="primaryEntityDH" value="'crewEntity2'; CC.crew; crewId"/>
		<bind name="watchDH" value="'crew'; ['crewEntity2.crew.evBasketChanged', 'crewEntity2.crew.evLevelUp', 'crewEntity2.crew.evExpChanged', 'crewEntity2.crew.evShipChanged', 'crewEntity2.crew.evSkillsChanged', 'crewEntity2.crew.evResetCostChanged', 'crewEntity2.crew.evAdaptationUpdated', 'crewEntity2.crew.evChanged', 'crewEntity2.crew.evRecentnessUpdated']; crewEntity2.crew"/>
		<bind name="watchDH" value="'crew'+'Retraining'; ['crewEntity2.crew.evRetrainingUpdated']; crewEntity2.retraining"/>
		<bind name="primaryEntityDH" value="'shipTargetOwnEntity'; CC.ownShip; _selectedShipId"/>
		<bind name="primaryEntityDH" value="'shipTargetEntity'; CC.ship; _selectedShipId; 'evUpdate'"/>
		<bind name="watchDH" value="'targetShipInfo'; ['shipTargetEntity.ship.evUpdate', 'shipTargetEntity.ship.evCurrentSkinChanged']; shipTargetEntity.ship"/>
		<bind name="watchDH" value="'targetShipInfo' + 'Slim'; ['shipTargetEntity.slimClientComponent.evUpdate']; shipTargetEntity.slimClientComponent"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; crew.shipID"/>
		<bind name="primaryEntityDH" value="'ShipEntity'; CC.ship; crew.specializationID; 'evUpdate'"/>
		<bind name="watchDH" value="'thisShipInfo'; ['ShipEntity.ship.evUpdate', 'ShipEntity.ship.evCurrentSkinChanged']; ShipEntity.ship"/>
		<bind name="watchDH" value="'thisShipInfo' + 'Slim'; ['ShipEntity.slimClientComponent.evUpdate']; ShipEntity.slimClientComponent"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'crewsSingleton'; ['dockEntity.crewData.evUpdate']; dockEntity.crewData"/>
		<bind name="watchDH" value="'isThisLocked';		['shipOwnEntity.ownShip.evUpdateLock'];			shipOwnEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'isTargetLocked';	['shipTargetOwnEntity.ownShip.evUpdateLock'];	shipTargetOwnEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'targetCrewId';		['shipTargetOwnEntity.ownShip.evCrewChanged'];	shipTargetOwnEntity.ownShip.crewId"/>
		<bind name="watch" value="'isCrewCompatibleShipBySpecialList'; indexOf(targetShipInfo.fullName, crew.shipsToSeat) &gt; -1"/>
		<bind name="watch" value="'isCrewCompatibleShipByPeculiarity'; indexOf(targetShipInfo.peculiarity, crew.peculiaritiesToSeat) &gt; -1"/>
		<bind name="watch" value="'isCrewCompatibleShipByGroup'; indexOf(targetShipInfo.group, crew.shipGroups) &gt; -1"/>
		<bind name="watch" value="'hasSpaceToAssignCrew'; !targetCrewId || !(crew.shipID) || crewsSingleton.canDisassignCrew"/>
		<bind name="watch" value="'crewActionEnabled';	!isThisLocked &amp;&amp; !isTargetLocked &amp;&amp; (hasSpaceToAssignCrew) &amp;&amp;
										(crew.dismissDelay == 0) &amp;&amp; (isIn(targetShipInfo.country, crew.nationsToSeat) || isCrewCompatibleShipBySpecialList || isCrewCompatibleShipByGroup || isCrewCompatibleShipByPeculiarity)"/>
		<style>
			<width value="100%"/>
			<height value="75px"/>
		</style>
		<block className="dock_submenu_item" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="style" value="'hitTest'; crewActionEnabled"/>
			<bind name="menu" value="'CrewListMenu'; { crewID: crew.id, shipId: _selectedShipId }"/>
			<bind name="request" value="'buttonClick'; 'assignCrewToShip'; { crewID:crew.id, shipId: _selectedShipId }"/>
			<bind name="tooltip" value="'CrewTooltip'; { _crewId: crew.id,
										_checkPenalty: (_selectedShipId != crew.specializationID &amp;&amp; !(targetShipInfo.isWithoutCrewPenalty)),
										targetShipId: _selectedShipId }"/>
			<bind name="name" value="'CrewList_' + crew.id"/>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<bind name="style" value="'alpha';	!(isIn(targetShipInfo.country, crew.nationsToSeat) || (isCrewCompatibleShipBySpecialList || isCrewCompatibleShipByGroup || isCrewCompatibleShipByPeculiarity)) ||
								(crew.dismissDelay &gt; 0) ||
								isTargetLocked || isThisLocked ? 0.3 : 1"/>
			<bind name="class" value="!isThisLocked &amp;&amp; !isTargetLocked ? '$TextMouseDisable' : '$MouseEnable'"/>
			<style>
				<backgroundColor value="0x01000000"/>
			</style>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<alpha value="0.5"/>
					<marginLeft value="-10px"/>
				</style>
				<bind name="instance" value="'NationFlagsSmall'; { shipCountry: thisShipInfo.flagName }"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<marginTop value="9px"/>
						<marginRight value="4px"/>
					</style>
					<bind name="instance" value="'ShipLineItem'; crew.isInBarracks || crew.dismissDelay	? { _shipId: crew.specializationID, _width: 'auto'} 
																						: { _shipId: crew.shipID, _width: 'auto'}"/>
				</block>
				<block type="text">
					<bind name="name" value="'Commander_' + crew.firstNameIDS + ' ' + crew.lastNameIDS"/>
					<styleClass value="$TextDefault"/>
					<bind name="class" value="crew.specializationID != _selectedShipId &amp;&amp; !(targetShipInfo.isWithoutCrewPenalty) ? '$FontColorUnready' : '$None'"/>
					<style>
						<width value="100%"/>
						<marginTop value="4px"/>
						<textAlign value="right"/>
						<leading value="-5"/>
						<marginRight value="-20px"/>
					</style>
					<bind name="text" value="tr(crew.firstNameIDS) + ' ' + tr(crew.lastNameIDS)"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="instance" value="'CommanderPortraitSmall'; {_baseUrl: crew.baseUrl, _overlayUrl: crew.overlayUrl, _isUnique: crew.isUnique}"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<bottom value="1px"/>
					<right value="15px"/>
				</style>
				<bind name="instance" value="'ScoreRatioCounter'; { 	_playerPointsCounter: crew.freeSkillPoints, 
													_totalPointsCounter: crew.allSkillPoints,
													_tooltipTextPlayerResult: 'IDS_CREW_PLAYAER_POINTS_COUNTER', 
													_tooltipTextTotalResult: 'IDS_CREW_TOTAL_POINTS_COUNTER' }"/>
			</block>
			<block>
				<bind name="visible" value="(crewRetraining.isInAdaptation == true)"/>
				<style>
					<width value="150px"/>
					<bottom value="1px"/>
					<position value="absolute"/>
				</style>
				<block className="indicator_progress_bar_orange" type="native">
					<style>
						<width value="100%"/>
					</style>
					<bind name="value" value="crewRetraining.adaptationExperienceEarned"/>
					<bind name="maximum" value="crewRetraining.adaptationExperiencePenalty"/>
				</block>
				<block type="text">
					<styleClass value="$TextSecondary"/>
					<style>
						<marginLeft value="-2px"/>
					</style>
					<bind name="visible" value="crewRetraining.isInAdaptation"/>
					<bind name="class" value="'$FontColorUnready'"/>
					<bind name="text" value="format(crewRetraining.adaptationExperienceEarned) + ' / ' + format(crewRetraining.adaptationExperiencePenalty)"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="(crewRetraining.isInAdaptation != true)"/>
				<style>
					<position value="absolute"/>
					<left value="-5px"/>
					<bottom value="0px"/>
				</style>
				<bind name="repeat" value="crew.learnedSkillIDs.length &gt; 5 ? 5 : crew.learnedSkillIDs.length; 'CrewSkillItemSmall'; 
					{	_skillIDs: crew.learnedSkillIDs,
						_penalty: crew.specializationID != _selectedShipId &amp;&amp; !(targetShipInfo.isWithoutCrewPenalty) }"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="!crewActionEnabled"/>
			<bind name="name" value="'CrewList_' + crew.id"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundColor value="0x01000000"/>
			</style>
			<bind name="tooltip" value="'CrewTooltip'; { _crewId: crew.id, _checkPenalty: (_selectedShipId != crew.specializationID &amp;&amp; !(targetShipInfo.isWithoutCrewPenalty)),
										_cantMove: !(!isThisLocked &amp;&amp; !isTargetLocked &amp;&amp; hasSpaceToAssignCrew),
										crewsSingleton: crewsSingleton, targetShipId: _selectedShipId }"/>
			<bind name="menu" value="'CrewListMenu'; (crew.dismissDelay == 0) ? { crewID: crew.id} : null"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$MiddleVAligned"/>
			<block>
				<bind name="fade" value="crew.dismissDelay &gt; 0 &amp;&amp; rollOver; 0.15; {alpha: 0, top: 20}; {alpha: 1, top: 0}"/>
				<bind name="instance" value="'CancelDemobilizationButton'; {crew: crew, crewsSingleton: crewsSingleton}"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
				</style>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$MiddleAligned"/>
				<bind name="fade" value="crew.dismissDelay &gt; 0 &amp;&amp; !rollOver; 0.15; {alpha: 0, top: -20}; {alpha: 1, top: 0}"/>
				<bind name="instance" value="'WaitingForDemobilization'; {_dismissDelay: crew.dismissDelay}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="isThisLocked"/>
			<style>
				<position value="absolute"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$MiddleVAligned"/>
			<bind name="instance" value="'CrewInBattle'; isThisLocked ? {} : null"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<right value="6"/>
				<bottom value="6"/>
			</style>
			<bind name="fade" value="rollOver &amp;&amp; crew.dismissDelay == 0; 0.15; {alpha: 0}; {alpha: 1}; {alpha: 0}; 2"/>
			<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_CREW_PROFILE'}"/>
			<block className="button_info" type="native">
				<bind name="name" value="'Crew_Info_' + crew.id"/>
				<bind name="request" value="'buttonClick';'crewFile';{crewID: crew.id}"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<block className="RedistributeSkillPoints">
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; _crewId"/>
		<bind name="watchDH" value="'selectedShipCrew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'selectedShipCrew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<style>
			<width value="270px"/>
		</style>
		<block>
			<styleClass value="$MiddleAligned"/>
			<block type="text">
				<styleClass value="$TextLargeHeader"/>
				<bind name="text" value="tr('IDS_FREE_SKILLPOINTS') + tr('IDS_COLON') + ' '"/>
			</block>
			<block type="text">
				<styleClass value="$TextLargeHeaderBold"/>
				<bind name="class" value="'$FontSizeHeader4'"/>
				<style>
					<marginTop value="-2px"/>
				</style>
				<bind name="text" value="selectedShipCrew.freeSkillPoints"/>
				<bind name="name" value="'FreeSkillPoints'"/>
			</block>
			<block type="text">
				<styleClass value="$TextLargeHeaderBold"/>
				<bind name="class" value="'$FontSizeHeader4'"/>
				<bind name="visible" value="selectedShipCrew.allSkillPoints &gt; 0"/>
				<style>
					<alpha value="0.7"/>
					<marginTop value="-2px"/>
				</style>
				<text value="/"/>
			</block>
			<block type="text">
				<styleClass value="$TextLargeHeaderBold"/>
				<bind name="visible" value="selectedShipCrew.allSkillPoints &gt; 0"/>
				<style>
					<alpha value="0.7"/>
				</style>
				<bind name="text" value="selectedShipCrew.allSkillPoints"/>
				<bind name="name" value="'AllSkillPoints'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<width value="200px"/>
				<marginTop value="3px"/>
			</style>
			<bind name="watch" value="'isRetrainButtonEnabled'; selectedShipCrew.canResetSkills &amp;&amp; !(_isLocked) "/>
			<bind name="tooltip" value="'SimpleWarningTooltip';	isRetrainButtonEnabled	? null : 
												_isInFormation 			? {_text: tr('IDS_SET_UNREADY_DIVISION_FIRST_TO_FREE_CREW_SKILLPOINTS')} :
												_isLocked				? {_text: tr('IDS_WAIT_CREW_FROM_BATTLE_TO_FREE_CREW_SKILLPOINTS')}
																		: null"/>
			<bind name="name" value="'ButtonRedistributeSkillPoints'"/>
			<bind name="instance" value="'DefaultButton'; {	_enabled: isRetrainButtonEnabled, 
											_label: toUpperCase(tr('IDS_CREW_REDISTRIBUTE_PERKS')),
											_isTransactionBtn: true,
											_request: 'freeSkillPointsWindow', _requestParams: { crewId:_crewId, selectedPriceIndex: selectedPriceIndex }}"/>
		</block>
		<block>
			<bind name="visible" value="selectedShipCrew.canResetSkills"/>
			<style>
				<position value="absolute"/>
				<top value="35px"/>
				<left value="240px"/>
			</style>
			<bind name="var" value="{selectedPriceIndex: 0}"/>
			<bind name="catch" value="'selectedPriceChanged'"/>
			<bind name="instance" value="'AlterablePriceTag'; {	_tooltipText: 'IDS_RESET_SKILLPOINTS_COST',
												_prices: selectedShipCrew.skillsResetPrice,
												_showDiscountTag: true,
												_selectedPriceIndex: selectedPriceIndex, 
												_medium: true}"/>
		</block>
	</block>
	<block className="CrewListMenu">
		<bind name="primaryEntityDH" value="'shipTargetOwnEntity'; CC.ownShip; shipId"/>
		<bind name="primaryEntityDH" value="'shipTargetEntity'; CC.ship; shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'targetShipInfo'; ['shipTargetEntity.ship.evUpdate', 'shipTargetEntity.ship.evCurrentSkinChanged']; shipTargetEntity.ship"/>
		<bind name="watchDH" value="'targetShipInfo' + 'Slim'; ['shipTargetEntity.slimClientComponent.evUpdate']; shipTargetEntity.slimClientComponent"/>
		<bind name="primaryEntityDH" value="'shipThisEntity'; CC.ownShip; crew.shipID"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'targetShipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'targetShipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; crewID"/>
		<bind name="watchDH" value="'crew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'crew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'crewsSingleton'; ['dockEntity.crewData.evUpdate']; dockEntity.crewData"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="watchDH" value="'isThisLocked';			['shipThisEntity.ownShip.evUpdateLock'];		shipThisEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'isThisInFormation';	['shipThisEntity.ownShip.evUpdateLock'];		shipThisEntity.ownShip.isInFormation"/>
		<bind name="watchDH" value="'isTargetLocked';		['shipTargetOwnEntity.ownShip.evUpdateLock'];	shipTargetOwnEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'targetCrewId';			['shipTargetOwnEntity.ownShip.evCrewChanged'];	shipTargetOwnEntity.ownShip.crewId"/>
		<styleClass value="$DefaultMenuBehaviour"/>
		<style>
			<width value="230px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block className="dock_submenu_item" type="native">
			<styleClass value="$ContextMenuListItem"/>
			<bind name="request" value="'buttonClick';'crewFile';{crewID:crewID}"/>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$ContextMenuListItemContent"/>
				<text value="IDS_CREW_GO_TO_PROFILE"/>
			</block>
		</block>
		<bind name="watch" value="'isCrewCompatibleShipBySpecialList'; indexOf(targetShipInfo.fullName, crew.shipsToSeat) &gt; -1"/>
		<bind name="watch" value="'isCrewCompatibleShipByPeculiarity'; indexOf(targetShipInfo.peculiarity, crew.peculiaritiesToSeat) &gt; -1"/>
		<bind name="watch" value="'isCrewCompatibleShipByGroup'; indexOf(targetShipInfo.group, crew.shipGroups) &gt; -1"/>
		<block>
			<bind name="visible" value="((isIn(targetShipInfo.country, crew.nationsToSeat)) || isCrewCompatibleShipBySpecialList || isCrewCompatibleShipByGroup || isCrewCompatibleShipByPeculiarity)"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="dock_submenu_item" type="native">
				<style>
					<flow value="horizontal"/>
					<overflow value="hidden"/>
					<width value="100%"/>
				</style>
				<bind name="watch" value="'hasSpaceToAssignCrew'; !targetCrewId || !(crew.shipID) || crewsSingleton.canDisassignCrew"/>
				<bind name="request" value="'buttonClick'; 'assignCrewToShip'; {crewID:crewID, shipId: shipTargetOwnEntity.ownShip.id}"/>
				<bind name="enabled" value="hasSpaceToAssignCrew &amp;&amp; !isTargetLocked &amp;&amp; !isThisLocked"/>
				<bind name="style" value="'hitTest'; hasSpaceToAssignCrew &amp;&amp; !isTargetLocked &amp;&amp; !isThisLocked ? true : false"/>
				<bind name="style" value="'alpha'; hasSpaceToAssignCrew &amp;&amp; !isTargetLocked &amp;&amp; !isThisLocked ? 1 : 0.5"/>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<marginLeft value="6px"/>
						<marginRight value="6px"/>
					</style>
					<text value="IDS_ASSIGN_TO"/>
				</block>
				<block>
					<style>
						<marginTop value="7px"/>
						<hitTest value="false"/>
					</style>
					<bind name="instance" value="'ShipLineItem'; { _shipId: shipId }"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="crewsSingleton.canDisassignCrew &amp;&amp; !(crew.isInBarracks)"/>
			<styleClass value="$ContextMenuListItem"/>
			<bind name="style" value="'hitTest'; isThisLocked ? false : true"/>
			<block className="dock_submenu_item" type="native">
				<styleClass value="$Fullsize"/>
				<bind name="request" value="'buttonClick';'disassignCrew';{crewID:crewID}"/>
				<bind name="name" value="'dismissCrew'"/>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="style" value="'alpha'; isThisLocked ? 0.6 : 1.0"/>
					<text value="IDS_CREW_TO_BARRACKS"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="crew.dismissable == true"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="dock_submenu_item" type="native">
				<bind name="request" value="'buttonClick';'fireCrew';{crewID:crewID}"/>
				<bind name="style" value="'hitTest'; isThisLocked || !(crew.dismissable) ? false : true"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="name" value="'CrewFireButton'"/>
				<block type="text">
					<style>
						<position value="absolute"/>
					</style>
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="style" value="'alpha'; isThisLocked || !(crew.dismissable) ? 0.6 : 1.0"/>
					<text value="IDS_CREW_FIRE"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="!(hasSpaceToAssignCrew)"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="icon_warning_red" type="native">
				<style>
					<marginTop value="8px"/>
					<marginLeft value="5px"/>
					<marginRight value="5px"/>
				</style>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<styleClass value="$MiddleVAligned"/>
				<bind name="class" value="'$FontColorCompareNegative'"/>
				<style>
					<width value="100%"/>
				</style>
				<text value="IDS_BARRACK_IS_FULL"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="crew.shipID &amp;&amp; (isThisLocked || isThisInFormation)"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="icon_warning_orange" type="native">
				<style>
					<marginTop value="5px"/>
					<marginLeft value="5px"/>
					<marginRight value="5px"/>
				</style>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorUnready'"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="text" value="isThisInFormation ? 'IDS_READY_TO_BATTLE_IN_' + toUpperCase(tr(divisionEntranceData.divisionType)) : 'IDS_IN_BATTLE'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="CrewMenu">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'crewsSingleton'; ['dockEntity.crewData.evUpdate']; dockEntity.crewData"/>
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; _crewId"/>
		<bind name="watchDH" value="'crew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'crew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; crew.shipID"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; crew.shipID; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="watchDH" value="'isLocked';			['shipOwnEntity.ownShip.evUpdateLock'];		shipOwnEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'isInFormation';	['shipOwnEntity.ownShip.evUpdateLock'];		shipOwnEntity.ownShip.isInFormation"/>
		<styleClass value="$DefaultMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="!(_dropDown)"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
			<block className="hint_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="_dropDown"/>
			<block className="dock_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<marginTop value="-9px"/>
					<marginRight value="-14px"/>
					<marginBottom value="-19px"/>
					<marginLeft value="-14px"/>
				</style>
			</block>
		</block>
		<block>
			<bind name="visible" value="(_fromCrewSelect == true)"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="dock_submenu_item" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="request" value="'buttonClick'; 'crewFile'; {crewID: _crewId}"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$ContextMenuListItemContent"/>
				<text value="IDS_CREW_GO_TO_PROFILE"/>
			</block>
		</block>
		<block>
			<styleClass value="$ContextMenuListItem"/>
			<bind name="visible" value="crewRetraining.needRetraining == true"/>
			<bind name="style" value="'hitTest'; isLocked ? false : true"/>
			<block className="dock_submenu_item" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="request" value="'buttonClick'; 'retrainCrew'; {shipId: (shipInfo.isPremium ? crew.specializationID : crew.shipID), crewID: _crewId}"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$ContextMenuListItemContent"/>
				<bind name="style" value="'alpha'; isLocked ? 0.6 : 1.0"/>
				<text value="IDS_CREW_RETRAIN"/>
			</block>
		</block>
		<bind name="request" value="'Tooltip.selfOpened'; 'updateSuitableShips'; { crewId: _crewId}"/>
		<bind name="collectionDH" value="CC.ship; 'suitableShips'; 'suitableShips'"/>
		<bind name="collectionFields" value="suitableShips; ['ship.country', 'ship.subtype']; [Country.getOrderSortIndex, ShipTypes.getOrderSortIndex]"/>
		<block>
			<styleClass value="$ContextMenuListItem"/>
			<bind name="visible" value="suitableShips.length &gt; 0"/>
			<bind name="style" value="'hitTest'; isLocked ? false : true"/>
			<bind name="style" value="'alpha'; isLocked ? 0.6 : 1.0"/>
			<bind name="tooltip" value="'AssignCrewNationMenu'; (suitableShips_ship_country.length &gt; 1) 	?
																							{ _countries: suitableShips_ship_country, _subtypes: suitableShips_ship_subtype, _crewId: _crewId, _dropDown: _dropDown }
																							: null; 13"/>
			<bind name="tooltip" value="'AssignCrewShipTypeMenu'; (suitableShips_ship_country.length == 1) 	?
																							{ _countries: suitableShips_ship_country, _subtypes: suitableShips_ship_subtype, _crewId: _crewId, _dropDown: _dropDown, _country: suitableShips_ship_country[0]}
																							:null; 13"/>
			<block className="dock_submenu_item" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$ContextMenuListItemContent"/>
				<text value="IDS_ASSIGN_TO"/>
			</block>
			<block className="button_expand_h" type="native">
				<style>
					<position value="absolute"/>
					<right value="6px"/>
				</style>
				<styleClass value="$MouseDisable"/>
				<styleClass value="$MiddleVAligned"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!(crew.isInBarracks)"/>
			<styleClass value="$ContextMenuListItem"/>
			<style>
				<backgroundColor value="0x01000000"/>
			</style>
			<bind name="tooltip" value="'SimpleWarningTooltip';	!crewsSingleton.canDisassignCrew &amp;&amp; !(crew.isInBarracks)	? {_text: tr('IDS_UNABLE_TO_DISASSIGN_CREW')}
																											: null"/>
			<block>
				<styleClass value="$Fullsize"/>
				<bind name="style" value="'hitTest'; (isLocked || !crewsSingleton.canDisassignCrew) ? false : true"/>
				<bind name="style" value="'alpha'; (isLocked || !crewsSingleton.canDisassignCrew) ? 0.6 : 1.0"/>
				<block className="MenuItem">
					<styleClass value="$Fullsize"/>
					<block className="dock_submenu_item" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<styleClass value="$MiddleVAligned"/>
						<styleClass value="$ContextMenuListItemContent"/>
						<bind name="text" value="'IDS_CREW_TO_BARRACKS'"/>
					</block>
				</block>
				<bind name="name" value="'dismissCrew'"/>
				<bind name="request" value="'click'; 'disassignCrew'; {crewID: _crewId}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="crew.dismissable == true"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="dock_submenu_item" type="native">
				<bind name="request" value="'buttonClick'; 'fireCrew'; {crewID: _crewId}"/>
				<bind name="style" value="'hitTest'; isLocked || !(crew.dismissable) ? false : true"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="name" value="'CrewFireButton'"/>
				<block type="text">
					<style>
						<position value="absolute"/>
					</style>
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="style" value="'alpha'; isLocked || !(crew.dismissable) ? 0.6 : 1.0"/>
					<text value="IDS_CREW_FIRE"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="(crew.level != crewsSingleton.maxLevel)"/>
			<styleClass value="$ContextMenuListItem"/>
			<style>
				<backgroundColor value="0x01000000"/>
			</style>
			<bind name="watch" value="'isFastTrainingEnabled'; (!(isLocked) &amp;&amp; !(crewRetraining.isInAdaptation))"/>
			<bind name="tooltip" value="'SimpleWarningTooltip';	isLocked						? {_text: tr('IDS_FAST_TRAINING_DISABLE_REASON_SHIP_IS_IN_BATTLE')} :
												crewRetraining.isInAdaptation	? {_text: tr('IDS_FAST_TRAINING_DISABLE_REASON_IN_ADAPTATION')}
																				: null"/>
			<bind name="tooltip" value="'SimpleWarningTooltip';	playerInDivision[0].isInBattle	? {_text: tr('IDS_UNABLE_TO_EXCLUDE_PLAYER_OUT_OF_PARTY')}
																				: null"/>
			<block>
				<styleClass value="$Fullsize"/>
				<bind name="style" value="'hitTest'; isFastTrainingEnabled ? true : false"/>
				<bind name="style" value="'alpha'; 	isFastTrainingEnabled ? 1 : 0.5"/>
				<block className="MenuItem">
					<styleClass value="$Fullsize"/>
					<block className="dock_submenu_item" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<styleClass value="$MiddleVAligned"/>
						<styleClass value="$ContextMenuListItemContent"/>
						<bind name="text" value="'IDS_CREW_FAST_LEARNING'"/>
					</block>
				</block>
				<bind name="request" value="'click'; 'crewFastTraining'; { shipId: crew.shipID, crewID: _crewId }"/>
			</block>
		</block>
		<block>
			<styleClass value="$ContextMenuListItem"/>
			<style>
				<height value="auto"/>
			</style>
			<bind name="visible" value="	(!(crewsSingleton.canDisassignCrew) &amp;&amp; suitableShips.length == 0)
			 			|| (suitableShips.length == 0 &amp;&amp; crew.isInBarracks &amp;&amp; !(crew.dismissable))"/>
			<block className="icon_warning_red" type="native">
				<style>
					<marginTop value="8px"/>
					<marginLeft value="5px"/>
					<marginRight value="5px"/>
				</style>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<style>
					<width value="100%"/>
					<maxWidth value="150"/>
					<marginTop value="2px"/>
					<marginBottom value="5px"/>
				</style>
				<bind name="class" value="'$FontColorCompareNegative'"/>
				<bind name="text" value="crew.isInBarracks ? 'IDS_NO_SUITABLE_SHIPS' : 'IDS_BARRACK_IS_FULL'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="crew.shipID &amp;&amp; (isLocked || isInFormation)"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="icon_warning_orange" type="native">
				<style>
					<marginTop value="4px"/>
					<marginLeft value="8px"/>
					<marginRight value="5px"/>
				</style>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorUnready'"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="text" value="isInFormation		? 'IDS_READY_TO_BATTLE_IN_DIVISION'
											: 'IDS_IN_BATTLE'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="AssignCrewNationMenu">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<styleClass value="$LeftSubMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="!_dropDown"/>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="contrast_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
			<block className="hint_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="_dropDown"/>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="dock_panel" type="native">
				<style>
					<marginTop value="-8px"/>
					<marginRight value="-14px"/>
					<marginBottom value="-16px"/>
					<marginLeft value="-14px"/>
				</style>
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="repeat" value="_countries; 'AssignCrewNationItem'; { _countries: _countries, _subtypes: _subtypes, _crewId: _crewId, _dropDown: _dropDown }"/>
		</block>
	</block>
	<block className="AssignCrewNationItem">
		<styleClass value="$ContextMenuListItem"/>
		<bind name="tooltip" value="'AssignCrewShipTypeMenu'; { _subtypes: _subtypes, _country: $value, _crewId: _crewId, _dropDown: _dropDown }; 13"/>
		<block className="dock_submenu_item" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<flow value="horizontal"/>
			</style>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<marginLeft value="6px"/>
					<alpha value="0.7"/>
					<hitTest value="false"/>
				</style>
				<bind name="instance" value="'NationFlagsTiny'; { shipCountry: $value }"/>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<marginLeft value="-12px"/>
					<hitTest value="false"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<bind name="text" value="tr(toUpperCase('IDS_' + $value))"/>
				</block>
			</block>
			<block className="button_expand_h" type="native">
				<style>
					<position value="absolute"/>
					<right value="6px"/>
				</style>
				<styleClass value="$MouseDisable"/>
				<styleClass value="$MiddleVAligned"/>
			</block>
		</block>
	</block>
	<block className="AssignCrewShipTypeMenu">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<styleClass value="$LeftSubMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="!_dropDown"/>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="contrast_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
			<block className="hint_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="_dropDown"/>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="dock_panel" type="native">
				<style>
					<marginTop value="-8px"/>
					<marginRight value="-14px"/>
					<marginBottom value="-19px"/>
					<marginLeft value="-14px"/>
				</style>
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="repeat" value="_subtypes; 'AssignCrewShipTypeItem'; { _country: _country, _crewId: _crewId, _dropDown: _dropDown }"/>
		</block>
	</block>
	<block className="AssignCrewShipTypeItem">
		<bind name="collectionDH" value="CC.ship; 'suitableShipsRoot'; 'suitableShips'"/>
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; _crewId"/>
		<bind name="watchDH" value="'crewInfo'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'crewInfo'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<bind name="collectionDesign" value="DES_suitableShipsRoot; 'suitableShips';
        			{	'filter': ($entity.ship.subtype == $value) &amp;&amp; ($entity.ship.country == _country) &amp;&amp; ((crewInfo.shipsToSeat &amp;&amp; indexOf($entity.ship.fullName, crewInfo.shipsToSeat) &gt; -1) || ($entity.ownShip != null)),
        				'sort':['ownShip', 'ship.isPremium', 'ship.level'],
        				'sortOrder' : [2, 2, 0]
        			}"/>
		<bind name="tooltip" value="'ShipsToHireMenu'; (suitableShips.length &gt; 0) ? { _suitableShips: suitableShips, _country: _country, _crewId: _crewId, _dropDown: _dropDown } : null; 13"/>
		<bind name="tooltip" value="'SimpleTooltip'; (suitableShips.length == 0) ? { tooltipText: 'IDS_NO_SUITABLE_SHIPS' } : null; 0"/>
		<styleClass value="$ContextMenuListItem"/>
		<block className="dock_submenu_item" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<flow value="horizontal"/>
			</style>
			<bind name="style" value="'alpha'; (suitableShips.length == 0) ? 0.4 : 1"/>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<marginLeft value="6px"/>
					<hitTest value="false"/>
				</style>
				<block className="icon_ship" type="native">
					<bind name="gotoAndStop!" value="$value"/>
				</block>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<marginLeft value="4px"/>
					<hitTest value="false"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<bind name="text" value="tr(toUpperCase('IDS_' + $value))"/>
				</block>
			</block>
			<block>
				<styleClass value="$Fullsize"/>
				<bind name="visible" value="(suitableShips.length &gt; 0)"/>
				<block className="button_expand_h" type="native">
					<style>
						<position value="absolute"/>
						<right value="6px"/>
					</style>
					<styleClass value="$MouseDisable"/>
					<styleClass value="$MiddleVAligned"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ShipsToHireMenu">
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; _crewId"/>
		<bind name="watchDH" value="'crew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'crew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'crewsSingleton'; ['dockEntity.crewData.evUpdate']; dockEntity.crewData"/>
		<styleClass value="$LeftSubMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="!_dropDown"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
			<block className="hint_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="_dropDown"/>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="dock_panel" type="native">
				<style>
					<marginTop value="-8px"/>
					<marginRight value="-14px"/>
					<marginBottom value="-19px"/>
					<marginLeft value="-14px"/>
				</style>
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="repeat" value="_suitableShips; 'ShipsToHireMenuItem'; { _crewId: _crewId, _crewShipId: crew.shipID }"/>
		</block>
		<block>
			<bind name="visible" value="!(crewsSingleton.canDisassignCrew) &amp;&amp; !(crew.isInBarracks)"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="icon_warning_red" type="native">
				<style>
					<marginTop value="8px"/>
					<marginLeft value="5px"/>
					<marginRight value="5px"/>
				</style>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="class" value="'$FontColorCompareNegative'"/>
				<text value="IDS_BARRACK_IS_FULL"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ShipsToHireMenuItem">
		<bind name="dataRefDH" value="'shipEntity'; '$dataRef.ref'"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; shipEntity.ship.id"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'crewsSingleton'; ['dockEntity.crewData.evUpdate']; dockEntity.crewData"/>
		<bind name="watch" value="'isOwned'; shipOwnEntity != null"/>
		<bind name="watchDH" value="'isTargetLocked';	['shipOwnEntity.ownShip.evUpdateLock'];		shipOwnEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'targetCrewId';		['shipOwnEntity.ownShip.evCrewChanged'];	shipOwnEntity.ownShip.crewId"/>
		<styleClass value="$ContextMenuListItem"/>
		<block className="dock_submenu_item" type="native">
			<styleClass value="$Fullsize"/>
			<bind name="watch" value="'hasSpaceToAssignCrew'; !targetCrewId || !(_crewShipId) || crewsSingleton.canDisassignCrew"/>
			<bind name="enabled" value="hasSpaceToAssignCrew &amp;&amp; !isTargetLocked"/>
			<bind name="style" value="'hitTest'; hasSpaceToAssignCrew &amp;&amp; !isTargetLocked ? true : false"/>
			<bind name="style" value="'alpha'; hasSpaceToAssignCrew &amp;&amp; !isTargetLocked ? 1 : 0.6"/>
			<bind name="request" value="'buttonClick'; isOwned ? 'assignCrewToShip' : null; { crewID: _crewId, shipId: shipEntity.ship.id }"/>
			<block>
				<style>
					<marginLeft value="6px"/>
					<marginRight value="6px"/>
					<marginTop value="9px"/>
					<hitTest value="false"/>
				</style>
				<bind name="instance" value="'ShipLineItem'; { _shipId: shipOwnEntity.ship.id, _width: '150px'}"/>
			</block>
		</block>
	</block>
	<block className="CrewTooltip">
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; _crewId"/>
		<bind name="watchDH" value="'crew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'crew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; crew.shipID ? crew.shipID : crew.specializationID"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; crew.shipID ? crew.shipID : crew.specializationID; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="primaryEntityDH" value="'shipTargetOwnEntity'; CC.ownShip; targetShipId"/>
		<bind name="primaryEntityDH" value="'shipTargetEntity'; CC.ship; targetShipId; 'evUpdate'"/>
		<bind name="watchDH" value="'targetShipInfo'; ['shipTargetEntity.ship.evUpdate', 'shipTargetEntity.ship.evCurrentSkinChanged']; shipTargetEntity.ship"/>
		<bind name="watchDH" value="'targetShipInfo' + 'Slim'; ['shipTargetEntity.slimClientComponent.evUpdate']; shipTargetEntity.slimClientComponent"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'crewsSingleton'; ['dockEntity.crewData.evUpdate']; dockEntity.crewData"/>
		<bind name="collectionDH" value="CC.crewVanity; 'activeVanity'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'activeVanity'+'ROOT'; 'activeVanity'; {'filter': ($entity.crewVanity.state == true) &amp;&amp; ($entity.crewVanity.locked == false) &amp;&amp; ($entity.crewVanity.crewId == _crewId)}; ['crewVanity.evUpdate']"/>
		<bind name="collectionDH" value="CC.crewUniqueSkill; 'activeTalent'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'activeTalent'+'ROOT'; 'activeTalent'; {'filter': ($entity.crewUniqueSkill.crewId == _crewId)}; []"/>
		<bind name="watchDH" value="'ownShipExp';			['shipOwnEntity.ownShip.evUpdateConfig'];		shipOwnEntity.ownShip.exp"/>
		<bind name="watchDH" value="'isThisLocked';			['shipOwnEntity.ownShip.evUpdateLock'];			shipOwnEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'isTargetLocked';		['shipTargetOwnEntity.ownShip.evUpdateLock'];	shipTargetOwnEntity.ownShip.isLocked"/>
		<bind name="watch" value="'isCrewCompatibleShipBySpecialList'; indexOf(targetShipInfo.fullName, crew.shipsToSeat) &gt; -1"/>
		<bind name="watch" value="'isCrewCompatibleShipByGroup'; indexOf(targetShipInfo.group, crew.shipGroups) &gt; -1"/>
		<bind name="watch" value="'isCrewCompatibleShipByPeculiarity'; indexOf(targetShipInfo.peculiarity, crew.peculiaritiesToSeat) &gt; -1"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<params>
			<param name="name" value="crew_tooltip"/>
		</params>
		<style>
			<width value="330px"/>
		</style>
		<styleClass value="$MouseDisable"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'ShipInfoTabHeader'; {	_fromCrew: true, shipId: shipInfo.id }"/>
		</block>
		<block>
			<bind name="visible" value="crew.shipID &amp;&amp; (_inPBS != true)"/>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<style>
				<marginBottom value="9px"/>
			</style>
			<bind name="instance" value="'CurrentXPLarge'; (crew.shipID &amp;&amp; (_inPBS != true)) ? { _exp: ownShipExp, _label: 'IDS_SHIP_EXPERIENCE'} : null"/>
		</block>
		<block>
			<bind name="visible" value="(_inPBS == true)"/>
			<style>
				<height value="30px"/>
			</style>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<height value="82px"/>
			</style>
			<bind name="instance" value="'CrewShipPanelInnerBlock'; {_crewId: crew.id, _shipId: shipOwnEntity.ownShip.id, _inTooltip: true }"/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="crew.specializationID != shipOwnEntity.ownShip.id"/>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginTop value="6px"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="text" value="crewRetraining.isInAdaptation ? ('IDS_CREW_IN_ADAPTATION') : (tr('IDS_SPECIALITY') + tr('IDS_COLON'))"/>
			</block>
			<block>
				<style>
					<marginTop value="6px"/>
					<marginLeft value="6px"/>
				</style>
				<bind name="instance" value="'ShipLineItem'; { _shipId: crew.specializationID, _width: 'auto'}"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="visible" value="(_checkPenalty == true) &amp;&amp; isIn(targetShipInfo.country, crew.nationsToSeat)"/>
			<block>
				<style>
					<marginTop value="4px"/>
				</style>
				<block className="icon_warning_orange" type="native"/>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<style>
						<marginTop value="-4px"/>
					</style>
					<bind name="class" value="'$FontColorUnready'"/>
					<text value="IDS_CREW_ADAPTATION_AFTER_ASSIGN_TO"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<style>
					<marginTop value="9px"/>
				</style>
				<bind name="instance" value="'ShipLineItem'; {_shipId: targetShipId}"/>
			</block>
			<block>
				<style>
					<marginTop value="6px"/>
				</style>
				<bind name="tooltip" value="'SimpleTooltip';{tooltipText: 'IDS_HINT_CREWEXP_TO_ADAPTATION'}"/>
				<block className="indicator_progress_bar_orange" type="native">
					<style>
						<width value="230px"/>
					</style>
					<bind name="value" value="crew.selectedShipPenalties.penaltyExp"/>
					<bind name="maximum" value="crew.selectedShipPenalties.penalty"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorUnready'"/>
					<bind name="text" value="format(crew.selectedShipPenalties.penaltyExp) + ' / ' + format(crew.selectedShipPenalties.penalty)"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<style>
				<flow value="htile"/>
				<align value="center"/>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'EmptyStatusParagraph'; (crew.learnedSkillIDs.length &gt; 0) ? null : {_text: 'IDS_CREW_HAS_NO_LEARNED_SKILLS'}"/>
			<bind name="repeat" value="crew.learnedSkillIDs; 'CrewSkillItem'; { _penalty: crew.skillsEffectiveness &lt; 1 || _checkPenalty }"/>
		</block>
		<block>
			<bind name="visible" value="(activeTalent.length &gt; 0) || (activeVanity.length &gt; 0)"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="(activeTalent.length &gt; 0) || (activeVanity.length &gt; 0)"/>
			<styleClass value="$InfoBlockIndent"/>
			<style>
				<flow value="htile"/>
				<align value="center"/>
				<width value="100%"/>
			</style>
			<bind name="repeat" value="activeTalent; 'CrewTalentsInTooltip'; { _crewID: _crewId }"/>
			<bind name="repeat" value="activeVanity; 'CrewVanityInTooltip'; { _crewID: _crewId }"/>
		</block>
		<block>
			<bind name="visible" value="	(targetShipInfo &amp;&amp;
						!(isIn(targetShipInfo.country, crew.nationsToSeat)) &amp;&amp;
						!(isCrewCompatibleShipBySpecialList) &amp;&amp;
						!(isCrewCompatibleShipByPeculiarity) &amp;&amp;
						!(isCrewCompatibleShipByGroup))"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<bind name="instance" value="'StatusLineWithIcon'; { _text: 'IDS_CREW_CAN_ONLY_OPERATE_DEFAULT_NATION_SHIP', _maxWidth: 284, _large: true}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="(_inPBS != true)"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="visible" value="(crew.dismissDelay != 0) &amp;&amp; (_inPBS != true)"/>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<block>
					<styleClass value="$MiddleAligned"/>
					<bind name="instance" value="'WaitingForDemobilization'; {_dismissDelay: crew.dismissDelay}"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<style>
						<maxWidth value="300"/>
					</style>
					<bind name="class" value="'$FontColorBlueish'"/>
					<bind name="text" value="(crewsSingleton.barracksCapacity - crewsSingleton.crewsInBarracks) == 0 ? 'IDS_TO_CANCEL_EXPAND_BARRACKS' : 'IDS_CLICK_CANCEL_DEMOBILIZATION'"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="(_inRewards == true) &amp;&amp; (_inPBS != true) &amp;&amp; (_isPRMP != true)"/>
			<style>
				<width value="100%"/>
				<marginBottom value="9px"/>
			</style>
			<bind name="instance" value="'RewardReasonsList'; _inRewards ? {_rewardReasons: _rewardReasons} : null"/>
		</block>
		<block>
			<bind name="visible" value="(crew.dismissDelay == 0) &amp;&amp; (_inRewards != true) &amp;&amp; (_inPBS != true)"/>
			<styleClass value="$InfoBlockIndent"/>
			<block>
				<style>
					<marginBottom value="6px"/>
				</style>
				<bind name="visible" value="!(_cantMove) &amp;&amp; (isIn(targetShipInfo.country, crew.nationsToSeat) || isCrewCompatibleShipBySpecialList || isCrewCompatibleShipByGroup || isCrewCompatibleShipByPeculiarity)"/>
				<bind name="instance" value="'MouseInstruction'; {	_type: 'left', _instructionText: (_fromPort	? 'IDS_HINT_LEFT_CLICK_FOR_CREW_WINDOW'
																								: 'IDS_HINT_ASSIGN_CREW_TO_THIS_SHIP'),
													_maxWidth: 280}"/>
			</block>
			<bind name="watch" value="'restrictionVisible'; ((_cantMove) &amp;&amp; isIn(targetShipInfo.country, crew.nationsToSeat)) || (isTargetLocked &amp;&amp; isThisLocked)"/>
			<block>
				<style>
					<marginTop value="2px"/>
					<marginBottom value="6px"/>
				</style>
				<bind name="visible" value="restrictionVisible == true"/>
				<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
				<bind name="watchDH" value="'isSelfPlayerReady'; ['selfPlayerEntity.preBattlePlayerSimple.evStateChanged']; selfPlayerEntity.preBattlePlayerSimple.isReady"/>
				<bind name="instance" value="'MouseInstructionRepeater';	restrictionVisible	?	{	_type: isSelfPlayerReady	?	'warning'
																												:	'restriction',
																					_instructionText:	isSelfPlayerReady				? 'IDS_NOT_READY_TO_BATTLE_IN_FORMATION_INFO_HINT_ASSIGN_CREW_TO_THIS_SHIP' :
																										isTargetLocked					? 'IDS_READY_TO_BATTLE_DENY_REASON_SHIP_IS_IN_BATTLE' :
																										isThisLocked					? 'IDS_IN_BATTLE'
																																		: 'IDS_BARRACK_IS_FULL',
																					_maxWidth: 270}
																			: 	null"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="instance" value="'MouseInstruction'; (_inPBS != true)	? {_type: 'right', _instructionText: 'IDS_HINT_RIGHT_CLICK_FOR_CONTEXT_MENU', _maxWidth: 280}
																	: null"/>
			</block>
		</block>
	</block>
	<block className="SkillLearnStatus">
		<style>
			<width value="100%"/>
			<flow value="horizontal"/>
		</style>
		<block type="text">
			<bind name="visible" value="_dependenciesLearned &amp;&amp; !(_learned)"/>
			<styleClass value="$TextDefaultNM"/>
			<style>
				<marginRight value="12px"/>
			</style>
			<bind name="text" value="tr('IDS_LEARN_COST') + tr('IDS_COLON') +' ' + _cost"/>
		</block>
		<bind name="watch" value="'isDeficit'; (_dependenciesLearned &amp;&amp; (_deficit &gt; 0) &amp;&amp; !(_learned))"/>
		<block>
			<bind name="visible" value="_learned || !(_dependenciesLearned) || isDeficit"/>
			<style>
				<width value="100%"/>
				<flow value="horizontal"/>
			</style>
			<block className="icon_module_state" type="native">
				<style>
					<position value="absolute"/>
					<top value="-2px"/>
					<left value="-1px"/>
				</style>
				<bind name="gotoAndStop!" value="isDeficit 				? 'not_enough' :
								_dependenciesLearned 	? 'installed'
														: 'action'"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefaultNM"/>
				<style>
					<maxWidth value="260"/>
					<marginLeft value="22px"/>
					<leading value="-3"/>
				</style>
				<bind name="class" value="isDeficit 				? '$FontColorCompareNegative' :
						_dependenciesLearned	? '$FontColorGolden' 
												: '$FontColorUnready'"/>
				<bind name="text" value="isDeficit 				? (tr('IDS_NOT_ENOUGH') + ' ' + _deficit) :
						_dependenciesLearned 	? 'IDS_LEARNED'
												: 'IDS_SKILL_LEARN_PREVIOUS_LEVEL'"/>
			</block>
		</block>
	</block>
	<block className="SkillAdaptationStatus">
		<style>
			<width value="100%"/>
			<flow value="horizontal"/>
		</style>
		<block className="icon_warning_orange" type="native">
			<bind name="visible" value="_blockable != true"/>
			<style>
				<marginTop value="-2px"/>
			</style>
		</block>
		<block className="icon_restrict_red" type="native">
			<bind name="visible" value="_blockable == true"/>
			<style>
				<marginTop value="-2px"/>
			</style>
		</block>
		<block type="text">
			<styleClass value="$TextDefaultNM"/>
			<style>
				<width value="100%"/>
				<leading value="-3"/>
				<marginLeft value="7px"/>
			</style>
			<bind name="class" value="_blockable ? '$FontColorCompareNegative' : '$FontColorUnready'"/>
			<bind name="text" value="_blockable ? 'IDS_SKILL_INEFFICIENT' : 'IDS_SKILL_EFFICIENCY_REDUSED'"/>
		</block>
		<block type="text">
			<bind name="visible" value="!_blockable"/>
			<style>
				<marginTop value="2px"/>
			</style>
			<styleClass value="$TextDefaultBold36NM"/>
			<bind name="class" value="'$FontColorUnready'"/>
			<bind name="text" value="'-' + _skillsEffectiveness * 100 + '%'"/>
		</block>
	</block>
	<block className="SkillTooltip">
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerModernizations"/>
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; _crewId"/>
		<bind name="watchDH" value="'crew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'crew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; crew.shipID"/>
		<bind name="primaryEntityDH" value="'crewSkillEntity'; CC.crewSkill; _id; 'evUpdate'"/>
		<bind name="watchDH" value="'crewSkill'; ['crewSkillEntity.crewSkill.evUpdate']; crewSkillEntity.crewSkill"/>
		<bind name="primaryEntityDH" value="'skillEntity'; CC.skill; crewSkill.skillId"/>
		<bind name="watchDH" value="'skill'; []; skillEntity.skill"/>
		<bind name="watchDH" value="'isLocked';			['shipOwnEntity.ownShip.evUpdateLock'];			shipOwnEntity.ownShip.isLocked"/>
		<bind name="watchDH" value="'isInFormation';	['shipOwnEntity.ownShip.evUpdateLock'];			shipOwnEntity.ownShip.isInFormation"/>
		<bind name="watchDH" value="'playerShipParams';	['shipOwnEntity.ownShip.evShipParamsUpdate'];	shipOwnEntity.ownShip.params"/>
		<bind name="watchDH" value="'isUseless'; ['skillEntity.attributes.evUsefulChanged']; !(skillEntity.attributes.useful)"/>
		<bind name="watchDH" value="'attributes'; ['skillEntity.attributes.evChanged']; skillEntity.attributes"/>
		<bind name="action" value="'Tooltip.selfOpened'; 'getShipWithUpgrade'; {id: _id, shipId: crew.shipID, type: 'crew'}"/>
		<bind name="primaryEntityDH" value="'compareItemEntity'; CC.compareItem; 'crew_' + _id"/>
		<bind name="watchDH" value="'crewCompare'; ['compareItemEntity.compareItem.evUpdate']; compareItemEntity.dataComponent.data"/>
		<bind name="watch" value="'_penalty'; crew.skillsEffectiveness &lt; 1"/>
		<bind name="watch" value="'isLocked'; (crew.shipID ? isLocked : false)"/>
		<bind name="watch" value="'_isInFormation'; (crew.shipID ? isInFormation : false)"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<params>
			<param name="name" value="skill_tooltip"/>
		</params>
		<style>
			<width value="320px"/>
		</style>
		<styleClass value="$MouseDisable"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<paddingTop value="16px"/>
				<paddingLeft value="16px"/>
				<paddingRight value="16px"/>
			</style>
			<block>
				<bind name="instance" value="'SkillHeader'; { skillId: crewSkill.id, _penalty: _penalty}"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="-16px"/>
					<marginRight value="-16px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="12px"/>
					<marginBottom value="12px"/>
				</style>
				<bind name="instance" value="'SkillLearnStatus'; {	_learned: crewSkill.learned,
													_dependenciesLearned: crewSkill.hasLearnedSkillOnPreviousTier,
													_cost: skill.tier,
													_deficit: (skill.tier - crew.freeSkillPoints) }"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="visible" value="isUseless"/>
				<block>
					<style>
						<width value="100%"/>
						<marginLeft value="-16px"/>
						<marginTop value="-1px"/>
						<marginRight value="-16px"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<marginBottom value="6px"/>
						<marginTop value="12px"/>
					</style>
					<bind name="instance" value="'MouseInstructionRepeater'; isUseless	?	{	_type: 'restriction',
																				_instructionText: 'IDS_WARNING_USELESS_PERK',
																				_maxWidth: 270}
																		: 	null"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="crewSkill.learned &amp;&amp; _penalty"/>
				<style>
					<width value="100%"/>
					<marginLeft value="-16px"/>
					<marginRight value="-16px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="crewSkill.learned &amp;&amp; _penalty"/>
				<style>
					<width value="100%"/>
					<marginBottom value="12px"/>
					<marginTop value="12px"/>
				</style>
				<bind name="instance" value="'SkillAdaptationStatus'; crewSkill.learned &amp;&amp; _penalty ? {_skillsEffectiveness: crew.skillsEffectiveness, _blockable: skill.blockable } : null"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginRight value="-16px"/>
					<marginLeft value="-16px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block type="text">
				<style>
					<width value="100%"/>
					<marginTop value="12px"/>
					<marginBottom value="12px"/>
				</style>
				<styleClass value="$TextDefault17NM"/>
				<bind name="text" value="'IDS_SKILL_DESC_' + toUpperCase(skill.name)"/>
			</block>
			<block>
				<bind name="visible" value="	(attributes.positive.length != 0) ||
							(attributes.negative.length != 0) ||
							(attributes.neutral.length != 0) "/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
						<marginRight value="-16px"/>
						<marginLeft value="-16px"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
				<block className="inner_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginTop value="3px"/>
						<marginLeft value="-16px"/>
						<marginRight value="-16px"/>
					</style>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<paddingTop value="16px"/>
					</style>
					<bind name="instance" value="'ParamsModifierList'; { _attributesPositive: attributes.positive, _attributesNegative: attributes.negative, _attributesNeutral: attributes.neutral}"/>
				</block>
				<block>
					<bind name="visible" value="!(crewSkill.learned) &amp;&amp; viewParams.hasDiff"/>
					<style>
						<width value="100%"/>
						<marginRight value="-16px"/>
						<marginLeft value="-16px"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
				<block>
					<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerParams; 0; crew.shipID; 'tooltipShipParams'; playerShipParams; crewCompare; 1; 0; null; 1; 1; 0"/>
					<style>
						<width value="100%"/>
						<marginRight value="-16px"/>
						<marginLeft value="-16px"/>
					</style>
					<bind name="instance" value="'ParamsAfterMount'; !(crewSkill.learned) &amp;&amp; viewParams.hasDiff	? {	_viewParams: viewParams,
																								_title: 'IDS_AFTER_LEARN'}
																							: null"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="attributes.modifiers.additionalConsumables &gt; 0 &amp;&amp; (consumablesSlotsList.length &gt; 0) &amp;&amp; hasLimitedConsumables &amp;&amp; crew.shipID &gt; 0"/>
				<style>
					<width value="100%"/>
					<marginRight value="-16px"/>
					<marginLeft value="-16px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<paddingTop value="12px"/>
					<paddingBottom value="8px"/>
				</style>
				<bind name="visible" value="attributes.modifiers.additionalConsumables &gt; 0 &amp;&amp; (consumablesSlotsList.length &gt; 0) &amp;&amp; hasLimitedConsumables &amp;&amp; crew.shipID &gt; 0"/>
				<block type="text">
					<style>
						<width value="100%"/>
						<paddingTop value="8px"/>
					</style>
					<styleClass value="$TextDefaultNM"/>
					<text value="IDS_AFTER_LEARN"/>
				</block>
				<block>
					<style>
						<marginLeft value="8px"/>
						<marginTop value="8px"/>
					</style>
					<bind name="instance" value="'ShipLineItem'; { _shipId: crew.shipID, _width: 'auto'}"/>
				</block>
				<block>
					<bind name="repeat" value="consumablesSlotsList; 'ConsumableIcon'; {additionalConsumables: crewSkill.learned ? 0 : attributes.modifiers.additionalConsumables}"/>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
			<bind name="watchDH" value="'isSelfPlayerReady'; ['selfPlayerEntity.preBattlePlayerSimple.evStateChanged']; selfPlayerEntity.preBattlePlayerSimple.isReady"/>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="visible" value="(!isLocked &amp;&amp;
							skill.learned != true &amp;&amp;
							crewSkill.hasLearnedSkillOnPreviousTier &amp;&amp;
							(crew.freeSkillPoints - skill.tier &gt;= 0) &amp;&amp;
							!(_noMouseInstructions))
							|| isLocked || _isInFormation"/>
				<block>
					<style>
						<width value="100%"/>
						<marginLeft value="-16px"/>
						<marginTop value="-1px"/>
						<marginRight value="-16px"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<marginBottom value="12px"/>
						<marginTop value="12px"/>
					</style>
					<bind name="instance" value="'MouseInstructionRepeater'; (isSelfPlayerReady == true)		?	{_type: 'warning',	_instructionText:	tr('IDS_READY_TO_BATTLE_IN_DIVISION') + '. ' + tr('IDS_CANT_LEARN_SKILLS'), _maxWidth: 270} :
															isLocked						?	{_type: 'warning',	_instructionText:	tr('IDS_IN_BATTLE') + '. ' + tr('IDS_CANT_LEARN_SKILLS'), _maxWidth: 270}
																							:	{_type: 'left',		_instructionText:	tr('IDS_CREW_SKILL_LEARN_INSTRUCTION'), _maxWidth: 270}"/>
				</block>
			</block>
		</block>
	</block>
	<block className="CancelDemobilizationButton">
		<block>
			<style>
				<width value="200px"/>
			</style>
			<bind name="visible" value="(crewsSingleton.barracksCapacity - crewsSingleton.crewsInBarracks) != 0"/>
			<block className="button_dock" type="native">
				<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_RETURN_CREW_TO_BARRACKS'}], _maxWidth: 250}"/>
				<bind name="action" value="'buttonClick';'unfireCrew';{crewID: crew.id}"/>
				<bind name="name" value="'cancelDemobilizationButton_' + crew.id"/>
				<style>
					<width value="100%"/>
					<height value="30px"/>
				</style>
				<block>
					<style>
						<marginTop value="8px"/>
					</style>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$MouseDisable"/>
					<block type="text">
						<styleClass value="$TextDefaultBold"/>
						<styleClass value="$MiddleVAligned"/>
						<bind name="text" value="toUpperCase(tr('IDS_CANCEL_DEMOBILIZATION'))"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="(crewsSingleton.barracksCapacity - crewsSingleton.crewsInBarracks) == 0"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$MiddleAligned"/>
				<bind name="class" value="'$FontColorUnready'"/>
				<bind name="style" value="'maxWidth'; _textWidth ? _textWidth: '290'"/>
				<style>
					<textAlign value="center"/>
				</style>
				<text value="IDS_TO_CANCEL_EXPAND_BARRACKS"/>
			</block>
		</block>
	</block>
	<block className="WaitingForDemobilization">
		<bind name="countdown" value="_dismissDelay; 'countdownText'; 'mm:ss'"/>
		<block type="text">
			<style>
				<textAlign value="center"/>
			</style>
			<bind name="style" value="'maxWidth'; _textWidth ? _textWidth: '290'"/>
			<styleClass value="$TextHeaderBold"/>
			<bind name="class" value="'$FontColorUnready'"/>
			<bind name="text" value="toUpperCase(tr('IDS_WAITING_FOR_DEMOBILIZATION')) + tr('IDS_COLON')"/>
		</block>
		<block type="text">
			<style>
				<marginTop value="-4px"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$TextHeaderBold"/>
			<bind name="class" value="'$FontColorUnready'"/>
			<bind name="pureText" value="countdownText"/>
		</block>
	</block>
	<block className="CommanderPortraitMax">
		<styleClass value="$CrewPortraitSizeMax"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundStretchX value="true"/>
				<backgroundStretchY value="true"/>
				<hitTest value="false"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:' + _baseUrl"/>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="_overlayUrl != ''"/>
			<style>
				<backgroundStretchX value="true"/>
				<backgroundStretchY value="true"/>
				<hitTest value="false"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:' + _overlayUrl"/>
		</block>
		<block>
			<bind name="visible" value="_isUnique == true"/>
			<style>
				<position value="absolute"/>
				<right value="0px"/>
				<bottom value="0px"/>
			</style>
			<bind name="instance" value="'UniqueCrewIcon'; _isUnique ? {} : null"/>
		</block>
	</block>
	<block className="CommanderPortraitBig">
		<styleClass value="$CrewPortraitSizeBig"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundStretchX value="true"/>
				<backgroundStretchY value="true"/>
				<hitTest value="false"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:' + _baseUrl"/>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="_overlayUrl != ''"/>
			<style>
				<backgroundStretchX value="true"/>
				<backgroundStretchY value="true"/>
				<hitTest value="false"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:' + _overlayUrl"/>
		</block>
		<block>
			<bind name="visible" value="_isUnique == true"/>
			<style>
				<position value="absolute"/>
				<right value="1px"/>
				<bottom value="0px"/>
			</style>
			<bind name="instance" value="'UniqueCrewIcon'; _isUnique ? {} : null"/>
		</block>
	</block>
	<block className="CommanderPortraitNormal">
		<styleClass value="$CrewPortraitSizeNormal"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundStretchX value="true"/>
				<backgroundStretchY value="true"/>
				<hitTest value="false"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:' + _baseUrl"/>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="_overlayUrl != ''"/>
			<style>
				<backgroundStretchX value="true"/>
				<backgroundStretchY value="true"/>
				<hitTest value="false"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:' + _overlayUrl"/>
		</block>
		<block>
			<bind name="visible" value="_isUnique == true"/>
			<style>
				<position value="absolute"/>
				<right value="0px"/>
				<bottom value="0px"/>
			</style>
			<bind name="instance" value="'UniqueCrewIcon'; _isUnique ? {} : null"/>
		</block>
	</block>
	<block className="CommanderPortraitSmall">
		<styleClass value="$CrewPortraitSizeSmall"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundStretchX value="true"/>
				<backgroundStretchY value="true"/>
				<marginBottom value="1px"/>
				<hitTest value="false"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:' + _baseUrl"/>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="_overlayUrl != ''"/>
			<style>
				<backgroundStretchX value="true"/>
				<backgroundStretchY value="true"/>
				<marginBottom value="1px"/>
				<hitTest value="false"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:' + _overlayUrl"/>
		</block>
		<block>
			<bind name="visible" value="_isUnique == true"/>
			<style>
				<position value="absolute"/>
				<right value="-1px"/>
				<bottom value="1px"/>
			</style>
			<bind name="instance" value="'UniqueCrewIcon'; _isUnique ? {} : null"/>
		</block>
	</block>
	<block className="CommanderNameAndRankDropdown">
		<params>
			<param name="name" value="ButtonCommanderSelect"/>
		</params>
		<block>
			<style>
				<marginBottom value="-5px"/>
			</style>
			<bind name="style" value="'hitTest'; (_enabled == true)"/>
			<bind name="tooltip" value="'CrewMenu'; _enabled ? { _crewId: _crew.id, _fromCrewSelect: _fromCrewSelect, _dropDown: true } : null; 6"/>
			<bind name="tooltip" value="'MouseInstructionTooltip'; _enabled ?  { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_HINT_CLICK_TO_CHOOSE_ACTION'}], _maxWidth: 250} : null"/>
			<block className="button_dock" type="native">
				<bind name="visible" value="(_enabled == true)"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<marginLeft value="-6px"/>
				</style>
			</block>
			<block type="text">
				<bind name="name" value="_crew.firstNameIDS + ' ' + _crew.lastNameIDS"/>
				<style>
					<marginBottom value="4px"/>
				</style>
				<styleClass value="$TextHeaderBold"/>
				<bind name="text" value="tr(_crew.firstNameIDS) + ' ' + tr(_crew.lastNameIDS)"/>
			</block>
			<block className="icon_navigate" type="native">
				<bind name="visible" value="(_enabled == true)"/>
				<style>
					<marginLeft value="3px"/>
					<marginRight value="6px"/>
					<marginTop value="7px"/>
				</style>
				<bind name="gotoAndStop!" value="'down'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="fade" value="!(_isNotExpanded) &amp;&amp; _crew.hasRank; 0.15; {alpha: 0}; {alpha: 0.8}; {alpha: 0}"/>
			<bind name="style" value="'hitTest'; _fromCrewSelect ? true : false"/>
			<bind name="tooltip" value="'SimpleTooltip'; _fromCrewSelect ? {tooltipText: 'IDS_COMMANDER_RANK'} : null"/>
			<style>
				<width value="14px"/>
				<hitTest value="false"/>
				<marginTop value="-4px"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefaultWhite"/>
				<bind name="text" value="tr(toUpperCase('IDS_CREW_RANK_' + _nation + '_' + _crew.rank))"/>
			</block>
		</block>
	</block>
	<block className="ChangeCrewToHirePersonality">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="action" value="'click';'changeCrewToHirePersonality';{}"/>
		<bind name="transition" value="mouseDown; 0.05; {alpha: 1}; {alpha: 0.6}"/>
		<bind name="transition" value="rollOver; 0.1; {alpha: 0.8}; {alpha: 1}"/>
		<block className="button_dock" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginTop value="-3px"/>
				<marginBottom value="-5px"/>
				<marginLeft value="-5px"/>
				<marginRight value="-4px"/>
			</style>
		</block>
		<block>
			<style>
				<hitTest value="false"/>
			</style>
			<block className="button_update" type="native"/>
			<block type="text">
				<style>
					<marginLeft value="4px"/>
					<marginTop value="-3px"/>
				</style>
				<styleClass value="$TextDefaultBold"/>
				<bind name="class" value="'$FontColorBlueish'"/>
				<text value="IDS_CHANGE_COMMANDER"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="CrewExperienceBar">
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; _crewId"/>
		<bind name="watchDH" value="'selectedShipCrew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'selectedShipCrew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'crewsSingleton'; ['dockEntity.crewData.evUpdate']; dockEntity.crewData"/>
		<block>
			<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_CREWEXP_TO_NEXT_SKILLPOINT'}"/>
			<bind name="visible" value="	(selectedShipCrewRetraining.isInAdaptation != true) &amp;&amp; (selectedShipCrew.level &lt; crewsSingleton.maxLevel)"/>
			<block className="indicator_progress_bar_lightgreen" type="native">
				<style>
					<width value="150px"/>
				</style>
				<bind name="value" value="selectedShipCrew.experience"/>
				<bind name="maximum" value="selectedShipCrew.experienceToRichNextLevel"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="(selectedShipCrew.level &gt;= crewsSingleton.maxLevel) &amp;&amp; (selectedShipCrewRetraining.isInAdaptation != true)"/>
			<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CONVERTED_TO_ELITE_XP_HINT'}"/>
			<block type="text">
				<style>
					<marginTop value="2px"/>
				</style>
				<styleClass value="$TextHeaderBigDefault"/>
				<text value="IDS_HIGHEST_RANK"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="(selectedShipCrewRetraining.isInAdaptation == true)"/>
			<block className="indicator_progress_bar_orange" type="native">
				<style>
					<width value="150px"/>
				</style>
				<bind name="value" value="selectedShipCrewRetraining.adaptationExperienceEarned"/>
				<bind name="maximum" value="selectedShipCrewRetraining.adaptationExperiencePenalty"/>
			</block>
		</block>
		<block>
			<style>
				<marginTop value="-1px"/>
				<marginBottom value="-1px"/>
			</style>
			<bind name="visible" value="	(selectedShipCrewRetraining.isInAdaptation == true) ||
						((selectedShipCrewRetraining.isInAdaptation != true) &amp;&amp; (selectedShipCrew.level &lt; crewsSingleton.maxLevel))"/>
			<block>
				<params>
					<param name="name" value="crewExp"/>
				</params>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_CREWEXP'}"/>
				<block type="text">
					<styleClass value="$TextHeaderBigDefault"/>
					<bind name="class" value="selectedShipCrewRetraining.isInAdaptation 	? '$FontColorUnready' : '$FontColorDefault'"/>
					<bind name="text" value="(selectedShipCrewRetraining.isInAdaptation 	? format(selectedShipCrewRetraining.adaptationExperienceEarned) 
																		: format(selectedShipCrew.experience))"/>
				</block>
			</block>
			<block type="text">
				<style>
					<marginLeft value="1px"/>
					<marginRight value="-2px"/>
					<alpha value="0.7"/>
				</style>
				<styleClass value="$TextHeaderBigDefault"/>
				<bind name="class" value="selectedShipCrewRetraining.isInAdaptation ? '$FontColorUnready' : '$FontColorDefault'"/>
				<bind name="text" value="'/'"/>
			</block>
			<block>
				<bind name="tooltip" value="'SimpleTooltip'; selectedShipCrewRetraining.isInAdaptation 	? {tooltipText: 'IDS_HINT_CREWEXP_TO_ADAPTATION'} 
																						: {tooltipText: 'IDS_HINT_CREWEXP_TO_NEXT_SKILLPOINT'}"/>
				<block type="text">
					<style>
						<marginTop value="2px"/>
						<alpha value="0.7"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="class" value="selectedShipCrewRetraining.isInAdaptation 	? '$FontColorUnready' : '$FontColorDefault'"/>
					<bind name="text" value="(selectedShipCrewRetraining.isInAdaptation 	? format(selectedShipCrewRetraining.adaptationExperiencePenalty) 
																		: format(selectedShipCrew.experienceToRichNextLevel))"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="UniqueCrewIcon">
		<bind name="tooltip" value="'MultiParagraphHelpTooltip'; {	_tooltipHeader: 'IDS_UNIQUE_CREW',
													_multiParagraphArray: [{_paragraphText: 'IDS_UNIQUE_CREW_DESCRIPTION'}],
													_width: 300 }"/>
		<style>
			<width value="41px"/>
			<height value="41px"/>
		</style>
		<bind name="style" value="'backgroundImage'; 'url:../crew_commander/icon_crew_unique.png'"/>
	</block>
	<block className="CrewInBattle">
		<block type="text">
			<style>
				<textAlign value="center"/>
				<maxWidth value="290"/>
			</style>
			<styleClass value="$TextHeaderBold"/>
			<bind name="class" value="'$FontColorUnready'"/>
			<bind name="text" value="toUpperCase(tr('IDS_WAITING_BATTLE_END'))"/>
		</block>
	</block>
	<css name="$RepeatMarginsForTasks">
		<marginTop value="720:5,1080:15ah"/>
		<marginBottom value="720:5,1080:15ah"/>
		<marginLeft value="1280:5,1920:15aw"/>
		<marginRight value="1280:5,1920:15aw"/>
	</css>
	<block className="ChooseTask">
		<bind name="primaryEntityDH" value="'campaign'; CC.campaignParams; _curCampaignId"/>
		<bind name="watchDH" value="'campaignState'; ['campaign.campaignPlayer.evUpdate']; campaign.campaignPlayer.state"/>
		<bind name="watchDH" value="'campaignMissionsStates'; ['campaign.campaignPlayer.evUpdate']; campaign.campaignPlayer.missionsStates"/>
		<bind name="watchDH" value="'campaignName'; []; campaign.campaignParams.name"/>
		<bind name="watchDH" value="'campaignIsActivated'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.isActivated"/>
		<bind name="watchDH" value="'campaignAllMissions'; []; campaign.campaignParams.allMissions"/>
		<bind name="watchDH" value="'campaignMainTask'; []; campaign.campaignParams.mainTask"/>
		<bind name="watchDH" value="'campaignMapPositions'; []; campaign.campaignParams.mapPositions"/>
		<bind name="watchDH" value="'campaignCountTasks'; []; campaign.campaignParams.countTasks"/>
		<bind name="watchDH" value="'campaignStartTime'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.startTime"/>
		<bind name="watchDH" value="'campaignEndTime'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.endTime"/>
		<bind name="watchDH" value="'campaignIsNarrative'; []; campaign.campaignParams.isNarrative"/>
		<bind name="watchDH" value="'campaignToken'; []; campaign.campaignParams.token"/>
		<bind name="watchDH" value="'campaignIsViewed'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.isViewed"/>
		<bind name="watch" value="'campaignNeedToken'; campaignState == 0 &amp;&amp; campaignToken != ''"/>
		<bind name="watchDH" value="'campaignCountLootedTasks'; ['campaign.campaignPlayer.evUpdate']; campaign.campaignPlayer.countLootedTasks"/>
		<bind name="primaryEntityDH" value="'mission'; CC.campaignMissionParams; _curMissionId"/>
		<bind name="watchDH" value="'usualTasks';[]; mission.campaignMissionParams.usualTasks"/>
		<bind name="watchDH" value="'isNarrative'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.isNarrative"/>
		<bind name="handleEventDH" value="'campaign.campaignParams.evUpdateVisibility'; 'onUpdateCampaignVisibility'"/>
		<bind name="action" value="'onUpdateCampaignVisibility'; 'campaignState.campaigns'"/>
		<styleClass value="$Fullsize"/>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="scroll_line" type="native">
				<style>
					<width value="100%"/>
					<position value="absolute"/>
					<bottom value="-21px"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<height value="100px"/>
					<position value="absolute"/>
					<bottom value="-121px"/>
				</style>
				<block className="gradient_half_sphere" type="native">
					<style>
						<width value="100%"/>
						<height value="100%"/>
					</style>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="style" value="'marginRight'; isNarrative ? '1280:250,1920:340aw' : '1280:20,1920:40aw'"/>
				<block>
					<styleClass value="$MiddleAligned"/>
					<bind name="repeat" value="campaignAllMissions; 'MissionCarouselItem'; {_curCampaignId: _curCampaignId, _mapPosition: campaignMapPositions, _curMissionId: _curMissionId}"/>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<block>
				<styleClass value="$Fullsize"/>
				<style>
					<marginRight value="1280:20,1920:40aw"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
						<marginTop value="5sh"/>
					</style>
					<block>
						<styleClass value="$MiddleAligned"/>
						<bind name="instance" value="'WindowTaskHeaderInstruction'; { _curMissionId: _curMissionId, _curCampaignId: _curCampaignId }"/>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<height value="10sh"/>
						<marginTop value="3.5sh"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
					<block className="gradient_half_sphere" type="native">
						<style>
							<alpha value="0.6"/>
						</style>
						<styleClass value="$Fullsize"/>
					</block>
				</block>
				<block>
					<styleClass value="$Fullsize"/>
					<styleClass value="$DefaultScrollBar"/>
					<style>
						<flow value="htile"/>
						<align value="center"/>
						<overflow value="scroll"/>
						<marginTop value="-7sh"/>
					</style>
					<bind name="repeat" value="usualTasks; 'TaskItem'; {_isShipSuitable: true, _isBattleSuitable: true, _needMargins: true, _isUseless: false}"/>
				</block>
			</block>
			<block>
				<style>
					<marginTop value="5sh"/>
				</style>
				<bind name="visible" value="campaign.campaignParams.isNarrative"/>
				<bind name="instance" value="'CampaignDescription'; {_text: 'IDS_' + toUpperCase(tr(mission.campaignMissionParams.name)) + '_DESCR'}"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<css name="$TaskItemInnerPicked">
		<width value="230px"/>
		<top value="0px"/>
		<left value="0px"/>
		<height value="80px"/>
	</css>
	<css name="$TaskItemInner">
		<width value="220px"/>
		<top value="5px"/>
		<left value="5px"/>
		<height value="70px"/>
	</css>
	<block className="TaskItem">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="primaryEntityDH" value="'campaignTaskEntity'; CC.campaignTaskParams; _taskID ? _taskID : $value"/>
		<bind name="primaryEntityDH" value="'mission'; CC.campaignMissionParams; campaignTaskEntity.campaignTaskParams.missionID"/>
		<bind name="primaryEntityDH" value="'campaign'; CC.campaignParams; campaignTaskEntity.campaignTaskParams.campaignID"/>
		<bind name="watchDH" value="'campaignState'; ['campaign.campaignPlayer.evUpdate']; campaign.campaignPlayer.state"/>
		<bind name="watchDH" value="'campaignMissionsStates'; ['campaign.campaignPlayer.evUpdate']; campaign.campaignPlayer.missionsStates"/>
		<bind name="watchDH" value="'campaignName'; []; campaign.campaignParams.name"/>
		<bind name="watchDH" value="'campaignIsActivated'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.isActivated"/>
		<bind name="watchDH" value="'campaignAllMissions'; []; campaign.campaignParams.allMissions"/>
		<bind name="watchDH" value="'campaignMainTask'; []; campaign.campaignParams.mainTask"/>
		<bind name="watchDH" value="'campaignMapPositions'; []; campaign.campaignParams.mapPositions"/>
		<bind name="watchDH" value="'campaignCountTasks'; []; campaign.campaignParams.countTasks"/>
		<bind name="watchDH" value="'campaignStartTime'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.startTime"/>
		<bind name="watchDH" value="'campaignEndTime'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.endTime"/>
		<bind name="watchDH" value="'campaignIsNarrative'; []; campaign.campaignParams.isNarrative"/>
		<bind name="watchDH" value="'campaignToken'; []; campaign.campaignParams.token"/>
		<bind name="watchDH" value="'campaignIsViewed'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.isViewed"/>
		<bind name="watch" value="'campaignNeedToken'; campaignState == 0 &amp;&amp; campaignToken != ''"/>
		<bind name="watchDH" value="'campaignCountLootedTasks'; ['campaign.campaignPlayer.evUpdate']; campaign.campaignPlayer.countLootedTasks"/>
		<bind name="watchDH" value="'missionState';['mission.campaignMissionPlayer.evUpdate']; mission.campaignMissionPlayer.state"/>
		<bind name="watchDH" value="'state';['campaignTaskEntity.campaignTaskPlayer.evUpdate']; campaignTaskEntity.campaignTaskPlayer.state"/>
		<bind name="watchDH" value="'isLooted';['campaignTaskEntity.campaignTaskPlayer.evUpdate']; campaignTaskEntity.campaignTaskPlayer.isLooted"/>
		<bind name="watchDH" value="'taskProgress';['campaignTaskEntity.progress.evChanged']; campaignTaskEntity.progress.value"/>
		<bind name="watchDH" value="'max';[]; campaignTaskEntity.progress.max"/>
		<bind name="watchDH" value="'number';[]; campaignTaskEntity.campaignTaskParams.number"/>
		<bind name="watchDH" value="'uiNumber';[]; mission.campaignMissionParams.uiNumber"/>
		<bind name="watchDH" value="'isMainTask';[]; campaignTaskEntity.campaignTaskParams.isMainTask"/>
		<bind name="watchDH" value="'lootStars';[]; campaignTaskEntity.campaignTaskParams.lootStars"/>
		<bind name="watchDH" value="'costUnlock';[]; campaignTaskEntity.campaignTaskParams.costUnlock"/>
		<bind name="watchDH" value="'bgIconID';[]; campaignTaskEntity.campaignTaskParams.bgIconID"/>
		<bind name="watchDH" value="'stars';['mission.campaignMissionPlayer.evUpdate']; mission.campaignMissionPlayer.stars"/>
		<bind name="watchDH" value="'rewards';['campaignTaskEntity.campaignTaskPlayer.evUpdate']; campaignTaskEntity.campaignTaskParams.rewards"/>
		<bind name="watch" value="'canOpenFinalTask'; isMainTask &amp;&amp; (stars &gt;= costUnlock) &amp;&amp; (state == 0)"/>
		<bind name="watch" value="'isInteractive'; (state == 1) || (state == 2) || (state == 3)"/>
		<bind name="watch" value="'isHighlighted'; (state == 2) || (state == 3) || (canOpenFinalTask)"/>
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'isPremiumAccount';	['resourceEntity.accountResource.evChangedPrem'];	resourceEntity.accountResource.isPremium"/>
		<bind name="firstEntityDH" value="'slotsEntity'; CC.constantsCampaignSlots"/>
		<bind name="watchDH" value="'common'; []; slotsEntity.constantsCampaignSlots.common"/>
		<bind name="watchDH" value="'premium'; []; slotsEntity.constantsCampaignSlots.premium"/>
		<bind name="watch" value="'availableSlots'; 		(isPremiumAccount ? (common + premium) : common)"/>
		<bind name="collectionDH" value="CC.campaignTaskPlayer; 'choosenTasks'; 'active'"/>
		<bind name="watch" value="'haveFreeSlot'; 		(choosenTasks.length &lt; availableSlots)"/>
		<bind name="watchDH" value="'missionStartTime';[]; mission.campaignMissionParams.startTime"/>
		<bind name="serverTime" value="'serverTime'"/>
		<bind name="watch" value="'missionTimeToStart'; missionStartTime - serverTime"/>
		<style>
			<width value="230px"/>
			<height value="80px"/>
		</style>
		<bind name="class" value="_needMargins ? '$RepeatMarginsForTasks' : null"/>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="class" value="	isHighlighted ? '$TaskItemInnerPicked'
									  : '$TaskItemInner'"/>
			<block>
				<styleClass value="$Fullsize"/>
				<bind name="style" value="'colorMatrixFilter'; 	
												!isInteractive	? '0 -95 0 0'
																: '0 0 0 0'"/>
				<bind name="style" value="'alpha'; state == 0 || !isInteractive ? 0.5 : 1"/>
				<block>
					<styleClass value="$FullsizeAbsolute"/>
					<block className="DropShadow">
						<styleClass value="$FullsizeAbsolute"/>
						<styleClass value="$MouseDisable"/>
						<block className="drop_shadow" type="native">
							<styleClass value="$Fullsize"/>
							<style>
								<position value="absolute"/>
								<marginTop value="-2px"/>
								<marginRight value="-6px"/>
								<marginBottom value="-10px"/>
								<marginLeft value="-6px"/>
							</style>
						</block>
					</block>
					<block>
						<bind name="name" value="'TaskItem_' + number"/>
						<styleClass value="$FullsizeAbsolute"/>
						<style>
							<backgroundSize value="cover"/>
						</style>
						<bind name="style" value="'backgroundImage'; 'url:../campaigns/bg_task_item/' + 'task_bg_campaign_' + (bgIconID ? bgIconID : number) + '.png'"/>
					</block>
					<block className="inner_panel" type="native">
						<style>
							<alpha value="2.5"/>
						</style>
						<styleClass value="$FullsizeAbsolute"/>
					</block>
					<block className="white_panel_gradient" type="native">
						<bind name="transition" value="rollOver; 0.15; {alpha: 0}; {alpha: 0.7}"/>
						<styleClass value="$FullsizeAbsolute"/>
					</block>
					<block>
						<bind name="visible" value="isLooted &amp;&amp; state != 2"/>
						<bind name="transition" value="rollOver; 0.15; {alpha: 0.5}; {alpha: 0.7}"/>
						<styleClass value="$FullsizeAbsolute"/>
						<bind name="style" value="'backgroundImage'; 'url:../campaigns/task_item_icons/border_islooted.png'"/>
					</block>
					<block className="hint_panel_bold" type="native">
						<style>
							<marginTop value="-2px"/>
							<marginBottom value="-2px"/>
							<marginLeft value="-2px"/>
							<marginRight value="-2px"/>
						</style>
						<bind name="transition" value="isHighlighted; 0.15; {alpha: 0}; {alpha: 1}"/>
						<styleClass value="$FullsizeAbsolute"/>
					</block>
					<block>
						<style>
							<width value="56%"/>
							<height value="100%"/>
							<alpha value="0.4"/>
							<backgroundSize value="cover"/>
						</style>
						<bind name="style" value="'alpha'; (isMainTask &amp;&amp; (state == 0)) ? 0.3 : 0.6"/>
						<bind name="style" value="'backgroundImage'; (state == CAMPAIGN_STATE_COMPLETED) ? 	'url:../campaigns/task_item_icons/' + campaignName + '_done.png' : 
																							'url:../campaigns/task_item_icons/' + campaignName + '.png'"/>
						<block>
							<bind name="visible" value="(state != 0)"/>
							<style>
								<width value="51%"/>
								<height value="100%"/>
							</style>
							<block type="text">
								<style>
									<alpha value="0.6"/>
								</style>
								<styleClass value="$MiddleAligned"/>
								<styleClass value="$MiddleVAligned"/>
								<styleClass value="$TextAccentBoldAccountLevel1"/>
								<bind name="text" value="uiNumber"/>
							</block>
						</block>
					</block>
					<block>
						<styleClass value="$MiddleVAligned"/>
						<style>
							<left value="70px"/>
							<position value="absolute"/>
						</style>
						<block type="text">
							<bind name="style" value="'alpha'; isLooted &amp;&amp; state != 2 ? '0.75' : '0.95' "/>
							<style>
								<maxWidth value="140"/>
							</style>
							<styleClass value="$TextLargeHeaderBold"/>
							<bind name="text" value="isMainTask 	? (toUpperCase(tr('IDS_FINAL_TASK')))
												: (toUpperCase(tr('IDS_CAMPAIGN_TASK'))) + ' ' + number"/>
						</block>
						<block className="indicator_progress_bar" type="native">
							<bind name="visible" value="((taskProgress &gt; 0) &amp;&amp; (taskProgress &lt; max) )"/>
							<style>
								<width value="140px"/>
							</style>
							<bind name="value" value="(taskProgress / max) * 10"/>
						</block>
						<block>
							<bind name="visible" value="((missionState == 0) || (missionState == 2)) &amp;&amp; !isMainTask"/>
							<style>
								<marginTop value="3px"/>
							</style>
							<block>
								<bind name="repeat" value="lootStars; 'StarsEarnedEnable'"/>
								<style>
									<flow value="horizontal"/>
								</style>
							</block>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="state == 0"/>
				<style>
					<width value="64px"/>
					<height value="100%"/>
					<position value="absolute"/>
					<left value="-1px"/>
				</style>
				<block>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$MiddleVAligned"/>
					<block className="icon_locked_mc" type="native"/>
				</block>
			</block>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<bind name="dispatch" value="'doubleClick'; 'Tooltip.Close'"/>
			<block>
				<style>
					<backgroundColor value="0x01000000"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<params>
					<param name="doubleClickEnabled" value="true"/>
				</params>
				<bind name="soundSet" value="'default_button'"/>
				<bind name="tooltip" value="'TaskItemTooltip'; {	_taskID: campaignTaskEntity.campaignTaskParams.id}"/>
				<bind name="tooltip" value="'TaskItemInfotip'; {	_taskID: campaignTaskEntity.campaignTaskParams.id}; TooltipBehaviour.infotip"/>
				<bind name="action" value="'doubleClick';  (taskProgress &gt; 0) &amp;&amp; (taskProgress &lt; max) 													? null :
										  ((state == 1) &amp;&amp; haveFreeSlot &amp;&amp; (missionTimeToStart &lt;= 0))				? 'CampaignsProxy.activateTask' :
										  ((state == 2) &amp;&amp; ((taskProgress == 0) || (taskProgress == null)))	? 'CampaignsProxy.deactivateTask'
																																		: null ; { taskID: campaignTaskEntity.campaignTaskParams.id}"/>
				<bind name="request" value="'doubleClick'; ((taskProgress &gt; 0) &amp;&amp; (taskProgress &lt; max)) 	? 'CampaignsProxy.deactivateTask'
																						: null; {taskID: campaignTaskEntity.campaignTaskParams.id}"/>
			</block>
			<block>
				<bind name="visible" value="(state == 3) || (canOpenFinalTask)"/>
				<styleClass value="$FullsizeAbsolute"/>
				<block>
					<style>
						<alpha value="0.75"/>
						<hitTest value="false"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
					<block className="BlurMapCustom">
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
						<styleClass value="$FullsizeAbsolute"/>
						<style>
							<hitTest value="false"/>
						</style>
						<bind name="visible" value="optionData.blurEnabled"/>
						<block className="mc_blurmap5_feather" type="native">
							<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
							<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
							<styleClass value="$Fullsize"/>
							<bind name="blurMap" value="0"/>
						</block>
					</block>
					<block className="modal_panel" type="native">
						<styleClass value="$FullsizeAbsolute"/>
						<bind name="style" value="'alpha'; optionData.contrast ? 1.0 : 0.8"/>
					</block>
				</block>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<width value="100%"/>
						<marginLeft value="6px"/>
						<marginRight value="6px"/>
					</style>
					<block>
						<bind name="visible" value="(((missionState == 0) || (missionState == 2)) &amp;&amp; !isMainTask) ||
									(!isLooted &amp;&amp; !canOpenFinalTask)"/>
						<styleClass value="$MiddleAligned"/>
						<style>
							<height value="40px"/>
						</style>
						<block>
							<bind name="visible" value="((missionState == 0) || (missionState == 2)) &amp;&amp; !isMainTask"/>
							<styleClass value="$MiddleVAligned"/>
							<bind name="repeat" value="lootStars; 'StarsEarnedEnable'"/>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
						<block>
							<bind name="visible" value="!isLooted &amp;&amp; !canOpenFinalTask"/>
							<style>
								<marginLeft value="6px"/>
							</style>
							<bind name="tooltip" value="'RewardContainerTooltip'; { _rewards: rewards, _tooltipHeader: 'IDS_REWARDS_CAMPAIGN_TASK', _isDH20: true}"/>
							<block className="icon_giftbox_small" type="native"/>
							<block>
								<bind name="visible" value="isLooted"/>
								<style>
									<position value="absolute"/>
									<top value="21px"/>
									<left value="21px"/>
								</style>
								<bind name="scaleX" value="0.85"/>
								<bind name="scaleY" value="0.85"/>
								<block className="icon_issued_small" type="native">
									<innerBind elementName="item.item" name="text" value="'IDS_ISSUED_STAMP'"/>
									<bind name="gotoAndStop!" value="'issued'"/>
								</block>
							</block>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block className="button_default" type="native">
						<style>
							<width value="100%"/>
						</style>
						<bind name="focus" value="0; true"/>
						<bind name="label" value=" 	(state == 3) &amp;&amp; !(isLooted)		? toUpperCase(tr('IDS_TAKE_REWARD')) :
									(state == 3) &amp;&amp; (isLooted) 		? toUpperCase(tr('IDS_TAKE_STARS'))  :
									(canOpenFinalTask) 									? toUpperCase(tr('IDS_OPEN_FINAL_TASK'))
																						: null"/>
						<bind name="action" value="'buttonClick';  	(state == 3) 	? 'CampaignsProxy.takeReward' :
													(canOpenFinalTask) 					? 'CampaignsProxy.unlockTask'
																						: null ; { taskID: campaignTaskEntity.campaignTaskParams.id}"/>
					</block>
				</block>
			</block>
			<bind name="watch" value="'showGiftbox'; ((rollOver &amp;&amp; !(canOpenFinalTask))) &amp;&amp; (state != 3)"/>
			<block>
				<bind name="fade" value="showGiftbox; 0.15; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: 5}; 2"/>
				<style>
					<right value="5px"/>
					<bottom value="1px"/>
					<position value="absolute"/>
				</style>
				<bind name="style" value="'hitTest'; showGiftbox"/>
				<bind name="tooltip" value="'RewardContainerTooltip'; { _rewards: rewards, _tooltipHeader: 'IDS_REWARDS_CAMPAIGN_TASK', _isDH20: true}"/>
				<block>
					<bind name="style" value="'alpha'; (isLooted ? 0.5 : 1)"/>
					<block className="icon_giftbox_small" type="native"/>
					<block>
						<bind name="visible" value="isLooted"/>
						<style>
							<position value="absolute"/>
							<top value="21px"/>
							<left value="21px"/>
						</style>
						<bind name="scaleX" value="0.85"/>
						<bind name="scaleY" value="0.85"/>
						<block className="icon_issued_small" type="native">
							<innerBind elementName="item.item" name="text" value="'IDS_ISSUED_STAMP'"/>
							<bind name="gotoAndStop!" value="'issued'"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="isLooted &amp;&amp; !_inTaskPicker"/>
				<style>
					<backgroundImage value="symbol:checkbox_check"/>
					<top value="5px"/>
					<right value="26px"/>
					<position value="absolute"/>
					<hitTest value="false"/>
				</style>
			</block>
			<bind name="watch" value="'showWarning'; (!_isShipSuitable || !_isBattleSuitable || _isUseless) &amp;&amp; (state != 3)"/>
			<bind name="watch" value="'unsuitableShipAndBattle'; !_isShipSuitable &amp;&amp; !_isBattleSuitable"/>
			<block>
				<bind name="fade" value="showWarning; 0.15; {alpha: 0}; {alpha: 1}; {alpha: 0}; 2"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<block>
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<block className="BlurMapCustom">
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
						<styleClass value="$FullsizeAbsolute"/>
						<style>
							<hitTest value="false"/>
						</style>
						<bind name="visible" value="optionData.blurEnabled"/>
						<block className="mc_blurmap5_feather" type="native">
							<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
							<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
							<styleClass value="$Fullsize"/>
							<bind name="blurMap" value="0"/>
						</block>
					</block>
					<block className="modal_panel" type="native">
						<styleClass value="$FullsizeAbsolute"/>
						<bind name="style" value="'alpha'; optionData.contrast ? 1.0 : 0.8"/>
					</block>
				</block>
				<block type="text">
					<bind name="fade" value="showWarning; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2; 0.05"/>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$TextDefaultBold"/>
					<bind name="class" value="'$FontColorUnready'"/>
					<style>
						<maxWidth value="210"/>
						<textAlign value="center"/>
					</style>
					<bind name="text" value="unsuitableShipAndBattle					? toUpperCase(tr('IDS_TASK_UNSUITABLE_BATTLE_AND_SHIP')) :
							!(_isShipSuitable) 						? toUpperCase(tr('IDS_TASK_UNSUITABLE_SHIP')) :
							!(_isBattleSuitable) 					? toUpperCase(tr('IDS_TASK_UNSUITABLE_BATTLE')) :
							 (_isUseless) 							? toUpperCase(tr('IDS_TASK_IS_USELESS'))
																	: ''"/>
				</block>
			</block>
		</block>
	</block>
	<block className="TaskItemTooltip">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'isPremiumAccount';	['resourceEntity.accountResource.evChangedPrem'];	resourceEntity.accountResource.isPremium"/>
		<bind name="collectionDH" value="CC.campaignTaskPlayer; 'choosenTasks'; 'active'"/>
		<bind name="firstEntityDH" value="'slotsEntity'; CC.constantsCampaignSlots"/>
		<bind name="primaryEntityDH" value="'campaignTaskEntity'; CC.campaignTaskParams; _taskID"/>
		<bind name="primaryEntityDH" value="'mission'; CC.campaignMissionParams; campaignTaskEntity.campaignTaskParams.missionID"/>
		<bind name="primaryEntityDH" value="'campaign'; CC.campaignParams; campaignTaskEntity.campaignTaskParams.campaignID"/>
		<bind name="watchDH" value="'campaignState'; ['campaign.campaignPlayer.evUpdate']; campaign.campaignPlayer.state"/>
		<bind name="watchDH" value="'campaignMissionsStates'; ['campaign.campaignPlayer.evUpdate']; campaign.campaignPlayer.missionsStates"/>
		<bind name="watchDH" value="'campaignName'; []; campaign.campaignParams.name"/>
		<bind name="watchDH" value="'campaignIsActivated'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.isActivated"/>
		<bind name="watchDH" value="'campaignAllMissions'; []; campaign.campaignParams.allMissions"/>
		<bind name="watchDH" value="'campaignMainTask'; []; campaign.campaignParams.mainTask"/>
		<bind name="watchDH" value="'campaignMapPositions'; []; campaign.campaignParams.mapPositions"/>
		<bind name="watchDH" value="'campaignCountTasks'; []; campaign.campaignParams.countTasks"/>
		<bind name="watchDH" value="'campaignStartTime'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.startTime"/>
		<bind name="watchDH" value="'campaignEndTime'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.endTime"/>
		<bind name="watchDH" value="'campaignIsNarrative'; []; campaign.campaignParams.isNarrative"/>
		<bind name="watchDH" value="'campaignToken'; []; campaign.campaignParams.token"/>
		<bind name="watchDH" value="'campaignIsViewed'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.isViewed"/>
		<bind name="watch" value="'campaignNeedToken'; campaignState == 0 &amp;&amp; campaignToken != ''"/>
		<bind name="watchDH" value="'campaignCountLootedTasks'; ['campaign.campaignPlayer.evUpdate']; campaign.campaignPlayer.countLootedTasks"/>
		<bind name="watchDH" value="'missionState';['mission.campaignMissionPlayer.evUpdate']; mission.campaignMissionPlayer.state"/>
		<bind name="watchDH" value="'state';['campaignTaskEntity.campaignTaskPlayer.evUpdate']; campaignTaskEntity.campaignTaskPlayer.state"/>
		<bind name="watchDH" value="'isLooted';['campaignTaskEntity.campaignTaskPlayer.evUpdate']; campaignTaskEntity.campaignTaskPlayer.isLooted"/>
		<bind name="watchDH" value="'taskProgress';['campaignTaskEntity.progress.evChanged']; campaignTaskEntity.progress.value"/>
		<bind name="watchDH" value="'isMainTask';[]; campaignTaskEntity.campaignTaskParams.isMainTask"/>
		<bind name="watchDH" value="'costUnlock';[]; campaignTaskEntity.campaignTaskParams.costUnlock"/>
		<bind name="watchDH" value="'isActivated';['campaignTaskEntity.campaignTaskPlayer.evUpdate']; campaignTaskEntity.campaignTaskPlayer.isActivated"/>
		<bind name="watchDH" value="'goal';['campaignTaskEntity.campaignTaskPlayer.evUpdate']; campaignTaskEntity.campaignTaskParams.goal"/>
		<bind name="watchDH" value="'rewards';['campaignTaskEntity.campaignTaskPlayer.evUpdate']; campaignTaskEntity.campaignTaskParams.rewards"/>
		<bind name="watchDH" value="'stars';['mission.campaignMissionPlayer.evUpdate']; mission.campaignMissionPlayer.stars"/>
		<bind name="watchDH" value="'common'; []; slotsEntity.constantsCampaignSlots.common"/>
		<bind name="watchDH" value="'premium'; []; slotsEntity.constantsCampaignSlots.premium"/>
		<bind name="watch" value="'canOpenFinalTask'; 	(isMainTask) &amp;&amp; (stars &gt;= costUnlock) &amp;&amp; (state == 0)"/>
		<bind name="watch" value="'availableSlots'; 		(isPremiumAccount ? (common + premium) : common)"/>
		<bind name="watch" value="'taskWithoutProgress'; (taskProgress == 0) || (taskProgress == null)"/>
		<bind name="watch" value="'haveFreeSlot'; 		(choosenTasks.length &lt; availableSlots)"/>
		<bind name="watchDH" value="'missionStartTime';[]; mission.campaignMissionParams.startTime"/>
		<bind name="serverTime" value="'serverTime'"/>
		<bind name="watch" value="'missionTimeToStart'; missionStartTime - serverTime"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="350px"/>
			<hitTest value="false"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block className="hint_panel_bold" type="native">
			<bind name="visible" value="isActivated"/>
			<style>
				<marginTop value="-2px"/>
				<marginBottom value="-2px"/>
				<marginLeft value="-2px"/>
				<marginRight value="-2px"/>
				<alpha value="0.6"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'TaskItemHeader'; {_taskID: _taskID}"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block className="TaskItemStatus">
				<bind name="visible" value="(state != 5)"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$HugeMargins"/>
					<block>
						<bind name="visible" value="(state == 5 || isLooted)"/>
						<style>
							<backgroundImage value="symbol:checkbox_check"/>
							<width value="22px"/>
							<height value="17px"/>
							<top value="4px"/>
							<marginRight value="3px"/>
						</style>
					</block>
					<block type="text">
						<styleClass value="$TextHeaderBigDefault"/>
						<style>
							<width value="100%"/>
						</style>
						<bind name="text" value="state == 2 &amp;&amp; isLooted ? 'IDS_TASK_IN_PROGRESS_REPEAT' :
						state == 2 ? 'IDS_TASK_IN_PROGRESS' :
						state == 3		? 'IDS_TASK_COMPLETED' :
						isLooted							? 'IDS_TASK_REPLAYABLE' :
						state == 0	? 'IDS_TASK_LOCKED'
															: 'IDS_TASK_NOT_DONE'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$HugeMargins"/>
					<bind name="instance" value="'GoalsItem'; { _entityId: goal }"/>
				</block>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginBottom value="-2px"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<bind name="instance" value="'TaskContainerRestriction'; {_taskID: _taskID}"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$HugeMargins"/>
				<block>
					<bind name="style" value="'alpha'; (isLooted ? 0.7 : 1)"/>
					<style>
						<marginRight value="16px"/>
					</style>
					<block className="icon_giftbox_small" type="native"/>
					<block>
						<bind name="visible" value="isLooted"/>
						<style>
							<position value="absolute"/>
							<top value="21px"/>
							<left value="23px"/>
						</style>
						<block className="icon_issued_small" type="native">
							<innerBind elementName="item.item" name="text" value="'IDS_ISSUED_STAMP'"/>
							<bind name="gotoAndStop!" value="'issued'"/>
						</block>
					</block>
				</block>
				<block type="text">
					<styleClass value="$MiddleVAligned"/>
					<style>
						<maxWidth value="240"/>
					</style>
					<styleClass value="$TextHeaderBigDefault"/>
					<bind name="text" value="!isLooted ? 'IDS_ADDITIONAL_REWARD_BEFORE' : 'IDS_ADDITIONAL_REWARD_AFTER'"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="	!_isInPostbattle &amp;&amp; ((state == 1) ||
											(state == 2) || (state == 3) || canOpenFinalTask)"/>
			<styleClass value="$HugeMargins"/>
			<bind name="instance" value="'MouseInstruction'; { 	_type: 'left', 
												_instructionText: 	(state == 1)								? 'IDS_SHOW_TASK_DETAILS' :
																	(state == 2 &amp;&amp; taskWithoutProgress) 	? 'IDS_SHOW_TASK_DETAILS' :
																	(state == 2 &amp;&amp; !taskWithoutProgress) 	? 'IDS_SHOW_TASK_DETAILS' :
																	(state == 3) 								? 'IDS_TAKE_REWARD':
																	(canOpenFinalTask) 												? 'IDS_OPEN_FINAL_TASK'
																							 										: '',
												_maxWidth: 300 }"/>
		</block>
		<block>
			<styleClass value="$HugeMargins"/>
			<style>
				<marginTop value="-6px"/>
			</style>
			<bind name="visible" value="	!_isInPostbattle &amp;&amp;
						((state == 1) &amp;&amp; haveFreeSlot &amp;&amp; missionTimeToStart &lt;= 0) || (state == 2)"/>
			<bind name="instance" value="'MouseInstruction'; { 	_type: 'double_left', 
												_instructionText: 	(state == 1) 	  						  ? 'IDS_TASK_ACTIVATE' :
																	(state == 2 &amp;&amp; !taskWithoutProgress) ? 'IDS_TASK_CANCEL_WITH_PROGRESS' :
																	(state == 2)						  ? 'IDS_TASK_CANCEL' 
																							 									  : '',
												_maxWidth: 300 }"/>
		</block>
	</block>
	<block className="TaskItemInfotip">
		<bind name="primaryEntityDH" value="'campaignTaskEntity'; CC.campaignTaskParams; _taskID"/>
		<bind name="primaryEntityDH" value="'mission'; CC.campaignMissionParams; campaignTaskEntity.campaignTaskParams.missionID"/>
		<bind name="primaryEntityDH" value="'campaign'; CC.campaignParams; campaignTaskEntity.campaignTaskParams.campaignID"/>
		<bind name="watchDH" value="'campaignState'; ['campaign.campaignPlayer.evUpdate']; campaign.campaignPlayer.state"/>
		<bind name="watchDH" value="'campaignMissionsStates'; ['campaign.campaignPlayer.evUpdate']; campaign.campaignPlayer.missionsStates"/>
		<bind name="watchDH" value="'campaignName'; []; campaign.campaignParams.name"/>
		<bind name="watchDH" value="'campaignIsActivated'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.isActivated"/>
		<bind name="watchDH" value="'campaignAllMissions'; []; campaign.campaignParams.allMissions"/>
		<bind name="watchDH" value="'campaignMainTask'; []; campaign.campaignParams.mainTask"/>
		<bind name="watchDH" value="'campaignMapPositions'; []; campaign.campaignParams.mapPositions"/>
		<bind name="watchDH" value="'campaignCountTasks'; []; campaign.campaignParams.countTasks"/>
		<bind name="watchDH" value="'campaignStartTime'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.startTime"/>
		<bind name="watchDH" value="'campaignEndTime'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.endTime"/>
		<bind name="watchDH" value="'campaignIsNarrative'; []; campaign.campaignParams.isNarrative"/>
		<bind name="watchDH" value="'campaignToken'; []; campaign.campaignParams.token"/>
		<bind name="watchDH" value="'campaignIsViewed'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.isViewed"/>
		<bind name="watch" value="'campaignNeedToken'; campaignState == 0 &amp;&amp; campaignToken != ''"/>
		<bind name="watchDH" value="'campaignCountLootedTasks'; ['campaign.campaignPlayer.evUpdate']; campaign.campaignPlayer.countLootedTasks"/>
		<bind name="firstEntityDH" value="'slotsEntity'; CC.constantsCampaignSlots"/>
		<bind name="collectionDH" value="CC.campaignTaskPlayer; 'choosenTasks'; 'active'"/>
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'isPremiumAccount';	['resourceEntity.accountResource.evChangedPrem'];	resourceEntity.accountResource.isPremium"/>
		<bind name="watchDH" value="'stars';['mission.campaignMissionPlayer.evUpdate']; mission.campaignMissionPlayer.stars"/>
		<bind name="watchDH" value="'state';['campaignTaskEntity.campaignTaskPlayer.evUpdate']; campaignTaskEntity.campaignTaskPlayer.state"/>
		<bind name="watchDH" value="'isLooted';['campaignTaskEntity.campaignTaskPlayer.evUpdate']; campaignTaskEntity.campaignTaskPlayer.isLooted"/>
		<bind name="watchDH" value="'goal';['campaignTaskEntity.campaignTaskPlayer.evUpdate']; campaignTaskEntity.campaignTaskParams.goal"/>
		<bind name="watchDH" value="'rewards';['campaignTaskEntity.campaignTaskPlayer.evUpdate']; campaignTaskEntity.campaignTaskParams.rewards"/>
		<bind name="watchDH" value="'taskProgress';['campaignTaskEntity.progress.evChanged']; campaignTaskEntity.progress.value"/>
		<bind name="watchDH" value="'max';[]; campaignTaskEntity.progress.max"/>
		<bind name="watchDH" value="'common'; []; slotsEntity.constantsCampaignSlots.common"/>
		<bind name="watchDH" value="'premium'; []; slotsEntity.constantsCampaignSlots.premium"/>
		<bind name="watchDH" value="'isMainTask';[]; campaignTaskEntity.campaignTaskParams.isMainTask"/>
		<bind name="watchDH" value="'costUnlock';[]; campaignTaskEntity.campaignTaskParams.costUnlock"/>
		<bind name="watchDH" value="'missionState';['mission.campaignMissionPlayer.evUpdate']; mission.campaignMissionPlayer.state"/>
		<bind name="watch" value="'canOpenFinalTask'; 	(isMainTask) &amp;&amp; (stars &gt;= costUnlock) &amp;&amp; (state == 0)"/>
		<bind name="watch" value="'availableSlots'; 		(isPremiumAccount ? (common + premium) : common)"/>
		<bind name="watch" value="'haveFreeSlot'; 		(choosenTasks.length &lt; availableSlots)"/>
		<bind name="watchDH" value="'missionStartTime'; []; mission.campaignMissionParams.startTime"/>
		<bind name="serverTime" value="'serverTime'"/>
		<bind name="watch" value="'missionTimeToStart'; missionStartTime - serverTime"/>
		<style>
			<width value="350px"/>
		</style>
		<styleClass value="$VerticalInfotipBehaviourCenter"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block className="dock_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginTop value="-8px"/>
				<marginRight value="-13px"/>
				<marginLeft value="-13px"/>
				<marginBottom value="-16px"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'TaskItemHeader'; {_taskID: _taskID}"/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block className="TaskItemStatus">
			<bind name="visible" value="(state != 5)"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$HugeMargins"/>
				<block>
					<bind name="visible" value="(state == 5 || isLooted)"/>
					<style>
						<backgroundImage value="symbol:checkbox_check"/>
						<width value="22px"/>
						<height value="17px"/>
						<top value="4px"/>
						<marginRight value="3px"/>
					</style>
				</block>
				<block type="text">
					<styleClass value="$TextHeaderBigDefault"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="text" value="state == 2 &amp;&amp; isLooted ? 'IDS_TASK_IN_PROGRESS_REPEAT' :
						state == 2 ? 'IDS_TASK_IN_PROGRESS' :
						state == 3		? 'IDS_TASK_COMPLETED' :
						isLooted							? 'IDS_TASK_REPLAYABLE' :
						state == 0	? 'IDS_TASK_LOCKED'
															: 'IDS_TASK_NOT_DONE'"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$HugeMargins"/>
				<bind name="instance" value="'GoalsItem'; { _entityId: goal }"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginBottom value="-2px"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<bind name="instance" value="'TaskContainerRestriction'; {_taskID: _taskID}"/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<styleClass value="$HugeMargins"/>
			<style>
				<backgroundColor value="0x01000000"/>
			</style>
			<bind name="tooltip" value="'RewardContainerTooltip'; { _rewards: rewards, _tooltipHeader: 'IDS_REWARDS_CAMPAIGN_TASK', _isDH20: true}"/>
			<block>
				<style>
					<marginRight value="16px"/>
				</style>
				<bind name="style" value="'alpha'; (isLooted ? 0.7 : 1)"/>
				<block className="icon_giftbox_small" type="native"/>
				<block>
					<bind name="visible" value="isLooted"/>
					<style>
						<position value="absolute"/>
						<top value="21px"/>
						<left value="23px"/>
					</style>
					<block className="icon_issued_small" type="native">
						<innerBind elementName="item.item" name="text" value="'IDS_ISSUED_STAMP'"/>
						<bind name="gotoAndStop!" value="'issued'"/>
					</block>
				</block>
			</block>
			<block type="text">
				<style>
					<maxWidth value="240"/>
				</style>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$TextHeaderBigDefault"/>
				<bind name="class" value="'$FontColorBlueish'"/>
				<bind name="text" value="!isLooted ? 'IDS_ADDITIONAL_REWARD_BEFORE' : 'IDS_ADDITIONAL_REWARD_AFTER'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="(state == 2) || (state == 3) || canOpenFinalTask ||
						((state == 1) &amp;&amp; haveFreeSlot &amp;&amp; (missionTimeToStart &lt;= 0))"/>
			<styleClass value="$HugeMargins"/>
			<block className="button_default" type="native">
				<params>
					<param name="name" value="ActivateButtonTask"/>
				</params>
				<style>
					<width value="210px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<bind name="focus" value="1; true"/>
				<bind name="label" value=" 	(state == 1) 			 	? toUpperCase(tr('IDS_TASK_ACTIVATE'))  :
							(state == 2) 			? toUpperCase(tr('IDS_TASK_CANCEL'))  :
							(state == 3) &amp;&amp; !(isLooted)	? toUpperCase(tr('IDS_TAKE_REWARD')) :
							(state == 3) &amp;&amp; (isLooted) 	? toUpperCase(tr('IDS_TAKE_STARS'))  :
							(canOpenFinalTask) 								? toUpperCase(tr('IDS_OPEN_FINAL_TASK'))
																			: null"/>
				<bind name="action" value="'buttonClick';  ((taskProgress &gt; 0) &amp;&amp; (taskProgress &lt; max)) 	? null 
																						: (state == 1) 		? 'CampaignsProxy.activateTask'
																						: (state == 2) 	? 'CampaignsProxy.deactivateTask'
																						: (state == 3) 			? 'CampaignsProxy.takeReward'
																						: (canOpenFinalTask)						? 'CampaignsProxy.unlockTask'
																																	: null ; { taskID: campaignTaskEntity.campaignTaskParams.id}"/>
				<bind name="dispatch" value="'buttonClick'; 'Tooltip.Close'; {}"/>
				<bind name="request" value="'buttonClick'; ((taskProgress &gt; 0) &amp;&amp; (taskProgress &lt; max)) 	? 'CampaignsProxy.deactivateTask'
																						: null; {taskID: campaignTaskEntity.campaignTaskParams.id}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="	(state == 5) || (state == 0) || ((state == 1) &amp;&amp; !(haveFreeSlot))
						|| ((state == 1) &amp;&amp; (missionTimeToStart &gt; 0))"/>
			<styleClass value="$HugeMargins"/>
			<block type="text">
				<style>
					<maxWidth value="320"/>
				</style>
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorUnready'"/>
				<bind name="timeFormat" value="missionTimeToStart; 'HIGHEST'; 'formatStartTime'; true"/>
				<bind name="text" value="(state == 5) 															? 'IDS_IMPOSSIBLE_TO_CHOOSE_TASK' :
						((state == 1) &amp;&amp; !(haveFreeSlot)) 										? 'IDS_TOOLTIP_NEED_FREE_SLOT' :
						(state == 0) &amp;&amp; (isMainTask) &amp;&amp; (missionState != 0)	? 'IDS_TOOLTIP_FINAL_TASK_LOCKED' :
						(state == 0)																? campaignNeedToken 	? 'IDS_TOOLTIP_CAMPAIGN_NEED_TOKEN'
																																				: (missionTimeToStart &gt; 0)	? subst('IDS_LOCKED_MISSION_TIME_LEFT_TASK_TOOLTIP', [], {timeLeft: formatStartTime})
																																											: 'IDS_TOOLTIP_TASK_LOCKED'
																														: ''"/>
			</block>
		</block>
		<block className="dock_panel_pin_h" type="native">
			<style>
				<position value="absolute"/>
				<marginTop value="-8px"/>
			</style>
			<bind name="gotoAndStop!" value="'left'"/>
			<params>
				<param name="name" value="pinLeft"/>
			</params>
		</block>
		<block className="dock_panel_pin_h" type="native">
			<style>
				<position value="absolute"/>
				<marginTop value="-8px"/>
				<right value="-8px"/>
			</style>
			<bind name="gotoAndStop!" value="'right'"/>
			<params>
				<param name="name" value="pinRight"/>
			</params>
		</block>
	</block>
	<block className="TaskItemStatus">
		<bind name="visible" value="(state != 5)"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<styleClass value="$HugeMargins"/>
			<block>
				<bind name="visible" value="(state == 5 || isLooted)"/>
				<style>
					<backgroundImage value="symbol:checkbox_check"/>
					<width value="22px"/>
					<height value="17px"/>
					<top value="4px"/>
					<marginRight value="3px"/>
				</style>
			</block>
			<block type="text">
				<styleClass value="$TextHeaderBigDefault"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="text" value="state == 2 &amp;&amp; isLooted ? 'IDS_TASK_IN_PROGRESS_REPEAT' :
						state == 2 ? 'IDS_TASK_IN_PROGRESS' :
						state == 3		? 'IDS_TASK_COMPLETED' :
						isLooted							? 'IDS_TASK_REPLAYABLE' :
						state == 0	? 'IDS_TASK_LOCKED'
															: 'IDS_TASK_NOT_DONE'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
	</block>
	<block className="TaskItemHeader">
		<bind name="primaryEntityDH" value="'campaignTaskEntity'; CC.campaignTaskParams; _taskID"/>
		<bind name="primaryEntityDH" value="'mission'; CC.campaignMissionParams; campaignTaskEntity.campaignTaskParams.missionID"/>
		<bind name="primaryEntityDH" value="'campaign'; CC.campaignParams; campaignTaskEntity.campaignTaskParams.campaignID"/>
		<bind name="watchDH" value="'campaignState'; ['campaign.campaignPlayer.evUpdate']; campaign.campaignPlayer.state"/>
		<bind name="watchDH" value="'campaignMissionsStates'; ['campaign.campaignPlayer.evUpdate']; campaign.campaignPlayer.missionsStates"/>
		<bind name="watchDH" value="'campaignName'; []; campaign.campaignParams.name"/>
		<bind name="watchDH" value="'campaignIsActivated'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.isActivated"/>
		<bind name="watchDH" value="'campaignAllMissions'; []; campaign.campaignParams.allMissions"/>
		<bind name="watchDH" value="'campaignMainTask'; []; campaign.campaignParams.mainTask"/>
		<bind name="watchDH" value="'campaignMapPositions'; []; campaign.campaignParams.mapPositions"/>
		<bind name="watchDH" value="'campaignCountTasks'; []; campaign.campaignParams.countTasks"/>
		<bind name="watchDH" value="'campaignStartTime'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.startTime"/>
		<bind name="watchDH" value="'campaignEndTime'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.endTime"/>
		<bind name="watchDH" value="'campaignIsNarrative'; []; campaign.campaignParams.isNarrative"/>
		<bind name="watchDH" value="'campaignToken'; []; campaign.campaignParams.token"/>
		<bind name="watchDH" value="'campaignIsViewed'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.isViewed"/>
		<bind name="watch" value="'campaignNeedToken'; campaignState == 0 &amp;&amp; campaignToken != ''"/>
		<bind name="watchDH" value="'campaignCountLootedTasks'; ['campaign.campaignPlayer.evUpdate']; campaign.campaignPlayer.countLootedTasks"/>
		<bind name="watchDH" value="'state';['campaignTaskEntity.campaignTaskPlayer.evUpdate']; campaignTaskEntity.campaignTaskPlayer.state"/>
		<bind name="watchDH" value="'taskProgress';['campaignTaskEntity.progress.evChanged']; campaignTaskEntity.progress.value"/>
		<bind name="watchDH" value="'max';[]; campaignTaskEntity.progress.max"/>
		<bind name="watchDH" value="'missionState';['mission.campaignMissionPlayer.evUpdate']; mission.campaignMissionPlayer.state"/>
		<bind name="watchDH" value="'number';[]; campaignTaskEntity.campaignTaskParams.number"/>
		<bind name="watchDH" value="'uiNumber';[]; mission.campaignMissionParams.uiNumber"/>
		<bind name="watchDH" value="'isMainTask';[]; campaignTaskEntity.campaignTaskParams.isMainTask"/>
		<bind name="watchDH" value="'lootStars';[]; campaignTaskEntity.campaignTaskParams.lootStars"/>
		<bind name="watchDH" value="'costUnlock';[]; campaignTaskEntity.campaignTaskParams.costUnlock"/>
		<bind name="watchDH" value="'bgIconID';[]; campaignTaskEntity.campaignTaskParams.bgIconID"/>
		<bind name="watchDH" value="'isLooted';['campaignTaskEntity.campaignTaskPlayer.evUpdate']; campaignTaskEntity.campaignTaskPlayer.isLooted"/>
		<style>
			<width value="100%"/>
			<paddingTop value="2px"/>
			<paddingRight value="2px"/>
			<paddingLeft value="2px"/>
		</style>
		<bind name="style" value="'height'; _isPortBanner ? '100px' : '120px'"/>
		<block>
			<bind name="visible" value="!_isPortBanner"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundSize value="cover"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:../campaigns/bg_task_item/' + 'task_bg_campaign_' + (bgIconID ? bgIconID : number) + '.png'"/>
			<block className="inner_panel" type="native">
				<styleClass value="$Fullsize"/>
				<style>
					<alpha value="2.5"/>
				</style>
			</block>
		</block>
		<block>
			<bind name="visible" value="(state == 5)"/>
			<style>
				<backgroundImage value="symbol:quest_done_icon"/>
				<top value="10px"/>
				<right value="32px"/>
				<position value="absolute"/>
				<hitTest value="false"/>
			</style>
		</block>
		<block>
			<block>
				<style>
					<backgroundSize value="fill"/>
				</style>
				<bind name="style" value="'width'; _isPortBanner ? '100px' : '120px'"/>
				<bind name="style" value="'height'; _isPortBanner ? '100px' : '120px'"/>
				<bind name="tooltip" value="'SimpleTooltip';  {tooltipText: 'IDS_MISSION_NUMBER'}"/>
				<bind name="style" value="'backgroundImage'; (missionState == 5) 	? 'url:../campaigns/missions_pin/' + campaignName + '_done_pin.png'
																							: 'url:../campaigns/missions_pin/' + campaignName + '_pin.png'"/>
				<block type="text">
					<bind name="visible" value="(state != 0) &amp;&amp; (missionState != 5)"/>
					<style>
						<alpha value="0.8"/>
						<position value="absolute"/>
					</style>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$TextAccentBoldAccountLevel2"/>
					<bind name="text" value="uiNumber"/>
				</block>
				<block>
					<bind name="visible" value="state == 0"/>
					<styleClass value="$FullsizeAbsolute"/>
					<block>
						<styleClass value="$MiddleAligned"/>
						<styleClass value="$MiddleVAligned"/>
						<block className="icon_locked_mc" type="native"/>
					</block>
				</block>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<block type="text">
					<style>
						<marginTop value="3px"/>
						<maxWidth value="200"/>
					</style>
					<styleClass value="$TextLargeHeaderBold"/>
					<bind name="text" value="isMainTask 	? (toUpperCase(tr('IDS_FINAL_TASK')))
										: (toUpperCase(tr('IDS_CAMPAIGN_TASK'))) + ' ' + number"/>
				</block>
				<block className="indicator_progress_bar" type="native">
					<bind name="visible" value="((taskProgress &gt; 0) &amp;&amp; (taskProgress &lt; max) )"/>
					<style>
						<width value="200px"/>
					</style>
					<bind name="value" value="(taskProgress/max) * 10"/>
				</block>
				<block>
					<bind name="visible" value="((taskProgress &gt; 0) &amp;&amp; (taskProgress &lt; max) )"/>
					<style>
						<width value="100%"/>
						<marginTop value="-3px"/>
					</style>
					<block type="text">
						<styleClass value="$TextHeader"/>
						<bind name="class" value="'$FontColorBlueish'"/>
						<bind name="text" value="taskProgress + '/' + max"/>
					</block>
				</block>
				<block>
					<bind name="visible" value="((missionState == 0) || (missionState == 2)) &amp;&amp; !isMainTask"/>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_STARS_FOR_BATTLE'}"/>
					<style>
						<marginTop value="3px"/>
						<marginLeft value="-1px"/>
					</style>
					<block>
						<bind name="repeat" value="lootStars; 'StarsEarnedEnable'"/>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<style>
							<position value="absolute"/>
						</style>
						<bind name="repeat" value="costUnlock; 'StarsEarnedDisabled'"/>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="WindowTaskHeaderInstruction">
		<bind name="primaryEntityDH" value="'campaign'; CC.campaignParams; _curCampaignId"/>
		<bind name="watchDH" value="'campaignState'; ['campaign.campaignPlayer.evUpdate']; campaign.campaignPlayer.state"/>
		<bind name="watchDH" value="'campaignMissionsStates'; ['campaign.campaignPlayer.evUpdate']; campaign.campaignPlayer.missionsStates"/>
		<bind name="watchDH" value="'campaignName'; []; campaign.campaignParams.name"/>
		<bind name="watchDH" value="'campaignIsActivated'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.isActivated"/>
		<bind name="watchDH" value="'campaignAllMissions'; []; campaign.campaignParams.allMissions"/>
		<bind name="watchDH" value="'campaignMainTask'; []; campaign.campaignParams.mainTask"/>
		<bind name="watchDH" value="'campaignMapPositions'; []; campaign.campaignParams.mapPositions"/>
		<bind name="watchDH" value="'campaignCountTasks'; []; campaign.campaignParams.countTasks"/>
		<bind name="watchDH" value="'campaignStartTime'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.startTime"/>
		<bind name="watchDH" value="'campaignEndTime'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.endTime"/>
		<bind name="watchDH" value="'campaignIsNarrative'; []; campaign.campaignParams.isNarrative"/>
		<bind name="watchDH" value="'campaignToken'; []; campaign.campaignParams.token"/>
		<bind name="watchDH" value="'campaignIsViewed'; ['campaign.campaignParams.evUpdate']; campaign.campaignParams.isViewed"/>
		<bind name="watch" value="'campaignNeedToken'; campaignState == 0 &amp;&amp; campaignToken != ''"/>
		<bind name="watchDH" value="'campaignCountLootedTasks'; ['campaign.campaignPlayer.evUpdate']; campaign.campaignPlayer.countLootedTasks"/>
		<bind name="primaryEntityDH" value="'mission'; CC.campaignMissionParams; _curMissionId"/>
		<bind name="primaryEntityDH" value="'missionMainTaskEntity'; CC.campaignTaskParams; mission.campaignMissionParams.mainTask"/>
		<bind name="watchDH" value="'missionState';['mission.campaignMissionPlayer.evUpdate']; mission.campaignMissionPlayer.state"/>
		<bind name="watchDH" value="'mainTaskState';['missionMainTaskEntity.campaignTaskPlayer.evUpdate']; missionMainTaskEntity.campaignTaskPlayer.state"/>
		<bind name="watchDH" value="'costUnlock';[]; missionMainTaskEntity.campaignTaskParams.costUnlock"/>
		<bind name="watchDH" value="'mainTask';[]; mission.campaignMissionParams.mainTask"/>
		<bind name="watchDH" value="'missionStartTime';[]; mission.campaignMissionParams.startTime"/>
		<bind name="watch" value="'missionTimeToStart'; missionStartTime - serverTime"/>
		<bind name="serverTime" value="'serverTime'"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<bind name="instance" value="'TaskItem'; {_isShipSuitable: true, _isBattleSuitable: true, _isUseless: false, _taskID: mainTask}"/>
		</block>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<marginLeft value="1.5sw"/>
			</style>
			<block>
				<bind name="instance" value="'WindowHeaderCostUnlock'; {_curMissionId: _curMissionId, _isInHeader: true}"/>
			</block>
			<block>
				<style>
					<marginTop value="3px"/>
				</style>
				<block type="text">
					<bind name="visible" value="(missionState != 2)"/>
					<style>
						<maxWidth value="500"/>
						<leading value="-2"/>
					</style>
					<styleClass value="$TextHeaderWhite"/>
					<bind name="class" value="campaignNeedToken || missionTimeToStart &gt; 0 ? '$FontColorUnready' : '$FontColorDefault'"/>
					<bind name="timeFormat" value="missionTimeToStart; 'HIGHEST'; 'formatStartTime'; true"/>
					<bind name="text" value="missionState == 0						? campaignNeedToken 			? 'IDS_TOOLTIP_CAMPAIGN_NEED_TOKEN'
																						  								: missionTimeToStart &gt; 0	? subst('IDS_LOCKED_MISSION_TIME_LEFT_TOOLTIP', [], {timeLeft: formatStartTime})
																																					: 'IDS_MISSION_STATE_LOCKED' :
							(	missionState == 4 &amp;&amp;
								mainTaskState == 5) 			? 'IDS_MISSION_STATE_OPENED_BOSS' :
							(missionState == 4)				? 'IDS_MISSION_STATE_FINAL_TASK_OPENED_NOT_COMPLETED' 
																						: 'IDS_MISSION_STATE_COMPLETED'"/>
				</block>
				<block type="text">
					<bind name="visible" value="(missionState == 2)"/>
					<styleClass value="$TextHeaderWhite"/>
					<style>
						<maxWidth value="500"/>
						<leading value="-2"/>
						<alpha value="0.9"/>
						<styleSheet value="h3
						{
							color: #f5c96f;
						}"/>
					</style>
					<bind name="text" value="subst('IDS_CHOOSE_TASK_DESCR', [], {count: costUnlock}, costUnlock)"/>
				</block>
			</block>
		</block>
	</block>
	<block className="WindowHeaderCostUnlock">
		<bind name="primaryEntityDH" value="'campaignMissionEntity'; CC.campaignMissionParams; _curMissionId"/>
		<bind name="primaryEntityDH" value="'missionMainTaskEntity'; CC.campaignTaskParams; campaignMissionEntity.campaignMissionParams.mainTask"/>
		<bind name="watchDH" value="'stars';['campaignMissionEntity.campaignMissionPlayer.evUpdate']; campaignMissionEntity.campaignMissionPlayer.stars"/>
		<bind name="watchDH" value="'costUnlock'; []; missionMainTaskEntity.campaignTaskParams.costUnlock"/>
		<block>
			<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_STARS_FOR_BATTLE_EMPTY'}"/>
			<bind name="repeat" value="costUnlock; 'StarsEarnedDisabled'; {_isInHeader: _isInHeader}"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_STARS_FOR_BATTLE_EARNED'}"/>
			<bind name="repeat" value="stars; 'StarsEarnedEnable'; {_isInHeader: _isInHeader}"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="StarsEarnedEnable">
		<style>
			<width value="23px"/>
			<height value="23px"/>
		</style>
		<bind name="style" value="'marginRight'; _isInHeader ? '9px' : '2px'"/>
		<bind name="style" value="'marginBottom'; _isInTooltip ? '6px' : '0px'"/>
		<block className="icon_rank_star_nano" type="native">
			<bind name="gotoAndStop!" value="'earned'"/>
		</block>
	</block>
	<block className="StarsEarnedDisabled">
		<style>
			<width value="23px"/>
			<height value="23px"/>
		</style>
		<bind name="style" value="'marginRight'; _isInHeader ? '9px' : '2px'"/>
		<bind name="style" value="'marginBottom'; _isInTooltip ? '6px' : '0px'"/>
		<block className="icon_rank_star_nano" type="native">
			<bind name="gotoAndStop!" value="'not_earned'"/>
		</block>
	</block>
	<block className="GoalsItem">
		<bind name="entityDH" value="'campaignGoalEntity'; _entityId"/>
		<bind name="watchDH" value="'l10nText';[]; campaignGoalEntity.campaignTaskGoal.l10nText"/>
		<bind name="watchDH" value="'l10nRestriction';[]; campaignGoalEntity.campaignTaskGoal.l10nRestriction"/>
		<block type="text">
			<bind name="style" value="'maxWidth'; _isInMissionTooltip ? '245' : '320'"/>
			<styleClass value="$TextHeader"/>
			<bind name="text" value="l10nText"/>
		</block>
		<block type="text">
			<bind name="visible" value="_isInMissionTooltip == true"/>
			<bind name="style" value="'maxWidth'; _isInMissionTooltip ? '245' : '320'"/>
			<styleClass value="$TextHeader"/>
			<bind name="text" value="l10nRestriction"/>
		</block>
	</block>
	<css name="$DefaultFormationWidgetSize">
		<width value="330px"/>
		<height value="410px"/>
	</css>
	<block className="ResizableFormationWidget">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<styleClass value="$ResizableFormationWidgetInfotipBehaviour"/>
		<styleClass value="$DefaultFormationWidgetSize"/>
		<bind name="resize" value="'grip';'down';null; 'formationWidgetHeight'"/>
		<block className="DivisionEntranceInfotip">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
			<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
			<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
			<bind name="firstEntityDH" value="'trainingRoomEntity'; CC.trainingRoomWindowState"/>
			<bind name="watchDH" value="'windowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.state"/>
			<bind name="watchDH" value="'notReadyWindowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.notReadyWindowState"/>
			<bind name="watchDH" value="'windowInset'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.inset"/>
			<bind name="watchDH" value="'windowInsetLabel'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.insetLabel"/>
			<bind name="watchDH" value="'isBotsEnabled'; ['trainingRoomEntity.trainingRoom.evUpdate']; trainingRoomEntity.trainingRoom.isBotsEnabled"/>
			<styleClass value="$DivisionEntranceInfotipBehaviour"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
			<bind name="class" value="_isFromDockFormationBtn ? '$Fullsize' : '$DefaultFormationWidgetSize'"/>
			<bind name="var" value="{searchState: 0, tabInset: 0}"/>
			<bind name="watch" value="'infotipState'; tabInset == 0 ? searchState : 2"/>
			<bind name="catch" value="'Tooltip.selfClosed'; {searchState : 0}"/>
			<bind name="action" value="'Tooltip.selfOpened'; 'ClanProxy.getClanTeams'; {}"/>
			<bind name="request" value="'Tooltip.selfOpened'; 'updateSuitableShipsForBot'; {teamId:_teamId}"/>
			<bind name="catch" value="'changeSearchState'"/>
			<bind name="catch" value="'TextInputWithCancel.searchCancelled'; {searchState : 0}"/>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<marginLeft value="13px"/>
					<marginRight value="13px"/>
					<marginBottom value="18px"/>
					<marginTop value="9px"/>
				</style>
				<block className="DeclareBlurLayer">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="transparentPixel" type="native">
						<bind name="blurLayer" value="0"/>
					</block>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block className="BlurMapCustom">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap3" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="dock_panel" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<styleClass value="$Fullsize"/>
				<style>
					<marginLeft value="14px"/>
					<marginRight value="14px"/>
					<marginTop value="9px"/>
					<marginBottom value="19px"/>
				</style>
				<bind name="var" value="{_searchRequests: [['contacts', 13]],
					_resultsDisplay: ['myContacts', 'contacts', 'ignoredContacts']}"/>
				<bind name="watch" value="'playerContextType'; _isFromTrainingRoomBtn ? 'inviteToTrainingRoom': 'inviteToDivision'"/>
				<block>
					<style>
						<width value="100%"/>
						<marginTop value="5px"/>
						<marginBottom value="5px"/>
					</style>
					<bind name="visible" value="_isFromTrainingRoomBtn &amp;&amp; _teamId != -1 &amp;&amp; isBotsEnabled"/>
					<block className="tab_bar_bg" type="native">
						<style>
							<position value="absolute"/>
							<width value="100%"/>
							<marginLeft value="1px"/>
							<marginRight value="1px"/>
							<height value="29px"/>
						</style>
					</block>
					<block className="tab_bar_item" type="native">
						<style>
							<width value="149px"/>
							<height value="29px"/>
						</style>
						<bind name="selected" value="tabInset == 0"/>
						<bind name="catch" value="'click'; {tabInset: 0}"/>
						<bind name="label" value="toUpperCase(tr('IDS_PLAYERS'))"/>
					</block>
					<block className="divider_v" type="native">
						<style>
							<height value="25px"/>
							<marginTop value="2px"/>
							<width value="2px"/>
						</style>
					</block>
					<block className="tab_bar_item" type="native">
						<params>
							<param name="name" value="tabBarItem"/>
						</params>
						<style>
							<width value="149px"/>
							<height value="29px"/>
						</style>
						<bind name="selected" value="tabInset == 1"/>
						<bind name="catch" value="'click'; {tabInset: 1}"/>
						<bind name="label" value="toUpperCase(tr('IDS_BOT'))"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<bind name="child" value="infotipState; {_searchRequests: _searchRequests, _resultsDisplay: _resultsDisplay, 
			_playerContext: {type: playerContextType}, _isFromTrainingRoomBtn: _isFromTrainingRoomBtn, _teamId: _teamId}; 
			'FormationWidget'; 'SearchResultsList'; 'AddBotWidget'"/>
			</block>
			<block className="dock_panel_pin_h" type="native">
				<style>
					<position value="absolute"/>
					<width value="9px"/>
					<left value="13px"/>
					<height value="16px"/>
					<alpha value="0.6"/>
				</style>
				<bind name="gotoAndStop!" value="'left'"/>
				<params>
					<param name="name" value="pinLeft"/>
				</params>
			</block>
			<block className="dock_panel_pin_h" type="native">
				<style>
					<position value="absolute"/>
					<width value="9px"/>
					<right value="4px"/>
					<height value="16px"/>
					<alpha value="0.6"/>
				</style>
				<bind name="gotoAndStop!" value="'right'"/>
				<params>
					<param name="name" value="pinRight"/>
				</params>
			</block>
			<block className="dock_panel_pin" type="native">
				<bind name="gotoAndStop!" value="'up'"/>
				<params>
					<param name="name" value="pinTop"/>
				</params>
				<style>
					<position value="absolute"/>
					<alpha value="0.6"/>
				</style>
			</block>
			<block className="dock_panel_pin" type="native">
				<bind name="gotoAndStop!" value="'down'"/>
				<params>
					<param name="name" value="pinBottom"/>
				</params>
				<style>
					<bottom value="9"/>
					<alpha value="0.6"/>
					<position value="absolute"/>
				</style>
			</block>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<bottom value="16"/>
				<height value="8px"/>
				<backgroundColor value="0x01000000"/>
			</style>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<bind name="transition" value="(rollOver || resizing); 0.06; {alpha: 0}; {alpha: 1}; {alpha: 0}"/>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_VERTICAL_OVER'"/>
			<params>
				<param name="name" value="grip"/>
			</params>
			<block className="gripper_horizontal_over" type="native">
				<style>
					<alpha value="0.7"/>
					<marginTop value="1px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
			</block>
		</block>
	</block>
	<css name="$ResizableFormationWidgetInfotipBehaviour">
		<userData value="{
		appearDelay: 0.1,
		appearDuration: 0.1,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.1,
		disappearOffset: -5.0,
		tinyOffset: 0,
		rightOffset: -8,
		bottomOffset: 0,
		isTipCenter: true,
		minResizeHeight: 400,
		maxResizeHeight: 660
	}"/>
	</css>
	<css name="$DivisionEntranceInfotipBehaviour">
		<userData value="{
		appearDelay: 0.1,
		appearDuration: 0.1,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.1,
		disappearOffset: -5.0,
		tinyOffset: 0,
		rightOffset: -8,
		bottomOffset: 0,
		isTipCenter: true
	}"/>
	</css>
	<block className="DivisionEntranceInfotip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<bind name="firstEntityDH" value="'trainingRoomEntity'; CC.trainingRoomWindowState"/>
		<bind name="watchDH" value="'windowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.state"/>
		<bind name="watchDH" value="'notReadyWindowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.notReadyWindowState"/>
		<bind name="watchDH" value="'windowInset'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.inset"/>
		<bind name="watchDH" value="'windowInsetLabel'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.insetLabel"/>
		<bind name="watchDH" value="'isBotsEnabled'; ['trainingRoomEntity.trainingRoom.evUpdate']; trainingRoomEntity.trainingRoom.isBotsEnabled"/>
		<styleClass value="$DivisionEntranceInfotipBehaviour"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="class" value="_isFromDockFormationBtn ? '$Fullsize' : '$DefaultFormationWidgetSize'"/>
		<bind name="var" value="{searchState: 0, tabInset: 0}"/>
		<bind name="watch" value="'infotipState'; tabInset == 0 ? searchState : 2"/>
		<bind name="catch" value="'Tooltip.selfClosed'; {searchState : 0}"/>
		<bind name="action" value="'Tooltip.selfOpened'; 'ClanProxy.getClanTeams'; {}"/>
		<bind name="request" value="'Tooltip.selfOpened'; 'updateSuitableShipsForBot'; {teamId:_teamId}"/>
		<bind name="catch" value="'changeSearchState'"/>
		<bind name="catch" value="'TextInputWithCancel.searchCancelled'; {searchState : 0}"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginLeft value="13px"/>
				<marginRight value="13px"/>
				<marginBottom value="18px"/>
				<marginTop value="9px"/>
			</style>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap3" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="dock_panel" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<marginLeft value="14px"/>
				<marginRight value="14px"/>
				<marginTop value="9px"/>
				<marginBottom value="19px"/>
			</style>
			<bind name="var" value="{_searchRequests: [['contacts', 13]],
					_resultsDisplay: ['myContacts', 'contacts', 'ignoredContacts']}"/>
			<bind name="watch" value="'playerContextType'; _isFromTrainingRoomBtn ? 'inviteToTrainingRoom': 'inviteToDivision'"/>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="5px"/>
					<marginBottom value="5px"/>
				</style>
				<bind name="visible" value="_isFromTrainingRoomBtn &amp;&amp; _teamId != -1 &amp;&amp; isBotsEnabled"/>
				<block className="tab_bar_bg" type="native">
					<style>
						<position value="absolute"/>
						<width value="100%"/>
						<marginLeft value="1px"/>
						<marginRight value="1px"/>
						<height value="29px"/>
					</style>
				</block>
				<block className="tab_bar_item" type="native">
					<style>
						<width value="149px"/>
						<height value="29px"/>
					</style>
					<bind name="selected" value="tabInset == 0"/>
					<bind name="catch" value="'click'; {tabInset: 0}"/>
					<bind name="label" value="toUpperCase(tr('IDS_PLAYERS'))"/>
				</block>
				<block className="divider_v" type="native">
					<style>
						<height value="25px"/>
						<marginTop value="2px"/>
						<width value="2px"/>
					</style>
				</block>
				<block className="tab_bar_item" type="native">
					<params>
						<param name="name" value="tabBarItem"/>
					</params>
					<style>
						<width value="149px"/>
						<height value="29px"/>
					</style>
					<bind name="selected" value="tabInset == 1"/>
					<bind name="catch" value="'click'; {tabInset: 1}"/>
					<bind name="label" value="toUpperCase(tr('IDS_BOT'))"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<bind name="child" value="infotipState; {_searchRequests: _searchRequests, _resultsDisplay: _resultsDisplay, 
			_playerContext: {type: playerContextType}, _isFromTrainingRoomBtn: _isFromTrainingRoomBtn, _teamId: _teamId}; 
			'FormationWidget'; 'SearchResultsList'; 'AddBotWidget'"/>
		</block>
		<block className="dock_panel_pin_h" type="native">
			<style>
				<position value="absolute"/>
				<width value="9px"/>
				<left value="13px"/>
				<height value="16px"/>
				<alpha value="0.6"/>
			</style>
			<bind name="gotoAndStop!" value="'left'"/>
			<params>
				<param name="name" value="pinLeft"/>
			</params>
		</block>
		<block className="dock_panel_pin_h" type="native">
			<style>
				<position value="absolute"/>
				<width value="9px"/>
				<right value="4px"/>
				<height value="16px"/>
				<alpha value="0.6"/>
			</style>
			<bind name="gotoAndStop!" value="'right'"/>
			<params>
				<param name="name" value="pinRight"/>
			</params>
		</block>
		<block className="dock_panel_pin" type="native">
			<bind name="gotoAndStop!" value="'up'"/>
			<params>
				<param name="name" value="pinTop"/>
			</params>
			<style>
				<position value="absolute"/>
				<alpha value="0.6"/>
			</style>
		</block>
		<block className="dock_panel_pin" type="native">
			<bind name="gotoAndStop!" value="'down'"/>
			<params>
				<param name="name" value="pinBottom"/>
			</params>
			<style>
				<bottom value="9"/>
				<alpha value="0.6"/>
				<position value="absolute"/>
			</style>
		</block>
	</block>
	<block className="CountryContextMenu">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<styleClass value="$DefaultMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<block className="MenuBg">
			<styleClass value="$FullsizeAbsolute"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<bind name="visible" value="optionData.contrast &amp;&amp; !(false)"/>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="!(false)"/>
				<block className="hint_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="false"/>
				<block className="dock_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginBottom value="-19px"/>
						<marginRight value="-14px"/>
						<marginLeft value="-14px"/>
						<marginTop value="-9px"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="repeat" value="_countries; 'CountryMenuItem'; { _countries: _countries, _subtypes: _subtypes }"/>
		</block>
	</block>
	<block className="ShipTypeContextSubMenu">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<styleClass value="$RightSubMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<block className="MenuBg">
			<styleClass value="$FullsizeAbsolute"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<bind name="visible" value="optionData.contrast &amp;&amp; !(false)"/>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="!(false)"/>
				<block className="hint_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="false"/>
				<block className="dock_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginBottom value="-19px"/>
						<marginRight value="-14px"/>
						<marginLeft value="-14px"/>
						<marginTop value="-9px"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="repeat" value="_subtypes; 'ShipTypeMenuItem'; { _country: _country }"/>
		</block>
	</block>
	<block className="ShipContextSubMenu">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<styleClass value="$RightSubMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<block className="MenuBg">
			<styleClass value="$FullsizeAbsolute"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<bind name="visible" value="optionData.contrast &amp;&amp; !(false)"/>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="!(false)"/>
				<block className="hint_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="false"/>
				<block className="dock_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginBottom value="-19px"/>
						<marginRight value="-14px"/>
						<marginLeft value="-14px"/>
						<marginTop value="-9px"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="repeat" value="_suitableShips; 'ShipMenuItem'"/>
		</block>
	</block>
	<block className="CountryMenuItem">
		<bind name="name" value="'CountryMenuItem_' + $value"/>
		<styleClass value="$ContextMenuListItem"/>
		<bind name="collectionDH" value="CC.ship; 'suitableShipsRoot'; 'allShipsForBots.suitable'"/>
		<bind name="collectionDesign" value="DES_suitableShipsRoot; 'suitableShips'; {'filter': $entity.ship.country == $value}"/>
		<bind name="tooltip" value="'ShipTypeContextSubMenu'; (suitableShips.length &gt; 0) ? { _subtypes: _subtypes, _country: $value} : null; 13; null; 'shipTypeContextMenuVisible'"/>
		<bind name="tooltip" value="'SimpleWarningTooltip'; (suitableShips.length == 0) ? { _text: 'IDS_NO_SUITABLE_SHIPS' } : null; 0"/>
		<block className="dock_submenu_item" type="native">
			<styleClass value="$Fullsize"/>
			<bind name="style" value="'alpha'; (suitableShips.length == 0) ? 0.4 : 1"/>
			<bind name="selected" value="shipTypeContextMenuVisible"/>
			<block>
				<style>
					<width value="100%"/>
					<height value="100%"/>
					<hitTest value="false"/>
				</style>
				<styleClass value="$ContextMenuListItemContent"/>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<bind name="text" value="tr(toUpperCase('IDS_' + $value))"/>
				</block>
				<block className="button_expand_h" type="native">
					<bind name="visible" value="(suitableShips.length &gt; 0)"/>
					<style>
						<position value="absolute"/>
						<right value="3px"/>
					</style>
					<styleClass value="$MouseDisable"/>
					<styleClass value="$MiddleVAligned"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ShipTypeMenuItem">
		<bind name="name" value="'ShipTypeMenuItem_' + $value"/>
		<styleClass value="$ContextMenuListItem"/>
		<bind name="collectionDH" value="CC.ship; 'suitableShipsRoot'; 'allShipsForBots.suitable'"/>
		<bind name="collectionDesign" value="DES_suitableShipsRoot; 'suitableShips';
        			{	'filter': ($entity.ship.subtype == $value) &amp;&amp; ($entity.ship.country == _country),
        				'sort':['ship.level'],
        				'sortOrder' : [0]
        			}"/>
		<bind name="tooltip" value="'ShipContextSubMenu'; (suitableShips.length &gt; 0) ? { _suitableShips: suitableShips, _country: _country } : null; 13; null; 'shipContextMenuVisible'"/>
		<bind name="tooltip" value="'SimpleWarningTooltip'; (suitableShips.length == 0) ? { _text: 'IDS_NO_SUITABLE_SHIPS' } : null; 0"/>
		<block className="dock_submenu_item" type="native">
			<styleClass value="$Fullsize"/>
			<bind name="style" value="'alpha'; (suitableShips.length == 0) ? 0.4 : 1"/>
			<bind name="selected" value="shipContextMenuVisible"/>
			<block>
				<style>
					<width value="100%"/>
					<height value="100%"/>
					<hitTest value="false"/>
				</style>
				<styleClass value="$ContextMenuListItemContent"/>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<bind name="text" value="tr(toUpperCase('IDS_' + $value + 'S'))"/>
				</block>
				<block className="button_expand_h" type="native">
					<bind name="visible" value="(suitableShips.length &gt; 0)"/>
					<style>
						<position value="absolute"/>
						<right value="3px"/>
					</style>
					<styleClass value="$MouseDisable"/>
					<styleClass value="$MiddleVAligned"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ShipMenuItem">
		<styleClass value="$ContextMenuListItem"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="dispatch" value="'click'; 'evSelectBotShip'; {selectedShipId: $dataRef.ref.ship.id}"/>
		<block className="dock_submenu_item" type="native">
			<styleClass value="$Fullsize"/>
			<block>
				<style>
					<width value="100%"/>
					<height value="100%"/>
					<hitTest value="false"/>
				</style>
				<styleClass value="$ContextMenuListItemContent"/>
				<block>
					<bind name="name" value="'ShipMenuItem_' + $dataRef.ref.ship.id"/>
					<styleClass value="$MiddleVAligned"/>
					<bind name="instance" value="'BotShipTitleWithIconAndLevel'; {_shipID: $dataRef.ref.ship.id, _small: true}"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="BotShipTitleWithIconAndLevel">
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; _shipID; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<block>
			<style>
				<height value="27px"/>
			</style>
			<block>
				<bind name="visible" value="_hideTypeIcon != true"/>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<marginLeft value="6px"/>
				</style>
				<block className="icon_ship" type="native">
					<styleClass value="$MouseDisable"/>
					<bind name="gotoAndStop!" value="shipInfo.subtype"/>
				</block>
			</block>
			<block>
				<style>
					<marginLeft value="6px"/>
				</style>
				<styleClass value="$MiddleVAligned"/>
				<block type="text">
					<bind name="class" value="_small ? '$TextDefaultBold' : '$TextHeaderBold'"/>
					<bind name="class" value="'$FontColorWhite'"/>
					<bind name="text" value="shipInfo.levelRome + ' ' + toUpperCase(tr(shipInfo.nameIDS))"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="SelectedShipForBot">
		<params>
			<param name="name" value="SelectedShipForBot"/>
		</params>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="collectionDH" value="CC.ship; 'suitableShips'; 'allShipsForBots'"/>
		<bind name="collectionFields" value="suitableShips; ['ship.country', 'ship.subtype']; [Country.getOrderSortIndex, ShipTypes.getOrderSortIndex]"/>
		<style>
			<width value="100%"/>
			<height value="60px"/>
		</style>
		<block className="dock_submenu_item_bg" type="native">
			<styleClass value="$PxHorizontalCorrection"/>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="transition" value="(rollOver || countryContextMenuVisible); 0.15; {alpha: 0}; {alpha: 1.0}"/>
			<bind name="tooltip" value="'CountryContextMenu'; { _countries: suitableShips_ship_country, _subtypes: suitableShips_ship_subtype }; 3; null; 'countryContextMenuVisible'"/>
			<bind name="dispatch" value="'click'; 'Tooltip.Open'; {behaviour: TooltipBehaviour.contextMenu}"/>
		</block>
		<block>
			<bind name="visible" value="_enabled"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$MiddleVAligned"/>
			<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; _shipID; 'evUpdate'"/>
			<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
			<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
			<block>
				<bind name="instance" value="'BotShipTitleWithIconAndLevel'; {_shipID: _shipID, _hideTypeIcon: true}"/>
			</block>
			<block>
				<style>
					<width value="122px"/>
					<height value="22px"/>
					<marginLeft value="12px"/>
					<marginTop value="-2px"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:' + shipInfo.pathTinyIcon"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="!(_enabled)"/>
			<style>
				<width value="100%"/>
				<hitTest value="false"/>
			</style>
			<styleClass value="$MiddleVAligned"/>
			<block>
				<styleClass value="$MiddleAligned"/>
				<block className="icon_warning_orange" type="native">
					<style>
						<marginTop value="5px"/>
						<marginRight value="2px"/>
					</style>
				</block>
				<block type="text">
					<styleClass value="$TextDefaultBold"/>
					<bind name="class" value="'$FontColorUnready'"/>
					<style>
						<leading value="-3"/>
					</style>
					<bind name="text" value="toUpperCase(tr('IDS_NO_SUITABLE_SHIPS'))"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="AddBotWidget">
		<bind name="firstEntityDH" value="'trainingRoomEntity'; CC.trainingRoomWindowState"/>
		<bind name="watchDH" value="'windowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.state"/>
		<bind name="watchDH" value="'notReadyWindowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.notReadyWindowState"/>
		<bind name="watchDH" value="'windowInset'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.inset"/>
		<bind name="watchDH" value="'windowInsetLabel'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.insetLabel"/>
		<bind name="watchDH" value="'isBotsAIEnabled'; ['trainingRoomEntity.trainingRoom.evUpdate']; trainingRoomEntity.trainingRoom.isBotsAIEnabled"/>
		<styleClass value="$Fullsize"/>
		<bind name="collectionDH" value="CC.ship; 'shipsCollection'; 'allShipsForBots.suitable'"/>
		<bind name="var" value="{isActive: false,
				isArmed: false,
				_curItemIndex: 0,
				selectedShipId: shipsCollection[0].ship.id}"/>
		<bind name="var" value="{BOT_AI_LEVELS: [3, 6, 11]}"/>
		<bind name="watch" value="'hasAvailableShips'; shipsCollection.length &gt; 0"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPreBattleId'; ['selfPlayerEntity.preBattlePlayerSimple.evPreBattleIdChanged']; selfPlayerEntity.preBattlePlayerSimple.preBattleId"/>
		<bind name="collectionDH" value="CC.preBattlePlayerSimple; 'preBattlePlayers'; 'byPreBattleAndTeam.' + selfPreBattleId + '_' + _teamId + '.preBattleMembers'"/>
		<bind name="collectionDH" value="CC.preBattlePlayerSimple; 'preBattleInvitedPlayers'; 'byPreBattleAndTeam.' + selfPreBattleId + '_' + _teamId + '.invitedPlayers'"/>
		<bind name="watchDH" value="'trainingRoomTeamSize'; ['trainingRoomEntity.trainingRoom.evUpdate']; trainingRoomEntity.trainingRoom.teamSize"/>
		<bind name="watch" value="'curPlayersInFormation'; (preBattlePlayers.length + preBattleInvitedPlayers.length)"/>
		<bind name="watch" value="'hasFreePlacesInFormation'; (trainingRoomTeamSize - curPlayersInFormation) &gt; 0"/>
		<bind name="watch" value="'isBotAddEnabled'; hasAvailableShips &amp;&amp; hasFreePlacesInFormation"/>
		<block>
			<style>
				<width value="100%"/>
				<height value="8px"/>
				<marginTop value="-1px"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="catch" value="'evSelectBotShip'"/>
			<bind name="dispatch" value="'evSelectBotShip'; 'Tooltip.Close'; {}; 1"/>
			<bind name="instance" value="'SelectedShipForBot'; {_shipID: selectedShipId, _enabled: hasAvailableShips}"/>
		</block>
		<block>
			<bind name="visible" value="isBotsAIEnabled"/>
			<style>
				<width value="100%"/>
				<paddingLeft value="10px"/>
				<paddingRight value="10px"/>
				<marginTop value="5px"/>
			</style>
			<bind name="style" value="'hitTest'; hasAvailableShips"/>
			<bind name="style" value="'alpha'; !hasAvailableShips ? 1 : 0.8"/>
			<bind name="style" value="'colorMatrixFilter'; hasAvailableShips ? '0 0 0 0' : '0 -100 0 -40'"/>
			<block>
				<block>
					<style>
						<width value="100%"/>
						<marginBottom value="8px"/>
						<marginTop value="8px"/>
					</style>
					<params>
						<param name="name" value="botActiveCb"/>
					</params>
					<bind name="catch" value="'click'; { isActive: !isActive }"/>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_BOT_ACTIVE_TOOLTIP'}"/>
					<bind name="instance" value="'CheckBox'; { switchProperty: isActive, label: 'IDS_BOT_ACTIVE' }"/>
				</block>
				<block>
					<params>
						<param name="name" value="botArmedCb"/>
					</params>
					<style>
						<width value="100%"/>
						<marginBottom value="4px"/>
					</style>
					<bind name="catch" value="'click'; { isArmed: !isArmed }"/>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_BOT_ARMED_TOOLTIP'}"/>
					<bind name="instance" value="'CheckBox'; { switchProperty: isArmed, label: 'IDS_BOT_ARMED' }"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="2px"/>
					<marginBottom value="8px"/>
				</style>
				<block type="text">
					<style>
						<alpha value="0.85"/>
						<marginRight value="4px"/>
						<marginTop value="8px"/>
					</style>
					<styleClass value="$TextDefault17NM"/>
					<text value="IDS_AI_LEVEL"/>
				</block>
				<params>
					<param name="name" value="ItemChooserBotLevelAI"/>
				</params>
				<bind name="catch" value="'ItemChooser.aiLevelSelected'"/>
				<bind name="instance" value="'ItemChooser'; {_items: BOT_AI_LEVELS, curIndex: _curItemIndex, 
											_choosedItemRenderer: 'AILevelChoosedItemRenderer', _listItemRenderer: 'AILevelListItemRenderer',
											onItemSelectedEvent: 'aiLevelSelected'}"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<params>
				<param name="name" value="addBotBtn"/>
			</params>
			<style>
				<marginTop value="5px"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<bind name="tooltip" value="'SimpleWarningTooltip'; !(isBotAddEnabled) ? { _text: !(hasAvailableShips) 	? 'IDS_NO_SUITABLE_SHIPS'
																									: 'IDS_NO_FREE_PLACES_IN_FORMATION' } : null; 0"/>
			<bind name="instance" value="'DefaultButton'; { _enabled: isBotAddEnabled, _width: '150px', _label: toUpperCase(tr('IDS_ADD')), 
				_action: 'TrainingRoomProxy.addBot',
				_actionParams: { botAiLevel: BOT_AI_LEVELS[_curItemIndex], canMove: isActive, canShoot: isArmed, shipId: selectedShipId, teamId: _teamId} }"/>
		</block>
	</block>
	<block className="FormationWidget">
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerDivisionEntrance"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInDivision'; 'playersInDivision'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInvitedToDivision'; 'playersInvitedToDivision'"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="action" value="(userPrefs.commentWantTo_division == null) ? 'addedToStage' : ''; 'setUserPref' ; {value : '', name : 'commentWantTo_division'}"/>
		<bind name="var" value="{commentWantTo_division: (userPrefs.commentWantTo_division == null) ? '' : userPrefs.commentWantTo_division}"/>
		<bind name="catch" value="'evCommentChanged_division'"/>
		<bind name="changeDispatch" value="commentWantTo_division; 'evCommentChanged_division' + 'InPrefs'"/>
		<bind name="action" value="'evCommentChanged_division' + 'InPrefs'; 'setUserPref' ; {value : commentWantTo_division, name : 'commentWantTo_division'}"/>
		<bind name="action" value="(userPrefs.commentWantTo_party == null) ? 'addedToStage' : ''; 'setUserPref' ; {value : '', name : 'commentWantTo_party'}"/>
		<bind name="var" value="{commentWantTo_party: (userPrefs.commentWantTo_party == null) ? '' : userPrefs.commentWantTo_party}"/>
		<bind name="catch" value="'evCommentChanged_party'"/>
		<bind name="changeDispatch" value="commentWantTo_party; 'evCommentChanged_party' + 'InPrefs'"/>
		<bind name="action" value="'evCommentChanged_party' + 'InPrefs'; 'setUserPref' ; {value : commentWantTo_party, name : 'commentWantTo_party'}"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<bind name="watch" value="'commentWantToFormationSync'; divisionEntranceData.divisionType == 'division' ? commentWantTo_division : commentWantTo_party"/>
		<bind name="changeDispatch" value="commentWantToFormationSync; divisionEntranceData.divisionType == 'division' ? 'evDivisionCommentChanged' : 'evPartyCommentChanged'"/>
		<bind name="catch" value="'evDivisionCommentChanged'; {commentWantTo_division: commentWantToFormationSync}"/>
		<bind name="catch" value="'evPartyCommentChanged'; {commentWantTo_party: commentWantToFormationSync}"/>
		<styleClass value="$Fullsize"/>
		<block>
			<bind name="visible" value="!(divisionData.divisionExist) &amp;&amp; !_isFromTrainingRoomBtn"/>
			<style>
				<width value="100%"/>
				<height value="34px"/>
			</style>
			<block className="dock_submenu_item" type="native">
				<bind name="name" value="'wantToDivision'"/>
				<styleClass value="$Fullsize"/>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: divisionEntranceData.seekerStatus ? tr('IDS_NOT_VISIBLE_FOR_OTHER_PLAYERS_' + toUpperCase(divisionEntranceData.divisionType))
																							: tr('IDS_VISIBLE_FOR_OTHER_PLAYERS_'+ toUpperCase(divisionEntranceData.divisionType))}"/>
				<bind name="action" value="'buttonClick'; 'toggleDivisionSeekerStatus'; {comment: commentWantToFormationSync, status: divisionEntranceData.seekerStatus}"/>
				<params>
					<param name="soundSet" value="dropmenu_button"/>
				</params>
			</block>
			<block className="button_close" type="native">
				<bind name="name" value="'closeSeekDivision'"/>
				<bind name="visible" value="divisionEntranceData.seekerStatus"/>
				<style>
					<position value="absolute"/>
					<hitTest value="false"/>
					<right value="10px"/>
					<top value="11px"/>
				</style>
				<bind name="transition" value="rollOver; 0.15; {alpha: 0.8}; {alpha: 1}"/>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: divisionEntranceData.seekerStatus ? tr('IDS_NOT_VISIBLE_FOR_OTHER_PLAYERS_' + toUpperCase(divisionEntranceData.divisionType))
																							: tr('IDS_VISIBLE_FOR_OTHER_PLAYERS_'+ toUpperCase(divisionEntranceData.divisionType))}"/>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<hitTest value="false"/>
					<position value="absolute"/>
					<marginTop value="5px"/>
				</style>
				<block className="icon_formation_wanted" type="native">
					<bind name="gotoAndStop!" value="divisionEntranceData.seekerStatus ? ('on_'+divisionEntranceData.divisionType) : 'off'"/>
					<style>
						<marginTop value="2px"/>
						<marginRight value="2px"/>
					</style>
				</block>
				<block type="text">
					<styleClass value="$TextDefaultBold"/>
					<bind name="class" value="divisionEntranceData.seekerStatus ? (divisionEntranceData.divisionType == 'party' ? '$FontColorParty' : '$FontColorTurquoise') : '$FontColorWhite'"/>
					<bind name="text" value="('IDS_WANT_IN_' + toUpperCase(divisionEntranceData.divisionType))"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<bind name="transition" value="divisionEntranceData.seekerStatus; 0.15; {scaleY: 0, ubScaleY: 0, alpha: 0}; {scaleY: 1, ubScaleY: 1, alpha: 1}; {scaleY: 0, ubScaleY: 0, alpha: 0}; 2; 0.1"/>
			<style>
				<width value="100%"/>
				<height value="8px"/>
				<marginTop value="-1px"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<bind name="var" value="{testBanned: false}"/>
		<block>
			<bind name="style" value="'hitTest'; (divisionEntranceData.banned || testBanned) ? false : true"/>
			<style>
				<width value="100%"/>
				<marginLeft value="6px"/>
				<marginRight value="6px"/>
			</style>
			<bind name="transition" value="divisionEntranceData.seekerStatus; 0.15; {scaleY: 0, ubScaleY: 0, alpha: 0}; {scaleY: 1, ubScaleY: 1, alpha: 1}; {scaleY: 0, ubScaleY: 0, alpha: 0}; 2; 0.1"/>
			<block className="text_area_elastic_enter" type="native">
				<style>
					<width value="100%"/>
				</style>
				<bind name="controller" value="lesta.dialogs.dock.controllers.ElasticBlockController"/>
				<bind name="minNumLines" value="3"/>
				<bind name="maxNumLines" value="8"/>
				<bind name="style" value="'alpha'; (divisionEntranceData.banned || testBanned ? 0.35 : 1)"/>
				<bind name="watch" value="'maxChars'; divisionEntranceData.commentMaxChars"/>
				<params>
					<param name="actAsButton" value="true"/>
					<param name="maxChars" value="200"/>
				</params>
				<bind name="defaultText" value="tr('IDS_ENTER_STATUS')"/>
				<bind name="focus" value="0; false"/>
				<bind name="focusable" value="(divisionEntranceData.banned || testBanned) ? false : true"/>
				<bind name="sync" value="'text'; 'change'; commentWantToFormationSync; commentWantToDivisionChanged"/>
				<bind name="action" value="'textInputEnter'; 'updateSeekerComment'; {comment: commentWantToFormationSync}"/>
				<innerBind elementName="hotKeyEnter" name="alpha" value="((maxChars-commentWantToFormationSync.length) &lt; 0) 														? 0.4 :
											(divisionEntranceData.commentStatus == 'submitted') &amp;&amp; (commentWantToFormationSync.length &lt;= maxChars)	? 0
																																					: 1"/>
				<block>
					<styleClass value="$TextAreaEnterButton"/>
					<bind name="tooltip" value="'SimpleWarningTooltip'; (commentWantToFormationSync.length &gt; maxChars) ? {_text: 'IDS_MAX_STATUS_LENGTH'} : null"/>
					<bind name="tooltip" value="'SimpleTooltip'; (commentWantToFormationSync.length &lt;= maxChars) ? {tooltipText: 'IDS_HINT_ADD_SEEKER_STATUS'} : null"/>
					<block className="button_dock" type="native">
						<styleClass value="$FullsizeAbsolute"/>
						<bind name="style" value="'hitTest'; (divisionEntranceData.commentStatus == 'submitted') &amp;&amp; (commentWantToFormationSync.length &lt;= maxChars) ? false : true"/>
						<bind name="enabled" value="((commentWantToFormationSync.length &lt;= maxChars) &amp;&amp; (divisionEntranceData.commentStatus != 'submitted'))"/>
						<bind name="action" value="'buttonClick'; 'updateSeekerComment'; {comment: commentWantToFormationSync}"/>
					</block>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<bottom value="3"/>
						<right value="56"/>
					</style>
					<bind name="fade" value="(divisionEntranceData.banned || (divisionEntranceData.commentStatus != 'submitted')); 0.1;
							{top: 10, alpha: 0}; {top: 0, alpha: 1}; {top: 10, alpha: 0}"/>
					<bind name="instance" value="'CharCounter'; { _string: commentWantToFormationSync, _maxChars: maxChars}"/>
				</block>
				<block type="text">
					<bind name="fade" value="!(divisionEntranceData.banned) &amp;&amp; (divisionEntranceData.commentStatus == 'submitted') &amp;&amp; (commentWantToFormationSync.length &lt;= maxChars) &amp;&amp; (commentWantToFormationSync.length &gt; 0); 0.1;
							{top: 10, alpha: 0}; {top: 0, alpha: 0.8}; {top: 10, alpha: 0}"/>
					<style>
						<position value="absolute"/>
						<bottom value="3px"/>
						<left value="4px"/>
						<fontSize value="14"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="text" value="toUpperCase(tr('IDS_STATUS_SAVED'))"/>
				</block>
				<block type="text">
					<bind name="fade" value="!(divisionEntranceData.banned) &amp;&amp; (divisionEntranceData.commentStatus == 'submitted') &amp;&amp; (commentWantToFormationSync.length == null); 0.1;
							{top: 10, alpha: 0}; {top: 0, alpha: 0.8}; {top: 10, alpha: 0}"/>
					<style>
						<position value="absolute"/>
						<bottom value="3px"/>
						<left value="4px"/>
						<fontSize value="14"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="text" value="toUpperCase(tr('IDS_STATUS_CLEARED'))"/>
				</block>
				<block type="text">
					<bind name="fade" value="!(divisionEntranceData.banned) &amp;&amp; (divisionEntranceData.commentStatus == 'declined') &amp;&amp; (commentWantToFormationSync.length &gt; maxChars); 0.1;
							{top: 10, alpha: 0}; {top: 0, alpha: 1};  {top: 10, alpha: 0}"/>
					<style>
						<position value="absolute"/>
						<bottom value="3px"/>
						<left value="4px"/>
						<fontSize value="14"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorUnready'"/>
					<bind name="text" value="toUpperCase(tr('IDS_MAX_STATUS_LENGTH'))"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="divisionEntranceData.banned || testBanned"/>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="inner_panel" type="native">
					<styleClass value="$Fullsize"/>
				</block>
				<block type="text">
					<style>
						<width value="100%"/>
						<marginRight value="20px"/>
						<marginLeft value="20px"/>
						<position value="absolute"/>
						<textAlign value="center"/>
					</style>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$TextHeaderBold"/>
					<bind name="class" value="'$FontColorUnready'"/>
					<bind name="text" value="toUpperCase(tr('IDS_MESSAGES_BANNED'))"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="transition" value="divisionEntranceData.seekerStatus; 0.15; {scaleY: 0, ubScaleY: 0, alpha: 0}; {scaleY: 1, ubScaleY: 1, alpha: 1}; {scaleY: 0, ubScaleY: 0, alpha: 0}; 2; 0.1"/>
			<style>
				<width value="100%"/>
				<height value="6px"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="!(divisionData.divisionExist)"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<bind name="dataRefDH" value="'chat'; 'dataHub.chat.ref.chat'"/>
		<bind name="watchDH" value="'isChatServerAvailable'; ['chat.evConnected', 'chat.evDisConnected']; chat.isConnected"/>
		<block>
			<bind name="visible" value="isChatServerAvailable"/>
			<styleClass value="$Fullsize"/>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<bind name="visible" value="!_isFromTrainingRoomBtn"/>
				<styleClass value="$DefaultScrollBar"/>
				<style>
					<height value="100%f"/>
					<width value="100%"/>
					<overflow value="scroll"/>
				</style>
				<bind name="style" value="'marginBottom'; !(divisionData.divisionExist) ? '0px' : '40px'"/>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="instance" value="'ClanBattleDivisionsList'; (selfPlayerEntity.clanman != null) &amp;&amp; !(_isFromTrainingRoomBtn) ? {} : null"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="instance" value="'AllContactsGroup'; _isFromTrainingRoomBtn ? null : {_playerContext: _playerContext, _teamId: _teamId}"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="instance" value="'FormationSeekersGroup'; _isFromTrainingRoomBtn ? null : {_playerContextType: _playerContext.type}"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="_isFromTrainingRoomBtn == true"/>
				<style>
					<height value="100%"/>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'AllContactsGroupGenerator'; _isFromTrainingRoomBtn ? {_playerContext: _playerContext, _teamId: _teamId} : null"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="isChatServerAvailable"/>
			<style>
				<width value="100%"/>
				<height value="42px"/>
			</style>
			<block>
				<style>
					<marginTop value="-2px"/>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block className="button_search" type="native">
				<bind name="name" value="'searchPlayersDivision'"/>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<right value="8px"/>
				</style>
				<bind name="enabled" value="!$parent.seekersListUpdateInProgress"/>
				<bind name="dispatch" value="'buttonClick';'changeSearchState'; {searchState: 1}"/>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_SEARCH_PLAYERS'}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!(isChatServerAvailable)"/>
			<style>
				<marginTop value="60px"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<bind name="instance" value="'ServerIsUnavailable'; !(isChatServerAvailable))	? {} : null"/>
		</block>
	</block>
	<block className="AllContactsGroup">
		<bind name="dataRefDH" value="'contactsGroups'; 'dataHub.chat.ref.chat.contactsGroups.ref.items'"/>
		<bind name="entityDH" value="'group'; contactsGroups[0].id"/>
		<bind name="dataRefDH" value="'contacts'; 'group.groupOfElements.elements.ref.items'"/>
		<bind name="watchDH" value="'countTotal'; ['group.contactsGroup.evCountTotalChanged']; group.contactsGroup.countTotal"/>
		<bind name="watchDH" value="'countOnline'; ['group.contactsGroup.evCountOnlineChanged']; group.contactsGroup.countOnline"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
			<style>
				<width value="100%"/>
				<height value="33px"/>
			</style>
			<bind name="var" value="{groupExpanded: true}"/>
			<bind name="catch" value="'expandAllContactsGroup'"/>
			<block>
				<style>
					<width value="100%"/>
					<height value="33px"/>
				</style>
				<bind name="instance" value="'SimpleListGroupHeader'; {	_expandGroupEvent: 'expandAllContactsGroup', _groupLabel: 'IDS_MY_CONTACTS',
														_groupExpanded: groupExpanded, _stateOver: rollOver}"/>
			</block>
			<block>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: tr('IDS_ONLINE_PLAYERS') + ' / ' + tr('IDS_PLAYERS_IN_GROUP')}"/>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<right value="9px"/>
					<position value="absolute"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefaultBold"/>
					<bind name="style" value="'alpha'; (countOnline!=0) ? 1 : 0.5"/>
					<bind name="text" value="countOnline"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefaultBold"/>
					<style>
						<alpha value="0.5"/>
					</style>
					<bind name="text" value="'/ ' + countTotal"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<marginBottom value="1px"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginBottom value="2px"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="fade" value="groupExpanded; 0.15; {scaleY: 0, ubScaleY: 0, alpha: 0}; {scaleY: 1, ubScaleY: 1, alpha: 1}; {scaleY: 0, ubScaleY: 0, alpha: 0}; 2; 0"/>
					<bind name="repeat" value="contacts; 'ContactElement'; {	groupExpanded : groupExpanded, _playerContext: _playerContext, _teamId: _teamId}"/>
				</block>
				<block>
					<bind name="visible" value="(groupExpanded &amp;&amp; contacts.length != 0)"/>
					<style>
						<position value="absolute"/>
						<width value="100%"/>
						<bottom value="-2px"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="fade" value="(groupExpanded &amp;&amp; contacts.length == 0); 0.15; {alpha: 0, height: 0}; {alpha: 1, height: 30}"/>
				<style>
					<height value="30px"/>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$MiddleAligned"/>
					<bind name="instance" value="'EmptyStatusParagraph'; {_text: 'IDS_NO_CONTACTS_IN_GROUP'}"/>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<width value="100%"/>
						<bottom value="0px"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="AllContactsGroupGenerator">
		<bind name="dataRefDH" value="'contactsGroups'; 'dataHub.chat.ref.chat.contactsGroups.ref.items'"/>
		<bind name="entityDH" value="'group'; contactsGroups[0].id"/>
		<bind name="dataRefDH" value="'contacts'; 'group.groupOfElements.elements.ref.items'"/>
		<bind name="watchDH" value="'countTotal'; ['group.contactsGroup.evCountTotalChanged']; group.contactsGroup.countTotal"/>
		<bind name="watchDH" value="'countOnline'; ['group.contactsGroup.evCountOnlineChanged']; group.contactsGroup.countOnline"/>
		<style>
			<width value="100%"/>
			<height value="100%"/>
		</style>
		<block>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
			<style>
				<width value="100%"/>
				<height value="33px"/>
			</style>
			<bind name="var" value="{groupExpanded: true}"/>
			<bind name="catch" value="'expandAllContactsGroup'"/>
			<block>
				<style>
					<width value="100%"/>
					<height value="33px"/>
				</style>
				<bind name="instance" value="'SimpleListGroupHeader'; {	_expandGroupEvent: 'expandAllContactsGroup', _groupLabel: 'IDS_MY_CONTACTS',
														_groupExpanded: groupExpanded, _stateOver: rollOver}"/>
			</block>
			<block>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: tr('IDS_ONLINE_PLAYERS') + ' / ' + tr('IDS_PLAYERS_IN_GROUP')}"/>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<right value="9px"/>
					<position value="absolute"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefaultBold"/>
					<bind name="style" value="'alpha'; (countOnline!=0) ? 1 : 0.5"/>
					<bind name="text" value="countOnline"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefaultBold"/>
					<style>
						<alpha value="0.5"/>
					</style>
					<bind name="text" value="'/ ' + countTotal"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<height value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<marginBottom value="1px"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<height value="100%"/>
					<marginBottom value="2px"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
						<height value="100%"/>
						<overflow value="scroll"/>
						<scrollArea value="ModernScrollArea"/>
						<scrollbarController value="lesta.unbound.style.UbScrollingControllerModern"/>
						<scrollbar value="ModernScrollBar"/>
						<layout value="lesta.unbound.layout.measure.CarouselLayout"/>
						<wheelScrollSpeed value="30"/>
						<itemWidth value="330px"/>
						<itemHeight value="30px"/>
					</style>
					<bind name="fade" value="groupExpanded; 0.15; {scaleY: 0, ubScaleY: 0, alpha: 0}; {scaleY: 1, ubScaleY: 1, alpha: 1}; {scaleY: 0, ubScaleY: 0, alpha: 0}; 2; 0"/>
					<bind name="generator" value="contacts; 'ContactElement'; {groupExpanded : groupExpanded, _playerContext: _playerContext, _teamId: _teamId}"/>
				</block>
				<block>
					<bind name="visible" value="(groupExpanded &amp;&amp; contacts.length != 0)"/>
					<style>
						<position value="absolute"/>
						<width value="100%"/>
						<bottom value="-2px"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="fade" value="(groupExpanded &amp;&amp; contacts.length == 0); 0.15; {alpha: 0, height: 0}; {alpha: 1, height: 30}"/>
				<style>
					<height value="30px"/>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$MiddleAligned"/>
					<bind name="instance" value="'EmptyStatusParagraph'; {_text: 'IDS_NO_CONTACTS_IN_GROUP'}"/>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<width value="100%"/>
						<bottom value="0px"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="FormationSeekersGroup">
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerDivisionEntrance"/>
		<bind name="event" value="'addedToStage'; requestUpdateSeekersList"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
			<style>
				<width value="100%"/>
				<height value="33px"/>
			</style>
			<bind name="var" value="{groupExpanded: true}"/>
			<bind name="catch" value="'expandFormationSeekersGroup'"/>
			<block>
				<style>
					<width value="100%"/>
					<height value="33px"/>
				</style>
				<bind name="instance" value="'SimpleListGroupHeader'; {	_expandGroupEvent: 'expandFormationSeekersGroup', _groupLabel: ('IDS_LOOKING_FOR_' + toUpperCase(divisionEntranceData.divisionType)),
														_groupExpanded: groupExpanded, _stateOver: rollOver}"/>
			</block>
			<block>
				<style>
					<right value="9px"/>
					<top value="8px"/>
					<position value="absolute"/>
				</style>
				<bind name="name" value="'UpdateSeekersList'"/>
				<block className="button_update" type="native">
					<bind name="enabled" value="!($parent.seekersListUpdateInProgress)"/>
					<bind name="event" value="'buttonClick'; requestUpdateSeekersList"/>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_UPDATE_FORMATION_SEEKERS_LIST'}"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<marginBottom value="1px"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginBottom value="2px"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="fade" value="groupExpanded; 0.15; {scaleY: 0, ubScaleY: 0, alpha: 0}; {scaleY: 1, ubScaleY: 1, alpha: 1}; {scaleY: 0, ubScaleY: 0, alpha: 0}; 2; 0"/>
					<bind name="repeat" value="divisionEntranceData.seekersList; 'FormationSeekerPlayer'; {groupExpanded: groupExpanded, _playerContextType: _playerContextType}"/>
				</block>
				<block>
					<bind name="visible" value="(groupExpanded &amp;&amp; divisionEntranceData.seekersList.length != 0)"/>
					<style>
						<position value="absolute"/>
						<width value="100%"/>
						<bottom value="0px"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="fade" value="(groupExpanded &amp;&amp; divisionEntranceData.seekersList.length == 0); 0.15; {alpha: 0, height: 0}; {alpha: 1, height: 60}"/>
				<style>
					<height value="60px"/>
					<width value="100%"/>
				</style>
				<block>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$MiddleVAligned"/>
					<bind name="instance" value="'EmptyStatusParagraph'; {_text: ('IDS_INSTRUCTION_NO_PLAYERS_WANTED_IN_' + toUpperCase(divisionEntranceData.divisionType))}"/>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<width value="100%"/>
						<bottom value="0px"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="FormationSeekerPlayer">
		<style>
			<width value="100%"/>
			<height value="30px"/>
		</style>
		<bind name="fade" value="groupExpanded; 0.15; {alpha: 0, height: 0}; {alpha: 1, height: 30}"/>
		<block>
			<styleClass value="$Fullsize"/>
		</block>
		<bind name="instance" value="'PlayerContactItemWithRollover'; {_entityAccountId: accountId, _playerContext: {type: _playerContextType, seekerComment: comment, isFormationSeeker: true}}"/>
	</block>
	<block className="ClanBattleDivisionsList">
		<style>
			<width value="100%"/>
		</style>
		<block>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
			<style>
				<width value="100%"/>
				<height value="33px"/>
			</style>
			<bind name="var" value="{groupExpanded: true}"/>
			<bind name="catch" value="'expandMyClanBattleDivisionListGroup'"/>
			<bind name="instance" value="'SimpleListGroupHeader'; {	_expandGroupEvent: 'expandMyClanBattleDivisionListGroup', _groupLabel: 'IDS_MY_CLAN_BATTLES',
													_groupExpanded: groupExpanded, _stateOver: rollOver}"/>
		</block>
		<block>
			<style>
				<right value="9px"/>
				<top value="8px"/>
				<position value="absolute"/>
			</style>
			<block className="button_update" type="native">
				<bind name="action" value="'buttonClick'; 'ClanProxy.getClanTeams'; {}"/>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_UPDATE_CLAN_DIVISIONS_LIST'}"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<style>
					<top value="-1px"/>
					<width value="100%"/>
					<position value="absolute"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<bind name="fade" value="groupExpanded; 0.15; {scaleY: 0, ubScaleY: 0, alpha: 0}; {scaleY: 1, ubScaleY: 1, alpha: 1}; {scaleY: 0, ubScaleY: 0, alpha: 0}; 2; 0"/>
			<bind name="collectionDH" value="CC.clanTeam; 'clanBattleDivisionGroups'"/>
			<bind name="collectionDesign" value="DES_clanBattleDivisionGroups; 'availableClanTeams'; {	'sort': ['clanTeam.isClanBattleType','clanTeam.isInBattle','clanTeam.isLocked'],
																						'sortOrder':[SortType.DESCENDING, 0, 0]
																					}; ['clanTeam.evBattleTypeChanged', 'clanTeam.evIsInBattleChanged', 'clanTeam.evIsLockedChanged']"/>
			<bind name="collectionDH" value="CC.clanSquadLadderInfo; 'squadsCollection'"/>
			<bind name="watchDH" value="'hasClanSquadModifier'; ['selfPlayerEntity.clanmanSupplyInfo.evHasClanSquadModifierChanged']; selfPlayerEntity.clanmanSupplyInfo.hasClanSquadModifier"/>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="repeat" value="availableClanTeams; 'ClanBattleDivisionsItem'; {groupExpanded: groupExpanded}"/>
			</block>
			<block>
				<bind name="visible" value="(availableClanTeams.length == 0)"/>
				<style>
					<marginTop value="14px"/>
					<marginBottom value="14px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'EmptyStatusParagraph'; {_text: 'IDS_INSTRUCTION_YOU_HAVE_NO_CLAN_BATTLES', _maxWidth: 290}"/>
			</block>
		</block>
	</block>
	<block className="ClanBattleDivisionsItem">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<bind name="entityDH" value="'clanTeamEntity'; id"/>
		<bind name="watchDH" value="'clanTeamIndex'; ['clanTeamEntity.clanTeam.evTeamIndexChanged']; clanTeamEntity.clanTeam.teamIndex"/>
		<bind name="watchDH" value="'playersCount'; ['clanTeamEntity.clanTeam.evPlayersCountChanged']; clanTeamEntity.clanTeam.playersCount"/>
		<bind name="watchDH" value="'playersLimit'; ['clanTeamEntity.clanTeam.evPlayersLimitChanged']; clanTeamEntity.clanTeam.playersLimit"/>
		<bind name="watchDH" value="'battleType'; ['clanTeamEntity.clanTeam.evBattleTypeChanged']; clanTeamEntity.clanTeam.battleType"/>
		<bind name="watchDH" value="'isInBattle'; ['clanTeamEntity.clanTeam.evIsInBattleChanged']; clanTeamEntity.clanTeam.isInBattle"/>
		<bind name="watchDH" value="'ownerName'; ['clanTeamEntity.clanTeam.evOwnerNameChanged']; clanTeamEntity.clanTeam.ownerName"/>
		<bind name="watchDH" value="'isLocked'; ['clanTeamEntity.clanTeam.evIsLockedChanged']; clanTeamEntity.clanTeam.isLocked"/>
		<bind name="watchDH" value="'hasNonClanMembers'; ['clanTeamEntity.clanTeam.evHasNonClanMembersChanged']; clanTeamEntity.clanTeam.hasNonClanMembers"/>
		<bind name="watchDH" value="'squadId'; ['clanTeamEntity.clanTeam.evSquadIdChanged']; clanTeamEntity.clanTeam.squadId"/>
		<bind name="watchDH" value="'isClanBattleType'; ['clanTeamEntity.clanTeam.evIsClanBattleTypeChanged']; clanTeamEntity.clanTeam.isClanBattleType"/>
		<bind name="watch" value="'isDivisionFull'; playersCount == playersLimit"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'myDivisionId'; ['selfPlayerEntity.preBattlePlayerSimple.evPreBattleIdChanged']; selfPlayerEntity.preBattlePlayerSimple.preBattleId"/>
		<bind name="watchDH" value="'clanTeamId'; []; clanTeamEntity.clanTeam.id"/>
		<bind name="watch" value="'isInDivision'; (selfPlayerEntity.preBattlePlayerSimple) &amp;&amp; !(selfPlayerEntity.playerInvitedToPrebattleInfo)"/>
		<bind name="watch" value="'isOtherDivision'; !(isInDivision &amp;&amp; (myDivisionId == clanTeamId))"/>
		<bind name="watch" value="'isOwnerSelfPlayer'; selfPlayerEntity.accountName.name == ownerName"/>
		<bind name="watchDH" value="'hasClanSquadModifier'; ['selfPlayerEntity.clanmanSupplyInfo.evHasClanSquadModifierChanged']; selfPlayerEntity.clanmanSupplyInfo.hasClanSquadModifier"/>
		<bind name="watch" value="'iconType'; isOtherDivision ? 'player_ready_division_other_division' : 'player_ready_division'"/>
		<bind name="firstEntityDH" value="'clanCurrentSeasonEntity'; CC.clanBattleSeason; 'current'"/>
		<bind name="watchDH" value="'isBrawl'; ['clanCurrentSeasonEntity.clanBattleSeason.evChanged']; clanCurrentSeasonEntity.clanBattleSeason.isBrawl"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'shipId'; ['dockEntity.shipSelection.evShipUpdate']; dockEntity.shipSelection.currentShipId"/>
		<bind name="watchDH" value="'shipIdForModuleInset'; ['dockEntity.shipSelection.evShipViewUpdate']; dockEntity.shipSelection.currentShipIdForModuleInset"/>
		<bind name="action" value="'click'; (!isLocked &amp;&amp; !isInBattle &amp;&amp; !isInDivision) ? 'DockProxy.joinToPreBattle' : null; {preBattleId: clanTeamId, shipId: 0}"/>
		<style>
			<width value="100%"/>
			<height value="1px"/>
		</style>
		<bind name="fade" value="((groupExpanded != null) ? groupExpanded : true); 0.15; {alpha: 0, height: 0}; {alpha: 1, height: 50}"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="tooltip" value="'ClanBattleDivisionsTooltip'; {	_clanTeamIndex						: clanTeamIndex,
														_clanTeamId							: clanTeamId,
														_squadId							: squadId,
														_showClanSquadModifier				: hasClanSquadModifier &amp;&amp; !isBrawl,
														iconType							: iconType,
														isOtherDivision						: isOtherDivision,
														isLocked							: isLocked,
														hasNonClanMembers					: hasNonClanMembers,
														isInBattle							: isInBattle,
														isInDivision						: isInDivision,
														isDivisionFull						: isDivisionFull}"/>
			<block className="dock_submenu_item" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<marginLeft value="8px"/>
				<marginRight value="16px"/>
				<hitTest value="false"/>
			</style>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<bind name="style" value="'colorMatrixFilter'; isLocked ? '0 -100 0 -40' : '0 0 0 0' "/>
				<block className="icon_battletypes_small" type="native">
					<bind name="gotoAndStop!" value="(battleType == BattleTypes.CLAN_BATTLE) &amp;&amp; (isBrawl)	? 'ClanBrawl'
																							:  battleType"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="8px"/>
				</style>
				<styleClass value="$MiddleVAligned"/>
				<block type="text">
					<bind name="class" value="isOwnerSelfPlayer ? '$Bold' : '$None'"/>
					<bind name="class" value="isOtherDivision ? '$FontColorWhite' : '$FontColorGolden'"/>
					<styleClass value="$TextDefaultNM"/>
					<bind name="text" value="ownerName"/>
				</block>
			</block>
			<block>
				<style>
					<height value="100%"/>
				</style>
				<block>
					<bind name="visible" value="isClanBattleType &amp;&amp; hasClanSquadModifier &amp;&amp; !isBrawl"/>
					<style>
						<marginLeft value="8px"/>
						<marginRight value="4px"/>
					</style>
					<styleClass value="$MiddleVAligned"/>
					<block type="text">
						<styleClass value="$TextDefaultNM"/>
						<bind name="class" value="isOtherDivision ? '$FontColorGrey' : '$FontColorGolden'"/>
						<bind name="text" value="tr('IDS_CLAN_SQUAD_' + squadId)"/>
					</block>
				</block>
				<block>
					<bind name="visible" value="(hasNonClanMembers &amp;&amp; !isLocked) || ((hasNonClanMembers || isInDivision || isDivisionFull) &amp;&amp; !isLocked &amp;&amp; isOtherDivision)"/>
					<style>
						<marginRight value="4px"/>
					</style>
					<styleClass value="$MiddleVAligned"/>
					<block className="icon_warning_orange" type="native"/>
				</block>
				<block>
					<style>
						<marginRight value="4px"/>
					</style>
					<bind name="visible" value="isInBattle"/>
					<styleClass value="$MiddleVAligned"/>
					<block className="icon_player_status" type="native">
						<bind name="gotoAndStop!" value="'in_battle'"/>
					</block>
				</block>
				<block>
					<bind name="visible" value="isLocked"/>
					<styleClass value="$MiddleVAligned"/>
					<block className="button_lock" type="native">
						<bind name="selected" value="true"/>
					</block>
				</block>
				<block>
					<bind name="visible" value="!isLocked"/>
					<styleClass value="$MiddleVAligned"/>
					<block>
						<style>
							<marginRight value="4px"/>
							<height value="16px"/>
						</style>
						<styleClass value="$MiddleVAligned"/>
						<bind name="instance" value="'DivisionIconWithIndex'; {_divisionIndex: clanTeamIndex, _iconType: iconType}"/>
					</block>
					<bind name="watch" value="'colorClass'; 	isDivisionFull 	? '$FontColorAlmostBlack' 
															: isOtherDivision 	? '$FontColorWhite' 
																				: '$FontColorGolden'"/>
					<bind name="watch" value="'shadowClass'; isDivisionFull ? '$FontDropShadowWhite' : '$None'"/>
					<block type="text">
						<bind name="class" value="colorClass"/>
						<bind name="class" value="shadowClass"/>
						<styleClass value="$TextDefaultBold19NM"/>
						<bind name="text" value="playersCount"/>
					</block>
					<block type="text">
						<style>
							<marginTop value="1px"/>
							<marginLeft value="4px"/>
						</style>
						<bind name="style" value="'alpha'; isDivisionFull ? 1 : 0.65"/>
						<bind name="class" value="colorClass"/>
						<bind name="class" value="shadowClass"/>
						<styleClass value="$TextDefault17NM"/>
						<bind name="text" value="'/ ' + playersLimit"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<bottom value="0px"/>
				<marginLeft value="-1px"/>
				<marginRight value="-1px"/>
				<position value="absolute"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ClanBattleDivisionsTooltip">
		<bind name="watch" value="'byPreBattlePlayersCollectionPath'; 'byPreBattle.' + _clanTeamId"/>
		<bind name="collectionDH" value="CC.preBattlePlayerSimple; 'clanPlayersCollection'; byPreBattlePlayersCollectionPath"/>
		<bind name="action" value="'Tooltip.selfOpened'; 'DockProxy.getPreBattleInfo'; { preBattleId: _clanTeamId } "/>
		<style>
			<width value="300px"/>
		</style>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'TooltipBackground'; {}"/>
		</block>
		<block>
			<style>
				<height value="36px"/>
				<marginLeft value="12px"/>
			</style>
			<block>
				<style>
					<marginRight value="8px"/>
					<marginTop value="10px"/>
				</style>
				<bind name="instance" value="'DivisionIconWithIndex'; {_divisionIndex: _clanTeamIndex, _iconType: iconType}"/>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<block type="text">
					<bind name="class" value="isOtherDivision ? '$FontColorWhite' : '$FontColorGolden'"/>
					<styleClass value="$TextDefaultBold21NM"/>
					<bind name="text" value="isInBattle ? 'IDS_IN_BATTLE' : tr('IDS_DIVISION') + (_showClanSquadModifier ? '. ' + tr('IDS_CLAN_SQUAD_' + _squadId) : '')"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="8px"/>
				<marginBottom value="8px"/>
			</style>
			<bind name="collectionRepeatDH" value="CC.preBattlePlayerSimple; 'ClanBattleDivisionsTooltipPlayerSlot'; byPreBattlePlayersCollectionPath; {isOtherDivision: isOtherDivision}"/>
		</block>
		<block>
			<bind name="visible" value="!(!isOtherDivision &amp;&amp; !hasNonClanMembers)"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="12px"/>
					<marginBottom value="8px"/>
					<marginLeft value="12px"/>
				</style>
				<bind name="repeat" value="	!isOtherDivision &amp;&amp; !hasNonClanMembers	? null :
							!isOtherDivision &amp;&amp; hasNonClanMembers	? [ {_type: 'warning', _instructionText: 'IDS_STRANGERS_IN_THE_CLAN_DIVISION'} ] :
							isOtherDivision &amp;&amp; hasNonClanMembers	? [ {_type: 'warning', _instructionText: 'IDS_STRANGERS_IN_THE_CLAN_DIVISION'}, {_type: 'left', _instructionText: 'IDS_JOIN_DYNAMIC_DIVISION_MOUSE_HINT'} ] :
							isInDivision							? [ {_type: 'warning', _instructionText: 'IDS_YOU_ARE_IN_DIVISION_ALREADY'} ] :
							isLocked								? [ {_type: 'warning', _instructionText: 'IDS_CLAN_DIVISION_IS_PRIVATE'} ] :
							isDivisionFull							? [ {_type: 'warning', _instructionText: 'IDS_CLAN_DIVISION_IS_FULL'} ] :
							isInBattle								? [ {_type: 'warning', _instructionText: 'IDS_CLAN_DIVISION_IN_BATTLE'} ]
																	: [ {_type: 'left', _instructionText: 'IDS_JOIN_DYNAMIC_DIVISION_MOUSE_HINT'} ]; 'MouseInstructionRepeater'; {_maxWidth: 260, _lastIndex: 1}"/>
			</block>
		</block>
	</block>
	<block className="DivisionIconWithIndex">
		<style>
			<width value="14px"/>
			<height value="18px"/>
			<align value="center|middle"/>
		</style>
		<block className="formation_player_status" type="native">
			<style>
				<position value="absolute"/>
			</style>
			<bind name="gotoAndStop!" value="_iconType"/>
		</block>
		<block type="text">
			<styleClass value="$BlackLabel"/>
			<style>
				<fontSize value="10"/>
				<marginTop value="-3px"/>
			</style>
			<bind name="text" value="_divisionIndex"/>
		</block>
	</block>
	<block className="ClanBattleDivisionsTooltipPlayerSlot">
		<bind name="dataRefDH" value="'playerEntity'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'nickName'; ['playerEntity.accountName.evChanged']; playerEntity.accountName.nickName"/>
		<bind name="watchDH" value="'shipId'; ['playerEntity.preBattlePlayerSimple.evShipIdChanged']; playerEntity.preBattlePlayerSimple.shipId"/>
		<bind name="watchDH" value="'isReady'; ['playerEntity.preBattlePlayerSimple.evStateChanged']; playerEntity.preBattlePlayerSimple.isReady"/>
		<bind name="watchDH" value="'isSelf'; []; playerEntity.accountSimple.isSelfPlayer"/>
		<style>
			<width value="100%"/>
			<height value="26px"/>
			<marginLeft value="12px"/>
			<marginRight value="12px"/>
			<flow value="horizontal"/>
		</style>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<bind name="instance" value="'ClanDHFormationPlayerIcon'; {_entityAccountId: playerEntity.id, _isOtherDivision: isOtherDivision}"/>
		</block>
		<block>
			<style>
				<width value="47%"/>
				<marginLeft value="8px"/>
				<marginRight value="8px"/>
			</style>
			<styleClass value="$MiddleVAligned"/>
			<block type="text">
				<style>
					<width value="100%"/>
					<multiline value="false"/>
				</style>
				<bind name="class" value="isSelf ? '$Bold' : '$None'"/>
				<bind name="class" value="isSelf || !(isOtherDivision) ? '$FontColorGolden' : '$FontColorWhite'"/>
				<styleClass value="$TextDefaultNM"/>
				<bind name="text" value="nickName"/>
			</block>
		</block>
		<block>
			<style>
				<marginLeft value="8px"/>
				<width value="53%"/>
			</style>
			<styleClass value="$MiddleVAligned"/>
			<bind name="instance" value="'PreBattlePlayerShip'; (isReady || isInBattle) ? {_shipId: shipId} : null"/>
		</block>
	</block>
	<block className="ClanDHFormationPlayerIcon">
		<bind name="entityDH" value="'entityAccount'; _entityAccountId ? _entityAccountId : $dataRef.ref.id"/>
		<bind name="watchDH" value="'isReady'; ['entityAccount.preBattlePlayerSimple.evStateChanged']; entityAccount.preBattlePlayerSimple.isReady"/>
		<bind name="watchDH" value="'isCommander'; ['entityAccount.preBattlePlayerSimple.evIsCommanderChanged']; entityAccount.preBattlePlayerSimple.isCommander"/>
		<bind name="instance" value="'FormationPlayerIcon'; {isCommander: isCommander, isReady: isReady, isInBattle: isInBattle, _formationType: 'division', isOtherDivision: _isOtherDivision}"/>
	</block>
	<block className="ButtonDivisionTooltip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<style>
			<width value="260"/>
		</style>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<bind name="visible" value="_isFormationsEnabled"/>
			<styleClass value="$InfoBlockIndent"/>
			<block type="text">
				<style>
					<maxWidth value="240"/>
				</style>
				<styleClass value="$TextHeaderBigDefault"/>
				<bind name="text" value="'IDS_HINT_CREATE_DIVISION'"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!(_isFormationsEnabled)"/>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'StatusLineWithIcon'; { _text:	(_battleType == BattleTypes.RANKED_BATTLE) &amp;&amp; (rankedBattlesSeason.isDivisionAllowed != true)	? 'IDS_DIVISIONS_ARE_NOT_ALLOWED_IN_RANK_BATTLES' :
														(_battleType == BattleTypes.INTRO_MISSION)		? 'IDS_DIVISIONS_ARE_NOT_ALLOWED_IN_INTRO_MISSION_DESC' :
														(_battleType == BattleTypes.TRAINING_BATTLE)	? 'IDS_DIVISIONS_ARE_NOT_ALLOWED_IN_TRAINING_BATTLES'
																										: 'UNKNOWN_DENY_REASON',
												_maxWidth: 215}"/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<bind name="instance" value="'MouseInstruction'; { _type: 'left', _instructionText: 'IDS_CHOOSE_DIVISION_HINT', _maxWidth: 220 }"/>
		</block>
	</block>
	<block className="SimpleListGroupHeader">
		<style>
			<width value="100%"/>
			<height value="33px"/>
		</style>
		<block className="dock_submenu_item_bg" type="native">
			<style>
				<width value="100%"/>
				<height value="33px"/>
			</style>
			<bind name="transition" value="_stateOver; 0.15; {alpha: 0}; {alpha: 0.5}"/>
			<block className="button_expand" type="native">
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: _groupExpanded ? 'IDS_HINT_COLLAPSE_GROUP' : 'IDS_HINT_EXPAND_GROUP'}"/>
				<style>
					<width value="100%"/>
					<marginTop value="5px"/>
					<marginLeft value="3px"/>
					<position value="absolute"/>
				</style>
				<params>
					<param name="toggle" value="true"/>
					<param name="soundSet" value="dropmenu_button"/>
					<param name="focusable" value="false"/>
				</params>
				<bind name="selected" value="_groupExpanded"/>
				<bind name="dispatch" value="'click'; _expandGroupEvent; {groupExpanded: !(_groupExpanded)}"/>
			</block>
			<block type="text">
				<bind name="style" value="'marginLeft'; _marginLeft ? _marginLeft : '24px'"/>
				<style>
					<marginLeft value="24px"/>
					<marginTop value="5px"/>
					<hitTest value="false"/>
				</style>
				<styleClass value="$TextDefaultBold"/>
				<bind name="class" value="'$FontColorBlueish'"/>
				<bind name="text" value="_groupLabel"/>
			</block>
		</block>
		<block>
			<style>
				<marginTop value="-1px"/>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<css name="$TextDefault12NM">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="12"/>
		<marginText value="-3px|-3px|-6px|-5px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefault13NM">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<marginText value="-3px|-3px|-6px|-5px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBold13NM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<marginText value="-3px|-3px|-6px|-5px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultNM">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="15"/>
		<marginText value="-3px|-3px|-6px|-5px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBoldNM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="15"/>
		<marginText value="-3px|-3px|-6px|-5px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefault17NM">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="17"/>
		<marginText value="-3px|-4px|-7px|-6px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBold17NM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="17"/>
		<marginText value="-3px|-3px|-7px|-6px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefault19NM">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="19"/>
		<marginText value="-3px|-3px|-7px|-5px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBold19NM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="19"/>
		<marginText value="-3px|-3px|-8px|-6px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefault21NM">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="21"/>
		<marginText value="-3px|-3px|-8px|-7px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBold21NM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="21"/>
		<marginText value="-3px|-3px|-8px|-7px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBold23NM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="23"/>
		<marginText value="-3px|-3px|-9px|-6px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefault25NM">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="25"/>
		<marginText value="-3px|-3px|-9px|-8px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBold25NM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="25"/>
		<marginText value="-3px|-3px|-9px|-8px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefault27NM">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="27"/>
		<marginText value="-3px|-3px|-10px|-8px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBold30NM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="30"/>
		<marginText value="-3px|-4px|-11px|-8px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBold36NM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="36"/>
		<marginText value="-3px|-4px|-12px|-10px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBold40NM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="40"/>
		<marginText value="-3px|-4px|-13px|-10px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBold46NM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="46"/>
		<marginText value="-3px|-4px|-12px|-10px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBold50NM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="50"/>
		<marginText value="-3px|-4px|-15px|-13px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBold60NM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="60"/>
		<marginText value="-3px|-4px|-20px|-15px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<block className="TrainingRoomEscapeButton">
		<style>
			<position value="absolute"/>
			<right value="0"/>
			<top value="0"/>
			<flow value="horizontal"/>
		</style>
		<bind name="name" value="'btn_cancel'"/>
		<bind name="input"/>
		<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: _tooltipText }"/>
		<block>
			<style>
				<backgroundColor value="0x01000000"/>
			</style>
			<block>
				<style>
					<marginTop value="-3px"/>
				</style>
				<block className="hotkey_holder_white_9slice" type="native">
					<block type="text">
						<style>
							<marginLeft value="3px"/>
							<marginRight value="3px"/>
							<marginTop value="-1px"/>
							<marginBottom value="-1px"/>
						</style>
						<styleClass value="$BlackLabel"/>
						<text value="ESC"/>
					</block>
				</block>
			</block>
			<block className="button_close" type="native">
				<params>
					<param name="focusable" value="false"/>
				</params>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="TrainingRoomPlayerItem">
		<style>
			<width value="100%"/>
		</style>
		<bind name="name" value="'TrainingRoomPlayerItem_' + $index"/>
		<bind name="entityDH" value="'entityAccount'; _entityAccountId ? _entityAccountId : $dataRef.ref.id"/>
		<bind name="watchDH" value="'entityAccountTeamId'; ['entityAccount.preBattlePlayerSimple.evStateChanged']; entityAccount.preBattlePlayerSimple.teamId"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfTeamId'; ['selfPlayerEntity.preBattlePlayerSimple.evStateChanged']; selfPlayerEntity.preBattlePlayerSimple.teamId"/>
		<bind name="watchDH" value="'isSelfPlayerOwner'; ['selfPlayerEntity.preBattlePlayerSimple.evIsCommanderChanged']; selfPlayerEntity.preBattlePlayerSimple.isCommander"/>
		<bind name="watchDH" value="'isSelfPlayerCommander'; ['selfPlayerEntity.trainingRoomPlayer.evUpdate']; selfPlayerEntity.trainingRoomPlayer.isCommander &amp;&amp; 
																								(selfTeamId == entityAccountTeamId || entityAccountTeamId == -1)"/>
		<bind name="watch" value="'isTeamManagementAvailable'; isSelfPlayerOwner || isSelfPlayerCommander"/>
		<bind name="instance" value="'TrainingRoomPlayerItemDraggableOrNot'; {_entityAccountId: _entityAccountId, _isTrainingRoom: true, _isDragEnabled: isTeamManagementAvailable}"/>
	</block>
	<block className="TrainingRoomPlayerItemDraggableOrNot">
		<style>
			<width value="100%"/>
			<height value="80px"/>
		</style>
		<bind name="entityDH" value="'entityAccount'; _entityAccountId"/>
		<bind name="watch" value="'elementName'; _isDragEnabled ? 'TrainingRoomPlayerItemDraggable_' + _entityAccountId : 'TrainingRoomPlayerItemNonDraggable_' + _entityAccountId"/>
		<bind name="name" value="elementName"/>
		<bind name="watch" value="'isBot'; entityAccount.bot != undefined"/>
		<bind name="watch" value="'dropTypePostfix'; isBot ? '_bot' : ''"/>
		<bind name="draggable" value="_isDragEnabled ? 'this': null; entityAccount.preBattlePlayerSimple.teamId + dropTypePostfix; {playerId: entityAccount.preBattlePlayerSimple.id, isBot: isBot}"/>
		<block className="FormationPlayerItem">
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
			<bind name="entityDH" value="'entityAccount'; _entityAccountId ? _entityAccountId : $dataRef.ref.id"/>
			<bind name="watch" value="'isSelfPlayer'; entityAccount.accountSimple.isSelfPlayer"/>
			<bind name="watchDH" value="'isSuspended'; ['entityAccount.accountSimple.evSuspendedChanged']; entityAccount.accountSimple.suspended"/>
			<bind name="watch" value="'isBot'; entityAccount.bot != undefined"/>
			<bind name="watchDH" value="'shipId'; ['entityAccount.preBattlePlayerSimple.evShipIdChanged']; entityAccount.preBattlePlayerSimple.shipId"/>
			<bind name="watchDH" value="'teamId'; ['entityAccount.preBattlePlayerSimple.evStateChanged']; entityAccount.preBattlePlayerSimple.teamId"/>
			<bind name="watchDH" value="'isReady'; ['entityAccount.preBattlePlayerSimple.evStateChanged']; entityAccount.preBattlePlayerSimple.isReady"/>
			<bind name="watchDH" value="'isInBattle'; ['entityAccount.accountStatus.evInBattleChanged']; entityAccount.accountStatus.inBattle"/>
			<bind name="watchDH" value="'isCommander'; ['entityAccount.preBattlePlayerSimple.evIsCommanderChanged']; entityAccount.preBattlePlayerSimple.isCommander"/>
			<bind name="watchDH" value="'nickName'; ['entityAccount.accountName.evChanged']; entityAccount.accountName.nickName"/>
			<bind name="watchDH" value="'pureName'; ['entityAccount.accountName.evChanged']; entityAccount.accountName.name"/>
			<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
			<bind name="watchDH" value="'isSelfPlayerCommander'; ['selfPlayerEntity.preBattlePlayerSimple.evIsCommanderChanged']; selfPlayerEntity.preBattlePlayerSimple.isCommander"/>
			<bind name="watchDH" value="'selfTeamId'; ['selfPlayerEntity.preBattlePlayerSimple.evStateChanged']; selfPlayerEntity.preBattlePlayerSimple.teamId"/>
			<bind name="primaryEntityDH" value="'selfVoiceChatEntity'; CC.voiceChat; 0"/>
			<bind name="watchDH" value="'selfVoiceChatEnabled'; ['selfVoiceChatEntity.voiceChat.evEnabledChanged']; selfVoiceChatEntity.voiceChat.enabled"/>
			<bind name="var" value="{isAnimationPreUnlocked: false,
				isAnimationUnlocked: 	false}"/>
			<bind name="dispatch" value="'addedToStage'; 'animationPreActivationEvent'; null; false; 0.1"/>
			<bind name="catch" value="'animationPreActivationEvent'; {isAnimationPreUnlocked: true}"/>
			<bind name="changeDispatch" value="isReady; 'animationActivationEvent'"/>
			<bind name="catch" value="'animationActivationEvent'; {isAnimationUnlocked: isAnimationPreUnlocked ? true : false}"/>
			<style>
				<width value="100%"/>
				<height value="27px"/>
				<flow value="horizontal"/>
			</style>
			<block className="inner_panel" type="native">
				<bind name="visible" value="isSelfPlayer"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block className="dock_submenu_item_bg" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<styleClass value="$PxHorizontalCorrection"/>
				<bind name="clickSplit"/>
				<bind name="style" value="'hitTest'; !(isSuspended)"/>
				<bind name="transition" value="(rollOver || _rollOver || formationPlayerContextMenuVisible) &amp;&amp; !(isSelfPlayer); 0.15; {alpha: 0}; {alpha: 1.0}"/>
				<bind name="tooltip" value="'ContactInfoTooltip';	{	_entityAccountId: entityAccount.id, _actionDenyReason: 'no_reason',
													_playerContext: {type: 'startPrivateChat'}}"/>
				<bind name="action" value="'left_click';	!(isSelfPlayer) &amp;&amp; !(isBot) ? 'openChannelForPrivateMessages' : null; {dbId: entityAccount.accountSimple.dbId}"/>
				<bind name="menu" value="'ContactContextMenu';	!(isSelfPlayer)	? {	_entityAccountId: entityAccount.id, _playerContext: {type: 'startPrivateChat'},
																_inviteType: InviteType.COMMON, _isTrainingRoom: _isTrainingRoom, _isBot: isBot}
															: null; null; 'formationPlayerContextMenuVisible'"/>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<block>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="fade" value="(!isReady || isInBattle) &amp;&amp; isAnimationUnlocked; 0.3; {alpha: 0}; {alpha: 1}; {alpha: 0}; 1; 0"/>
					<block>
						<styleClass value="$Fullsize"/>
						<style>
							<backgroundColor value="0x90FF9933"/>
						</style>
						<bind name="fade" value="(!isReady || isInBattle) &amp;&amp; isAnimationUnlocked; 1.0; {alpha: 1}; {alpha: 0}; {alpha: 1}; 1; 0.5"/>
					</block>
				</block>
				<block>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="fade" value="isReady &amp;&amp; isAnimationUnlocked; 0.3; {alpha: 0}; {alpha: 1}; {alpha: 0}; 1; 0"/>
					<block>
						<styleClass value="$Fullsize"/>
						<style>
							<backgroundColor value="0x804CE8AA"/>
						</style>
						<bind name="fade" value="isReady &amp;&amp; isAnimationUnlocked; 1.0; {alpha: 1}; {alpha: 0}; {alpha: 1}; 1; 0.5"/>
					</block>
				</block>
			</block>
			<block>
				<bind name="name" value="'participantDivisionPlayer_' + nickName"/>
				<style>
					<hitTest value="false"/>
					<marginLeft value="13px"/>
					<marginRight value="6px"/>
					<width value="100%"/>
					<height value="100%"/>
				</style>
				<block>
					<style>
						<position value="absolute"/>
						<marginLeft value="-12px"/>
					</style>
					<styleClass value="$MiddleVAligned"/>
					<bind name="instance" value="'VoiceChatDockIcon'; { _playerName: pureName, _isSelf: isSelfPlayer}"/>
				</block>
				<block>
					<bind name="name" value="'participantDivisionPlayer_' + teamId + '_' + nickName"/>
					<styleClass value="$MiddleVAligned"/>
					<bind name="instance" value="'DHFormationPlayerIcon'; teamId != -1 ? {_entityAccountId: entityAccount.id, _isOtherDivision: selfTeamId != teamId, _isTrainingRoom: _isTrainingRoom} : null"/>
				</block>
				<block type="text">
					<styleClass value="$MiddleVAligned"/>
					<style>
						<marginLeft value="1px"/>
						<width value="47%"/>
						<multiline value="false"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="class" value="	tkStatus											? '$FontColorTeamkiller' :
							teamId == -1 &amp;&amp; !isSelfPlayer 	? '$FontColorGrey' :
							selfTeamId == teamId 								? '$FontColorGolden'
																				: '$FontColorWhite'"/>
					<bind name="class" value="isSelfPlayer ? '$Bold' : '$None'"/>
					<bind name="text" value="nickName"/>
				</block>
				<block>
					<bind name="visible" value="shipId"/>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<width value="53%"/>
					</style>
					<bind name="instance" value="'PreBattlePlayerShip'; (isReady || isInBattle) ? {_shipId: shipId} : null"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ShipRestrictionsInfotip">
		<bind name="firstEntityDH" value="'trainingRoomEntity'; CC.trainingRoomWindowState"/>
		<bind name="watchDH" value="'windowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.state"/>
		<bind name="watchDH" value="'notReadyWindowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.notReadyWindowState"/>
		<bind name="watchDH" value="'windowInset'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.inset"/>
		<bind name="watchDH" value="'windowInsetLabel'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.insetLabel"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<styleClass value="$VerticalInfotipBehaviourCenter"/>
		<bind name="name" value="'ShipRestrictionsInfotip'"/>
		<style>
			<userData value="{
			bottomOffset: -8,
			isTipCenter: true
		}"/>
		</style>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginTop value="9px"/>
				<marginBottom value="11px"/>
			</style>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap3" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
		</block>
		<block className="dock_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginBottom value="-6px"/>
				<marginRight value="-13px"/>
				<marginLeft value="-13px"/>
				<position value="absolute"/>
			</style>
		</block>
		<block>
			<style>
				<marginTop value="10px"/>
			</style>
			<block>
				<style>
					<height value="34px"/>
					<width value="100%"/>
					<position value="absolute"/>
				</style>
				<block type="text">
					<style>
						<marginLeft value="12px"/>
						<marginTop value="3px"/>
					</style>
					<styleClass value="$TextHeaderBold"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<bind name="text" value="'IDS_TRAINING_TEAM_RESTRICTIONS_INFOTIP'"/>
				</block>
				<block>
					<style>
						<bottom value="0px"/>
						<position value="absolute"/>
						<width value="100%"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<style>
					<marginTop value="34px"/>
					<marginBottom value="12px"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block>
					<bind name="watch" value="'ident'; 2 + ',' + trainingRoomEntity.id}"/>
					<bind name="instance" value="'FilterBlock'; {_title: 'IDS_LEVEL', _filterType: 'level', needDivider: false, _panelEntityId: trainingRoomEntity.id, _ident: ident, _tooltipPrefix: 'IDS_ALLOW_'}"/>
					<bind name="instance" value="'ShipTypesFilterBlock'; {_title: 'IDS_CLASS', _filterType: 'shipType', needDivider: true, _panelEntityId: trainingRoomEntity.id, _ident: ident, _tooltipPrefix: 'IDS_ALLOW_'}"/>
					<bind name="instance" value="'FilterBlock'; {_title: 'IDS_NATION', _filterType: 'nation', needDivider: true, _panelEntityId: trainingRoomEntity.id, _ident: ident, _tooltipPrefix: 'IDS_ALLOW_'}"/>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
		<block className="dock_panel_pin" type="native">
			<style>
				<alpha value="0.5"/>
				<position value="absolute"/>
			</style>
			<bind name="gotoAndStop!" value="'up'"/>
			<params>
				<param name="name" value="pinTop"/>
			</params>
		</block>
	</block>
	<block className="TrainingRoomAppliedFilter">
		<style>
			<flow value="htile"/>
			<hitTest value="false"/>
		</style>
		<bind name="style" value="'width'; _width ? _width : '185px'"/>
		<bind name="style" value="'align'; _align ? _align : 'left'"/>
		<bind name="style" value="'paddingRight'; _align == 'right' ? '16px' : '0px'"/>
		<bind name="entityDH" value="'trainingRoomEntity'; _trainingRoomEntityId"/>
		<bind name="watchDH" value="'selectedFilters'; ['trainingRoomEntity.shipRestrictions.evUpdate']; trainingRoomEntity.shipRestrictions.selectedFilters"/>
		<bind name="watchDH" value="'typesCount'; ['trainingRoomEntity.divisionRestrictions.evUpdate']; trainingRoomEntity.divisionRestrictions.typesCount"/>
		<bind name="primaryEntityDH" value="'defaultRestrictionsEntity'; CC.battleType; BattleTypes.TRAINING_BATTLE"/>
		<bind name="watchDH" value="'defaultTypesCount' ; ['defaultRestrictionsEntity.divisionRestrictions.evUpdate']; defaultRestrictionsEntity.divisionRestrictions.typesCount"/>
		<bind name="watch" value="'isCarriersRestricted'; typesCount[ShipTypes.AircraftCarrier] &amp;&amp; typesCount[ShipTypes.AircraftCarrier][1] != defaultTypesCount[ShipTypes.AircraftCarrier][1]"/>
		<bind name="watch" value="'isBattleShipsRestricted'; typesCount[ShipTypes.BattleShip] &amp;&amp; typesCount[ShipTypes.BattleShip][1] != defaultTypesCount[ShipTypes.BattleShip][1]"/>
		<bind name="watch" value="'isCruisersRestricted'; typesCount[ShipTypes.Cruiser] &amp;&amp; typesCount[ShipTypes.Cruiser][1] != defaultTypesCount[ShipTypes.Cruiser][1]"/>
		<bind name="watch" value="'isDestroyersRestricted'; typesCount[ShipTypes.Destroyer] &amp;&amp; typesCount[ShipTypes.Destroyer][1] != defaultTypesCount[ShipTypes.Destroyer][1]"/>
		<bind name="watch" value="'isAnyShipTypeRestricted'; (isCarriersRestricted || isBattleShipsRestricted || isCruisersRestricted || isDestroyersRestricted) &amp;&amp; _showShipRestrictions != false"/>
		<bind name="collectionDH" value="CC.shipFilterItem; 'selectedItemsLevels'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'selectedItemsLevels'+'ROOT'; 'selectedItemsLevels'; {'filter':isIn($entity.id, selectedFilters) &amp;&amp; ($entity.shipFilterItem.type == 'level')}; []"/>
		<bind name="collectionDH" value="CC.shipFilterItem; 'selectedItemsNations'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'selectedItemsNations'+'ROOT'; 'selectedItemsNations'; {'filter':isIn($entity.id, selectedFilters) &amp;&amp; ($entity.shipFilterItem.type == 'nation')}; []"/>
		<bind name="collectionFields" value="selectedItemsLevels; ['shipFilterItem.field']"/>
		<block>
			<bind name="repeat" value="reduceAppliedValues(selectedItemsLevels_shipFilterItem_field); 'ShipLevelRomeCustom'"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="selectedItemsLevels.length &gt; 0 &amp;&amp; (isAnyShipTypeRestricted || selectedItemsNations.length &gt; 0)"/>
			<style>
				<height value="26px"/>
				<marginRight value="6px"/>
				<marginTop value="2px"/>
			</style>
			<block className="VerticalDivider">
				<style>
					<height value="100%"/>
					<width value="3px"/>
				</style>
				<block className="divider_v" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="isAnyShipTypeRestricted"/>
			<style>
				<height value="30px"/>
				<paddingTop value="10px"/>
			</style>
			<bind name="instance" value="'ShipFilterRestrictions'; isAnyShipTypeRestricted ? {_filters: typesCount, _withShipTypeCounters: _withShipTypeCounters} : null"/>
		</block>
		<block>
			<bind name="visible" value="selectedItemsNations.length &gt; 0 &amp;&amp; isAnyShipTypeRestricted"/>
			<style>
				<height value="26px"/>
				<marginRight value="6px"/>
				<marginTop value="2px"/>
			</style>
			<block className="VerticalDivider">
				<style>
					<height value="100%"/>
					<width value="3px"/>
				</style>
				<block className="divider_v" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<bind name="repeat" value="selectedItemsNations; 'FilterItemWrapper'; {_maxFiltersCount: _maxFiltersCount}"/>
	</block>
	<block className="FilterItemWrapper">
		<style>
			<height value="30px"/>
		</style>
		<bind name="dataRefDH" value="'filterEntity'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'_field'; ['filterEntity.shipFilterItem.evUpdate']; filterEntity.shipFilterItem.field"/>
		<bind name="watch" value="'isItemOverflow'; _maxFiltersCount ? $index + 1 &gt; _maxFiltersCount : false"/>
		<block>
			<bind name="visible" value="!isItemOverflow"/>
			<style>
				<height value="100%"/>
			</style>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<bind name="instance" value="'TinyNationFlagCustom'; {_field: _field}"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="$index == _maxFiltersCount"/>
			<style>
				<height value="30px"/>
				<marginRight value="6px"/>
			</style>
			<block type="text">
				<styleClass value="$TextHeaderWhiteBold"/>
				<bind name="class" value="'$FontColorBlueish'"/>
				<bind name="text" value="'...'"/>
			</block>
		</block>
	</block>
	<block className="ShipLevelRomeCustom">
		<style>
			<height value="30px"/>
		</style>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<bind name="style" value="'marginLeft'; $value == 0 ? '-6px': '0px'"/>
			<bind name="style" value="'marginRight'; $value == 0 ? '-2px': '4px'"/>
			<styleClass value="$TextHeaderBigDefault"/>
			<bind name="text" value="ShipLevels.RLEVELS[$value]"/>
		</block>
	</block>
	<block className="TinyNationFlagCustom">
		<block>
			<style>
				<marginRight value="4px"/>
			</style>
			<bind name="instance" value="'NationFlagsTiny'; {shipCountry: _field}"/>
		</block>
	</block>
	<block className="ShipTypesFilterBlock">
		<bind name="firstEntityDH" value="'trainingRoomEntity'; CC.trainingRoomWindowState"/>
		<bind name="watchDH" value="'windowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.state"/>
		<bind name="watchDH" value="'notReadyWindowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.notReadyWindowState"/>
		<bind name="watchDH" value="'windowInset'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.inset"/>
		<bind name="watchDH" value="'windowInsetLabel'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.insetLabel"/>
		<bind name="watchDH" value="'typesCount'; []; trainingRoomEntity.divisionRestrictions.typesCount"/>
		<style>
			<height value="100%"/>
			<width value="120px"/>
		</style>
		<block type="text">
			<style>
				<marginTop value="5px"/>
				<marginBottom value="8px"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$TextHeaderBold"/>
			<bind name="class" value="'$FontColorBlueish'"/>
			<bind name="text" value="_title"/>
		</block>
		<block>
			<style>
				<marginLeft value="30px"/>
			</style>
			<bind name="repeat" value="[ShipTypes.Destroyer, ShipTypes.Cruiser, ShipTypes.BattleShip, ShipTypes.AircraftCarrier]; 'ShipTypeDropdown'; {_typesCount: typesCount, _ident: _ident, _tooltipPrefix: _tooltipPrefix}"/>
		</block>
		<block>
			<bind name="visible" value="needDivider == true"/>
			<style>
				<height value="100%"/>
				<position value="absolute"/>
			</style>
			<block className="divider_v" type="native">
				<style>
					<height value="100%"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ShipTypeDropdown">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<style>
			<marginBottom value="4px"/>
			<marginTop value="6px"/>
			<flow value="horizontal"/>
		</style>
		<bind name="watch" value="'_curItemIndex'; 	$value == ShipTypes.AircraftCarrier	? _typesCount[$value][1] == -1 ? 0 : _typesCount[$value][1]
																		: _typesCount[$value][1] == -1 	? 1 :
									_typesCount[$value][1] &gt; 0 		? _typesCount[$value][1] + 1
																	: 0"/>
		<block>
			<style>
				<marginRight value="4px"/>
				<hitTest value="false"/>
			</style>
			<bind name="transition" value="rollOver &amp;&amp; !mouseDown; 0.15; {alpha: 0.8}; {alpha: 1}; {alpha: 0.8}; 2"/>
			<bind name="style" value="'marginLeft'; $value == ShipTypes.Destroyer  ? '-3px' : '0px'"/>
			<bind name="style" value="'marginRight'; $value == ShipTypes.Destroyer ? '7px' : '4px'"/>
			<block className="icon_ship" type="native">
				<bind name="gotoAndStop!" value="$value"/>
			</block>
		</block>
		<block>
			<style>
				<marginTop value="-10px"/>
			</style>
			<bind name="watch" value="'countItems'; $value == ShipTypes.AircraftCarrier 	? ['0', '1', '2', '3'] 
																		: ['—', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12']"/>
			<bind name="catch" value="'ItemChooser.shipTypeCountSelected'; null; 'evShipTypeCountSelected'"/>
			<bind name="instance" value="'ItemChooser'; {_items: countItems, _choosedItemRenderer: 'BluishTextChoosedItemRenderer', 
			_listItemRenderer: 'TextListItemRenderer', _dropDownWidth: '80px', curIndex: _curItemIndex, 
			onItemSelectedEvent: 'shipTypeCountSelected', _itemChooserTooltipText: _tooltipPrefix + 'HINT_CHECKBOX_FILTER_CLASS_' + toUpperCase($value)}"/>
		</block>
		<bind name="action" value="'evShipTypeCountSelected'; 'setShipTypeCount'; {	type: $value, ident: _ident,
																	value: $value == ShipTypes.AircraftCarrier	? _curItemIndex == 0 ? -1 : _curItemIndex
																												: _curItemIndex == 1 	? -1 :
																	_curItemIndex &gt; 0 			? _curItemIndex - 1
																								: 0}"/>
	</block>
	<block className="TrainingRoomAppliedFiltersTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="300px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginBottom value="3px"/>
			</style>
			<block type="text">
				<styleClass value="$InfoBlockIndent"/>
				<style>
					<marginBottom value="7px"/>
				</style>
				<styleClass value="$TextDefaultBold"/>
				<bind name="class" value="'$FontColorWhite'"/>
				<bind name="text" value="'IDS_TRAINING_TEAM_RESTRICTIONS'"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="12px"/>
					<marginLeft value="12px"/>
					<marginBottom value="12px"/>
				</style>
				<bind name="instance" value="'TrainingRoomAppliedFilter'; {_width: '280px', _trainingRoomEntityId: _trainingRoomEntityId, _withShipTypeCounters: true}"/>
			</block>
		</block>
	</block>
	<block className="CurrentTotalIndicator">
		<block>
			<block type="text">
				<bind name="class" value="_currentTextClass"/>
				<bind name="class" value="_colorClass"/>
				<style>
					<marginRight value="2px"/>
				</style>
				<bind name="text" value="_withBrackets == true ? '(' + _current : _current"/>
			</block>
			<block type="text">
				<bind name="class" value="_totalTextClass"/>
				<bind name="class" value="_colorClass"/>
				<style>
					<marginTop value="1px"/>
					<marginRight value="1px"/>
					<alpha value="0.8"/>
				</style>
				<bind name="text" value="'/' + _total"/>
			</block>
			<block type="text">
				<bind name="visible" value="_withBrackets == true"/>
				<bind name="class" value="_currentTextClass"/>
				<bind name="class" value="_colorClass"/>
				<bind name="text" value="')'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="AILevelChoosedItemRenderer">
		<style>
			<height value="32px"/>
		</style>
		<block type="text">
			<style>
				<hitTest value="false"/>
				<marginLeft value="4px"/>
				<marginTop value="1px"/>
			</style>
			<styleClass value="$TextHeaderBold"/>
			<bind name="class" value="'$FontColorBlueish'"/>
			<bind name="text" value="(tr('IDS_AI_LEVEL_' + _item))"/>
		</block>
	</block>
	<block className="AILevelListItemRenderer">
		<bind name="name" value="'AILevelListItemRenderer_' + $value"/>
		<styleClass value="$ContextMenuListItem"/>
		<block className="MenuItemWithSelection">
			<styleClass value="$Fullsize"/>
			<bind name="name" value="'IDS_AI_LEVEL_' + $value"/>
			<block className="dock_submenu_item" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="selected" value="(_curItemIndex == $index)"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$ContextMenuListItemContent"/>
				<bind name="class" value="(_curItemIndex == $index) == true ? '$Bold' : '$None'"/>
				<bind name="text" value="(_toLowerCase ? toLowerCase(tr('IDS_AI_LEVEL_' + $value))
											: (tr('IDS_AI_LEVEL_' + $value)))"/>
			</block>
		</block>
		<bind name="dispatch" value="'click'; ('ItemChooserInnerEvent.' + _onItemSelectedEvent); {_curItemIndex: $index}"/>
		<bind name="dispatch" value="'click'; ('ItemChooserInnerEventDublicate.' + _onItemSelectedEvent)"/>
	</block>
	<block className="TextDataBlock">
		<style>
			<width value="100%"/>
		</style>
		<styleClass value="$MiddleVAligned"/>
		<bind name="style" value="'paddingLeft'; _align != 'right' ? '16px' : '0px'"/>
		<bind name="style" value="'paddingRight'; _align == 'right' ? '16px' : '0px'"/>
		<block>
			<bind name="visible" value="_headerText ? true : false"/>
			<style>
				<alpha value="0.9"/>
				<width value="100%"/>
				<marginBottom value="10px"/>
				<marginTop value="-6px"/>
			</style>
			<block type="text">
				<style>
					<width value="100%"/>
					<leading value="-2"/>
				</style>
				<styleClass value="$TextDefaultBold19NM"/>
				<bind name="style" value="'textAlign'; _align ? _align : 'left'"/>
				<bind name="visible" value="_headerText"/>
				<bind name="text" value="_headerText"/>
			</block>
		</block>
		<block type="text">
			<style>
				<width value="100%"/>
				<alpha value="0.85"/>
				<leading value="-2"/>
			</style>
			<styleClass value="$TextDefault17NM"/>
			<bind name="style" value="'textAlign'; _align ? _align : 'left'"/>
			<bind name="text" value="_text"/>
		</block>
	</block>
	<block className="MinimapBackgroundBlock">
		<styleClass value="$Fullsize"/>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="instance" value="'BackgroundAnimatedSwitcher'; {_bgSymbol:  'url:' + _minimapWaterPath }"/>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundStretchY value="true"/>
				<backgroundStretchX value="true"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:' + _minimapPath"/>
		</block>
	</block>
	<block className="TrainingRoomTextInputPassword">
		<style>
			<width value="100%"/>
		</style>
		<block className="TrainingRoomTextInputContent">
			<bind name="style" value="'width'; _width ? _width : '100%'"/>
			<style>
				<flow value="horizontal"/>
			</style>
			<bind name="var" value="{textInput: ''}"/>
			<bind name="catch" value="'removedFromStage'; {textInput: ''}"/>
			<bind name="changeDispatch" value="_defaultInputValue; 'setDefaultValue'"/>
			<bind name="catch" value="'setDefaultValue'; {textInput: _defaultInputValue}"/>
			<bind name="dispatch" value="'wrongSymbolInputed' + varChanged; 'evWrongSymbolInputed'"/>
			<block className="text_input_caps_enter" type="native">
				<bind name="name" value="'organizerSearchField'"/>
				<bind name="tooltip" value="'SimpleTooltip'; _tooltipText ? {tooltipText: _tooltipText} : null"/>
				<style>
					<width value="100%"/>
				</style>
				<params>
					<param name="itemRenderer" value="drop_down_list_item"/>
					<param name="soundSet" value="hard_textinput"/>
					<param name="actAsButton" value="true"/>
				</params>
				<bind name="maxChars" value="_maxChars ? _maxChars : 32"/>
				<bind name="defaultText" value="_defaultText"/>
				<bind name="focus" value="0; _focused != false"/>
				<bind name="restrict" value="_restrict ? _restrict : restrict"/>
				<bind name="restrictFeedback" value="_restrictRegexp ? _restrictRegexp : null; 'wrongSymbolInputed'"/>
				<bind name="text" value="textInput"/>
				<bind name="sync" value="'text'; 'change'; textInput"/>
				<bind name="dispatch" value="'change'; 'TrainingRoomTextInput.' + onInputStrChangedEvent; {pwdStr: textInput}"/>
				<bind name="dispatch" value="'textInputEnter'; 'TrainingRoomTextInput.' + onEnterEvent; {pwdStr: textInput}"/>
				<block className="button_dock" type="native">
					<bind name="tooltip" value="'SimpleTooltip'; _onEnterTooltipText ? {tooltipText: _onEnterTooltipText} : null"/>
					<styleClass value="$TextInputEnterButton"/>
					<bind name="enabled" value="textInput.length &gt; 0"/>
					<bind name="dispatch" value="'buttonClick'; 'TrainingRoomTextInput.' + onEnterEvent; {pwdStr: textInput}"/>
				</block>
			</block>
			<block className="button_close" type="native">
				<bind name="name" value="'cancelOrganizerSearch'"/>
				<bind name="visible" value="_disableCloseBtn != true"/>
				<bind name="tooltip" value="'SimpleTooltip'; _closeButtonTooltipText ? {tooltipText: _closeButtonTooltipText} : null"/>
				<style>
					<marginLeft value="6px"/>
					<marginTop value="9px"/>
				</style>
				<bind name="dispatch" value="'buttonClick'; 'TrainingRoomTextInput.' + onCancelEvent"/>
			</block>
		</block>
	</block>
	<block className="TrainingRoomTextInputDescription">
		<style>
			<width value="100%"/>
		</style>
		<block className="TrainingRoomTextInputContent">
			<bind name="style" value="'width'; _width ? _width : '100%'"/>
			<style>
				<flow value="horizontal"/>
			</style>
			<bind name="var" value="{textInput: ''}"/>
			<bind name="catch" value="'removedFromStage'; {textInput: ''}"/>
			<bind name="changeDispatch" value="_defaultInputValue; 'setDefaultValue'"/>
			<bind name="catch" value="'setDefaultValue'; {textInput: _defaultInputValue}"/>
			<bind name="dispatch" value="'wrongSymbolInputed' + varChanged; 'evWrongSymbolInputed'"/>
			<block className="text_input_caps_enter" type="native">
				<bind name="name" value="'organizerSearchField'"/>
				<bind name="tooltip" value="'SimpleTooltip'; _tooltipText ? {tooltipText: _tooltipText} : null"/>
				<style>
					<width value="100%"/>
				</style>
				<params>
					<param name="itemRenderer" value="drop_down_list_item"/>
					<param name="soundSet" value="hard_textinput"/>
					<param name="actAsButton" value="true"/>
				</params>
				<bind name="maxChars" value="_maxChars ? _maxChars : 32"/>
				<bind name="defaultText" value="_defaultText"/>
				<bind name="focus" value="0; _focused != false"/>
				<bind name="restrict" value="_restrict ? _restrict : restrict"/>
				<bind name="restrictFeedback" value="_restrictRegexp ? _restrictRegexp : null; 'wrongSymbolInputed'"/>
				<bind name="text" value="textInput"/>
				<bind name="sync" value="'text'; 'change'; textInput"/>
				<bind name="dispatch" value="'change'; 'TrainingRoomTextInput.' + onInputStrChangedEvent; {descrStr: textInput}"/>
				<bind name="dispatch" value="'textInputEnter'; 'TrainingRoomTextInput.' + onEnterEvent; {descrStr: textInput}"/>
				<block className="button_dock" type="native">
					<bind name="tooltip" value="'SimpleTooltip'; _onEnterTooltipText ? {tooltipText: _onEnterTooltipText} : null"/>
					<styleClass value="$TextInputEnterButton"/>
					<bind name="enabled" value="textInput.length &gt; 0"/>
					<bind name="dispatch" value="'buttonClick'; 'TrainingRoomTextInput.' + onEnterEvent; {descrStr: textInput}"/>
				</block>
			</block>
			<block className="button_close" type="native">
				<bind name="name" value="'cancelOrganizerSearch'"/>
				<bind name="visible" value="_disableCloseBtn != true"/>
				<bind name="tooltip" value="'SimpleTooltip'; _closeButtonTooltipText ? {tooltipText: _closeButtonTooltipText} : null"/>
				<style>
					<marginLeft value="6px"/>
					<marginTop value="9px"/>
				</style>
				<bind name="dispatch" value="'buttonClick'; 'TrainingRoomTextInput.' + onCancelEvent"/>
			</block>
		</block>
	</block>
	<block className="TrainingRoomTextInputPlayerName">
		<style>
			<width value="100%"/>
		</style>
		<block className="TrainingRoomTextInputContent">
			<bind name="style" value="'width'; _width ? _width : '100%'"/>
			<style>
				<flow value="horizontal"/>
			</style>
			<bind name="var" value="{textInput: ''}"/>
			<bind name="catch" value="'removedFromStage'; {textInput: ''}"/>
			<bind name="changeDispatch" value="_defaultInputValue; 'setDefaultValue'"/>
			<bind name="catch" value="'setDefaultValue'; {textInput: _defaultInputValue}"/>
			<bind name="dispatch" value="'wrongSymbolInputed' + varChanged; 'evWrongSymbolInputed'"/>
			<block className="text_input_caps_enter" type="native">
				<bind name="name" value="'organizerSearchField'"/>
				<bind name="tooltip" value="'SimpleTooltip'; _tooltipText ? {tooltipText: _tooltipText} : null"/>
				<style>
					<width value="100%"/>
				</style>
				<params>
					<param name="itemRenderer" value="drop_down_list_item"/>
					<param name="soundSet" value="hard_textinput"/>
					<param name="actAsButton" value="true"/>
				</params>
				<bind name="maxChars" value="_maxChars ? _maxChars : 32"/>
				<bind name="defaultText" value="_defaultText"/>
				<bind name="focus" value="0; _focused != false"/>
				<bind name="restrict" value="_restrict ? _restrict : restrict"/>
				<bind name="restrictFeedback" value="_restrictRegexp ? _restrictRegexp : null; 'wrongSymbolInputed'"/>
				<bind name="text" value="textInput"/>
				<bind name="sync" value="'text'; 'change'; textInput"/>
				<bind name="dispatch" value="'change'; 'TrainingRoomTextInput.' + onInputStrChangedEvent; {pNameStr: textInput}"/>
				<bind name="dispatch" value="'textInputEnter'; 'TrainingRoomTextInput.' + onEnterEvent; {pNameStr: textInput}"/>
				<block className="button_dock" type="native">
					<bind name="tooltip" value="'SimpleTooltip'; _onEnterTooltipText ? {tooltipText: _onEnterTooltipText} : null"/>
					<styleClass value="$TextInputEnterButton"/>
					<bind name="enabled" value="textInput.length &gt; 0"/>
					<bind name="dispatch" value="'buttonClick'; 'TrainingRoomTextInput.' + onEnterEvent; {pNameStr: textInput}"/>
				</block>
			</block>
			<block className="button_close" type="native">
				<bind name="name" value="'cancelOrganizerSearch'"/>
				<bind name="visible" value="_disableCloseBtn != true"/>
				<bind name="tooltip" value="'SimpleTooltip'; _closeButtonTooltipText ? {tooltipText: _closeButtonTooltipText} : null"/>
				<style>
					<marginLeft value="6px"/>
					<marginTop value="9px"/>
				</style>
				<bind name="dispatch" value="'buttonClick'; 'TrainingRoomTextInput.' + onCancelEvent"/>
			</block>
		</block>
	</block>
	<block className="TrainingRoomShipCarouselContainer">
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="watch" value="'isSmallCarouselView'; (userPrefs.isSmallCarouselView == null) ? false : userPrefs.isSmallCarouselView"/>
		<bind name="catch" value="'carouselViewChanged'; {isSmallCarouselView: !(isSmallCarouselView)}; 'saveCarouselViewState'"/>
		<bind name="action" value="'saveCarouselViewState'; 'setUserPref' ; {value : isSmallCarouselView, name: 'isSmallCarouselView'}"/>
		<bind name="watch" value="'isFilteredShipsHided'; (userPrefs.isFilteredShipsHided == null) ? false : userPrefs.isFilteredShipsHided"/>
		<bind name="catch" value="'carouselHideFilteredChanged'; {isFilteredShipsHided: !(isFilteredShipsHided)}; 'saveCarouselHideFilteredState'"/>
		<bind name="action" value="'saveCarouselHideFilteredState'; 'setUserPref' ; {value : isFilteredShipsHided, name: 'isFilteredShipsHided'}"/>
		<style>
			<position value="absolute"/>
			<width value="100%"/>
			<bottom value="36px"/>
			<backgroundColor value="0x01000000"/>
		</style>
		<block>
			<style>
				<position value="absolute"/>
				<top value="-30px"/>
			</style>
			<block className="CarouselFilters">
				<bind name="stageSize"/>
				<bind name="watch" value="'isFourRowsEnabled'; (stageHeight != null) ? (stageHeight &gt; (720 + 160)) : true"/>
				<bind name="watch" value="'isThreeRowsEnabled'; (stageHeight != null) ? (stageHeight &gt; (720 + 88)) : true"/>
				<bind name="watch" value="'curCarouselRows';	(userPrefs.curRowCountIndex == null)															? 0 :
									(userPrefs.curRowCountIndex == 2 &amp;&amp; isFourRowsEnabled)											? 2 :
									((userPrefs.curRowCountIndex == 2 || userPrefs.curRowCountIndex == 1) &amp;&amp; isThreeRowsEnabled)	? 1
																																	: 0"/>
				<bind name="action" value="'carouselRowsCountChangedByStageHeight'; 'setUserPref' ; {value : curCarouselRows, name: 'curRowCountIndex'}"/>
				<bind name="changeDispatch" value="curCarouselRows; 'carouselRowsCountChangedByStageHeight'"/>
				<bind name="feature" value="13;''"/>
				<bind name="action" value="(feature_13 == 'locked') ? 'addedToStage' : '';  'setFilterValue'; {type: 'special', field: 'IDS_WITH_COMMANDER', value: false, ident: 0 }"/>
				<bind name="action" value="(feature_13 == 'locked') ? 'addedToStage' : '';  'setFilterValue'; {type: 'special', field: 'IDS_WITHOUT_COMMANDER', value: false, ident: 0 }"/>
				<style>
					<marginLeft value="7px"/>
					<height value="30px"/>
					<flow value="horizontal"/>
				</style>
				<block>
					<bind name="name" value="'CarouselFiltersButton'"/>
					<block className="button_carousel_filters" type="native">
						<bind name="tooltip" value="'CarouselFiltersInfotip'; {	AppliedFiltersCounter: AppliedFiltersCounter,
														_isSmallCarouselView: isSmallCarouselView,
														_isFilteredShipsHided: isFilteredShipsHided}; TooltipBehaviour.verticalInfotipSwitch; null; 'carouselFiltersInfotipIsVIsible'"/>
						<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_TOOLTIP_CAROUSEL_FILTERS'}], _maxWidth: 240 }"/>
						<bind name="selected" value="carouselFiltersInfotipIsVIsible"/>
					</block>
				</block>
				<bind name="catch" value="'shipNameFIlterInfotipSelectedChanged'"/>
				<bind name="firstEntityDH" value="'panelEntity'; CC.filterPanelComponent"/>
				<bind name="watchDH" value="'selectedFilters'; ['panelEntity.shipRestrictions.evUpdate']; panelEntity.shipRestrictions.selectedFilters"/>
				<block>
					<style>
						<height value="32px"/>
						<marginTop value="-4px"/>
						<marginRight value="12px"/>
						<marginLeft value="4px"/>
					</style>
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
					<bind name="firstEntityDH" value="'enterBattleEntity'; CC.enterBattle"/>
					<bind name="firstEntityDH" value="'trainingRoomEntity'; CC.trainingRoomWindowState"/>
					<bind name="watchDH" value="'selectedBattle'; ['enterBattleEntity.enterBattle.evBattleTypesChanged']; enterBattleEntity.enterBattle.selectedBattle"/>
					<block>
						<block className="HasTrainingRoomRestrictions">
							<bind name="watchDH" value="'shipRestrictions' ; ['trainingRoomEntity.shipRestrictions.evUpdate']; trainingRoomEntity.shipRestrictions.selectedFilters"/>
							<bind name="watchDH" value="'shipsCount' ; ['trainingRoomEntity.divisionRestrictions.evUpdate']; trainingRoomEntity.divisionRestrictions.shipsCount"/>
							<bind name="watchDH" value="'typesCount' ; ['trainingRoomEntity.divisionRestrictions.evUpdate']; trainingRoomEntity.divisionRestrictions.typesCount"/>
							<bind name="primaryEntityDH" value="'defaultRestrictionsEntity'; CC.battleType; BattleTypes.TRAINING_BATTLE"/>
							<bind name="watchDH" value="'defaultTypesCount' ; ['defaultRestrictionsEntity.divisionRestrictions.evUpdate']; defaultRestrictionsEntity.divisionRestrictions.typesCount"/>
							<bind name="collectionDH" value="CC.shipFilterItem; 'idsfilters'+'ROOT'"/>
							<bind name="collectionDesign" value="'DES_'+'idsfilters'+'ROOT'; 'idsfilters'; {'filter':$entity.shipFilterItem.type == 'shipId' &amp;&amp; isIn($entity.id, shipRestrictions)}; []"/>
							<bind name="collectionDH" value="CC.shipFilterItem; 'levelfilters'+'ROOT'"/>
							<bind name="collectionDesign" value="'DES_'+'levelfilters'+'ROOT'; 'levelfilters'; {'filter':$entity.shipFilterItem.type == 'level' &amp;&amp; isIn($entity.id, shipRestrictions)}; []"/>
							<bind name="collectionDH" value="CC.shipFilterItem; 'nationfilters'+'ROOT'"/>
							<bind name="collectionDesign" value="'DES_'+'nationfilters'+'ROOT'; 'nationfilters'; {'filter':$entity.shipFilterItem.type == 'nation' &amp;&amp; isIn($entity.id, shipRestrictions)}; []"/>
							<bind name="collectionFields" value="levelfilters; ['shipFilterItem.field']"/>
							<bind name="contains" value="typesCount; $item[1] == -1; 'isAnyShipTypeNotAllowed'"/>
							<bind name="watch" value="'isCarriersRestricted'; typesCount[ShipTypes.AircraftCarrier] &amp;&amp; typesCount[ShipTypes.AircraftCarrier][1] != defaultTypesCount[ShipTypes.AircraftCarrier][1]"/>
							<bind name="watch" value="'isBattleShipsRestricted'; typesCount[ShipTypes.BattleShip] &amp;&amp; typesCount[ShipTypes.BattleShip][1] != defaultTypesCount[ShipTypes.BattleShip][1]"/>
							<bind name="watch" value="'isCruisersRestricted'; typesCount[ShipTypes.Cruiser] &amp;&amp; typesCount[ShipTypes.Cruiser][1] != defaultTypesCount[ShipTypes.Cruiser][1]"/>
							<bind name="watch" value="'isDestroyersRestricted'; typesCount[ShipTypes.Destroyer] &amp;&amp; typesCount[ShipTypes.Destroyer][1] != defaultTypesCount[ShipTypes.Destroyer][1]"/>
							<bind name="watch" value="'isAnyShipTypeRestricted'; isCarriersRestricted || isBattleShipsRestricted || isCruisersRestricted || isDestroyersRestricted"/>
							<bind name="watch" value="'hasTrainingRoomRestrictions'; (idsfilters.length &gt; 0)			||
												(shipTypefilters.length &gt; 0)	||
												(levelfilters.length &gt; 0)		||
												(nationfilters.length &gt; 0)		||
												isShipFilterRestrictionsVisible"/>
							<bind name="watch" value="'isShipFilterRestrictionsVisible'; isAnyShipTypeRestricted &amp;&amp; isAnyShipTypeNotAllowed"/>
						</block>
						<bind name="watch" value="'pveFilterVisible'; selectedBattle.type == BattleTypes.PVE_BATTLE"/>
						<bind name="watch" value="'trainingFilterVisible'; trainingRoomEntity &amp;&amp; hasTrainingRoomRestrictions"/>
						<bind name="watch" value="'rankedFilterVisible'; selectedBattle.type == BattleTypes.RANKED_BATTLE"/>
						<bind name="watch" value="'eventFilterVisible'; selectedBattle.type == BattleTypes.EVENT_BATTLE"/>
						<bind name="watch" value="'clanFilterVisible'; selectedBattle.type == BattleTypes.CLAN_BATTLE"/>
						<bind name="watch" value="'battleTypeFilterVisible'; pveFilterVisible || trainingFilterVisible || rankedFilterVisible || eventFilterVisible || clanFilterVisible"/>
						<bind name="instance" value="'AppliedBattleTypeFilter'; battleTypeFilterVisible ? {}	: null"/>
					</block>
					<block>
						<bind name="instance" value="'AppliedFilter'; {_filterType: 'shipName', shipNameFilterInfotipSelected: shipNameFilterInfotipSelected, _panelEntityId: panelEntity.id}"/>
						<bind name="instance" value="'AppliedFilter'; {_filterType: 'level', _panelEntityId: panelEntity.id}"/>
						<bind name="instance" value="'AppliedFilter'; {_filterType: 'shipType', _panelEntityId: panelEntity.id}"/>
						<bind name="instance" value="'AppliedFilter'; {_filterType: 'nation', _panelEntityId: panelEntity.id}"/>
						<bind name="instance" value="'AppliedFilter'; {_filterType: 'special', _panelEntityId: panelEntity.id}"/>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<bind name="instance" value="'ResetAllFilters'; selectedFilters.length &gt; 0 ? {} : null"/>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'ShipCarousel'; {	_addShipSlotsBuyBlocks: false,
											_shipFilterId: CC.mainShipFilter,
											_scrollToStart: true,
											isSmallCarouselView: isSmallCarouselView,
											_isFilteredShipsHided: isFilteredShipsHided,
											_disableShipActions: true}"/>
		</block>
	</block>
	<block className="ParamsModifierItem">
		<style>
			<width value="100%"/>
			<flow value="horizontal"/>
			<marginBottom value="16px"/>
		</style>
		<bind name="style" value="'paddingTop'; (_shrinkHeight == true) ? '-8px' : '0'"/>
		<block type="text">
			<styleClass value="$TextDefaultNM"/>
			<style>
				<leading value="-3"/>
				<alpha value="0.8"/>
				<width value="100%"/>
			</style>
			<bind name="text" value="attributeIDS"/>
		</block>
		<block type="text">
			<style>
				<marginLeft value="12px"/>
			</style>
			<styleClass value="$TextDefaultNM"/>
			<bind name="class" value="category == 'positive' ? '$FontColorComparePositive' : 
					 category == 'negative'	? '$FontColorCompareNegative'
					 						: '$FontColorDefault'"/>
			<bind name="substitute" value="5; {
								 '[battleship]' : 'battleship_small_own',
								  '[aircarrier]' : 'carrier_small_own',
								   '[cruiser]' : 'cruiser_small_own',
								   '[destroyer]' : 'destroyer_small_own',
								   '[submarine]' : 'submarine_small_own'
								   }; measuredValue"/>
		</block>
		<block type="text">
			<style>
				<marginLeft value="4px"/>
			</style>
			<styleClass value="$TextDefaultNM"/>
			<bind name="style" value="'alpha'; category == 'positive' ? 0.65 : 0.8"/>
			<bind name="class" value="category == 'positive' ? '$FontColorComparePositive' : 
					 category == 'negative'	? '$FontColorCompareNegative'
					 						: '$FontColorDefault'"/>
			<bind name="text" value="measure"/>
		</block>
	</block>
	<block className="ParamsModifierList">
		<style>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="repeat" value="_attributesPositive; 'ParamsModifierItem'; {_shrinkHeight: _shrinkHeight}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="repeat" value="_attributesNegative; 'ParamsModifierItem'; {_shrinkHeight: _shrinkHeight}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="repeat" value="_attributesNeutral; 'ParamsModifierItem'; {_shrinkHeight: _shrinkHeight}"/>
		</block>
	</block>
	<block className="PlayerContactItemWithRollover">
		<bind name="firstEntityDH" value="'trainingRoomEntity'; CC.trainingRoomWindowState"/>
		<bind name="watchDH" value="'windowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.state"/>
		<bind name="watchDH" value="'notReadyWindowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.notReadyWindowState"/>
		<bind name="watchDH" value="'windowInset'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.inset"/>
		<bind name="watchDH" value="'windowInsetLabel'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.insetLabel"/>
		<bind name="firstEntityDH" value="'dockStateEntity'; CC.dockState"/>
		<bind name="watchDH" value="'dockStateName'; ['dockStateEntity.dockState.evUpdate']; dockStateEntity.dockState.stateName"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<bind name="entityDH" value="'entityAccount'; _entityAccountId"/>
		<bind name="watchDH" value="'accountOnline'; ['entityAccount.accountStatus.evOnlineChanged']; entityAccount.accountStatus.online"/>
		<bind name="watchDH" value="'accountLevel'; ['entityAccount.accountLevel.evLevelChanged']; entityAccount.accountLevel.level"/>
		<bind name="watchDH" value="'groupIdsOfAccount'; ['entityAccount.elementInGroups.evGroupsChanged']; entityAccount.elementInGroups.groupIds"/>
		<bind name="watchDH" value="'isIgnored';['entityAccount.contact.evIsIgnoredChanged']; !!entityAccount.contact.isIgnored"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInDivision'; 'pureName'; entityAccount.accountName.name; 'playerInDivision'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInvitedToDivision'; 'name'; entityAccount.accountName.name; 'playerInvitedToDivision'"/>
		<bind name="watchDH" value="'referralType'; 		['entityAccount.referral.evTypeUpdated']; entityAccount.referral.type"/>
		<bind name="watch" value="'isRefSysParticipant'; referralType != null"/>
		<params>
			<param name="name" value="'playerContactName_' + entityAccount.accountName.name"/>
		</params>
		<bind name="watch" value="'isInDivision'; (playerInDivision.length == 0) ? false : true"/>
		<bind name="watchDH" value="'isSelf'; []; entityAccount.accountSimple.isSelfPlayer"/>
		<bind name="watchDH" value="'isSuspended'; ['entityAccount.accountSimple.evSuspendedChanged']; entityAccount.accountSimple.suspended"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionData'"/>
		<bind name="levelToFeature" value="accountLevel; 19; 'clubBattleFeatureUnLocked'"/>
		<bind name="watch" value="'isInYourParty'; ((divisionEntranceData.divisionType == 'party') &amp;&amp; (playerInDivision.length &gt; 0)) ? true : false"/>
		<bind name="watch" value="'isInvitedToYourParty'; ((divisionEntranceData.divisionType == 'party') &amp;&amp; (playerInvitedToDivision.length &gt; 0)) ? true : false"/>
		<bind name="contains" value="clubMembers; $item == _entityAccountId; 'isClubMember'; false; [_entityAccountId]"/>
		<bind name="collectionDH" value="CC.club; 'playersClubs'"/>
		<bind name="collectionDH" value="CC.clubsCommon; 'clubsCommonCollection'"/>
		<bind name="entityDH" value="'clubsCommonEntity'; clubsCommonCollection[0].id"/>
		<bind name="watchDH" value="'clubsVoted'; ['clubsCommonEntity.clubsCommon.evClubsVotedChanged']; clubsCommonEntity.clubsCommon.clubsVoted"/>
		<bind name="watch" value="'isVoteInCurClub';	(clubsVoted[0] == entityClub.club.id) ||
									(clubsVoted[1] == entityClub.club.id) ||
									(clubsVoted[2] == entityClub.club.id) ? true : false"/>
		<bind name="watch" value="'actionDenyReason';	(_playerContext.type == 'inviteToDivision') ?	!(accountOnline)				? 'IDS_INVITE_TO_DIVISION_ACTION_DENY_REASON_OFFLINE' :
																						isInvitedToDivision 			? 'IDS_INVITE_TO_DIVISION_ACTION_DENY_REASON_ALREADY_INVITED'
																														: 'no_reason' :
										(_playerContext.type == 'inviteToParty')	?	!(clubBattleFeatureUnLocked)	? 'IDS_INVITE_TO_PARTY_ACTION_DENY_REASON_LOW_LEVEL' :
																						!(accountOnline)				? 'IDS_INVITE_TO_PARTY_ACTION_DENY_REASON_OFFLINE' :
																						isInvitedToYourParty			? 'IDS_INVITE_TO_PARTY_ACTION_DENY_REASON_ALREADY_INVITED' :
																						isInYourParty					? 'IDS_INVITE_TO_PARTY_ACTION_DENY_REASON_ALREADY_IN_PARTY'
																														: 'no_reason'
																					: 'no_reason'"/>
		<style>
			<width value="100%"/>
			<height value="30px"/>
		</style>
		<bind name="style" value="'alpha'; accountOnline ? 1 : 0.5"/>
		<block>
			<bind name="visible" value="isSelf"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginTop value="-1px"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$Fullsize"/>
				<bind name="gotoAndStop!" value="'down'"/>
			</block>
		</block>
		<block className="dock_submenu_item_bg" type="native">
			<bind name="transition" value="(mouseDown &amp;&amp; !isSelf); 0.03; {alpha: 1}; {alpha: 0.7}"/>
			<bind name="transition" value="(rollOver || contactContextMenuVisible); 0.15; {alpha: 0}; {alpha: 1.0}"/>
			<bind name="style" value="'hitTest'; !(isSuspended) || ((isSuspended) &amp;&amp; (groupIdsOfAccount != null))"/>
			<styleClass value="$PxHorizontalCorrection"/>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="menu" value="'ContactContextMenu';	!(isSelf)	? {	_entityAccountId: _entityAccountId, _currentGroupId: _currentGroupId, _actionDenyReason: actionDenyReason,
															_playerContext: _playerContext, _inviteType: InviteType.COMMON}
														: null; null; 'contactContextMenuVisible'"/>
			<bind name="tooltip" value="'ContactInfoTooltip'; !(isSuspended) ?	{	_entityAccountId: _entityAccountId,
																	_playerContext: _playerContext,
																	_actionDenyReason: actionDenyReason,
																	_dogTagView: dogtagview
																}
															:	null"/>
			<bind name="clickSplit"/>
			<bind name="watch" value="'isActionEnabled'; (	!(isSelf) &amp;&amp; 
											(actionDenyReason == 'no_reason') &amp;&amp; 
											!(isSuspended)
										)"/>
			<bind name="var" value="{showBusyIndicator: false, isInvitationSent: false}"/>
			<bind name="catch" value="'evPlayerInvitationToClub'"/>
			<bind name="catch" value="'evPlayerInvitationToClubRevoked'"/>
			<bind name="dispatch" value="'left_click';	((_playerContext.type == 'inviteToClub') &amp;&amp; (actionDenyReason == 'no_reason')) ? 'evPlayerInvitationToClub' : null; {showBusyIndicator: true} "/>
			<bind name="entityDH" value="'entityClub'; _playerContext.clubEntityId"/>
			<bind name="watchDH" value="'invitedPlayers'; ['entityClub.club.evInvitedClubmansChanged']; entityClub.club.invitedClubmans"/>
			<bind name="contains" value="invitedPlayers; ($item.accountEntityId == entityAccount.id); 'isInvitationSent'"/>
			<bind name="changeDispatch" value="isInvitationSent; 'evPlayerInvitationToClub'; {showBusyIndicator: false}"/>
			<bind name="watchDH" value="'clubMembers'; ['entityClub.club.evMembersChanged']; entityClub.club.members"/>
			<bind name="watch" value="'isInvitedToDivision'; entityAccount.playerInvitedToPrebattleInfo != null"/>
			<bind name="action" value="'left_click';	(isActionEnabled == false)						? '' :
									(_playerContext.type == 'startPrivateChat')		? 'openChannelForPrivateMessages' :
									(_playerContext.type == 'inviteToChannel')		? 'sendChannelInvite' :
									(_playerContext.type == 'inviteToClub')			? 'inviteUserToClub' :
									(_playerContext.type == 'inviteToParty')		? 'inviteToDivision' :
									(_playerContext.type == 'inviteToPartyFromClubMembersList')	? 'inviteToDivision' :
									(_playerContext.type == 'inviteToDivision')		? 'inviteToDivision' :
									(_playerContext.type == 'inviteToTrainingRoom')	? 'TrainingRoomProxy.sendInvite' :
									(_playerContext.type == 'clubMembersList')		? 'openChannelForPrivateMessages' :
									(_playerContext.type == 'contactsClubMembers')	? 'openChannelForPrivateMessages' :
									(_playerContext.type == 'invitedToClubPlayers')	? 'openChannelForPrivateMessages' :
									(_playerContext.type == 'channelParticipants')	? 'openChannelForPrivateMessages'
																					: '';
									(isActionEnabled == false)						? {} :
									(_playerContext.type == 'startPrivateChat')		? {dbId: entityAccount.accountSimple.dbId} :
									(_playerContext.type == 'inviteToChannel')		? {channelId: _playerContext.channelId, inviteDbId: entityAccount.accountSimple.dbId} :
									(_playerContext.type == 'inviteToClub')			? {clubId: _playerContext.clubId, playerName: entityAccount.accountName.name, userId: entityAccount.accountSimple.dbId} :
									(_playerContext.type == 'inviteToParty')		? {playerId: entityAccount.accountSimple.dbId, playerName: entityAccount.accountName.name, inviteType: InviteType.COMMON} :
									(_playerContext.type == 'inviteToPartyFromClubMembersList')	? {playerId: entityAccount.accountSimple.dbId, playerName: entityAccount.accountName.name, inviteType: InviteType.COMMON} :
									(_playerContext.type == 'inviteToDivision')		? {playerId: entityAccount.accountSimple.dbId, playerName: entityAccount.accountName.name, inviteType: InviteType.COMMON} :
									(_playerContext.type == 'inviteToTrainingRoom')	? {newAccDBID: entityAccount.accountSimple.dbId, teamId: _teamId} :
									(_playerContext.type == 'clubMembersList')		? {dbId: entityAccount.accountSimple.dbId} :
									(_playerContext.type == 'contactsClubMembers')	? {dbId: entityAccount.accountSimple.dbId} :
									(_playerContext.type == 'invitedToClubPlayers')	? {dbId: entityAccount.accountSimple.dbId} :
									(_playerContext.type == 'channelParticipants')	? {dbId: entityAccount.accountSimple.dbId}
																					: {}"/>
			<block>
				<bind name="visible" value="isRefSysParticipant"/>
				<style>
					<position value="absolute"/>
					<top value="2px"/>
					<left value="-1px"/>
					<hitTest value="false"/>
				</style>
				<bind name="instance" value="'IconReferralSystem'; isRefSysParticipant ? { _referralType: referralType} : null"/>
			</block>
			<block>
				<bind name="transition" value="(mouseDown &amp;&amp; !isSelf); 0.03; {alpha: 1}; {alpha: 0.7}"/>
				<styleClass value="$Fullsize"/>
				<bind name="style" value="'marginLeft';	_isShort	? '17px'
													: '19px'"/>
				<block>
					<styleClass value="$Fullsize"/>
					<bind name="instance" value="'PlayerContactItem'; {_entityAccountId: _entityAccountId, _playerContext: _playerContext, _isShort: _isShort, _nickNameWidth: _nickNameWidth }"/>
				</block>
				<block>
					<styleClass value="$AlignRight"/>
					<block>
						<bind name="visible" value="!(isSelf)"/>
						<style>
							<marginTop value="4px"/>
						</style>
						<bind name="style" value="'marginRight'; _isShort ? '6px' : '10px'"/>
						<bind name="transition" value="rollOver; 0.3; {alpha: 0}; {alpha: 1.0}; {alpha: 0}; 1; 0.07"/>
						<bind name="watch" value="'isAddToContactsBtnVisible';	(groupIdsOfAccount==null) &amp;&amp;
																!(isIgnored) &amp;&amp;
																!(isSuspended)"/>
						<block>
							<style>
								<marginTop value="1px"/>
								<marginRight value="3px"/>
							</style>
							<bind name="instance" value="'BusyIndicator'; showBusyIndicator ? { _showBusyIndicator: showBusyIndicator } : null"/>
						</block>
						<block>
							<bind name="visible" value="isAddToContactsBtnVisible"/>
							<style>
								<marginRight value="4px"/>
							</style>
							<block className="button_add_contact" type="native"/>
							<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_ADD_TO_CONTACTS'}"/>
							<bind name="action" value="'click'; 'addContact'; {dbId: entityAccount.accountSimple.dbId}"/>
						</block>
						<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInDivision'; 'playersInDivision'"/>
						<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInvitedToDivision'; 'playersInvitedToDivision'"/>
						<bind name="watch" value="'isInTrainingRoom'; trainingRoomEntity != null"/>
						<bind name="watch" value="'freePlaces'; (divisionData.maxPlayersInDivision - playersInDivision.length - playersInvitedToDivision.length)"/>
						<bind name="watch" value="'isSelfInParty'; ((divisionEntranceData.divisionType == 'party') &amp;&amp; (divisionData.divisionExist)) ? true : false"/>
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'slimClientData'"/>
						<bind name="watch" value="'isInviteToDivisionBtnVisible'; (	slimClientData.isFull &amp;&amp;
																	(freePlaces &gt; 0) &amp;&amp;
																	accountOnline &amp;&amp;
																	!(_isShort) &amp;&amp;
																	!(isInDivision) &amp;&amp;
																	(dockStateName != 'balancer') &amp;&amp;
																	(_playerContext.type != 'clubMembersList') &amp;&amp;
																	(_playerContext.type != 'inviteToClub') &amp;&amp;
																	(_playerContext.type != 'inviteToTrainingRoom') &amp;&amp;
																	(_playerContext.type != 'contactsClubMembers') &amp;&amp;
																	(_playerContext.type != 'inviteToPartyFromClubMembersList') &amp;&amp;
																	!(isSelfInParty) &amp;&amp;
																	!(isInTrainingRoom) &amp;&amp;
																	!(isSuspended) )"/>
						<block>
							<bind name="visible" value="isInviteToDivisionBtnVisible"/>
							<style>
								<marginRight value="4px"/>
							</style>
							<block className="button_division_invite" type="native">
								<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInvitedToDivision'; 'name'; entityAccount.accountName.name; 'sentInvitationData'"/>
								<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'invitationsToDivision'; 'playerName'; entityAccount.accountName.name; 'receivedInvitationData'"/>
								<bind name="enabled" value="(sentInvitationData.length == 0) &amp;&amp; (receivedInvitationData.length == 0) &amp;&amp; !isInvitedToDivision"/>
								<bind name="action" value="'buttonClick'; 'inviteToDivision'; {playerId: entityAccount.accountSimple.dbId, playerName: entityAccount.accountName.name, inviteType: InviteType.COMMON}"/>
							</block>
							<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: isInvitedToDivision ? 'IDS_INVITED_IN_DIVISION_ALREADY' : 'IDS_INVITE_IN_DIVISION'}"/>
						</block>
						<block>
							<bind name="visible" value="!(isSuspended)"/>
							<block className="button_chat_small" type="native"/>
							<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_SEND_MESSAGE'}"/>
							<bind name="action" value="'click'; 'openChannelForPrivateMessages'; {dbId: entityAccount.accountSimple.dbId}"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<bind name="watch" value="'isRevokeInvitationBtnVisible'; 	(_playerContext.type == 'invitedToClubPlayers') &amp;&amp;
																(_playerContext.invatorDbId == selfPlayerDbId) &amp;&amp;
																rollOver"/>
					<block>
						<bind name="visible" value="isRevokeInvitationBtnVisible"/>
						<bind name="dispatch" value="'buttonClick'; _playerContext.type == 'invitedToClubPlayers' ? 'evPlayerInvitationToClubRevoked' : null; {showBusyIndicator: true} "/>
						<block>
							<bind name="visible" value="!showBusyIndicator"/>
							<style>
								<marginTop value="3px"/>
								<marginRight value="7px"/>
							</style>
							<block className="button_cross" type="native">
								<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_RECALL_INVITATION'}"/>
								<bind name="action" value="'buttonClick'; 'cancelClubInvitation'; {clubId: _playerContext.clubId, userId: entityAccount.accountSimple.dbId}"/>
							</block>
						</block>
						<block>
							<bind name="fade" value="showBusyIndicator; 0.15; {alpha: 0}; {alpha: 1}"/>
							<style>
								<marginTop value="4px"/>
								<marginRight value="4px"/>
							</style>
							<bind name="instance" value="'BusyIndicator'; showBusyIndicator ? { _showBusyIndicator: showBusyIndicator } : null"/>
						</block>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ContactInfoTooltipAccountHeader">
		<bind name="entityDH" value="'playerEntity'; _entityAccountId"/>
		<bind name="watchDH" value="'playerEntityDbId'; [];  playerEntity.accountSimple.dbId"/>
		<style>
			<width value="100%"/>
		</style>
		<block className="dock_submenu_item" type="native">
			<params>
				<param name="soundSet" value="dropmenu_button"/>
			</params>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<margin value="8px"/>
				</style>
				<bind name="child" value="_isBot ? 1 : 0; {_playerDbId: playerEntityDbId, _entityAccountId: _entityAccountId}; 'PlayerStereotypeDogTag'; 'BotStereotype'"/>
			</block>
		</block>
	</block>
	<block className="BotStereotype">
		<bind name="firstEntityDH" value="'trainingRoomEntity'; CC.trainingRoomWindowState"/>
		<bind name="watchDH" value="'windowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.state"/>
		<bind name="watchDH" value="'notReadyWindowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.notReadyWindowState"/>
		<bind name="watchDH" value="'windowInset'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.inset"/>
		<bind name="watchDH" value="'windowInsetLabel'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.insetLabel"/>
		<bind name="watchDH" value="'isBotsAIEnabled'; ['trainingRoomEntity.trainingRoom.evUpdate']; trainingRoomEntity.trainingRoom.isBotsAIEnabled"/>
		<bind name="entityDH" value="'entityAccount'; _entityAccountId"/>
		<bind name="watchDH" value="'nickName'; ['entityAccount.accountName.evChanged']; entityAccount.accountName.nickName"/>
		<bind name="watchDH" value="'AILevel'; ['entityAccount.bot.evUpdate']; entityAccount.bot.AILevel"/>
		<bind name="watchDH" value="'canShoot'; ['entityAccount.bot.evUpdate']; entityAccount.bot.canShoot"/>
		<bind name="watchDH" value="'canMove'; ['entityAccount.bot.evUpdate']; entityAccount.bot.canMove"/>
		<bind name="watch" value="'canShootStr'; canShoot	? 'IDS_BOT_CAN_SHOOT_STATUS'
											: 'IDS_BOT_CAN_NOT_SHOOT_STATUS'"/>
		<bind name="watch" value="'canMoveStr';	canMove		? 'IDS_BOT_CAN_MOVE_STATUS'
											: 'IDS_BOT_CAN_NOT_MOVE_STATUS'"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
				<marginRight value="8px"/>
				<marginTop value="10px"/>
				<marginBottom value="6px"/>
			</style>
			<block type="text">
				<style>
					<width value="100%"/>
				</style>
				<styleClass value="$TextHeaderWhite"/>
				<bind name="text" value="nickName"/>
				<bind name="class" value="'$Bold'"/>
			</block>
			<block type="text">
				<style>
					<width value="100%"/>
					<marginTop value="-3px"/>
				</style>
				<styleClass value="$TextDefault"/>
				<bind name="text" value="!isBotsAIEnabled 	? 'IDS_DISABLED_AI_BOT_STATUS' :
						AILevel &gt; 9 		? 'IDS_HARD_LEVEL_BOT_STATUS' :
						AILevel &gt; 5 		? 'IDS_MEDIUM_LEVEL_BOT_STATUS'
											: 'IDS_LOW_LEVEL_BOT_STATUS'"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="isBotsAIEnabled"/>
			<style>
				<width value="100%"/>
				<marginRight value="8px"/>
				<marginBottom value="6px"/>
			</style>
			<block type="text">
				<style>
					<width value="100%"/>
				</style>
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorBlueish'"/>
				<bind name="text" value="tr(canShootStr) + ' ' + tr(canMoveStr)"/>
			</block>
		</block>
	</block>
	<block className="PlayerContactItem">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInDivision'; 'pureName'; pureName; 'playerInDivision'"/>
		<bind name="entityDH" value="'entityAccount'; _entityAccountId"/>
		<bind name="watchDH" value="'nickName'; 			['entityAccount.accountName.evChanged']; entityAccount.accountName.nickName"/>
		<bind name="watchDH" value="'pureName'; 			['entityAccount.accountName.evChanged']; entityAccount.accountName.name"/>
		<bind name="watchDH" value="'clubsMembership'; 	['entityAccount.clubman.evClubsMembershipChanged']; entityAccount.clubman.clubsMembership"/>
		<bind name="watchDH" value="'accountOnline'; 	['entityAccount.accountStatus.evOnlineChanged']; entityAccount.accountStatus.online"/>
		<bind name="watchDH" value="'inBattle'; 			['entityAccount.accountStatus.evInBattleChanged']; entityAccount.accountStatus.inBattle"/>
		<bind name="watchDH" value="'rank'; 				['entityAccount.accountRank.evRankChanged']; entityAccount.accountRank.rank"/>
		<bind name="watchDH" value="'rankSeasonId'; 		['entityAccount.accountRank.evRankChanged']; entityAccount.accountRank.seasonId"/>
		<bind name="watchDH" value="'clanId'; 			['entityAccount.clanman.evClanIdChanged']; entityAccount.clanman.clanId"/>
		<bind name="watchDH" value="'isSelf'; 			[]; entityAccount.accountSimple.isSelfPlayer"/>
		<bind name="entityDH" value="'entityClub'; _playerContext.clubEntityId"/>
		<bind name="watchDH" value="'isSelfPlayerCurPartyMember';['entityClub.party.evUpdate']; entityClub.party.isMember"/>
		<bind name="watchDH" value="'playerPrebattleClubId'; 	['entityAccount.prebattlePlayer.evClubIdChanged']; entityAccount.prebattlePlayer.clubId"/>
		<bind name="watchDH" value="'isPartyReady'; 				['entityAccount.prebattlePlayer.evStateChanged']; entityAccount.prebattlePlayer.isReady"/>
		<bind name="watchDH" value="'isPartyCommander'; 			['entityAccount.prebattlePlayer.evIsCommanderChanged']; entityAccount.prebattlePlayer.isCommander"/>
		<bind name="watchDH" value="'inPartyBattle'; 			['entityAccount.prebattlePlayer.evIsInBattleChanged']; entityAccount.prebattlePlayer.isInBattle"/>
		<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; clanId"/>
		<bind name="primaryEntityDH" value="'clanExtendedEntity'; CC.clanExtended; clanId"/>
		<bind name="watchDH" value="'clanTag'; 	['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
		<bind name="watchDH" value="'color'; 	['clanExtendedEntity.clanExtended.evColorChanged']; clanExtendedEntity.clanExtended.color"/>
		<bind name="watchDH" value="'league'; 	['clanExtendedEntity.clanExtended.evLeagueChanged']; clanExtendedEntity.clanExtended.league"/>
		<bind name="watch" value="'clanTagColor'; ('0xff' + color)"/>
		<bind name="watch" value="'isPlayerInParty'; (entityAccount.prebattlePlayer &amp;&amp; (playerPrebattleClubId != -1))"/>
		<bind name="watch" value="'isInCurClubChannelParty'; (_playerContext.type == 'channelParticipants')			&amp;&amp;
											(_playerContext.channelTypeIdent == 'club')				&amp;&amp;
											(entityClub.club.id == playerPrebattleClubId)			&amp;&amp;
											(isSelfPlayerCurPartyMember)			? true
																					: false"/>
		<bind name="watch" value="'isInDivision'; ((divisionEntranceData.divisionType == 'division') &amp;&amp; (playerInDivision.length &gt; 0)) ? true : false"/>
		<bind name="watch" value="'isInParty'; ((divisionEntranceData.divisionType == 'party') &amp;&amp; (playerInDivision.length &gt; 0)) ? true : false"/>
		<bind name="watch" value="'isInFormation'; (playerInDivision.length &gt; 0)"/>
		<bind name="watch" value="'isReady'; isPlayerInParty				? isPartyReady :
							playerInDivision[0].isReady ? true
														: false"/>
		<bind name="watch" value="'isCommander'; isPlayerInParty					? isPartyCommander : 
								playerInDivision[0].isCommander	? true
																: false"/>
		<bind name="watch" value="'isInFormationBattle'; (isPlayerInParty || isInDivision || isInParty) &amp;&amp;
										(playerInDivision[0].isInBattle || inPartyBattle || inBattle)	? true
																										: false"/>
		<bind name="watchDH" value="'invitedPartyClubmans'; ['entityClub.party.evUpdate']; entityClub.party.invitedClubmans"/>
		<bind name="watch" value="'isInvitedToDivision'; entityAccount.playerInvitedToPrebattleInfo != null"/>
		<bind name="watchDH" value="'inviteExpirationTime'; ['entityAccount.playerInvitedToPrebattleInfo.evChanged']; entityAccount.playerInvitedToPrebattleInfo.expirationTime"/>
		<bind name="var" value="{wantedInDivision: false}"/>
		<bind name="style" value="'alpha'; _isOfflineAlpha	? accountOnline ? 1
															: 0.5
											: 1"/>
		<block>
			<style>
				<hitTest value="false"/>
			</style>
			<block>
				<bind name="visible" value="accountOnline &amp;&amp; ((inBattle &amp;&amp; !(isInFormationBattle)) || wantedInDivision)"/>
				<style>
					<marginLeft value="3px"/>
					<marginTop value="5px"/>
				</style>
				<block className="icon_player_status" type="native">
					<bind name="gotoAndStop!" value="(_playerContext.type == 'invitedToClubPlayers')	? 'invited' :
									wantedInDivision								? 'wanted_in_division' :
									inBattle										? 'in_battle'
																					: 'not_ready'"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="isInDivision || (isInvitedToDivision &amp;&amp; !(isSelf)) ? true : false"/>
				<style>
					<marginLeft value="4px"/>
				</style>
				<block>
					<style>
						<position value="absolute"/>
						<marginTop value="9px"/>
						<marginLeft value="-12px"/>
					</style>
					<bind name="instance" value="'VoiceChatDockIcon'; (accountOnline &amp;&amp; isInFormation)	? {_playerName: pureName, _isSelf: isSelf}
																						: null"/>
				</block>
				<block>
					<style>
						<marginTop value="4px"/>
					</style>
					<bind name="instance" value="'FormationPlayerIcon';	{	_isEmptySlot: isInvitedToDivision, isCommander: isCommander, isReady: isReady, isInBattle: isInFormationBattle,
															_formationType: divisionEntranceData.divisionType, _isWardog: _isWardog} "/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="rank != 0 &amp;&amp; !(_isShort || isInDivision)"/>
				<style>
					<marginTop value="2px"/>
				</style>
				<bind name="instance" value="'IconRankSmall'; {_rankId: rank}"/>
			</block>
			<block type="text">
				<bind name="name" value="'playerContactName_' + nickName"/>
				<bind name="watch" value="'_tfWidth' ; 	_nickNameWidth	? _nickNameWidth :
										_isShort		? 148
														: 235"/>
				<bind name="style" value="'width';	_notTrancated	? 'auto' :
									((rank != 0) || inBattle || wantedInDivision)	? isInDivision	? _tfWidth - 37 + 'px'
																									: _tfWidth - 20 + 'px'
																					: isInDivision	? _tfWidth - 20 + 'px'
																									: _tfWidth + 'px'"/>
				<style>
					<marginTop value="2px"/>
					<marginLeft value="2px"/>
					<multiline value="false"/>
				</style>
				<styleClass value="$TextHeaderBigDefault"/>
				<bind name="class" value=" (_playerContext.channelTypeIdent == 'division' &amp;&amp; divisionEntranceData.divisionType == 'party' &amp;&amp; _isWardog) 	? '$FontColorMercenaries' :
							(isSelf || (isInDivision &amp;&amp; divisionEntranceData.divisionType == 'division'))								? '$FontColorGolden'
																																		: '$FontColorWhite'"/>
				<bind name="class" value=" isSelf ? '$Bold' : '$None'"/>
				<bind name="text" value="_playerContext.channelTypeIdent == 'clan' ? pureName : nickName"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ContactInfoTooltip">
		<bind name="entityDH" value="'entityAccount'; _entityAccountId"/>
		<bind name="watchDH" value="'inBattle'; ['entityAccount.accountStatus.evInBattleChanged']; entityAccount.accountStatus.inBattle"/>
		<bind name="watchDH" value="'accountOnline'; ['entityAccount.accountStatus.evOnlineChanged']; entityAccount.accountStatus.online"/>
		<bind name="watchDH" value="'accountLevel'; ['entityAccount.accountLevel.evLevelChanged']; entityAccount.accountLevel.level"/>
		<bind name="watchDH" value="'rank'; ['entityAccount.accountRank.evRankChanged']; entityAccount.accountRank.rank"/>
		<bind name="watchDH" value="'isSuspended'; ['entityAccount.accountSimple.evSuspendedChanged']; entityAccount.accountSimple.suspended"/>
		<bind name="watchDH" value="'referralType'; 		['entityAccount.referral.evTypeUpdated']; entityAccount.referral.type"/>
		<bind name="watch" value="'isRefSysParticipant'; referralType != null"/>
		<bind name="watchDH" value="'pureName'; ['entityAccount.accountName.evChanged']; entityAccount.accountName.name"/>
		<bind name="watchDH" value="'nickName'; ['entityAccount.accountName.evChanged']; entityAccount.accountName.nickName"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInDivision'; 'pureName'; entityAccount.accountName.name; 'playerInDivision'"/>
		<bind name="watch" value="'isInDivision'; ((divisionEntranceData.divisionType == 'division') &amp;&amp; (playerInDivision.length &gt; 0)) ? true : false"/>
		<bind name="watch" value="'isInFormation'; (playerInDivision.length &gt; 0)"/>
		<bind name="watchDH" value="'isSelf'; []; entityAccount.accountSimple.isSelfPlayer"/>
		<bind name="watch" value="'isBot'; entityAccount.bot != undefined"/>
		<bind name="watch" value="'playerTooltipItem';	isBot 		? 2 :
										rank == 0	? 0
													: 1"/>
		<bind name="watch" value="'isReady'; playerInDivision[0].isReady ? true
														: false"/>
		<bind name="watch" value="'isCommander'; playerInDivision[0].isCommander	? true
																: false"/>
		<bind name="watch" value="'isInFormationBattle'; isInDivision &amp;&amp;
										(playerInDivision[0].isInBattle || inBattle)	? true
																						: false"/>
		<bind name="watchDH" value="'expirationTime'; ['entityAccount.playerInvitedToPrebattleInfo.evChanged']; entityAccount.playerInvitedToPrebattleInfo.expirationTime"/>
		<bind name="watch" value="'isInvitedToDivision'; entityAccount.playerInvitedToPrebattleInfo != null"/>
		<bind name="countdown" value="expirationTime; 'countdownText'; 'mm:ss'"/>
		<bind name="var" value="{wantedInDivision: false}"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="320px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'ContactInfoTooltipAccountHeader'; {_entityAccountId: _entityAccountId, _isBot: isBot}"/>
		</block>
		<block>
			<bind name="visible" value="isRefSysParticipant"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<marginLeft value="8px"/>
					<marginTop value="8px"/>
					<marginBottom value="8px"/>
				</style>
				<bind name="instance" value="'ContactInfoTooltipReferralStatus'; isRefSysParticipant ? { _referralType: referralType, _maxWidth: 280 } : null"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="(!(accountOnline) || (inBattle &amp;&amp; !(isInFormationBattle))) &amp;&amp; !(isBot)"/>
			<style>
				<width value="100%"/>
				<height value="30px"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="4px"/>
					<marginBottom value="-4px"/>
					<marginLeft value="10px"/>
					<marginRight value="5px"/>
				</style>
				<block>
					<block className="icon_player_status" type="native">
						<bind name="gotoAndStop!" value=" inBattle	? 'in_battle'
													: 'not_ready'"/>
					</block>
				</block>
				<block type="text">
					<bind name="style" value="'alpha'; (!(accountOnline) || inBattle) ? 0.6 : 1"/>
					<style>
						<marginLeft value="1px"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="text" value=" inBattle	? tr('IDS_IN_BATTLE')
										: tr('IDS_PLAYER_IS_OFFLINE_C')"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'ContactInfoTooltipWantInFormation'; _playerContext.isFormationSeeker ? {_playerContext: _playerContext} : null"/>
		</block>
		<bind name="watch" value="'isFormationStatusVisible';	isInDivision"/>
		<block>
			<bind name="visible" value="isFormationStatusVisible &amp;&amp; !(_playerContext.isInvitation)"/>
			<style>
				<width value="100%"/>
				<height value="30px"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="4px"/>
					<marginBottom value="-4px"/>
					<marginLeft value="5px"/>
					<marginRight value="5px"/>
				</style>
				<block>
					<style>
						<marginLeft value="4px"/>
					</style>
					<bind name="instance" value="'FormationPlayerIcon'; {_isEmptySlot: _playerContext.isInvitation, isCommander: isCommander, isReady: isReady,
														isInBattle: isInFormationBattle, _formationType: divisionEntranceData.divisionType}"/>
				</block>
				<block type="text">
					<style>
						<marginLeft value="4px"/>
					</style>
					<styleClass value="$TextDefaultBold"/>
					<bind name="class" value="(divisionEntranceData.divisionType == 'division') 	? '$FontColorGolden'
																				: '$FontColorWhite'"/>
					<bind name="watch" value="'playerRoleStr'; 	isCommander	? tr('IDS_DIVISION_COMMANDER_C')
															: tr('IDS_IN_DIVISION')"/>
					<bind name="watch" value="'playerStatusStr'; isInFormationBattle	? tr('IDS_IN_BATTLE') :
												isReady				? tr('IDS_READY')
																	: tr('IDS_NOT_READY')"/>
					<bind name="text" value="playerRoleStr + '. ' + playerStatusStr"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'PlayerTooltipInvitationCountdown'; isInvitedToDivision &amp;&amp; !(isSelf) ? { 	_expirationTime: expirationTime, _formationType: 'division',
																									_text: 'IDS_INVITED_IN_DIVISION'} : null"/>
		</block>
		<block>
			<bind name="visible" value="isFormationStatusVisible"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'ContactInfoTooltipVoiceChatStatus'; (accountOnline &amp;&amp; isInFormation)	? {_isSelf: isSelf, _playerName: pureName}
																								: null"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'ContactInfoTooltipActionDenyReason'; _actionDenyReason != 'no_reason' ? {_actionDenyReason: _actionDenyReason} : null"/>
		</block>
		<block>
			<bind name="visible" value="!(isSelf)"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="10px"/>
					<marginRight value="8px"/>
					<marginTop value="7px"/>
				</style>
				<block>
					<bind name="visible" value="_actionDenyReason == 'no_reason' &amp;&amp; !(isBot) &amp;&amp; !(isSuspended)"/>
					<style>
						<width value="100%"/>
						<marginBottom value="5px"/>
					</style>
					<bind name="instance" value="'MouseInstruction'; {_type: 'left',	_instructionText:	(_playerContext.type == 'startPrivateChat')		? 'IDS_HINT_LEFT_CLICK_TO_START_CHAT' :
																						(_playerContext.type == 'inviteToChannel')		? 'IDS_HINT_LEFT_CLICK_TO_IVITE_TO_CHANNEL' :
																						(_playerContext.type == 'inviteToClub')			? 'IDS_HINT_LEFT_CLICK_TO_IVITE_TO_CLUB' :
																						(_playerContext.type == 'inviteToParty')		? 'IDS_HINT_LEFT_CLICK_TO_IVITE_TO_PARTY' :
																						(_playerContext.type == 'inviteToPartyFromClubMembersList') ? 'IDS_HINT_LEFT_CLICK_TO_IVITE_TO_PARTY' :
																						(_playerContext.type == 'inviteToDivision')		? 'IDS_HINT_LEFT_CLICK_TO_IVITE_TO_DIVISION' :
																						(_playerContext.type == 'inviteToTrainingRoom')	? 'IDS_HINT_LEFT_CLICK_TO_IVITE_TO_TRAINING_ROOM' :
																						(_playerContext.type == 'clubMembersList')		? 'IDS_HINT_LEFT_CLICK_TO_START_CHAT' :
																						(_playerContext.type == 'clubMemberPartyPlayer')? 'IDS_HINT_LEFT_CLICK_TO_START_CHAT' :
																						(_playerContext.type == 'contactsClubMembers')	? 'IDS_HINT_LEFT_CLICK_TO_START_CHAT' :
																						(_playerContext.type == 'invitedToClubPlayers')	? 'IDS_HINT_LEFT_CLICK_TO_START_CHAT' :
																						(_playerContext.type == 'channelParticipants')	? 'IDS_HINT_LEFT_CLICK_TO_START_CHAT'
																																		: ('NO INSTRUCTION FOR SUCH _playerContext.type: ' + _playerContext.type),
													_maxWidth: 220}"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<marginBottom value="6px"/>
					</style>
					<bind name="style" value="'marginTop'; (_actionDenyReason == 'no_reason') ? '0px' : '7px'"/>
					<bind name="instance" value="'MouseInstruction'; {_type: 'right', _instructionText: 'IDS_HINT_RIGHT_CLICK_FOR_CONTEXT_MENU', _maxWidth: 220}"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ContactInfoTooltipWantInFormation">
		<style>
			<width value="100%"/>
		</style>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="6px"/>
				<marginBottom value="8px"/>
				<marginLeft value="10px"/>
				<marginRight value="5px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<marginTop value="2px"/>
					</style>
					<block className="icon_player_status" type="native">
						<bind name="gotoAndStop!" value="'wanted_in_division'"/>
					</block>
				</block>
				<block type="text">
					<style>
						<marginLeft value="4px"/>
					</style>
					<styleClass value="$TextDefaultBold"/>
					<bind name="text" value="'IDS_WANT_IN_DIVISION'"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block type="text">
				<bind name="visible" value="_playerContext.seekerComment ? true : false"/>
				<style>
					<width value="100%"/>
					<marginTop value="1px"/>
				</style>
				<bind name="class" value="'$FontColorBlueish'"/>
				<styleClass value="$TextHeader"/>
				<bind name="text" value="tr('IDS_LEFT_QUOTE') + _playerContext.seekerComment + tr('IDS_RIGHT_QUOTE')"/>
			</block>
		</block>
	</block>
	<block className="ContactInfoTooltipActionDenyReason">
		<style>
			<width value="100%"/>
		</style>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="10px"/>
				<marginRight value="8px"/>
				<marginTop value="6px"/>
				<marginBottom value="5px"/>
			</style>
			<block className="icon_warning_orange" type="native">
				<style>
					<marginTop value="5px"/>
					<marginRight value="4px"/>
				</style>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorUnready'"/>
				<style>
					<maxWidth value="210"/>
				</style>
				<bind name="text" value="_actionDenyReason"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ContactInfoTooltipLongOffline">
		<bind name="collectionDH" value="CC.clubsCommon; 'clubsCommonCollection'"/>
		<bind name="entityDH" value="'clubsCommonEntity'; clubsCommonCollection[0].id"/>
		<bind name="timeFormat" value="clubsCommonEntity.clubsCommon.maxOfflineTime; 'HIGHEST'; 'maxOfflineTimeFormatted'; true"/>
		<style>
			<width value="100%"/>
		</style>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="4px"/>
				<marginBottom value="3px"/>
				<marginLeft value="6px"/>
				<marginRight value="5px"/>
			</style>
			<block>
				<style>
					<marginLeft value="4px"/>
				</style>
				<block className="icon_player_status" type="native">
					<bind name="gotoAndStop!" value="'long_offline'"/>
				</block>
			</block>
			<block type="text">
				<style>
					<marginLeft value="1px"/>
				</style>
				<style>
					<maxWidth value="210"/>
				</style>
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorUnready'"/>
				<bind name="text" value="subst('IDS_PLAYER_LONG_OFFLINE', [], {maxOfflineTime: maxOfflineTimeFormatted})"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ContactInfoTooltipInvitation">
		<style>
			<width value="100%"/>
			<height value="30px"/>
		</style>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="4px"/>
				<marginBottom value="-4px"/>
				<marginLeft value="6px"/>
				<marginRight value="5px"/>
			</style>
			<block>
				<style>
					<marginLeft value="4px"/>
				</style>
				<block className="icon_player_status" type="native">
					<bind name="gotoAndStop!" value="'invited'"/>
				</block>
			</block>
			<block type="text">
				<style>
					<marginLeft value="1px"/>
				</style>
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorDefault'"/>
				<text value="IDS_INVITED_TO_CLUB"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ContactInfoTooltipReferralStatus">
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<style>
				<width value="19px"/>
				<height value="19px"/>
			</style>
			<bind name="style" value="'backgroundImage'; _referralType == SC.Common.REFERRAL_TYPE.VETERAN	? '/url:../service_kit/icons/icon_status_hint_veteran.png'
																							: '/url:../service_kit/icons/icon_status_hint_referal.png'"/>
		</block>
		<block type="text">
			<styleClass value="$TextDefaultNM"/>
			<style>
				<marginLeft value="5px"/>
				<marginTop value="3px"/>
			</style>
			<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 180"/>
			<bind name="style" value="'leading'; _leading ? _leading : 0"/>
			<bind name="text" value="(_referralType == SC.Common.REFERRAL_TYPE.VETERAN	? 'IDS_REFERRAL_PLAYER_TYPE_VETERAN_DESCRIPTION'
																		: 'IDS_REFERRAL_PLAYER_TYPE_REFERRAL_DESCRIPTION')"/>
		</block>
	</block>
	<block className="ContactInfoTooltipVoiceChatStatus">
		<bind name="primaryEntityDH" value="'selfVoiceChatEntity'; CC.voiceChat; 0"/>
		<bind name="watchDH" value="'selfVoiceChatEnabled'; ['selfVoiceChatEntity.voiceChat.evEnabledChanged']; selfVoiceChatEntity.voiceChat.enabled"/>
		<bind name="primaryEntityDH" value="'playerVoiceChatEntity'; CC.playerVoiceState; _playerName"/>
		<bind name="watch" value="'playerVoiceChatIsEnabled'; (playerVoiceChatEntity != null)"/>
		<bind name="watchDH" value="'playerVoiceChatIsMuted'; ['playerVoiceChatEntity.playerVoiceState.evIsMutedChanged']; playerVoiceChatEntity.playerVoiceState.isMuted"/>
		<bind name="watch" value="'voiceChatStatusText';	_isSelf						?	selfVoiceChatEnabled	? 	'IDS_VOICE_CHAT_ENABLED'
																								:	'IDS_VOICE_CHAT_DISABLED' :
										!(playerVoiceChatIsEnabled)	?	'IDS_PLAYER_IS_NOT_AVAILABLE_IN_VOICE_CHAT'	:
										playerVoiceChatIsMuted		?	'IDS_PLAYER_IS_MUTED_IN_VOICE_CHAT'
																	:	'IDS_PLAYER_IS_AVAILABLE_IN_VOICE_CHAT'"/>
		<bind name="watch" value="'state';	_isSelf 					? !(selfVoiceChatEnabled)	? 'disabled'
																					: 'speak' :
							!(playerVoiceChatIsEnabled) ? 'disabled' :
							playerVoiceChatIsMuted		? 'muted'
														: 'speak'"/>
		<bind name="visible" value="(_isSelf || selfVoiceChatEnabled)"/>
		<style>
			<width value="100%"/>
		</style>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="10px"/>
				<marginRight value="8px"/>
				<marginTop value="4px"/>
				<marginBottom value="2px"/>
			</style>
			<block className="icon_voice_chat_small" type="native">
				<style>
					<marginTop value="6px"/>
					<marginRight value="4px"/>
				</style>
				<bind name="gotoAndStop!" value="state"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="(state == 'speak' ? '$FontColorWhite' : '$FontColorUnready')"/>
				<style>
					<maxWidth value="210"/>
				</style>
				<bind name="text" value="voiceChatStatusText"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ContactContextMenu">
		<bind name="entityDH" value="'entityAccount'; _entityAccountId"/>
		<bind name="watchDH" value="'isSuspended'; ['entityAccount.accountSimple.evSuspendedChanged']; entityAccount.accountSimple.suspended"/>
		<bind name="childParentScope" value="isSuspended ? 0 : 1; {}; 'SuspendedContactContextMenu'; 'NormalContactContextMenu'"/>
	</block>
	<block className="SuspendedContactContextMenu">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<styleClass value="$DefaultMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<bind name="dataRefDH" value="'accountDbId'; 'entityAccount.accountSimple.dbId'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="MenuBg">
			<styleClass value="$FullsizeAbsolute"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<bind name="visible" value="optionData.contrast &amp;&amp; !(false)"/>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="!(false)"/>
				<block className="hint_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="false"/>
				<block className="dock_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginBottom value="-19px"/>
						<marginRight value="-14px"/>
						<marginLeft value="-14px"/>
						<marginTop value="-9px"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItemWithAction">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_REMOVE_FROM_CONTACTS'"/>
				</block>
				<bind name="action" value="'click'; 'removeContact'; {dbId: accountDbId}"/>
			</block>
		</block>
	</block>
	<block className="NormalContactContextMenu">
		<bind name="firstEntityDH" value="'trainingRoomEntity'; CC.trainingRoomWindowState"/>
		<bind name="watchDH" value="'windowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.state"/>
		<bind name="watchDH" value="'notReadyWindowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.notReadyWindowState"/>
		<bind name="watchDH" value="'windowInset'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.inset"/>
		<bind name="watchDH" value="'windowInsetLabel'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.insetLabel"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<styleClass value="$DefaultMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<bind name="firstEntityDH" value="'dockStateEntity'; CC.dockState"/>
		<bind name="watchDH" value="'dockStateName'; ['dockStateEntity.dockState.evUpdate']; dockStateEntity.dockState.stateName"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'isSelfPlayerCommander'; ['selfPlayerEntity.preBattlePlayerSimple.evIsCommanderChanged']; selfPlayerEntity.preBattlePlayerSimple.isCommander"/>
		<bind name="watchDH" value="'selfTeamId'; ['selfPlayerEntity.preBattlePlayerSimple.evStateChanged']; selfPlayerEntity.preBattlePlayerSimple.teamId"/>
		<bind name="watchDH" value="'selfPreBattlePlayerId'; []; selfPlayerEntity.preBattlePlayerSimple.id"/>
		<bind name="watchDH" value="'isSelfPlayerTeamCommander'; ['selfPlayerEntity.trainingRoomPlayer.evUpdate']; selfPlayerEntity.trainingRoomPlayer.isCommander"/>
		<bind name="watchDH" value="'isSelf'; []; entityAccount.accountSimple.isSelfPlayer"/>
		<bind name="watchDH" value="'prebattleInvitedPlayerId'; []; entityAccount.playerInvitedToPrebattleInfo.id"/>
		<bind name="watchDH" value="'prebattlePlayerId'; []; entityAccount.preBattlePlayerSimple.id"/>
		<bind name="watchDH" value="'prebattlePlayerTeamId'; ['entityAccount.preBattlePlayerSimple.evStateChanged']; entityAccount.preBattlePlayerSimple.teamId"/>
		<bind name="watchDH" value="'isPrebattlePlayerOwner'; ['entityAccount.preBattlePlayerSimple.evIsCommanderChanged']; entityAccount.preBattlePlayerSimple.isCommander"/>
		<bind name="watchDH" value="'isPrebattlePlayerTeamCommander'; ['entityAccount.trainingRoomPlayer.evUpdate']; entityAccount.trainingRoomPlayer.isCommander"/>
		<bind name="watch" value="'isInvitedToPrebattle'; (entityAccount.playerInvitedToPrebattleInfo != null)"/>
		<bind name="watch" value="'isInPrebattle'; (entityAccount.preBattlePlayerSimple != null &amp;&amp; !(isInvitedToPrebattle))"/>
		<bind name="watch" value="'isInTrainingRoom'; trainingRoomEntity != null"/>
		<bind name="watchDH" value="'trainingRoomOwnerId'; ['trainingRoomEntity.preBattle.evOwnerIdChanged']; trainingRoomEntity.preBattle.ownerId"/>
		<bind name="watch" value="'isSelfPlayerTrainingRoomOwner'; isInTrainingRoom &amp;&amp; (trainingRoomOwnerId == selfPreBattlePlayerId)"/>
		<bind name="watch" value="'isPrebattlePlayerTrainingRoomOwner'; isInTrainingRoom &amp;&amp; (trainingRoomOwnerId == prebattlePlayerId)"/>
		<bind name="dataRefDH" value="'accountDbId'; 'entityAccount.accountSimple.dbId'"/>
		<bind name="dataRefDH" value="'contactsGroups'; 'dataHub.chat.ref.chat.contactsGroups.ref.items'"/>
		<bind name="dataRefDH" value="'chat'; 'dataHub.chat.ref.chat'"/>
		<bind name="watchDH" value="'nickName'; ['entityAccount.accountName.evChanged']; entityAccount.accountName.nickName"/>
		<bind name="watchDH" value="'pureName'; ['entityAccount.accountName.evChanged']; entityAccount.accountName.name"/>
		<bind name="watchDH" value="'accountOnline'; ['entityAccount.accountStatus.evOnlineChanged']; entityAccount.accountStatus.online"/>
		<bind name="watchDH" value="'groupIdsOfAccount'; ['entityAccount.elementInGroups.evGroupsChanged']; entityAccount.elementInGroups.groupIds"/>
		<bind name="watchDH" value="'isIgnored';['entityAccount.contact.evIsIgnoredChanged']; !!entityAccount.contact.isIgnored"/>
		<bind name="watchDH" value="'canAddGroupEntitiesId'; ['entityAccount.elementInGroups.evCanAddGroupEntitiesChanged', 'dataHub.chat.ref.chat.evRosterChanged']; (entityAccount.elementInGroups) ? entityAccount.elementInGroups.canAddGroupEntitiesId : chat.canAddGroupEntitiesId"/>
		<bind name="watch" value="'isInFormation'; (entityAccount.preBattlePlayerSimple != null)"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInvitedToDivision'; 'name';  entityAccount.accountName.name; 'sentInvitationData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'invitationsToDivision'; 'playerName';  entityAccount.accountName.name; 'receivedInvitationData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'dockDefaultValues'; 'dockInitData,dockUpdateData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'slimClientData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionData'"/>
		<bind name="watchDH" value="'clubsMembership'; ['entityAccount.clubman.evClubsMembershipChanged']; entityAccount.clubman.clubsMembership"/>
		<bind name="entityDH" value="'entityClub'; _playerContext.clubEntityId"/>
		<bind name="watchDH" value="'clubMembers'; ['entityClub.club.evMembersChanged']; entityClub.club.members"/>
		<bind name="collectionDH" value="CC.club; 'playersClubs'"/>
		<bind name="collectionDH" value="CC.clubsCommon; 'clubsCommonCollection'"/>
		<bind name="entityDH" value="'clubsCommonEntity'; clubsCommonCollection[0].id"/>
		<bind name="watchDH" value="'clubsVoted'; ['clubsCommonEntity.clubsCommon.evClubsVotedChanged']; clubsCommonEntity.clubsCommon.clubsVoted"/>
		<bind name="watch" value="'isVoteInCurClub';	(clubsVoted[0] == entityClub.club.id) ||
									(clubsVoted[1] == entityClub.club.id) ||
									(clubsVoted[2] == entityClub.club.id) ? true : false"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<bind name="tooltip" value="'SimpleWarningTooltip'; accountDbId ? null : {_text: 'IDS_UNABLED_ACTION_WITH_PLAYER'}"/>
		<bind name="style" value="'mouseChildren'; accountDbId ? true : false"/>
		<bind name="style" value="'alpha'; accountDbId ? 1 : 0.5"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="MenuBg">
			<styleClass value="$FullsizeAbsolute"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<bind name="visible" value="optionData.contrast &amp;&amp; !(false)"/>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="!(false)"/>
				<block className="hint_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="false"/>
				<block className="dock_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginBottom value="-19px"/>
						<marginRight value="-14px"/>
						<marginLeft value="-14px"/>
						<marginTop value="-9px"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="visible" value="(isSelfPlayerCommander || (isInTrainingRoom &amp;&amp; isSelfPlayerTeamCommander &amp;&amp; selfTeamId == prebattlePlayerTeamId)) &amp;&amp; 
					   (isInPrebattle || isInvitedToPrebattle) &amp;&amp; (dockStateName != 'balancer')"/>
			<block>
				<bind name="visible" value="(isInvitedToPrebattle == true)"/>
				<styleClass value="$ContextMenuListItem"/>
				<block className="MenuItem">
					<styleClass value="$Fullsize"/>
					<block className="dock_submenu_item" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<styleClass value="$MiddleVAligned"/>
						<styleClass value="$ContextMenuListItemContent"/>
						<bind name="text" value="'IDS_RECALL_INVITATION'"/>
					</block>
				</block>
				<bind name="action" value="'click'; 'revokeInvitationToDivision'; {id: prebattlePlayerId}"/>
			</block>
			<block>
				<bind name="visible" value="(isInPrebattle == true &amp;&amp; 
							(!isInTrainingRoom ||
							(isInTrainingRoom &amp;&amp; isSelfPlayerTrainingRoomOwner &amp;&amp; !isPrebattlePlayerTrainingRoomOwner) ))"/>
				<styleClass value="$ContextMenuListItem"/>
				<block className="MenuItem">
					<styleClass value="$Fullsize"/>
					<block className="dock_submenu_item" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<styleClass value="$MiddleVAligned"/>
						<styleClass value="$ContextMenuListItemContent"/>
						<bind name="text" value="isInTrainingRoom ? 'IDS_EXCLUDE_PLAYER_OUT_OF_TRAINING_ROOM' : 'IDS_EXCLUDE_PLAYER_OUT_OF_DIVISION'"/>
					</block>
				</block>
				<bind name="request" value="'buttonClick'; 'kickPlayerFromDivision'; {	playerId: prebattlePlayerId, name: nickName,
																		subtitle: isInTrainingRoom ? 	'IDS_MODAL_EXCLUDE_PLAYER_OUT_OF_TRAINING_ROOM' : 
																										'IDS_MODAL_EXCLUDE_PLAYER_OUT_OF_DIVISION'
																	}"/>
			</block>
			<block>
				<bind name="visible" value="(isSelfPlayerCommander || (isInTrainingRoom &amp;&amp; isSelfPlayerTeamCommander &amp;&amp; selfTeamId == prebattlePlayerTeamId)) &amp;&amp; 
				!(_isBot) &amp;&amp;
				((isInPrebattle == true &amp;&amp; !trainingRoomEntity) || 
				(trainingRoomEntity &amp;&amp; trainingRoomEntity.trainingRoom.commandersManagement)) &amp;&amp; 
				(prebattlePlayerTeamId != -1) &amp;&amp; !isInvitedToPrebattle &amp;&amp;
				!isPrebattlePlayerTeamCommander"/>
				<styleClass value="$ContextMenuListItem"/>
				<block className="MenuItem">
					<styleClass value="$Fullsize"/>
					<block className="dock_submenu_item" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<styleClass value="$MiddleVAligned"/>
						<styleClass value="$ContextMenuListItemContent"/>
						<bind name="text" value="'IDS_APPOINT_PLAYER_TO_COMMANDER'"/>
					</block>
				</block>
				<bind name="action" value="'buttonClick'; 'changeCommander'; {playerId: prebattlePlayerId, teamId: prebattlePlayerTeamId}"/>
				<bind name="dispatch" value="'buttonClick'; _isTrainingRoom ? '' : 'Tooltip.Close'; null; 2"/>
			</block>
			<block>
				<bind name="visible" value="!(_isBot)"/>
				<style>
					<width value="100%"/>
					<marginTop value="2px"/>
					<marginBottom value="3px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="_playerContext.type == 'inviteToChannel'"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_INVITE_PLAYER_TO_CHANNEL'"/>
				</block>
			</block>
			<bind name="action" value="'click'; 'sendChannelInvite'; {channelId: _playerContext.channelId, inviteDbId: accountDbId}"/>
		</block>
		<block>
			<bind name="visible" value="_playerContext.type == 'inviteToClub'"/>
			<bind name="style" value="'alpha'; (_actionDenyReason == 'no_reason') ? 1 : 0.5"/>
			<bind name="tooltip" value="'SimpleWarningTooltip'; (_actionDenyReason != 'no_reason') ? {_text: _actionDenyReason} : null"/>
			<style>
				<backgroundColor value="0x01000000"/>
			</style>
			<styleClass value="$ContextMenuListItem"/>
			<block>
				<styleClass value="$Fullsize"/>
				<bind name="style" value="'hitTest';  (_actionDenyReason == 'no_reason') ? true : false"/>
				<block className="MenuItem">
					<styleClass value="$Fullsize"/>
					<block className="dock_submenu_item" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<styleClass value="$MiddleVAligned"/>
						<styleClass value="$ContextMenuListItemContent"/>
						<bind name="text" value="'IDS_INVITE_TO_CLUB'"/>
					</block>
				</block>
			</block>
			<bind name="action" value="'click'; (_actionDenyReason == 'no_reason') ? 'inviteUserToClub' : '' ; {clubId: _playerContext.clubId, playerName: pureName, userId: accountDbId}"/>
		</block>
		<block>
			<bind name="visible" value="!(_isBot)"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_SEND_MESSAGE'"/>
				</block>
			</block>
			<bind name="action" value="'click'; 'openChannelForPrivateMessages'; {dbId: accountDbId}"/>
		</block>
		<block>
			<bind name="feature" value="19;	''"/>
			<bind name="watch" value="'isInvitedToClubItemVisible';	(feature_19 != 'locked') &amp;&amp;
													(_playerContext.type != 'inviteToChannel') &amp;&amp;
													(_playerContext.type != 'inviteToClub')	&amp;&amp;
													(playersClubs.length &gt; 0)	? true
																				: false"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'InviteToClubContextMenuItem'; isInvitedToClubItemVisible ? {_entityAccountId: _entityAccountId} : null"/>
		</block>
		<block>
			<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInDivision'; 'playersInDivision'"/>
			<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInvitedToDivision'; 'playersInvitedToDivision'"/>
			<bind name="watch" value="'freePlaces'; (divisionData.maxPlayersInDivision - playersInDivision.length - playersInvitedToDivision.length)"/>
			<bind name="visible" value=" slimClientData.isFull &amp;&amp;
						accountOnline &amp;&amp;
						!(isInFormation) &amp;&amp;
						(dockStateName != 'balancer') &amp;&amp;
						(_playerContext.type != 'inviteToClub') &amp;&amp;
						(_playerContext.type != 'inviteToTrainingRoom') &amp;&amp;
						!isInvitedToPrebattle &amp;&amp;
						(freePlaces &gt; 0) &amp;&amp;
						!(isInTrainingRoom)"/>
			<bind name="style" value="'alpha'; ((sentInvitationData.length == 0) &amp;&amp; (receivedInvitationData.length == 0)) ? 1 : 0.5 "/>
			<bind name="style" value="'hitTest'; ((sentInvitationData.length == 0) &amp;&amp; (receivedInvitationData.length == 0))"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItemWithAction">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_INVITE_IN_DIVISION'"/>
				</block>
				<bind name="action" value="'click'; 'inviteToDivision'; {playerId: accountDbId, playerName: pureName, inviteType: _inviteType}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="	isInTrainingRoom &amp;&amp; (isSelfPlayerCommander || isSelfPlayerTeamCommander) &amp;&amp;
						accountOnline &amp;&amp;
						!(isInFormation) &amp;&amp;
						!isInvitedToPrebattle"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItemWithAction">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_INVITE_IN_TRAINING_ROOM'"/>
				</block>
				<bind name="action" value="'click'; 'TrainingRoomProxy.sendInvite'; {newAccDBID: accountDbId, teamId: _teamId}"/>
			</block>
		</block>
		<bind name="watchDH" value="'groupIdsOfAccount'; ['entityAccount.elementInGroups.evGroupsChanged']; entityAccount.elementInGroups.groupIds"/>
		<block>
			<styleClass value="$ContextMenuListItem"/>
			<bind name="visible" value="((groupIdsOfAccount==null) &amp;&amp; !(isIgnored)) &amp;&amp; !(_isBot)"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_ADD_TO_CONTACTS'"/>
				</block>
			</block>
			<bind name="action" value="'click'; 'addContact'; {dbId: accountDbId}"/>
		</block>
		<block>
			<bind name="visible" value="!(isIgnored) &amp;&amp; ((canAddGroupEntitiesId.length &gt; 0) &amp;&amp; (contactsGroups.length &gt; 1)) &amp;&amp; !(_isBot)"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_ADD_TO_GROUP'"/>
				</block>
			</block>
			<block className="button_expand_h" type="native">
				<style>
					<position value="absolute"/>
					<right value="6px"/>
				</style>
				<styleClass value="$MouseDisable"/>
				<styleClass value="$MiddleVAligned"/>
			</block>
			<bind name="tooltip" value="'MoveToGroupContextSubMenu'; {_entityAccountId: _entityAccountId, canAddGroupEntitiesId: canAddGroupEntitiesId, _dropDown: false}; 7"/>
		</block>
		<block>
			<bind name="visible" value="((_currentGroupId != null) &amp;&amp; !(isIgnored)) &amp;&amp; !(_isBot)"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItemWithAction">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_REMOVE_FROM_GROUP'"/>
				</block>
				<bind name="action" value="'click'; 'removeContactFromGroup'; {dbId: entityAccount.accountSimple.dbId, fromGroupId: _currentGroupId}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!(_isBot)"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="(!isIgnored) ? 'IDS_IGNORE_PLAYER' : 'IDS_NOT_IGNORE_PLAYER'"/>
				</block>
			</block>
			<bind name="action" value="'click'; 'userIgnoreContact'; {dbId: accountDbId, ignore: !(isIgnored)}"/>
		</block>
		<block>
			<bind name="visible" value="((groupIdsOfAccount!=null) &amp;&amp; !(isIgnored)) &amp;&amp; !(_isBot)"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItemWithAction">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_REMOVE_FROM_CONTACTS'"/>
				</block>
				<bind name="action" value="'click'; 'removeContact'; {dbId: accountDbId}"/>
			</block>
		</block>
		<block>
			<bind name="primaryEntityDH" value="'selfVoiceChatEntity'; CC.voiceChat; 0"/>
			<bind name="watchDH" value="'selfVoiceChatEnabled'; ['selfVoiceChatEntity.voiceChat.evEnabledChanged']; selfVoiceChatEntity.voiceChat.enabled"/>
			<bind name="instance" value="'VoiceChatContextMenuItem'; ((selfVoiceChatEnabled || isSelf) &amp;&amp; isInFormation) ? {_isSelf: isSelf, _playerName: pureName, _nickName: nickName} : null"/>
		</block>
		<block>
			<bind name="visible" value="	(_playerContext.type == 'clubMembersList') ||
						(_playerContext.type == 'contactsClubMembers') ||
						(_playerContext.type == 'inviteToPartyFromClubMembersList') ||
						((_playerContext.type == 'clubMemberPartyPlayer') &amp;&amp; (!_isWardog)) ||
						(_playerContext.type == 'channelParticipants' &amp;&amp; _playerContext.channelTypeIdent == 'club')"/>
			<style>
				<width value="100%"/>
				<backgroundColor value="0x01000000"/>
			</style>
			<bind name="tooltip" value="'SimpleWarningTooltip'; (dockStateName == 'balancer') ? {_text: tr('IDS_CONTEXT_ACTION_NOT_AVAILABLE_IN_MATCHMAKER')} : null"/>
			<block>
				<bind name="visible" value="!(_isBot)"/>
				<style>
					<width value="100%"/>
					<marginTop value="3px"/>
					<marginBottom value="2px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<bind name="style" value="'hitTest'; (dockStateName == 'balancer') ? false : true"/>
				<bind name="style" value="'alpha'; (dockStateName == 'balancer') ? 0.5 : 1"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<bind name="visible" value="accountDbId != _playerContext.clubLeaderDbId"/>
					<styleClass value="$ContextMenuListItem"/>
					<style>
						<backgroundColor value="0x01000000"/>
					</style>
					<bind name="tooltip" value="'SimpleWarningTooltip'; isVoteInCurClub ? {_text: tr('IDS_UNABLE_TO_START_VOTE_TILL_CURRENT_NOT_FINISHED')} : null"/>
					<block>
						<styleClass value="$Fullsize"/>
						<bind name="style" value="'hitTest'; !(isVoteInCurClub) ? true : false"/>
						<bind name="style" value="'alpha'; !(isVoteInCurClub) ? 1 : 0.5"/>
						<block className="MenuItemWithAction">
							<styleClass value="$Fullsize"/>
							<block className="dock_submenu_item" type="native">
								<styleClass value="$FullsizeAbsolute"/>
							</block>
							<block type="text">
								<styleClass value="$TextDefault"/>
								<styleClass value="$MiddleVAligned"/>
								<styleClass value="$ContextMenuListItemContent"/>
								<bind name="text" value="'IDS_KICK_PLAYER_FROM_CLUB'"/>
							</block>
							<bind name="action" value="'click'; 'kickClubMember'; {clubId: _playerContext.clubId, accountId: accountDbId, price: 0, playerName: pureName}"/>
						</block>
					</block>
				</block>
				<block>
					<bind name="visible" value="accountDbId == _playerContext.clubLeaderDbId"/>
					<styleClass value="$ContextMenuListItem"/>
					<style>
						<backgroundColor value="0x01000000"/>
					</style>
					<bind name="tooltip" value="'SimpleWarningTooltip';	(clubMembers.length &lt; VoteTypes.MIN_MEMBERS_TO_RIOT) ? {_text: tr('IDS_DEPOSE_CLUB_LEADER_HINT')} :
														isVoteInCurClub 									 ? {_text: tr('IDS_UNABLE_TO_START_VOTE_TILL_CURRENT_NOT_FINISHED')}
																											 : null"/>
					<block>
						<styleClass value="$Fullsize"/>
						<bind name="style" value="'hitTest'; ((clubMembers.length &gt;= VoteTypes.MIN_MEMBERS_TO_RIOT) &amp;&amp; !(isVoteInCurClub)) ? true : false"/>
						<bind name="style" value="'alpha'; ((clubMembers.length &gt;= VoteTypes.MIN_MEMBERS_TO_RIOT) &amp;&amp; !(isVoteInCurClub)) ? 1 : 0.5"/>
						<block className="MenuItemWithAction">
							<styleClass value="$Fullsize"/>
							<block className="dock_submenu_item" type="native">
								<styleClass value="$FullsizeAbsolute"/>
							</block>
							<block type="text">
								<styleClass value="$TextDefault"/>
								<styleClass value="$MiddleVAligned"/>
								<styleClass value="$ContextMenuListItemContent"/>
								<bind name="text" value="'IDS_DEPOSE_CLUB_LEADER'"/>
							</block>
							<bind name="action" value="'click'; 'kickClubLeaderWindow'; {clubEntityId: _playerContext.clubEntityId, clubId: _playerContext.clubId, accountId: accountDbId, playerName: pureName}"/>
						</block>
					</block>
				</block>
				<block>
					<bind name="visible" value="selfPlayerDbId == _playerContext.clubLeaderDbId"/>
					<styleClass value="$ContextMenuListItem"/>
					<block>
						<styleClass value="$Fullsize"/>
						<block className="MenuItemWithAction">
							<styleClass value="$Fullsize"/>
							<block className="dock_submenu_item" type="native">
								<styleClass value="$FullsizeAbsolute"/>
							</block>
							<block type="text">
								<styleClass value="$TextDefault"/>
								<styleClass value="$MiddleVAligned"/>
								<styleClass value="$ContextMenuListItemContent"/>
								<bind name="text" value="'IDS_CHANGE_CLUB_LEADER'"/>
							</block>
							<bind name="action" value="'click'; 'changeClubLeaderWindow'; {clubEntityId: _playerContext.clubEntityId, entityAccountId: _entityAccountId}"/>
						</block>
					</block>
				</block>
			</block>
		</block>
		<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; selfPlayerEntity.clanman.clanId"/>
		<bind name="watchDH" value="'clanTag'; ['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
		<bind name="watchDH" value="'clanName'; ['clanEntity.clanExtended.evNameChanged']; clanEntity.clanExtended.name"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="firstEntityDH" value="'clanInviteeEntity'; CC.clanInvitee"/>
		<bind name="watchDH" value="'role'; ['selfPlayerEntity.clanman.evRoleChanged']; selfPlayerEntity.clanman.role"/>
		<bind name="watchDH" value="'isFull'; ['clanEntity.clanExtended.evIsFullChanged']; clanEntity.clanExtended.isFull"/>
		<bind name="watch" value="'haveOwnClan'; 			clanEntity != null"/>
		<bind name="watch" value="'canInvite'; 				(role == 'executive_officer' || role == 'recruitment_officer' || role == 'commander')"/>
		<bind name="watch" value="'notInBalancer'; 			(dockStateName != 'balancer')"/>
		<bind name="watch" value="'alreadyInYourClan'; 		(entityAccount.clanman != null) &amp;&amp; (entityAccount.clanman.clanId == selfPlayerEntity.clanman.clanId)"/>
		<bind name="watch" value="'alreadyInAnotherClan'; 	(entityAccount.clanman != null) &amp;&amp; (entityAccount.clanman.clanId != selfPlayerEntity.clanman.clanId)"/>
		<bind name="watch" value="'noFreePlacesInClan'; 		isFull"/>
		<block>
			<bind name="visible" value="(haveOwnClan &amp;&amp; canInvite &amp;&amp; notInBalancer &amp;&amp; !alreadyInYourClan &amp;&amp; !_isBot)"/>
			<bind name="action" value="'click'; 'ClanProxy.sendInvite'; { playerDBID: accountDbId }"/>
			<bind name="style" value="'alpha'; (alreadyInAnotherClan || noFreePlacesInClan) ? 0.5 : 1"/>
			<bind name="tooltip" value="'SimpleWarningTooltip'; (alreadyInAnotherClan || noFreePlacesInClan) ? { _text: 	noFreePlacesInClan 		? 'IDS_CLAN_INVITATION_DENY_REASON_CLAN_IS_FULL':
																										alreadyInAnotherClan 	? 'IDS_CLAN_INVITATION_DENY_REASON_PLAYER_ALREADY_IN_CLAN'
																																: ''}
																							: null"/>
			<style>
				<width value="100%"/>
				<backgroundColor value="0x01000000"/>
			</style>
			<styleClass value="$ContextMenuListItem"/>
			<block>
				<styleClass value="$Fullsize"/>
				<bind name="style" value="'hitTest'; (alreadyInAnotherClan || noFreePlacesInClan) ? false : true"/>
				<block className="MenuItem">
					<styleClass value="$Fullsize"/>
					<block className="dock_submenu_item" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<styleClass value="$MiddleVAligned"/>
						<styleClass value="$ContextMenuListItemContent"/>
						<bind name="text" value="'IDS_INVITATION_TO_CLAN'"/>
					</block>
				</block>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
		<block>
			<bind name="visible" value="realmConstants.showProfileInBrowser &amp;&amp; (dockStateName != 'balancer') &amp;&amp; !(_isBot)"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_PROFILE'"/>
				</block>
			</block>
			<bind name="request" value="'click'; 'showPlayerStats'; { playerId: accountDbId + '',  url: 'playerStats' }"/>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
	</block>
	<block className="VoiceChatContextMenuItem">
		<bind name="primaryEntityDH" value="'playerVoiceChatEntity'; CC.playerVoiceState; _playerName"/>
		<bind name="watch" value="'playerVoiceChatIsEnabled'; (playerVoiceChatEntity != null)"/>
		<bind name="watchDH" value="'playerVoiceChatIsMuted'; ['playerVoiceChatEntity.playerVoiceState.evIsMutedChanged']; playerVoiceChatEntity.playerVoiceState.isMuted"/>
		<bind name="watch" value="'voiceChatMenuText'; 	!(playerVoiceChatIsEnabled) ? 'IDS_PLAYER_IS_NOT_AVAILABLE_IN_VOICE_CHAT' :
										playerVoiceChatIsMuted		? 'IDS_UNMUTE_PLAYER_VOICE_CHAT'
																	: 'IDS_MUTE_PLAYER_VOICE_CHAT'"/>
		<bind name="watch" value="'state'; 	!(playerVoiceChatIsEnabled)	? 'disabled' :
							playerVoiceChatIsMuted		? 'muted'
														: 'speak'"/>
		<bind name="style" value="'alpha'; !(playerVoiceChatIsEnabled)	? 0.9 : 1"/>
		<bind name="style" value="'hitTest'; !(playerVoiceChatIsEnabled)	? false : true"/>
		<block className="dock_submenu_item" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<params>
				<param name="soundSet" value="dropmenu_button"/>
			</params>
			<bind name="action" value="'buttonClick'; 'toggleVoice'; {playerName: _playerName, nickName: _nickname}"/>
		</block>
		<block>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$ContextMenuListItemContent"/>
			<block className="icon_voice_chat_small" type="native">
				<style>
					<marginTop value="6px"/>
					<marginRight value="4px"/>
				</style>
				<bind name="gotoAndStop!" value="state"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="	!(playerVoiceChatIsEnabled)	? '$FontColorUnready' :
							playerVoiceChatIsMuted		? '$FontColorUnready'
														: '$FontColorWhite'"/>
				<style>
					<width value="100%"/>
					<marginBottom value="3px"/>
					<hitTest value="false"/>
					<leading value="-3"/>
				</style>
				<bind name="text" value="voiceChatMenuText"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="MoveToGroupContextSubMenu">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<styleClass value="$DefaultMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'MenuTooltipBackground'; { _isInBattle: _isInBattle }"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="repeat" value="canAddGroupEntitiesId; 'MoveToGroupContextMenuItem'; {_entityAccountId: _entityAccountId, _currentGroupId: _currentGroupId}"/>
		</block>
	</block>
	<block className="MoveToGroupContextMenuItem">
		<bind name="entityDH" value="'entityAccount'; _entityAccountId"/>
		<bind name="dataRefDH" value="'accountDbId'; 'entityAccount.accountSimple.dbId'"/>
		<bind name="entityDH" value="'group'; $value"/>
		<bind name="visible" value="(group.groupOfElements.groupId != 1)"/>
		<styleClass value="$ContextMenuListItem"/>
		<block>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="group.groupOfElements.name"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<bind name="action" value="'click'; 'addContactToGroupGroup'; {dbId: accountDbId, toGroupId: group.groupOfElements.groupId, fromGroupId: _currentGroupId}"/>
	</block>
	<block className="InviteToClubContextMenuItem">
		<bind name="firstEntityDH" value="'dockStateEntity'; CC.dockState"/>
		<bind name="watchDH" value="'dockStateName'; ['dockStateEntity.dockState.evUpdate']; dockStateEntity.dockState.stateName"/>
		<bind name="style" value="'alpha'; (dockStateName == 'balancer') ? 0.5 : 1"/>
		<bind name="tooltip" value="'SimpleWarningTooltip'; (dockStateName == 'balancer') ? {_text: tr('IDS_CONTEXT_ACTION_NOT_AVAILABLE_IN_MATCHMAKER')} : null"/>
		<styleClass value="$ContextMenuListItem"/>
		<style>
			<backgroundColor value="0x01000000"/>
		</style>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="style" value="'hitTest';	(dockStateName == 'balancer') ? false : true"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_INVITE_TO_CLUB'"/>
				</block>
			</block>
			<block className="button_expand_h" type="native">
				<bind name="visible" value="(dockStateName == 'balancer') ? false : true"/>
				<style>
					<position value="absolute"/>
					<right value="6px"/>
				</style>
				<styleClass value="$MouseDisable"/>
				<styleClass value="$MiddleVAligned"/>
			</block>
			<bind name="tooltip" value="'InviteToClubContextSubMenu'; {_entityAccountId: _entityAccountId, _dropDown: (_dropDown ? _dropDown : false)}; 7"/>
		</block>
	</block>
	<block className="InviteToClubContextSubMenu">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<bind name="collectionDH" value="CC.club; 'clubs'"/>
		<styleClass value="$DefaultMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<block className="MenuBg">
			<styleClass value="$FullsizeAbsolute"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<bind name="visible" value="optionData.contrast &amp;&amp; !(_dropDown)"/>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="!(_dropDown)"/>
				<block className="hint_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="_dropDown"/>
				<block className="dock_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginBottom value="-19px"/>
						<marginRight value="-14px"/>
						<marginLeft value="-14px"/>
						<marginTop value="-9px"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="repeat" value="clubs; 'InviteToClubContextSubMenuItem'; {_entityAccountId: _entityAccountId}"/>
		</block>
	</block>
	<block className="InviteToClubContextSubMenuItem">
		<bind name="collectionDH" value="CC.clubsCommon; 'clubsCommonCollection'"/>
		<bind name="entityDH" value="'clubsCommonEntity'; clubsCommonCollection[0].id"/>
		<bind name="dataRefDH" value="'maxClubsCapacity'; 'clubsCommonEntity.clubsCommon.maxClubsCapacity'"/>
		<bind name="watchDH" value="'clubsVoted'; ['clubsCommonEntity.clubsCommon.evClubsVotedChanged']; clubsCommonEntity.clubsCommon.clubsVoted"/>
		<bind name="dataRefDH" value="'entityClub'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'clubName';['entityClub.club.evNameChanged']; entityClub.club.name"/>
		<bind name="watchDH" value="'leaderDbId';['entityClub.club.evleaderIdChanged']; entityClub.club.leaderId"/>
		<bind name="watchDH" value="'clubMembers'; ['entityClub.club.evMembersChanged']; entityClub.club.members"/>
		<bind name="watchDH" value="'invitedPlayers'; ['entityClub.club.evInvitedClubmansChanged']; entityClub.club.invitedClubmans"/>
		<bind name="entityDH" value="'entityAccount'; _entityAccountId"/>
		<bind name="dataRefDH" value="'accountDbId'; 'entityAccount.accountSimple.dbId'"/>
		<bind name="watchDH" value="'accountLevel'; ['entityAccount.accountLevel.evLevelChanged']; entityAccount.accountLevel.level"/>
		<bind name="contains" value="clubMembers; ($item == _entityAccountId); 'isClubMember'"/>
		<bind name="contains" value="invitedPlayers; ($item.accountEntityId == _entityAccountId); 'isInvitedToClub'"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<bind name="levelToFeature" value="accountLevel; 19; 'clubBattleFeatureUnLocked'"/>
		<bind name="watch" value="'isVoteInCurClub';	(clubsVoted[0] == entityClub.club.id) ||
									(clubsVoted[1] == entityClub.club.id) ||
									(clubsVoted[2] == entityClub.club.id) ? true : false"/>
		<bind name="watch" value="'inviteToClubDenyReason';	(isVoteInCurClub &amp;&amp; (selfPlayerDbId != leaderDbId)) ? tr('IDS_UNABLE_TO_START_VOTE_TILL_CURRENT_NOT_FINISHED') :
											(maxClubsCapacity &lt;= (clubMembers.length + invitedPlayers.length)) ? tr('IDS_INVITE_TO_CLUB_ACTION_DENY_REASON_NO_FREE_PLACE') :
											!(clubBattleFeatureUnLocked)	? tr('IDS_INVITE_TO_CLUB_ACTION_DENY_REASON_LOW_LEVEL') :
											isClubMember					? tr('IDS_INVITE_TO_CLUB_ACTION_DENY_REASON_ALREADY_IN_CLUB') :
											isInvitedToClub					? tr('IDS_INVITE_TO_CLUB_ACTION_DENY_REASON_ALREADY_INVITED')
																			: 'no_reason'"/>
		<styleClass value="$ContextMenuListItem"/>
		<bind name="style" value="'alpha'; (inviteToClubDenyReason == 'no_reason') ? 1 : 0.5"/>
		<style>
			<backgroundColor value="0x01000000"/>
		</style>
		<block>
			<bind name="style" value="'hitTest'; (inviteToClubDenyReason == 'no_reason')"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="clubName"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<bind name="tooltip" value="'SimpleWarningTooltip'; (inviteToClubDenyReason != 'no_reason') ? {_text: inviteToClubDenyReason} : null"/>
		<bind name="action" value="'click'; (inviteToClubDenyReason == 'no_reason') ? 'inviteUserToClub' : '' ; {clubId: entityClub.club.id, playerName: entityAccount.accountName.name, userId: accountDbId}"/>
	</block>
	<block className="VoiceChatDockIcon">
		<bind name="primaryEntityDH" value="'selfVoiceChatEntity'; CC.voiceChat; 0"/>
		<bind name="watchDH" value="'selfVoiceChatEnabled'; ['selfVoiceChatEntity.voiceChat.evEnabledChanged']; selfVoiceChatEntity.voiceChat.enabled"/>
		<bind name="primaryEntityDH" value="'playerVoiceChatEntity'; CC.playerVoiceState; _playerName"/>
		<bind name="watchDH" value="'playerVoiceChatIsMuted'; ['playerVoiceChatEntity.playerVoiceState.evIsMutedChanged']; playerVoiceChatEntity.playerVoiceState.isMuted"/>
		<bind name="watchDH" value="'playerVoiceChatIsSpeaking'; ['playerVoiceChatEntity.playerVoiceState.evIsSpeakingChanged']; playerVoiceChatEntity.playerVoiceState.isSpeaking"/>
		<bind name="watch" value="'playerVoiceChatIsEnabled'; playerVoiceChatEntity != null"/>
		<bind name="watch" value="'isChatEnabled'; _isSelf	? selfVoiceChatEnabled
											: (selfVoiceChatEnabled ? playerVoiceChatIsEnabled : true))"/>
		<bind name="watch" value="'state';	!(isChatEnabled)			? 'disabled' :
							playerVoiceChatIsMuted		? 'muted' :
							playerVoiceChatIsSpeaking	? 'speak'
														: null"/>
		<bind name="transition" value="state; 0.1; {alpha: 0}; {alpha: 1}; {alpha: 0}; 1"/>
		<block className="icon_voice_chat_small" type="native">
			<bind name="gotoAndStop!" value="state"/>
		</block>
	</block>
	<block className="MenuTooltipBackground">
		<styleClass value="$FullsizeAbsolute"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'DeclareBlurLayer'; _isInBattle ?  null : {}"/>
			<bind name="instance" value="'BlurMap'; _isInBattle ? null : {}"/>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="(optionData.contrast == true || _isInBattle == true)"/>
			<style>
				<marginTop value="-2px"/>
				<marginBottom value="-2px"/>
			</style>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="!(_isInBattle)"/>
			<style>
				<marginTop value="-1px"/>
				<marginBottom value="-1px"/>
			</style>
			<block className="hint_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
	</block>
	<block className="IconReferralSystem">
		<style>
			<width value="27px"/>
			<height value="27px"/>
		</style>
		<bind name="style" value="'backgroundImage'; _referralType == SC.Common.REFERRAL_TYPE.VETERAN 	? '/url:../service_kit/icons/icon_status_list_veteran.png'
																						: '/url:../service_kit/icons/icon_status_list_referal.png'"/>
	</block>
	<block className="ClanBattlePrimeTimeItem">
		<bind name="collectionDH" value="CC.clanBattlePrimeTime; 'primeTimesPerDay'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'primeTimesPerDay'+'ROOT'; 'primeTimesPerDay'; {'filter':entityDay.day.id == $entity.clanBattlePrimeTime.dateId, 'sort':['clanBattlePrimeTime.primeTimeStartTime']}; []"/>
		<bind name="dataRefDH" value="'entityDay'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'isToday'; ['entityDay.day.evUpdate']; entityDay.day.isToday"/>
		<bind name="watch" value="'havePrimeTimes'; primeTimesPerDay.length &gt; 0"/>
		<bind name="appear" value="'addedToStage'; 0.15; 1 + $index * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
		<bind name="appear" value="'startHide'; 0.15; $index * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="150px"/>
				</style>
				<bind name="style" value="'height'; havePrimeTimes ? (primeTimesPerDay.length * 32) + 'px' : '60px'"/>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<marginLeft value="16"/>
					</style>
					<bind name="style" value="'alpha'; isToday ? 1 : 0.4"/>
					<block type="text">
						<styleClass value="$TextDefault19NM"/>
						<style>
							<styleSheet value="h2
							{
								font-family: $WWSDefaultFontBold;
							}"/>
						</style>
						<bind name="text" value="'&lt;body&gt;' + tr(toUpperCase('IDS_' + entityDay.day.weekDayName)) + ' ' + '&lt;h2&gt;' + (entityDay.day.day) + ' ' + (tr('IDS_MONTH_SHORTCUT_' + entityDay.day.month)) + '&lt;/h2&gt;&lt;/body&gt;'"/>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="!(havePrimeTimes)"/>
				<block type="text">
					<styleClass value="$TextDefaultBold17NM"/>
					<style>
						<width value="250px"/>
						<marginLeft value="275px"/>
						<marginTop value="24px"/>
						<marginBottom value="24px"/>
					</style>
					<bind name="text" value="toUpperCase(tr('IDS_CLAN_BATTLES_HAS_NO_PRIMETIME'))"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginRight value="8px"/>
				</style>
				<bind name="repeat" value="primeTimesPerDay; 'DailyPrimeTimesStr'; 	{	_day: entityDay.day.weekDay,
																		_currentServerDay: seasonEntity.clanBattleSeason.currentServerDay,
																		_selectedPrimeTimeId: _selectedPrimeTimeId,
																		_hasClanPermissions: _hasClanPermissions,
																		_beforeBattle: _beforeBattle,
																	}"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<position value="absolute"/>
					<marginRight value="8px"/>
					<marginTop value="-2px"/>
					<alpha value="1.5"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<position value="absolute"/>
					<marginRight value="8px"/>
					<bottom value="-1px"/>
					<alpha value="1.5"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="DailyPrimeTimesStr">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="firstEntityDH" value="'clientBuildInfoEntity'; CC.clientBuildInfo"/>
		<bind name="dataRefDH" value="'entityPrimeTime'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'primeTimeStartTime'; 		['entityPrimeTime.clanBattlePrimeTime.evChanged']; entityPrimeTime.clanBattlePrimeTime.primeTimeStartTime"/>
		<bind name="watchDH" value="'primeTimeFinishTime'; 		['entityPrimeTime.clanBattlePrimeTime.evChanged']; entityPrimeTime.clanBattlePrimeTime.primeTimeFinishTime"/>
		<bind name="watchDH" value="'currentRealmDayType'; 		['entityPrimeTime.clanBattlePrimeTime.evChanged']; entityPrimeTime.clanBattlePrimeTime.currentRealmDayType"/>
		<bind name="watchDH" value="'primeTimeRealm'; 			['entityPrimeTime.clanBattlePrimeTime.evChanged']; entityPrimeTime.clanBattlePrimeTime.realm"/>
		<bind name="watchDH" value="'primeTimeDay'; 				['entityPrimeTime.clanBattlePrimeTime.evChanged']; entityPrimeTime.clanBattlePrimeTime.day"/>
		<bind name="watchDH" value="'primeTimeIsChosen'; 		['entityPrimeTime.clanBattlePrimeTime.evChanged']; entityPrimeTime.clanBattlePrimeTime.isChosen"/>
		<bind name="watchDH" value="'primeTimeIsFixed'; 			['entityPrimeTime.clanBattlePrimeTime.evChanged']; entityPrimeTime.clanBattlePrimeTime.isFixed"/>
		<bind name="timeFormat" value="primeTimeStartTime; 'hh:mm'; 'localStartTime'; true"/>
		<bind name="timeFormat" value="primeTimeFinishTime; 'hh:mm'; 'localFinishTime'; true"/>
		<bind name="firstEntityDH" value="'primeTimeEntityChosen'; CC.clanBattlePrimeTime; 'chosen'"/>
		<bind name="firstEntityDH" value="'primeTimeEntityFixed'; CC.clanBattlePrimeTime; 'fixed'"/>
		<bind name="watch" value="'textAlpha'; 	isCurrentServerDay 	? isCurrentPrimeTimeFixed 	? 1 : (primeTimeEntityFixed != null) ? 0.3 : 1 :
								isUpcoming 			? 0.6 : 0.3"/>
		<bind name="serverTime" value="'serverTime'"/>
		<bind name="watch" value="'isCurrentServerDay'; currentRealmDayType != ''"/>
		<bind name="watch" value="'isUpcoming';  serverTime &lt; primeTimeStartTime"/>
		<bind name="watch" value="'isActive'; (serverTime &gt; primeTimeStartTime) &amp;&amp; (serverTime &lt; primeTimeFinishTime)"/>
		<bind name="watch" value="'beforeBattleFlag'; !(isActive) &amp;&amp; _beforeBattle"/>
		<bind name="watch" value="'canBeChosen'; !isCurrentPrimeTimeChosen &amp;&amp; !isCurrentPrimeTimeFixed &amp;&amp; (isUpcoming || isCurrentServerDay) &amp;&amp; !(beforeBattleFlag)"/>
		<bind name="watch" value="'isCurrentPrimeTimeChosen'; (primeTimeEntityChosen != null) &amp;&amp; (primeTimeEntityChosen.clanBattlePrimeTime.realm == primeTimeRealm)"/>
		<bind name="watch" value="'isCurrentPrimeTimeFixed'; (primeTimeEntityFixed != null) &amp;&amp; (primeTimeEntityFixed.clanBattlePrimeTime.realm == primeTimeRealm) &amp;&amp; isCurrentServerDay"/>
		<bind name="dispatch" value="'click'; (_hasClanPermissions &amp;&amp; canBeChosen) ? 'evSelectPrimeTimeChanged' : ''; {selectedPrimeTimeId: entityPrimeTime.clanBattlePrimeTime.id}"/>
		<style>
			<width value="100%"/>
			<height value="32px"/>
		</style>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="style" value="'hitTest'; (textAlpha &gt; 0.3)"/>
			<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 	isCurrentPrimeTimeChosen 	? 'IDS_PRIME_TIME_FIXED_DESCR':
														isCurrentPrimeTimeFixed		? 'IDS_CLAN_BATTLES_ACTIVE_PRIME_TIME_FIXED'
																					: 'IDS_CLAN_BATTLES_SCHEDULE_SELECT_PRIME_TOOLTIP'}; 0"/>
			<block className="dock_submenu_item" type="native">
				<styleClass value="$Fullsize"/>
				<params>
					<param name="doubleClickEnabled" value="true"/>
				</params>
				<bind name="name" value="'primeRimeItem_' + $index"/>
				<bind name="selected" value="entityPrimeTime.clanBattlePrimeTime.id == _selectedPrimeTimeId"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="(toUpperCase(clientBuildInfoEntity.clientBuildInfo.realmName) != toUpperCase(primeTimeRealm)) &amp;&amp; (currentRealmDayType != '')"/>
			<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_PRIME_TIME_HIGH_PING_WARNING' }"/>
			<style>
				<position value="absolute"/>
				<right value="0px"/>
				<marginTop value="7px"/>
				<width value="35px"/>
				<backgroundColor value="0x01000000"/>
			</style>
			<bind name="scaleX" value="0.8"/>
			<bind name="scaleY" value="0.8"/>
			<bind name="ubScaleX" value="0.8"/>
			<bind name="ubScaleY" value="0.8"/>
			<block className="icon_warning_orange_big" type="native"/>
		</block>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<width value="100%"/>
				<hitTest value="false"/>
			</style>
			<block className="icon_check" type="native">
				<bind name="visible" value="isCurrentPrimeTimeFixed"/>
				<style>
					<position value="absolute"/>
					<marginTop value="-1px"/>
					<marginLeft value="7px"/>
				</style>
			</block>
			<block className="icon_task_status" type="native">
				<bind name="visible" value="isCurrentPrimeTimeChosen &amp;&amp; (!(primeTimeEntityFixed) || !(isCurrentServerDay)) &amp;&amp; (isUpcoming || isCurrentServerDay)"/>
				<bind name="style" value="'alpha'; isCurrentServerDay ? 1 : 0.6"/>
				<style>
					<position value="absolute"/>
					<marginLeft value="8px"/>
				</style>
				<bind name="gotoAndStop!" value="'success'"/>
			</block>
			<block type="text">
				<style>
					<width value="110px"/>
					<marginLeft value="28px"/>
				</style>
				<styleClass value="$TextDefault17NM"/>
				<bind name="style" value="'alpha'; textAlpha"/>
				<bind name="class" value="isCurrentPrimeTimeFixed ? '$FontColorGolden' : '$FontColorWhite'"/>
				<bind name="text" value="(localStartTime + ' – ' + localFinishTime) + ' / '"/>
			</block>
			<block type="text">
				<style>
					<width value="150px"/>
				</style>
				<styleClass value="$TextDefaultBold17NM"/>
				<bind name="style" value="'alpha'; textAlpha"/>
				<bind name="class" value="isCurrentPrimeTimeFixed ? '$FontColorGolden' : '$FontColorWhite'"/>
				<bind name="text" value="primeTimeRealm"/>
			</block>
			<block>
				<style>
					<width value="270px"/>
				</style>
				<bind name="style" value="'alpha'; textAlpha"/>
				<bind name="instance" value="'PrimeTimeTillTimeInfo'; { _entityId: entityPrimeTime.id, _showNearest: !(isCurrentServerDay) }"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<position value="absolute"/>
				<top value="-2px"/>
				<paddingRight value="2px"/>
				<paddingLeft value="2px"/>
				<alpha value="0.5"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<position value="absolute"/>
				<bottom value="-1px"/>
				<paddingRight value="2px"/>
				<paddingLeft value="2px"/>
				<alpha value="0.5"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<height value="100%"/>
				<position value="absolute"/>
			</style>
			<block className="VerticalDivider">
				<style>
					<height value="100%"/>
					<width value="3px"/>
				</style>
				<block className="divider_v" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<height value="100%"/>
				<position value="absolute"/>
				<right value="0px"/>
			</style>
			<block className="VerticalDivider">
				<style>
					<height value="100%"/>
					<width value="3px"/>
				</style>
				<block className="divider_v" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<position value="absolute"/>
				<alpha value="0.8"/>
			</style>
			<bind name="visible" value="isIn(currentRealmDayType, ['one', 'first'])"/>
			<bind name="instance" value="'TableDivider'; { _height: '1px' }"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<position value="absolute"/>
				<alpha value="0.8"/>
				<bottom value="0px"/>
			</style>
			<bind name="visible" value="isIn(currentRealmDayType, ['last', 'one'])"/>
			<bind name="instance" value="'TableDivider'; { _height: '1px' }"/>
		</block>
		<block>
			<style>
				<height value="100%"/>
				<position value="absolute"/>
				<alpha value="0.8"/>
			</style>
			<bind name="visible" value="isIn(currentRealmDayType, ['last', 'one', 'middle', 'first'])"/>
			<bind name="instance" value="'TableDivider'; { _width: '1px' }"/>
		</block>
		<block>
			<style>
				<height value="100%"/>
				<position value="absolute"/>
				<alpha value="0.8"/>
				<right value="0px"/>
			</style>
			<bind name="visible" value="isIn(currentRealmDayType, ['last', 'one', 'middle', 'first'])"/>
			<bind name="instance" value="'TableDivider'; { _width: '1px' }"/>
		</block>
	</block>
	<block className="TableDivider">
		<bind name="style" value="'width'; 	_width  ? _width  : '100%'"/>
		<bind name="style" value="'height'; 	_height ? _height : '100%'"/>
		<style>
			<backgroundColor value="0xffffffff"/>
		</style>
	</block>
	<block className="PrimeTimeTillTimeInfo">
		<bind name="entityDH" value="'_entityPrimeTime'; _entityId"/>
		<bind name="watchDH" value="'primeTimeStartTime'; 	['_entityPrimeTime.clanBattlePrimeTime.evChanged']; _entityPrimeTime.clanBattlePrimeTime.primeTimeStartTime"/>
		<bind name="watchDH" value="'primeTimeFinishTime'; 	['_entityPrimeTime.clanBattlePrimeTime.evChanged']; _entityPrimeTime.clanBattlePrimeTime.primeTimeFinishTime"/>
		<bind name="watchDH" value="'daylightshift'; 		['_entityPrimeTime.clanBattlePrimeTime.evChanged']; _entityPrimeTime.clanBattlePrimeTime.daylightshift"/>
		<bind name="serverTime" value="'serverTime'"/>
		<bind name="watch" value="'timeTillStart'; primeTimeStartTime - serverTime - daylightshift"/>
		<bind name="watch" value="'timeTillEnd'; primeTimeFinishTime - serverTime - daylightshift"/>
		<bind name="countdown" value="primeTimeStartTime - daylightshift ; 'formattedPrimeTimeTillStart'; 'HIGHEST,WITH_DAYS'"/>
		<bind name="countdown" value="primeTimeFinishTime - daylightshift; 'formattedPrimeTimeTillEnd'; 'HIGHEST,WITH_DAYS'"/>
		<bind name="watch" value="'isCurrent'; ((primeTimeStartTime - daylightshift)  &lt;= serverTime) &amp;&amp; (serverTime &lt;= (primeTimeFinishTime - daylightshift))"/>
		<bind name="watch" value="'isUpcoming';  serverTime &lt; (primeTimeStartTime - daylightshift)"/>
		<bind name="watch" value="'textClass'; _textClass ? _textClass : '$TextDefault17NM'"/>
		<style>
			<width value="100%f"/>
			<flow value="horizontal"/>
		</style>
		<block>
			<style>
				<width value="100%f"/>
			</style>
			<bind name="fade" value="(isUpcoming &amp;&amp; !(_showNearest)) || (isUpcoming &amp;&amp; timeTillStart &lt; 900); 0.15; {alpha: 0, top: 20}; {alpha: 1, top: 0}"/>
			<block type="text">
				<bind name="class" value="textClass"/>
				<bind name="text" value="'IDS_PRIME_TIME_TILL_START'"/>
			</block>
			<block type="text">
				<bind name="class" value="textClass"/>
				<style>
					<marginLeft value="8px"/>
					<width value="100%f"/>
					<multiline value="false"/>
				</style>
				<bind name="text" value="formattedPrimeTimeTillStart"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%f"/>
			</style>
			<bind name="fade" value="isCurrent; 0.15; {alpha: 0, top: 20}; {alpha: 1, top: 0}"/>
			<block type="text">
				<bind name="class" value="textClass"/>
				<bind name="text" value="'IDS_PRIME_TIME_TILL_END'"/>
			</block>
			<block type="text">
				<style>
					<marginLeft value="8px"/>
					<width value="100%f"/>
					<multiline value="false"/>
				</style>
				<bind name="class" value="textClass"/>
				<bind name="class" value="(timeTillEnd &lt; 900) ? '$FontColorUnready' : '$None'"/>
				<bind name="text" value="formattedPrimeTimeTillEnd"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%f"/>
			</style>
			<bind name="fade" value="!(isCurrent) &amp;&amp; !(isUpcoming); 0.15; {alpha: 0, top: 20}; {alpha: 1, top: 0}"/>
			<block type="text">
				<style>
					<width value="100%f"/>
					<multiline value="false"/>
				</style>
				<bind name="class" value="textClass"/>
				<bind name="text" value="'IDS_PRIME_TIME_IS_OVER'"/>
			</block>
		</block>
	</block>
	<block className="ClanBattlesPrimeTimeSelectionNotes">
		<bind name="firstEntityDH" value="'clanCurrentSeasonEntity'; CC.clanBattleSeason; 'current'"/>
		<bind name="watchDH" value="'cbs_startTime'; ['clanCurrentSeasonEntity.clanBattleSeason.evChanged']; clanCurrentSeasonEntity.clanBattleSeason.startTime"/>
		<bind name="watchDH" value="'cbs_shipLevelMin'; ['clanCurrentSeasonEntity.clanBattleSeason.evChanged']; clanCurrentSeasonEntity.clanBattleSeason.shipLevelMin"/>
		<bind name="watchDH" value="'cbs_shipLevelMax'; ['clanCurrentSeasonEntity.clanBattleSeason.evChanged']; clanCurrentSeasonEntity.clanBattleSeason.shipLevelMax"/>
		<bind name="watchDH" value="'cbs_isBrawl'; ['clanCurrentSeasonEntity.clanBattleSeason.evChanged']; clanCurrentSeasonEntity.clanBattleSeason.isBrawl"/>
		<bind name="timeFormat" value="cbs_startTime; 'hh:mm'; 'localStartTime'; true"/>
		<bind name="timeFormat" value="cbs_startTime; 'hh:mm'; 'startTime'; false"/>
		<bind name="watch" value="'textClass'; _useWhiteColor ? '$TextDefault17NM' : '$TextDefault17NMTech'"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
				<leading value="-2"/>
			</style>
			<bind name="instance" value="'TextWithAccent'; {	_text: tr('IDS_TIMEZONE_IS_LOCAL') + ' ', 
											_accentText: startTime_TimeZoneName + (localStartTime_TimeZone == '+0' ? '' : (' ' + localStartTime_TimeZone))
										}"/>
		</block>
		<block type="text">
			<style>
				<width value="100%"/>
				<leading value="-2"/>
				<marginTop value="16px"/>
			</style>
			<styleClass value="$TextDefault17NM"/>
			<bind name="watch" value="'battleType'; cbs_isBrawl ? 'BRAWL' : 'BATTLES'"/>
			<bind name="watch" value="'shipsRestrictionString';		cbs_shipLevelMin == cbs_shipLevelMax			?	'IDS_CLAN_' + battleType + '_ALLOWED_SHIPS_SINGLE' :
													cbs_shipLevelMin &lt;= 1 &amp;&amp; cbs_shipLevelMax &lt; 10	?	'IDS_CLAN_' + battleType + '_ALLOWED_SHIPS_TO' :
													cbs_shipLevelMin &gt; 1 &amp;&amp; cbs_shipLevelMax &gt;= 10	?	'IDS_CLAN_' + battleType + '_ALLOWED_SHIPS_FROM' :
																										'IDS_CLAN_' + battleType + '_ALLOWED_SHIPS_FROM_TO'"/>
			<bind name="text" value="subst(shipsRestrictionString, [], {levelMin: RDigits.rdigits[cbs_shipLevelMin], levelMax: RDigits.rdigits[cbs_shipLevelMax]})"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<alpha value="0.5"/>
				<marginTop value="16px"/>
			</style>
			<block>
				<bind name="visible" value="cbs_isBrawl != true"/>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefault17NM"/>
					<style>
						<width value="100%"/>
						<leading value="-2"/>
						<marginTop value="16px"/>
					</style>
					<bind name="text" value="'IDS_CLAN_BATTLES_SCHEDULE_NOTES_1'"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault17NM"/>
					<style>
						<width value="100%"/>
						<leading value="-2"/>
						<marginTop value="16px"/>
					</style>
					<bind name="text" value="'IDS_CLAN_BATTLES_SCHEDULE_NOTES_2'"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault17NM"/>
					<style>
						<width value="100%"/>
						<leading value="-2"/>
						<marginTop value="16px"/>
					</style>
					<bind name="text" value="'IDS_CLAN_BATTLES_SCHEDULE_NOTES_3'"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="cbs_isBrawl == true"/>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefault17NM"/>
					<style>
						<width value="100%"/>
						<leading value="-2"/>
					</style>
					<bind name="text" value="'IDS_CLAN_BATTLES_SCHEDULE_NOTES_2'"/>
				</block>
			</block>
		</block>
	</block>
	<block className="TextWithAccent">
		<style>
			<width value="100%"/>
		</style>
		<block type="text">
			<style>
				<width value="100%"/>
				<leading value="-3"/>
			</style>
			<bind name="class" value="_textClass ? _textClass : '$TextDefault17NM'"/>
			<style>
				<styleSheet value="h2
				{
					font-family: $WWSDefaultFontBold;
				}"/>
			</style>
			<bind name="text" value="'&lt;body&gt;' + _text + '&lt;h2&gt;' + _accentText + '&lt;/h2&gt;&lt;/body&gt;'"/>
		</block>
	</block>
	<block className="PrimeTimeStereotype">
		<bind name="entityDH" value="'primeTimeEntity'; _entityId"/>
		<bind name="watchDH" value="'primeTimeRealm'; 		['primeTimeEntity.clanBattlePrimeTime.evChanged']; primeTimeEntity.clanBattlePrimeTime.realm"/>
		<bind name="watchDH" value="'primeTimeStartTime'; 	['primeTimeEntity.clanBattlePrimeTime.evChanged']; primeTimeEntity.clanBattlePrimeTime.primeTimeStartTime"/>
		<bind name="watchDH" value="'primeTimeFinishTime'; 	['primeTimeEntity.clanBattlePrimeTime.evChanged']; primeTimeEntity.clanBattlePrimeTime.primeTimeFinishTime"/>
		<bind name="watchDH" value="'primeTimeIsChosen'; 	['primeTimeEntity.clanBattlePrimeTime.evChanged']; primeTimeEntity.clanBattlePrimeTime.isChosen"/>
		<bind name="watchDH" value="'primeTimeIsFixed'; 		['primeTimeEntity.clanBattlePrimeTime.evChanged']; primeTimeEntity.clanBattlePrimeTime.isFixed"/>
		<bind name="watch" value="'textColorClass'; primeTimeIsFixed ? '$FontColorGolden' : _textColor"/>
		<bind name="timeFormat" value="primeTimeFinishTime; 'hh:mm'; 'localFinishTime'; true"/>
		<bind name="timeFormat" value="primeTimeStartTime; 'hh:mm'; 'localStartTime'; true"/>
		<style>
			<width value="100%f"/>
		</style>
		<block>
			<style>
				<width value="100%f"/>
			</style>
			<block type="text">
				<style>
					<multiline value="false"/>
				</style>
				<styleClass value="$TextDefaultNM"/>
				<bind name="class" value="_isBig ? '$FontSizeLarge' : '$None'"/>
				<bind name="class" value="_isBold ? '$Bold' : '$None'"/>
				<bind name="class" value="textColorClass"/>
				<bind name="text" value="localStartTime + '–' + localFinishTime + ' / ' + primeTimeRealm"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ClanBattlePrimeTimesTableHeader">
		<style>
			<width value="100%"/>
			<flow value="horizontal"/>
		</style>
		<block type="text">
			<style>
				<width value="155px"/>
				<marginLeft value="16px"/>
			</style>
			<styleClass value="$TextDefault19NM"/>
			<bind name="class" value="'$FontColorBlueish'"/>
			<bind name="text" value="'IDS_CLAN_BATTLES_SCHEDULE_DAY'"/>
		</block>
		<block type="text">
			<style>
				<width value="250px"/>
				<marginLeft value="16"/>
			</style>
			<styleClass value="$TextDefault19NM"/>
			<bind name="class" value="'$FontColorBlueish'"/>
			<bind name="text" value="'IDS_CLAN_BATTLES_SCHEDULE_HEADER'"/>
		</block>
		<block type="text">
			<style>
				<width value="275px"/>
			</style>
			<styleClass value="$TextDefault19NM"/>
			<bind name="class" value="'$FontColorBlueish'"/>
			<bind name="text" value="'IDS_PRIME_TIME_STATUS'"/>
		</block>
	</block>
	<css name="$ItemListAchievementMargins">
		<marginBottom value="24px"/>
		<marginLeft value="12px"/>
		<marginRight value="12px"/>
	</css>
	<block className="AchievementAppearAnimation">
		<bind name="appear" value="'addedToStage'; (_animationOn ? 0.15 : 0 ); (_animationOn ? (0.15 * $index + _delay) : 0); {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
		<block>
			<style>
				<marginRight value="26px"/>
			</style>
			<bind name="instance" value="'AchievementIcon'; {_id: id, _amount: amount, _size: '56px', _progressWidth: '44px', _showProgress: true}"/>
		</block>
	</block>
	<block className="Achievement">
		<bind name="class" value="_isInItemList ? '$ItemListAchievementMargins' : '$None'"/>
		<block>
			<bind name="instance" value="'AchievementIcon'; {_id: id, _progressWidth: '50px', _amount: amount, _size: _iconSize ? _iconSize : '80px', _isDesaturated: (amount&gt;0 ? false : true), _isEarned:_isEarned, _showProgress: true}"/>
		</block>
	</block>
	<block className="EarnedAchievementsByPlayer">
		<style>
			<width value="100%"/>
		</style>
		<bind name="tooltip" value="'EarnedAchievementsByPlayerTooltip'; {_achievements: _achievements, _isSelfPlayer: _isSelfPlayer}"/>
		<block>
			<style>
				<width value="21px"/>
				<height value="21px"/>
				<position value="absolute"/>
				<marginLeft value="-2px"/>
				<marginTop value="-1px"/>
				<mouseChildren value="false"/>
				<mouseEnabled value="false"/>
				<backgroundStretchX value="true"/>
				<backgroundStretchY value="true"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:../achievements/icons/icon_achievement.png'"/>
		</block>
	</block>
	<block className="EarnedAchievementsByPlayerTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="300px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginBottom value="3px"/>
			</style>
			<block type="text">
				<styleClass value="$InfoBlockIndent"/>
				<style>
					<marginBottom value="7px"/>
				</style>
				<styleClass value="$TextDefaultBold"/>
				<bind name="class" value="'$FontColorWhite'"/>
				<bind name="text" value="_isSelfPlayer ? tr('IDS_YOUR_ACHIEVEMENTS') : tr('IDS_PLAYERS_ACHIEVEMENTS')"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="11px"/>
				</style>
				<bind name="repeat" value="_achievements; 'AchievementIconWithTitle'"/>
			</block>
		</block>
	</block>
	<block className="AchievementIcon">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'achievements'; _id; 'achievement'"/>
		<bind name="style" value="'alpha'; _isDesaturated ? 0.75 : 1"/>
		<bind name="name" value="'AchievementWithCount_'+(_isEarned ? 'Earned_':'') + achievement.name"/>
		<block>
			<bind name="tooltip" value="'AchievementTooltip'; {_id: _id, _progressWidth: _progressWidth}"/>
			<bind name="style" value="'width'; _size ? _size : '80px' "/>
			<bind name="style" value="'height'; _size ? _size : '80px' "/>
			<style>
				<marginRight value="0px"/>
				<marginTop value="0px"/>
				<backgroundStretchX value="true"/>
				<backgroundStretchY value="true"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:' + (_isDesaturated ? achievement.imageDesURL : achievement.imageURL)"/>
			<block type="text">
				<bind name="visible" value="_amount &gt; 1 &amp;&amp; (achievement.multiple)"/>
				<style>
					<textAlign value="right"/>
					<position value="absolute"/>
					<bottom value="-7px"/>
					<right value="-5px"/>
				</style>
				<bind name="class" value="_isSmall ? '$TextDefaultWhite' : '$TextAccentBold'"/>
				<bind name="class" value="'$Bold'"/>
				<bind name="class" value="'$FontColorWhite'"/>
				<bind name="text" value="'x'+_amount"/>
			</block>
		</block>
		<block>
			<bind name="tooltip" value="'SimpleTooltip';{tooltipText: tr('IDS_CURRENT_PROGRESS') + tr('IDS_COLON') + ' ' + format(achievement.condition.currentProgress, 0) + '/' + format(achievement.condition.max, 0)}"/>
			<bind name="visible" value="(achievement.condition.currentProgress &gt; 0) &amp;&amp; (achievement.condition.max &gt; 0) &amp;&amp; (_showProgress == true)"/>
			<styleClass value="$MiddleAligned"/>
			<bind name="style" value="'width'; _progressWidth ? _progressWidth : '30px' "/>
			<style>
				<marginTop value="3px"/>
			</style>
			<block className="indicator_progress_bar" type="native">
				<style>
					<width value="100%"/>
				</style>
				<bind name="value" value="(achievement.condition.progress)*10"/>
			</block>
		</block>
	</block>
	<block className="AchievementTooltip">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'achievements'; _id; 'achievement'"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="340px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="12px"/>
				<marginBottom value="0px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<marginLeft value="12px"/>
						<marginBottom value="12px"/>
					</style>
					<bind name="instance" value="'AchievementIcon'; {_id: _id, _amount: _amount, _progressWidth: _progressWidth}"/>
				</block>
				<block>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<style>
						<marginLeft value="10px"/>
						<marginTop value="-1px"/>
					</style>
					<block type="text">
						<styleClass value="$TextHeaderWhiteBold"/>
						<style>
							<width value="100%"/>
							<maxWidth value="222"/>
							<textAlign value="left"/>
						</style>
						<bind name="class" value="(achievement.amount &gt; 0) 	? '$FontColorGolden' 
															: '$FontColorWhite'"/>
						<bind name="text" value="achievement.nameIDS"/>
					</block>
					<block type="text">
						<styleClass value="$TextHeaderBigDefaultTech"/>
						<style>
							<marginTop value="-3px"/>
							<maxWidth value="220"/>
							<textAlign value="left"/>
						</style>
						<bind name="text" value="achievement.subtypeIDS"/>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="0px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="((_amount == null) &amp;&amp; (achievement.amount &gt; 0)) &amp;&amp; (achievement.multiple)"/>
				<style>
					<width value="100%"/>
					<marginTop value="8px"/>
					<marginBottom value="8px"/>
				</style>
				<block type="text">
					<bind name="visible" value="(achievement.amount &gt; 1)"/>
					<styleClass value="$TextHeaderBigDefaultTech"/>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<style>
						<textAlign value="left"/>
					</style>
					<bind name="text" value="(tr('IDS_EARNED') + tr('IDS_COLON') + ' ' + achievement.amount)"/>
				</block>
				<block type="text">
					<styleClass value="$TextHeaderBigDefaultTech"/>
					<style>
						<marginLeft value="12px"/>
						<textAlign value="left"/>
					</style>
					<bind name="style" value="'marginBottom'; (achievement.achieveShip!=null) ? '1px' : '9px'"/>
					<bind name="text" value="((achievement.amount &gt; 1)	? (tr('IDS_LAST_TIME') +' '+ achievement.achieveTime)
														: (tr('IDS_EARNED') + tr('IDS_COLON') + ' ' + achievement.amount))"/>
				</block>
				<block>
					<bind name="visible" value="(achievement.achieveShip != 0)"/>
					<style>
						<width value="100%"/>
						<marginLeft value="12px"/>
					</style>
					<block type="text">
						<styleClass value="$TextHeaderBigDefaultTech"/>
						<styleClass value="$MiddleVAligned"/>
						<style>
							<textAlign value="left"/>
						</style>
						<bind name="text" value="tr('IDS_ON_SHIP')+' '"/>
					</block>
					<block>
						<style>
							<marginTop value="-1px"/>
						</style>
						<bind name="instance" value="'ShipTitleWithIconAndLevel'; {_shipID: achievement.achieveShip}"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block>
				<bind name="visible" value="((_amount == null) &amp;&amp; (achievement.amount &gt; 0)) &amp;&amp; (achievement.multiple)"/>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<style>
					<marginTop value="8px"/>
				</style>
				<block type="text">
					<styleClass value="$TextHeaderBigDefault"/>
					<style>
						<width value="100%"/>
						<textAlign value="left"/>
					</style>
					<bind name="text" value="achievement.condition.description"/>
				</block>
				<block>
					<bind name="visible" value="(achievement.condition.currentProgress &gt; 0) &amp;&amp; (achievement.condition.max &gt; 0)"/>
					<style>
						<marginTop value="18px"/>
						<width value="100%"/>
					</style>
					<block className="indicator_progress_bar" type="native">
						<style>
							<width value="100%"/>
						</style>
						<bind name="value" value="(achievement.condition.progress)*10"/>
					</block>
					<block type="text">
						<styleClass value="$MiddleAligned"/>
						<styleClass value="$TextHeaderBigDefaultTech"/>
						<style>
							<marginTop value="6px"/>
						</style>
						<bind name="class" value="'$FontColorBlueish'"/>
						<bind name="text" value="tr('IDS_CURRENT_PROGRESS') + tr('IDS_COLON') + ' ' + format(achievement.condition.currentProgress, 0) + '/' + format(achievement.condition.max, 0)"/>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="8px"/>
				</style>
				<block type="text">
					<styleClass value="$TextHeaderBigDefaultTech"/>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<bind name="style" value="'marginBottom'; achievement.hasReward ? '9px' : '12px'"/>
					<style>
						<textAlign value="left"/>
					</style>
					<bind name="text" value="achievement.multipleIDS"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="0px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="achievement.hasReward"/>
				<style>
					<width value="100%"/>
					<marginTop value="12px"/>
					<marginBottom value="12px"/>
				</style>
				<block className="icon_giftbox_small" type="native">
					<style>
						<marginLeft value="14px"/>
					</style>
				</block>
				<block>
					<styleClass value="$InfoBlockHorizontalIndentNoWidth"/>
					<style>
						<width value="258px"/>
						<marginTop value="-3px"/>
					</style>
					<block type="text">
						<styleClass value="$TextHeaderBigDefault"/>
						<style>
							<width value="100%"/>
							<textAlign value="left"/>
						</style>
						<bind name="text" value="achievement.rewardConditionIDS"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="AchievementIconWithTitle">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'achievements'; id; 'achievement'"/>
		<style>
			<width value="100%"/>
			<height value="44px"/>
		</style>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<width value="100%"/>
				<marginBottom value="9px"/>
				<marginLeft value="15px"/>
			</style>
			<block>
				<bind name="instance" value="'AchievementIcon'; {_id: id, _amount: amount , _size: '34px', _isSmall: true, _showProgress: _showProgress}"/>
			</block>
			<block type="text">
				<style>
					<marginLeft value="8px"/>
					<marginTop value="6px"/>
					<width value="100%"/>
				</style>
				<styleClass value="$TextDefaultBold"/>
				<bind name="class" value=" _class ? _class: '$FontColorGolden'"/>
				<bind name="text" value="achievement.nameIDS"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="AchievementIconWithTitleForFlags">
		<style>
			<width value="100%"/>
		</style>
		<bind name="tooltip" value="'AchievementTooltip'; {_id: $value}"/>
		<bind name="instance" value="'AchievementIconWithTitle'; {id: $value, _class: '$FontColorWhite'}"/>
	</block>
	<block className="AchievementIconWithTitleForRewards">
		<style>
			<width value="100%"/>
		</style>
		<bind name="instance" value="'AchievementIconWithTitle'; { id: details.achievementId, amount: amount }"/>
	</block>
	<block className="RewardItem">
		<style>
			<marginLeft value="5px"/>
			<marginRight value="5px"/>
			<marginBottom value="5px"/>
			<height value="80px"/>
		</style>
		<block>
			<style>
				<height value="100%"/>
			</style>
			<block>
				<style>
					<bottom value="0"/>
				</style>
				<bind name="style" value="'alpha'; isPRMP == true ? 1 : 0.6"/>
				<bind name="name" value="'reward_item_' + name"/>
				<bind name="child" value="type; { rewardItem: {	id: id,
												amount: amount,
												reasons: reasons,
												name: name,
												type: type,
												subtype: subtype,
												isPRMP: isPRMP,
												params: params }, _withTooltip: true }; {	Exterior: 'GiftboxRewardExterior',
																							Modernization: 'RewardModernizationItem',
																							Ability: 'RewardResourceItem',
																							Ship: 'RewardShip',
																							Resource: 'RewardResourceItem',
																							ResourceCoeff: 'RewardResourceItem',
																							Crew: 'RewardCrew',
																							Unit: 'UnsupportedReward',
																							Reward: 'UnsupportedReward',
																							Token: 'RewardTokenItem',
																							Exchange: 'RewardResourceItem',
																							Lootbox: 'RewardLootboxItem',
																							Collection: 'RewardResourceItem',
																							Unlock: 'RewardCollectionCrewItem',
																							DogTag: 'RewardDogTagItem',
																							SSETask: 'RewardSSEItem'
																							}"/>
			</block>
			<block className="icon_issued_small" type="native">
				<bind name="visible" value="isPRMP == false"/>
				<style>
					<position value="absolute"/>
					<top value="43%"/>
					<left value="33%"/>
					<hitTest value="false"/>
				</style>
				<bind name="rotation" value="(type == 'Ship' || type == 'Exterior' || type == 'Collection')	? -4
																							: (type == 'Resource' || type == 'ResourceCoeff')	? -2
																																				: 0"/>
				<bind name="scaleX" value="(type == 'Ship')	? 1.3
											: (type == 'Resource' || type == 'ResourceCoeff' || type == 'Collection')	? 1.05
																														: 0.85"/>
				<bind name="scaleY" value="(type == 'Ship')	? 1.3
											: (type == 'Resource' || type == 'ResourceCoeff' || type == 'Collection')	? 1.05
																														: 0.85"/>
				<innerBind elementName="item.item" name="text" value="'IDS_ISSUED_STAMP'"/>
				<bind name="gotoAndStop!" value="'issued'"/>
			</block>
		</block>
	</block>
	<block className="RewardSSEItem">
		<bind name="firstEntityDH" value="'dockStateEntity'; CC.dockState"/>
		<bind name="watchDH" value="'dockStateName'; ['dockStateEntity.dockState.evUpdate']; dockStateEntity.dockState.stateName"/>
		<bind name="var" value="{isClicked: false}"/>
		<bind name="catch" value="'click'; {isClicked: (dockStateName == 'barge' ? true : false)}"/>
		<bind name="action" value="'click'; (dockStateName == 'barge' ? 'moveFromBarge' : 'moveFromDock')"/>
		<bind name="request" value="'removedFromStage'; (isClicked ? 'buttonQuestEnter' : null); { type: 'privateTasksAndChallenges', sseId: rewardItem.name }"/>
		<bind name="request" value="'click'; ((dockStateName == 'dock' &amp;&amp; !(isClicked)) ? 'buttonQuestEnter' : null); { type: 'privateTasksAndChallenges', sseId: rewardItem.name }"/>
		<bind name="tooltip" value="'SSETaskTooltip'; { _id: rewardItem.name, _isDone: false, _isPrivate: true, _subtype: rewardItem.subtype }; 0"/>
		<block className="icon_sse" type="native">
			<style>
				<width value="70px"/>
				<height value="54px"/>
			</style>
			<bind name="gotoAndStop!" value="'personalTasksBonus'"/>
		</block>
	</block>
	<block className="GiftboxRewardExterior">
		<bind name="primaryEntityDH" value="'exteriorEntity'; CC.exteriorConfig; rewardItem.id"/>
		<bind name="watchDH" value="'exteriorConfig'; []; exteriorEntity.exteriorConfig"/>
		<bind name="feature" value="14; 'click'"/>
		<bind name="watch" value="'isExteriorFeatureNotAvailable'; feature_14 == 'locked'"/>
		<bind name="watch" value="'_isPermoflage'; exteriorConfig.type == ExteriorTypes.CAMOUFLAGE &amp;&amp; exteriorConfig.isPermanent"/>
		<bind name="tooltip" value="'ExteriorRewardTooltip'; { rewardItem: rewardItem}"/>
		<bind name="action" value="'click'; (isExteriorFeatureNotAvailable || rewardItem.isPRMP || _isPermoflage) 	? ''
																										: 'goToReward';  { type: rewardItem.type, subtype: rewardItem.subtype }"/>
		<block>
			<style>
				<marginTop value="9px"/>
				<marginRight value="8px"/>
				<marginLeft value="8px"/>
			</style>
			<bind name="instance" value="'ExteriorIconWithAmount'; {	_exteriorId: rewardItem.id,
													_amount: exteriorConfig.type == ExteriorTypes.ENSIGN ? 0 : rewardItem.amount, 
													_needPNG: true,
													} "/>
		</block>
	</block>
	<block className="ExteriorRewardTooltip">
		<bind name="primaryEntityDH" value="'exteriorEntity'; CC.exteriorConfig; rewardItem.id"/>
		<bind name="watchDH" value="'exteriorConfig'; []; exteriorEntity.exteriorConfig"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; rewardItem.params.shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="watchDH" value="'attributes'; ['exteriorEntity.attributes.evChanged']; exteriorEntity.attributes"/>
		<bind name="watch" value="'_isPermoflage'; exteriorConfig.type == ExteriorTypes.CAMOUFLAGE &amp;&amp; exteriorConfig.isPermanent"/>
		<bind name="watchDH" value="'count'; ['exteriorEntity.countComponent.evUpdate']; exteriorEntity.countComponent.value"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="300px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<marginLeft value="12px"/>
					<marginBottom value="12px"/>
					<marginTop value="12px"/>
				</style>
				<block>
					<bind name="instance" value="'ExteriorIconWithAmount'; { _exteriorId: rewardItem.id,
															_amount: exteriorConfig.type == ExteriorTypes.ENSIGN ? 0 : rewardItem.amount,
															_isDesaturated: false,
															_needPNG: true,
															}"/>
				</block>
				<block>
					<style>
						<marginTop value="3px"/>
						<marginLeft value="9px"/>
					</style>
					<block type="text">
						<styleClass value="$TextHeaderBold"/>
						<bind name="class" value="'$FontColorGolden'"/>
						<bind name="style" value="'maxWidth'; (exteriorConfig.type == ExteriorTypes.FLAGS) ? '208' : '190'"/>
						<style>
							<marginBottom value="5px"/>
						</style>
						<bind name="text" value="rewardItem.params.shipId != null	? subst('IDS_EXTERIOR_NAME_WITH_SHIP', [], {exteriorName: tr('IDS_' + toUpperCase(exteriorConfig.name)), shipName: tr(shipInfo.nameIDS + '_FULL')})
																	: tr('IDS_' + toUpperCase(exteriorConfig.name))})"/>
					</block>
					<block type="text">
						<style>
							<marginTop value="-9px"/>
						</style>
						<bind name="style" value="'maxWidth'; (exteriorConfig.type == ExteriorTypes.FLAGS) ? '208' : '190'"/>
						<styleClass value="$TextDefault"/>
						<bind name="text" value="'IDS_' + toUpperCase(exteriorConfig.name) + '_DESCRIPTION'"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="(rewardItem.isPRMP != true) &amp;&amp; !(_isPermoflage)"/>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<style>
						<marginLeft value="12px"/>
						<marginBottom value="9px"/>
						<marginTop value="9px"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="text" value="tr('IDS_EARNED')+ tr('IDS_COLON') + ' '+ rewardItem.amount + '  ' + tr('IDS_IN_STOCK') + tr('IDS_COLON') + ' ' + count"/>
				</block>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="((attributes.positive.length + attributes.negative.length + attributes.neutral.length) &gt; 0)"/>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<styleClass value="$PxHorizontalCorrection"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<paddingTop value="16px"/>
						<paddingLeft value="12px"/>
						<paddingRight value="12px"/>
					</style>
					<bind name="instance" value="'ParamsModifierList'; { _attributesPositive: attributes.positive,
														_attributesNegative: attributes.negative,
														_attributesNeutral:	attributes.neutral}"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<bottom value="-1px"/>
						<position value="absolute"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="(rewardItem.isPRMP != true)"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="instance" value="'RewardReasonsList'; {_rewardReasons: rewardItem.reasons }"/>
				</block>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<bind name="feature" value="14; ''"/>
			<bind name="watch" value="'isFeatureInRewardAvailable'; feature_14 != 'locked'"/>
			<block>
				<bind name="visible" value="(rewardItem.isPRMP != true)"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<bind name="visible" value="isFeatureInRewardAvailable &amp;&amp; !(_isPermoflage)"/>
					<style>
						<width value="100%"/>
					</style>
					<block>
						<styleClass value="$InfoBlockHorizontalIndent"/>
						<style>
							<width value="100%"/>
							<marginTop value="12px"/>
							<marginBottom value="5px"/>
						</style>
						<bind name="instance" value="'MouseInstruction'; {_type: 'left', _instructionText: 'IDS_HINT_LEFT_CLICK_TO_OPEN_EXTERIOR_CONFIGURATION', _maxWidth: 250}"/>
					</block>
				</block>
				<block>
					<bind name="visible" value="!(isFeatureInRewardAvailable)"/>
					<styleClass value="$InfoBlockIndent"/>
					<bind name="instance" value="'StatusLineWithIcon'; { _text: 'IDS_SIGNALS_IS_NOT_AVAILABLE_NOW', _maxWidth: 270}"/>
				</block>
			</block>
		</block>
	</block>
	<block className="RewardReasonsList">
		<styleClass value="$InfoBlockHorizontalIndent"/>
		<style>
			<marginTop value="9px"/>
			<marginBottom value="2px"/>
		</style>
		<block type="text">
			<styleClass value="$TextDefaultTech"/>
			<bind name="text" value=" _rewardUnlocked ? 'IDS_REWARD_UNLOCK_REASON' : 'IDS_REWARD_REASON'"/>
		</block>
		<block>
			<style>
				<marginLeft value="-6px"/>
				<marginTop value="6px"/>
				<width value="100%"/>
			</style>
			<bind name="repeat" value="_rewardReasons; 'RewardReasonListItem'"/>
		</block>
	</block>
	<block className="RewardReasonListItem">
		<style>
			<width value="100%"/>
			<marginBottom value="5px"/>
		</style>
		<bind name="child" value="type; { amount: amount, details: details}; 'AchievementIconWithTitleForRewards'; 'RankIconWithTitleForRewards'; 'RankIconWithTitleForRewards';
															'QuestIconWithTitleForRewards'; 'AccountLevelIconWithTitleForRewards'; MissionIconWithTitleForRewards;
															'CampaignTaskWithTitleForRewards'; 'PVESeasonIconWithTitleForRewards'; 'RewardCollectionCrewReason'; 'RewardUnnownReason'"/>
	</block>
	<block className="RewardUnnownReason"/>
	<block className="AccountLevelIconWithTitleForRewards">
		<style>
			<flow value="horizontal"/>
			<width value="100%"/>
			<marginLeft value="9px"/>
			<marginTop value="2"/>
			<marginBottom value="4"/>
		</style>
		<block type="text">
			<styleClass value="$TextDefault17NM"/>
			<bind name="text" value="subst('IDS_REASON_GIFTBOX_BY_BATTLES', [], {battles: details.battles}, details.battles)"/>
		</block>
	</block>
	<block className="MissionIconWithTitleForRewards">
		<style>
			<flow value="horizontal"/>
			<width value="100%"/>
			<height value="44px"/>
			<marginLeft value="6px"/>
		</style>
		<block type="text">
			<styleClass value="$TextHeaderWhiteBold"/>
			<bind name="text" value="details.level"/>
		</block>
		<block type="text">
			<styleClass value="$TextDefaultBold"/>
			<style>
				<maxWidth value="220"/>
				<marginLeft value="10px"/>
				<leading value="-2"/>
			</style>
			<bind name="text" value="details.ids"/>
		</block>
	</block>
	<block className="CampaignTaskWithTitleForRewards">
		<style>
			<flow value="horizontal"/>
			<width value="100%"/>
			<height value="60px"/>
		</style>
		<block>
			<style>
				<width value="60px"/>
				<height value="60px"/>
				<backgroundSize value="cover"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:../campaigns/missions_pin/' + (details.campaignName) + '_pin.png'"/>
			<block type="text">
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$TextHeaderWhiteBold"/>
				<bind name="text" value="details.missionNumber"/>
			</block>
		</block>
		<block type="text">
			<style>
				<maxWidth value="220"/>
				<marginLeft value="10px"/>
			</style>
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextDefaultBold"/>
			<bind name="text" value="(tr('IDS_CAMPAIGN_TASK') + ' ' + details.taskNumber)"/>
		</block>
	</block>
	<block className="PVESeasonIconWithTitleForRewards">
		<style>
			<flow value="horizontal"/>
			<width value="100%"/>
			<height value="44px"/>
			<marginLeft value="6px"/>
		</style>
		<block type="text">
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextHeaderWhiteBold"/>
			<bind name="text" value="details.seasonId"/>
		</block>
		<block type="text">
			<styleClass value="$TextHeaderWhiteBold"/>
			<bind name="text" value="details.difficulty"/>
		</block>
		<block type="text">
			<styleClass value="$TextDefaultBold"/>
			<style>
				<maxWidth value="220"/>
				<leading value="-2"/>
			</style>
			<bind name="text" value="details.ids"/>
		</block>
	</block>
	<block className="RankIconWithTitleForRewards">
		<style>
			<flow value="horizontal"/>
			<width value="100%"/>
			<height value="44px"/>
			<marginLeft value="5px"/>
		</style>
		<block>
			<style>
				<marginTop value="-7px"/>
			</style>
			<bind name="scaleX" value="0.78"/>
			<bind name="scaleY" value="0.78"/>
			<bind name="instance" value="'PlayerRankIcon'; { _rankId: details.rank, _medium: true }"/>
		</block>
		<block type="text">
			<style>
				<marginLeft value="-17px"/>
				<maxWidth value="200"/>
			</style>
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextDefaultBold"/>
			<bind name="class" value=" _class ? _class: '$FontColorGolden'"/>
			<bind name="text" value="details.ids"/>
		</block>
	</block>
	<block className="QuestIconWithTitleForRewards">
		<style>
			<flow value="horizontal"/>
			<width value="100%"/>
			<height value="44px"/>
			<marginLeft value="15px"/>
		</style>
		<block className="icon_sse" type="native">
			<styleClass value="$MiddleVAligned"/>
			<style>
				<width value="34px"/>
				<height value="34px"/>
			</style>
			<bind name="gotoAndStop!" value="details.type"/>
		</block>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<style>
				<marginLeft value="8px"/>
				<width value="100%"/>
			</style>
			<styleClass value="$TextDefaultBold"/>
			<bind name="class" value="'$FontColorTurquoise'"/>
			<bind name="text" value="details.titleText"/>
			<bind name="name" value="'reason_' + details.type"/>
		</block>
	</block>
	<block className="RewardContainerTooltipItem">
		<style>
			<width value="100%"/>
			<marginBottom value="14px"/>
		</style>
		<bind name="style" value="'marginTop'; (type == 'Ship' ? '10px' : '4px')"/>
		<bind name="name" value="'reward_current_item_' + name"/>
		<bind name="child" value="type; { rewardItem: {	id: id,
										amount: amount,
										reasons: reasons,
										name: name,
										clientName: clientName,
										type: type,
										subtype: subtype,
										isPRMP: true,
										params: params}, _withTooltip: withTooltip }; {	Exterior: 'RewardContainerTooltipItemExterior',
																						Modernization: 'RewardContainerTooltipItemModenizationOrAbility',
																						Ability: 'RewardContainerTooltipItemModenizationOrAbility',
																						Ship: 'RewardShip',
																						Resource: 'RewardContainerTooltipItemWithSpecialIcon',
																						ResourceCoeff: 'RewardContainerTooltipItemWithSpecialIcon',
																						Crew: 'RewardContainerTooltipItemCrew',
																						Unit: 'UnsupportedReward',
																						Reward: 'UnsupportedReward',
																						Token: 'TokenReward',
																						Exchange: 'RewardPersonalExchangeRatesTooltip',
																						Lootbox: 'LootboxReward',
																						Collection: 'RewardCollectionCardItemTooltip',
																						Unlock: 'RewardCollectionCrewItemTooltip',
																						DogTag: 'RewardDogTagTooltipItem',
																						SSETask: 'RewardSseTooltipItem'
																						}"/>
	</block>
	<block className="UnsupportedReward">
		<block>
			<block type="text">
				<styleClass value="$TextHeaderBold"/>
				<bind name="class" value="'$FontColorUnready'"/>
				<style>
					<marginBottom value="5px"/>
				</style>
				<bind name="text" value="'REWARD: '+ rewardItem.type+'- IS NOT SUPPORTED'"/>
			</block>
		</block>
	</block>
	<block className="TokenReward">
		<style>
			<flow value="horizontal"/>
		</style>
		<bind name="var" value="{title: 'IDS_' + toUpperCase(rewardItem.name) + '_TOKEN'}"/>
		<bind name="var" value="{description: ''}"/>
		<block>
			<style>
				<width value="80px"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'RewardTokenItem'; {rewardItem: rewardItem, _withTooltip: _withTooltip}"/>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<bind name="instance" value="'RewardTooltipItemText'; {_title:title, _description: description, _fontHeaderColorClass: '$FontColorGolden'}"/>
		</block>
	</block>
	<block className="LootboxReward">
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<style>
				<width value="80px"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<bind name="tooltip" value="'RewardResourcesTooltip'; _withTooltip ? {rewardItem: rewardItem} : null"/>
				<bind name="watch" value="'backgroundURL'; 	'../reward_icons/icon_reward_lootbox_'+rewardItem.subtype+'.png'"/>
				<bind name="instance" value="'IconWithAmount'; {	_width: '80px', 
												_height: '80px',
												_rewardItem: rewardItem, 
												_iconPath: backgroundURL, 
												_amount: rewardItem.amount}"/>
			</block>
		</block>
		<bind name="watch" value="'title'; 	'IDS_REWARD_LOOTBOX_'+toUpperCase(rewardItem.subtype)+'_TITLE'"/>
		<bind name="var" value="{description: ''}"/>
		<bind name="feature" value="21; ''"/>
		<bind name="watch" value="'warning'; (feature_21 == 'locked') ? 'IDS_REWARD_WARNING' : ''"/>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<bind name="instance" value="'RewardTooltipItemText'; {_title:title, _description: description, _warning: warning}"/>
		</block>
	</block>
	<block className="RewardContainerTooltipItemCrew">
		<style>
			<width value="143px"/>
			<height value="80px"/>
		</style>
		<bind name="instance" value="'RewardCrewImage'; { _crew: rewardItem.params.item, _shipWithoutCrew: true }"/>
	</block>
	<block className="RewardCrewImage">
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; _crew.shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="watchDH" value="'upgradableShipInfo'; ['shipEntity.upgradableShipInfo.evUpdate']; shipEntity.upgradableShipInfo"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; _shipID; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<style>
			<width value="143px"/>
			<height value="80px"/>
		</style>
		<block>
			<style>
				<position value="absolute"/>
				<alpha value="0.5"/>
				<width value="130px"/>
				<height value="80px"/>
				<hitTest value="false"/>
			</style>
			<bind name="instance" value="'NationFlagsBig'; {_width: '100%', _height: '100%', shipCountry: (_shipID != null) 	? _nationFlag 
																											: (shipInfo.flagName == null) ? _crew.nation 
																											: shipInfo.flagName }"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<bottom value="0px"/>
				<right value="0px"/>
				<width value="80px"/>
				<height value="80px"/>
			</style>
			<bind name="class" value="_crew.person ? '$CrewPortraitSizeSmall' : '$None'"/>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<backgroundSize value="cover"/>
				</style>
				<bind name="style" value="'backgroundImage'; (_shipID != null) 	? 'url:../reward_icons/icon_reward_Crew.png' 
																:  _crew.person ? 'url:' + _crew.baseUrl
																: 'url:../reward_icons/icon_reward_Crew.png'"/>
			</block>
			<block>
				<bind name="visible" value="_crew.person"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<backgroundSize value="cover"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:' + _crew.overlayUrl"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<top value="32px"/>
					<left value="-16px"/>
				</style>
				<bind name="instance" value="'CrewSkillPointBadge'; (_shipID != null) 	? { _skillPoints: _skillPoints } 
																		: _crew.level &gt; 0 ? { _skillPoints: _crew.level } 
																		: null"/>
			</block>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<bottom value="-6px"/>
				<left value="0px"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$Bold'"/>
				<style>
					<width value="130px"/>
				</style>
				<bind name="text" value=" (_shipID != null) 	? tr('IDS_CREW_FIRSTNAME_DEFAULT') + ' ' + tr('IDS_CREW_LASTNAME_DEFAULT')
											: tr(_crew.firstNameIDS) + ' ' + tr(_crew.lastNameIDS)"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="_shipWithoutCrew == true"/>
			<style>
				<height value="20px"/>
				<marginLeft value="3px"/>
			</style>
			<block className="icon_wreath" type="native">
				<styleClass value="$MiddleVAligned"/>
				<style>
					<position value="absolute"/>
					<left value="-5px"/>
				</style>
				<bind name="visible" value="upgradableShipInfo.isElite || shipInfo.isPremium || shipInfo.uiSpecial"/>
				<bind name="gotoAndStop!" value="(shipInfo.isPremium || shipInfo.uiSpecial) 	? 'premium' : 'elite'"/>
			</block>
			<block className="icon_ship" type="native">
				<styleClass value="$MiddleVAligned"/>
				<bind name="gotoAndStop!" value="shipInfo.isPremium || shipInfo.uiSpecial ? shipInfo.subtype + '_P' : shipInfo.subtype"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$Bold'"/>
				<style>
					<marginTop value="-2px"/>
					<marginLeft value="2px"/>
				</style>
				<bind name="class" value="shipInfo.isPremium || shipInfo.uiSpecial ? '$FontColorGold' : '$FontColorWhite'"/>
				<bind name="text" value="toUpperCase(tr(shipInfo.levelRome)) + ' '  + toUpperCase(tr(shipInfo.nameIDS))"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="RewardContainerTooltipItemWithSpecialIcon">
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<style>
				<width value="80px"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'RewardResourceItem'; {rewardItem: rewardItem, _withTooltip: _withTooltip}"/>
			</block>
		</block>
		<bind name="watch" value="'title'; ('IDS_REWARD_'+toUpperCase(rewardItem.subtype)+'_TITLE')"/>
		<bind name="var" value="{description: ''}"/>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<bind name="instance" value="'RewardTooltipItemText'; {_title:title, _description: description}"/>
		</block>
	</block>
	<block className="RewardContainerTooltipItemExterior">
		<bind name="primaryEntityDH" value="'exteriorEntity'; CC.exteriorConfig; rewardItem.id"/>
		<bind name="watchDH" value="'exteriorConfig'; []; exteriorEntity.exteriorConfig"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; rewardItem.params.shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="tooltip" value="'ExteriorRewardTooltip'; _withTooltip ? { rewardItem: rewardItem} : null"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<style>
				<width value="80px"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'IconWithAmount'; {	_width: (exteriorConfig.type == ExteriorTypes.FLAGS ? '60px' : '75px'), 
												_height: '60px', _amount: exteriorConfig.type == ExteriorTypes.ENSIGN ? 0 : rewardItem.amount, _iconPath: exteriorConfig.iconPath}"/>
			</block>
		</block>
		<bind name="watch" value="'title'; rewardItem.params.shipId != null	? subst('IDS_EXTERIOR_NAME_WITH_SHIP', [], {exteriorName: tr('IDS_' + toUpperCase(exteriorConfig.name)), shipName: tr(shipInfo.nameIDS + '_FULL')})
															: tr('IDS_' + toUpperCase(exteriorConfig.name))})"/>
		<bind name="watch" value="'description'; 'IDS_' + toUpperCase(exteriorConfig.name) + '_DESCRIPTION'"/>
		<bind name="instance" value="'RewardTooltipItemText'; {_title:title, _description: description}"/>
	</block>
	<block className="RewardContainerTooltipItemModenizationOrAbility">
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<style>
				<width value="80px"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'RewardResourceItem'; {rewardItem: rewardItem, _withTooltip: _withTooltip}"/>
			</block>
		</block>
		<bind name="watch" value="'title'; (rewardItem.type =='Modernization'	? 'IDS_TITLE_' + toUpperCase(rewardItem.params.item.title)
																: rewardItem.params.item.title)"/>
		<bind name="watch" value="'description'; rewardItem.type =='Modernization' ? ('IDS_MODERNIZATION_' + toUpperCase(rewardItem.params.item.type))
																	: 'IDS_TITLE_CONSUMABLES'"/>
		<bind name="instance" value="'RewardTooltipItemText'; {_title:title, _description: description}"/>
	</block>
	<block className="RewardCollectionCardItemTooltip">
		<style>
			<flow value="horizontal"/>
		</style>
		<bind name="watch" value="'title'; 					('IDS_' + (rewardItem.params.item.title))"/>
		<bind name="watch" value="'collectionName'; 			('IDS_' + (rewardItem.params.collectionName))"/>
		<bind name="watch" value="'collectionNameQuotes'; 	(tr(toUpperCase(collectionName) + '_QUOTES'))"/>
		<block>
			<bind name="instance" value="'RewardCollectionItem'; { _iconPath: rewardItem.params.item.iconPath, _isDuplicate: rewardItem.params.isDuplicate }"/>
		</block>
		<bind name="instance" value="'RewardTooltipItemText'; {_title:toUpperCase(tr(title)), _description: subst('IDS_COLLECTION_NAME', [], { _collectionName: collectionNameQuotes })}"/>
	</block>
	<block className="RewardTooltipItemText">
		<style>
			<marginLeft value="12px"/>
		</style>
		<bind name="style" value="'marginTop'; _description ? '-3px' : '0px'"/>
		<block type="text">
			<styleClass value="$TextHeaderBold"/>
			<bind name="class" value="_fontHeaderColorClass ? _fontHeaderColorClass : '$None'"/>
			<bind name="style" value="'marginBottom'; _description ? '5px' : '8px'"/>
			<style>
				<maxWidth value="220"/>
			</style>
			<bind name="text" value="_title"/>
		</block>
		<block type="text">
			<bind name="visible" value="_description"/>
			<style>
				<marginTop value="-9px"/>
				<maxWidth value="220"/>
			</style>
			<styleClass value="$TextDefault"/>
			<bind name="class" value="_fontDescritionColorClass ? _fontDescritionColorClass : '$None'"/>
			<bind name="text" value="_description"/>
		</block>
		<block type="text">
			<bind name="visible" value="_warning"/>
			<style>
				<marginTop value="-9px"/>
				<maxWidth value="220"/>
			</style>
			<styleClass value="$TextDefault"/>
			<bind name="class" value="'$FontColorUnready'"/>
			<bind name="text" value="_warning"/>
		</block>
	</block>
	<block className="IconWithAmount">
		<bind name="style" value="'width'; (_width ? _width : '60px')"/>
		<bind name="style" value="'height'; (_height ? _height : '60px')"/>
		<bind name="style" value="'backgroundImage'; 'url:' + _iconPath"/>
		<style>
			<backgroundStretchX value="true"/>
			<backgroundStretchY value="true"/>
		</style>
		<block>
			<bind name="visible" value="_amount &gt; 1"/>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="var" value="{fontSizeClass:	(_amount &lt; 5) ? '$None'  :
									(_amount &lt; 10) ? '$FontSize18' :
									(_amount &lt; 20) ? '$FontSizeHeader6' : '$FontSize20'}"/>
			<block type="text">
				<style>
					<right value="0px"/>
					<bottom value="-2px"/>
					<position value="absolute"/>
				</style>
				<styleClass value="$TextHeaderBigWhite"/>
				<bind name="class" value="'$Bold'"/>
				<bind name="class" value="fontSizeClass"/>
				<bind name="text" value="_amount"/>
			</block>
			<block type="text">
				<style>
					<right value="0px"/>
					<bottom value="-2px"/>
					<position value="absolute"/>
				</style>
				<styleClass value="$TextHeaderBigWhite"/>
				<bind name="class" value="'$Bold'"/>
				<bind name="class" value="fontSizeClass"/>
				<bind name="text" value="_amount"/>
			</block>
		</block>
	</block>
	<block className="RewardCollectionItem">
		<bind name="firstEntityDH" value="'dockStateEntity'; CC.dockState"/>
		<bind name="watchDH" value="'dockStateName'; ['dockStateEntity.dockState.evUpdate']; dockStateEntity.dockState.stateName"/>
		<bind name="var" value="{isClicked: false}"/>
		<bind name="catch" value="'click'; {isClicked: (dockStateName == 'barge' ? true : false)}"/>
		<bind name="action" value="'click';  (dockStateName == 'barge' ? 'moveFromBarge' : 'moveFromDock')"/>
		<bind name="action" value="'removedFromStage'; (isClicked ? 'goToReward' : null); { type: 'Lootbox', subtype: _rewardItem.params.collectionName,
																										subAlbum: _rewardItem.params.subAlbum }"/>
		<bind name="action" value="'click'; (dockStateName == 'dock' &amp;&amp; !(isClicked)) ? 'goToReward' : null; { type: 'Lootbox', subtype: _rewardItem.params.collectionName,
																								subAlbum: _rewardItem.params.subAlbum }"/>
		<block>
			<style>
				<width value="90px"/>
				<height value="90px"/>
				<backgroundSize value="cover"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:' + _iconPath"/>
		</block>
		<block>
			<bind name="visible" value="_amount &gt; 1"/>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="var" value="{fontSizeClass:	(_amount &lt; 5) ? '$None'  :
									(_amount &lt; 10) ? '$FontSize18' :
									(_amount &lt; 20) ? '$FontSizeHeader6' : '$FontSize20'}"/>
			<block type="text">
				<style>
					<right value="0px"/>
					<bottom value="-2px"/>
					<position value="absolute"/>
				</style>
				<styleClass value="$TextHeaderBigWhite"/>
				<bind name="class" value="'$Bold'"/>
				<bind name="class" value="fontSizeClass"/>
				<bind name="text" value="_amount"/>
			</block>
			<block type="text">
				<style>
					<right value="0px"/>
					<bottom value="-2px"/>
					<position value="absolute"/>
				</style>
				<styleClass value="$TextHeaderBigWhite"/>
				<bind name="class" value="'$Bold'"/>
				<bind name="class" value="fontSizeClass"/>
				<bind name="text" value="_amount"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="_isDuplicate == true"/>
			<style>
				<position value="absolute"/>
				<top value="50%"/>
				<left value="50%"/>
				<alpha value="0.9"/>
				<hitTest value="false"/>
			</style>
			<block className="icon_issued" type="native">
				<bind name="scaleX" value="0.6"/>
				<bind name="scaleY" value="0.6"/>
				<bind name="rotation" value="-3"/>
				<innerBind elementName="item.item" name="text" value="toUpperCase(tr('IDS_DUPLICATE_STAMP'))"/>
				<bind name="gotoAndStop!" value="'issued'"/>
			</block>
		</block>
	</block>
	<block className="RewardResourceItem">
		<bind name="tooltip" value="'RewardResourcesTooltip'; _withTooltip ? { rewardItem: rewardItem } : null"/>
		<bind name="child" value="rewardItem.subtype ? rewardItem.subtype : 'noItem'; {	_rewardItem: rewardItem,
																		_iconPath: rewardItem.params.item.iconPath,
																		_isDuplicate: rewardItem.params.isDuplicate,
																		_amount: rewardItem.amount	}; {	exp: 'RewardResources',
																											gold: 'RewardResources',
																											steel: 'RewardResources',
																											coal: 'RewardResources',
																											molybdenum: 'RewardResources',
																											brass: 'RewardResources',
																											saltpeter: 'RewardResources',
																											eventum_1: 'RewardResources',
																											eventum_2: 'RewardResources',
																											freexp: 'RewardResources',
																											credits: 'RewardResources',
																											elitexp: 'RewardResources',
																											accPoints: 'RewardResources',
																											crewPoints: 'RewardResources',
																											clanResource: 'RewardResources',
																											barCapacity: 'RewardResourceBarCapacity',
																											premium: 'RewardResourcePremium',
																											wows_premium: 'RewardResourceWOWSPremium',
																											slots: 'RewardResourceSlot',
																											expCoeff: 'RewardResourcesCoeff',
																											freexpCoeff: 'RewardResourcesCoeff',
																											creditsCoeff: 'RewardResourcesCoeff',
																											accPointsCoeff: 'RewardResourcesCoeff',
																											crewPointsCoeff: 'RewardResourcesCoeff',
																											Ability: 'IconWithAmount',
																											Modernization: 'IconWithAmount',
																											creditsGold: 'RewardPersonalExchangeRates',
																											xpFreeExp: 'RewardPersonalExchangeRates',
																											goldMoney: 'RewardPersonalExchangeRates',
																											CollectionCard: 'RewardCollectionItem',
																											CollectionAlbum: 'RewardCollectionItem',
																											noItem: 'EmptyItem'}"/>
		<bind name="action" value="'click'; rewardItem.isPRMP || !(rewardItem.type == 'Ability') ? '' : 'goToReward'; { type: rewardItem.type, subtype: rewardItem.subtype }"/>
	</block>
	<block className="RewardDogTagItem">
		<bind name="firstEntityDH" value="'dockStateEntity'; CC.dockState"/>
		<bind name="watchDH" value="'dockStateName'; ['dockStateEntity.dockState.evUpdate']; dockStateEntity.dockState.stateName"/>
		<bind name="var" value="{isClicked: false}"/>
		<bind name="catch" value="'click'; {isClicked: (dockStateName == 'barge' ? true : false)}"/>
		<bind name="action" value="'click';  (dockStateName == 'barge' ? 'moveFromBarge' : 'moveFromDock')"/>
		<bind name="request" value="'removedFromStage'; (isClicked ? 'modalDogTag' : null); {}"/>
		<bind name="request" value="'click'; (dockStateName == 'dock' &amp;&amp; !(isClicked)) ? 'modalDogTag' : null; {}"/>
		<bind name="tooltip" value="'DogTagComponentTooltip'; _isNoTooltip ? null : { _id: rewardItem.id, isNotSelf: true, isRewardTooltip: true }"/>
		<bind name="primaryEntityDH" value="'dogTagEntity'; CC.dogTagComponent; rewardItem.id"/>
		<bind name="watchDH" value="'iconFileName'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.iconPath"/>
		<bind name="watch" value="'iconPath'; '../dogTags/small/' + iconFileName"/>
		<block>
			<bind name="instance" value="'IconWithAmount'; {	_rewardItem: rewardItem,
											_iconPath: iconPath,
											_amount: rewardItem.amount,
											_width: '80px',
											_height: '80px'	}"/>
		</block>
		<block>
			<bind name="visible" value="rewardItem.params.isDuplicate == true"/>
			<style>
				<position value="absolute"/>
				<top value="50%"/>
				<left value="50%"/>
				<alpha value="0.9"/>
				<hitTest value="false"/>
			</style>
			<block className="icon_issued" type="native">
				<bind name="scaleX" value="0.6"/>
				<bind name="scaleY" value="0.6"/>
				<bind name="rotation" value="-3"/>
				<innerBind elementName="item.item" name="text" value="toUpperCase(tr('IDS_DUPLICATE_STAMP'))"/>
				<bind name="gotoAndStop!" value="'issued'"/>
			</block>
		</block>
	</block>
	<block className="RewardDogTagTooltipItem">
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<style>
				<width value="80px"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'RewardDogTagItem'; {rewardItem: rewardItem, _isNoTooltip: true}"/>
			</block>
		</block>
		<bind name="primaryEntityDH" value="'dogTagEntity'; CC.dogTagComponent; rewardItem.id"/>
		<bind name="watchDH" value="'gpName'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.gpName"/>
		<bind name="watchDH" value="'categoryId'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.categoryId"/>
		<bind name="watch" value="'title'; tr(toUpperCase('IDS_DOGTAG_' + gpName + '_NAME'))"/>
		<bind name="watch" value="'description'; tr(toUpperCase('IDS_DOGTAG_COMPONENT_TOOLTIP_CATEGORY_' + categoryId))"/>
		<bind name="instance" value="'RewardTooltipItemText'; {_title:title, _description: description}"/>
	</block>
	<block className="RewardModernizationItem">
		<bind name="tooltip" value="'RewardModernizationTooltip'; _withTooltip ? {rewardItem: rewardItem} : null"/>
		<bind name="instance" value="'IconWithAmount'; {	_rewardItem: rewardItem,
										_iconPath: rewardItem.params.item.iconPath,
										_amount: rewardItem.amount	}"/>
	</block>
	<block className="RewardTokenItem">
		<style>
			<width value="80px"/>
			<height value="80px"/>
			<backgroundSize value="cover"/>
		</style>
		<bind name="action" value="'click'; 'openChooseCampaignsWindow'; {}"/>
		<bind name="tooltip" value="'RewardResourcesTooltip'; _withTooltip ? {rewardItem: rewardItem} : null"/>
		<bind name="style" value="'backgroundImage'; ('url:../tokens/' + rewardItem.name + '.png')"/>
	</block>
	<block className="RewardLootboxItem">
		<bind name="tooltip" value="'RewardResourcesTooltip'; _withTooltip ? {rewardItem: rewardItem} : null"/>
		<bind name="watch" value="'backgroundURL'; 	'../reward_icons/icon_reward_lootbox_'+rewardItem.subtype+'.png'"/>
		<bind name="instance" value="'IconWithAmount'; {	_width: '80px',
										_height: '80px',
										_rewardItem: rewardItem, 
										_iconPath: backgroundURL, 
										_amount: rewardItem.amount}"/>
	</block>
	<block className="RewardShip">
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; rewardItem.id; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="tooltip" value="'ShipExtendedTooltip'; { shipId: rewardItem.id, _inRewards: true, _rewardReasons: rewardItem.reasons, _isPRMP: rewardItem.isPRMP}"/>
		<bind name="action" value="'click'; rewardItem.isPRMP ? '' : 'selectShipUpgrade' ; {shipId : rewardItem.id}"/>
		<bind name="watch" value="'isRentShip'; (rewardItem.params.rentDuration &gt; 0) || (rewardItem.params.rentUntil &gt; 0)"/>
		<block>
			<block>
				<style>
					<width value="143px"/>
					<height value="80px"/>
				</style>
				<block>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<alpha value="0.6"/>
						<hitTest value="false"/>
					</style>
					<bind name="instance" value="'NationFlagsBig'; {_width: '100%', _height: '100%', shipCountry: shipInfo.flagName}"/>
				</block>
				<block>
					<style>
						<width value="143px"/>
						<height value="84px"/>
						<backgroundStretchX value="true"/>
						<backgroundStretchY value="true"/>
					</style>
					<styleClass value="$MiddleAlignedAbsolutely"/>
					<styleClass value="$MiddleVAligned"/>
					<bind name="style" value="'backgroundImage'; 'url:' + shipInfo.pathPreview"/>
				</block>
				<block>
					<styleClass value="$Fullsize"/>
					<style>
						<marginLeft value="8px"/>
						<marginRight value="8px"/>
						<marginTop value="4px"/>
						<marginBottom value="4px"/>
					</style>
					<block>
						<style>
							<height value="20px"/>
						</style>
						<block className="icon_wreath" type="native">
							<styleClass value="$MiddleVAligned"/>
							<style>
								<position value="absolute"/>
								<left value="-5px"/>
							</style>
							<bind name="visible" value="upgradableShipInfo.isElite || shipInfo.isPremium || shipInfo.uiSpecial"/>
							<bind name="gotoAndStop!" value="(shipInfo.isPremium || shipInfo.uiSpecial) 	? 'premium' : 'elite'"/>
						</block>
						<block className="icon_ship" type="native">
							<styleClass value="$MiddleVAligned"/>
							<bind name="gotoAndStop!" value="shipInfo.isPremium || shipInfo.uiSpecial ? shipInfo.subtype + '_P' : shipInfo.subtype"/>
							<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: shipInfo.shipTypeIDS}; 0"/>
						</block>
						<block type="text">
							<styleClass value="$TextSecondaryBold"/>
							<bind name="class" value="shipInfo.isPremium || shipInfo.uiSpecial ? '$FontColorGold' : '$FontColorWhite'"/>
							<style>
								<marginTop value="-1px"/>
								<marginLeft value="3px"/>
								<marginRight value="3px"/>
							</style>
							<bind name="text" value="shipInfo.levelRome"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<bind name="visible" value="isRentShip"/>
						<style>
							<position value="absolute"/>
							<top value="0px"/>
							<right value="-6px"/>
						</style>
						<bind name="instance" value="'RentTimer'; isRentShip 	? (rewardItem.params.rentDuration &gt; 0)	? { _rentDuration: rewardItem.params.rentDuration, _shipGroup: shipEntity.ship.group, _forceShow: true }
																										: { _rentUntil: rewardItem.params.rentUntil, _shipGroup: shipEntity.ship.group, _forceShow: true }
																: null"/>
					</block>
					<block>
						<style>
							<position value="absolute"/>
							<bottom value="-10px"/>
							<right value="-6"/>
						</style>
						<block type="text">
							<styleClass value="$TextDefaultBold"/>
							<bind name="class" value="'$LetterSpacingSmall'"/>
							<bind name="class" value="shipInfo.isPremium || shipInfo.uiSpecial ? '$FontColorGold' : '$FontColorWhite'"/>
							<bind name="text" value="toUpperCase(tr(shipInfo.nameIDS))"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<style>
					<height value="80px"/>
				</style>
				<bind name="visible" value="rewardItem.params.crew != null"/>
				<block type="text">
					<style>
						<marginLeft value="2px"/>
						<marginRight value="2px"/>
					</style>
					<styleClass value="$TextAccentBoldAccountLevel2"/>
					<styleClass value="$MiddleVAligned"/>
					<text value="+"/>
				</block>
				<block>
					<bind name="instance" value="'RewardCrewImage'; {_crew : rewardItem.params.crew}"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="RewardResources">
		<style>
			<width value="80px"/>
			<height value="80px"/>
		</style>
		<bind name="style" value="'backgroundImage'; ('url:../reward_icons/icon_reward_' + _rewardItem.subtype + '.png')"/>
		<bind name="watch" value="'currency'; 	(_rewardItem.subtype == 'crewPoints')	?	'exp' :
		 						(_rewardItem.subtype == 'clanResource')	?	'clan_resource' :
		 																	_rewardItem.subtype"/>
		<block>
			<bind name="visible" value="_rewardItem.amount &gt; 0"/>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<style>
				<bottom value="-6"/>
			</style>
			<bind name="style" value="'bottom'; _rewardItem.amount &gt; 9999 ? -6 : -9"/>
			<block>
				<style>
					<marginLeft value="4px"/>
				</style>
				<bind name="instance" value="'PriceTag'; { priceInfo: { finalPrice: _rewardItem.amount, currency: currency}, _large: (_rewardItem.amount &gt; 9999 ? false : true),
																											_medium: (_rewardItem.amount &gt; 9999 ? true : false)}"/>
			</block>
		</block>
	</block>
	<block className="RewardResourceBarCapacity">
		<style>
			<width value="80px"/>
			<height value="80px"/>
		</style>
		<bind name="style" value="'backgroundImage'; ('url:../reward_icons/icon_reward_' + _rewardItem.subtype + '.png')"/>
		<block>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<style>
				<bottom value="-6"/>
			</style>
			<block type="text">
				<styleClass value="$TextHeader"/>
				<bind name="class" value="'$Bold'"/>
				<bind name="text" value="_rewardItem.amount"/>
			</block>
			<block type="text">
				<bind name="class" value="'$Bold'"/>
				<styleClass value="$TextHeader"/>
				<bind name="pluralText" value="'IDS_PL_PLACES'; _rewardItem.amount"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="RewardCrew">
		<style>
			<width value="143px"/>
			<height value="80px"/>
		</style>
		<bind name="tooltip" value="'CrewTooltip'; rewardItem.params.item.id ? { _crewId: rewardItem.params.item.id, _checkPenalty: false, _inRewards: true,
																_rewardReasons: rewardItem.reasons, _isPRMP: rewardItem.isPRMP}
															: null"/>
		<bind name="tooltip" value="'SimpleTooltip'; rewardItem.params.item.id ? null : {tooltipText: tr('IDS_SHIP_CREW_HINT')}; 0"/>
		<bind name="instance" value="'RewardCrewImage'; {_crew: rewardItem.params.item, _shipWithoutCrew: true}"/>
	</block>
	<block className="RewardResourceSlot">
		<style>
			<width value="80px"/>
			<height value="80px"/>
		</style>
		<bind name="style" value="'backgroundImage'; ('url:../reward_icons/icon_reward_' + _rewardItem.subtype + '.png')"/>
		<block>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<style>
				<bottom value="-6"/>
			</style>
			<block type="text">
				<styleClass value="$TextHeader"/>
				<bind name="class" value="'$FontColorGold'"/>
				<bind name="class" value="'$Bold'"/>
				<bind name="text" value="_rewardItem.amount"/>
			</block>
			<block type="text">
				<styleClass value="$TextHeader"/>
				<bind name="class" value="'$FontColorGold'"/>
				<bind name="class" value="'$Bold'"/>
				<bind name="pluralText" value="'IDS_PL_SLOTS'; _rewardItem.amount"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="RewardResourcePremium">
		<style>
			<width value="80px"/>
			<height value="80px"/>
		</style>
		<bind name="style" value="'backgroundImage'; ('url:../reward_icons/icon_reward_' + _rewardItem.subtype + '.png')"/>
		<block>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<style>
				<bottom value="-6"/>
			</style>
			<block type="text">
				<styleClass value="$TextHeaderBold"/>
				<bind name="class" value="'$FontColorGold'"/>
				<bind name="text" value="_rewardItem.params.text"/>
			</block>
		</block>
	</block>
	<block className="RewardResourceWOWSPremium">
		<style>
			<width value="80px"/>
			<height value="80px"/>
		</style>
		<bind name="style" value="'backgroundImage'; ('url:../reward_icons/icon_reward_' + _rewardItem.subtype + '.png')"/>
		<block>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<style>
				<bottom value="-6"/>
			</style>
			<block type="text">
				<styleClass value="$TextHeaderBold"/>
				<bind name="class" value="'$FontColorGold'"/>
				<bind name="text" value="_rewardItem.params.text"/>
			</block>
		</block>
	</block>
	<block className="RewardResourcesCoeff">
		<style>
			<width value="80px"/>
			<height value="80px"/>
		</style>
		<bind name="style" value="'backgroundImage'; ('url:../reward_icons/icon_reward_' + _rewardItem.subtype + '.png')"/>
		<block>
			<style>
				<position value="absolute"/>
				<bottom value="-7"/>
				<right value="-4"/>
			</style>
			<block className="icon_double_experience" type="native">
				<style>
					<marginTop value="5px"/>
				</style>
				<bind name="visible" value="_rewardItem.subtype == 'accPointsCoeff' || _rewardItem.subtype == 'crewPointsCoeff'"/>
			</block>
			<block type="text">
				<styleClass value="$TextLargeHeaderBold"/>
				<bind name="class" value="'$FontColorGolden'"/>
				<bind name="text" value="subst('%m',[_rewardItem.amount])"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="RewardPersonalExchangeRates">
		<style>
			<width value="80px"/>
			<height value="80px"/>
		</style>
		<bind name="style" value="'backgroundImage'; ('url:../reward_icons/icon_reward_' + _rewardItem.subtype + '.png')"/>
	</block>
	<block className="RewardPersonalExchangeRatesTooltip">
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<style>
				<width value="80px"/>
				<height value="80px"/>
			</style>
			<bind name="style" value="'backgroundImage'; ('url:../reward_icons/icon_reward_' + rewardItem.subtype + '.png')"/>
		</block>
		<block type="text">
			<style>
				<marginTop value="3px"/>
			</style>
			<styleClass value="$TextHeaderBold"/>
			<bind name="text" value="'IDS_PRMP_ITEM_' + toUpperCase(tr(rewardItem.subtype))"/>
		</block>
	</block>
	<block className="RewardResourcesTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="340px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginBottom value="9px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="6px"/>
					<marginBottom value="9px"/>
					<marginLeft value="16px"/>
					<marginRight value="12px"/>
				</style>
				<bind name="instance" value="'RewardContainerTooltipItem'; {	id: rewardItem.id,
															amount: rewardItem.amount,
															reasons: rewardItem.reasons,
															name: rewardItem.name,
															type: rewardItem.type,
															subtype: rewardItem.subtype,
															params: rewardItem.params}"/>
			</block>
			<block>
				<bind name="visible" value="(rewardItem.type == 'Ability' ||
							rewardItem.subtype == 'slots' ||
							rewardItem.subtype == 'barCapacity') &amp;&amp; (rewardItem.isPRMP != true)"/>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
				<block type="text">
					<style>
						<marginLeft value="12px"/>
						<marginBottom value="9px"/>
						<marginTop value="9px"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="text" value="tr('IDS_EARNED')+ tr('IDS_COLON') + ' '+ rewardItem.amount"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="(rewardItem.isPRMP != true)"/>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="instance" value="'RewardReasonsList'; {_rewardReasons: rewardItem.reasons }"/>
				</block>
			</block>
			<bind name="instance" value="'TooltipRewardInstructionAbility'; (rewardItem.type == 'Ability') &amp;&amp; (rewardItem.isPRMP != true) ? {_rewardItem: rewardItem} : null"/>
			<bind name="instance" value="'TooltipRewardInstructionCampaignToken'; (rewardItem.type == 'Token') &amp;&amp; (rewardItem.subtype == 'Campaign')? {_rewardItem: rewardItem} : null"/>
			<block>
				<bind name="visible" value="rewardItem.subtype == 'CollectionCard'"/>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
				<block>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<style>
						<marginTop value="12px"/>
						<marginBottom value="5px"/>
					</style>
					<bind name="instance" value="'MouseInstruction'; {_type: 'left', _instructionText: 'IDS_GO_TO_COLLECTION_SCREEN', _maxWidth: 300}"/>
				</block>
			</block>
		</block>
	</block>
	<block className="RewardModernizationTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="340px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginBottom value="9px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<height value="80px"/>
					<marginTop value="6px"/>
					<marginBottom value="9px"/>
					<marginLeft value="16px"/>
					<marginRight value="12px"/>
				</style>
				<bind name="instance" value="'RewardContainerTooltipItem'; {	id: rewardItem.id,
															amount: rewardItem.amount,
															reasons: rewardItem.reasons,
															name: rewardItem.name,
															type: rewardItem.type,
															subtype: rewardItem.subtype,
															params: rewardItem.params}"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block type="text">
				<styleClass value="$InfoBlockIndent"/>
				<styleClass value="$TextHeaderBigDefault"/>
				<bind name="text" value="'IDS_DESC_' + toUpperCase(rewardItem.params.item.description)"/>
			</block>
			<block>
				<bind name="visible" value="(rewardItem.isPRMP != true)"/>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
				<block type="text">
					<style>
						<marginLeft value="12px"/>
						<marginBottom value="9px"/>
						<marginTop value="9px"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="text" value="tr('IDS_EARNED')+ tr('IDS_COLON') + ' '+ rewardItem.amount"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="(rewardItem.isPRMP != true)"/>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="instance" value="'RewardReasonsList'; {_rewardReasons: rewardItem.reasons }"/>
				</block>
			</block>
			<bind name="instance" value="'TooltipRewardInstructionModernization'; (rewardItem.isPRMP != true) ? {_rewardItem: rewardItem} : null"/>
		</block>
	</block>
	<block className="TooltipRewardInstructionModernization">
		<style>
			<width value="100%"/>
		</style>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<bind name="feature" value="12; ''"/>
		<bind name="watch" value="'isModernizationsAvailable'; feature_12 != 'locked'"/>
		<block>
			<bind name="visible" value="isModernizationsAvailable"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<style>
					<width value="100%"/>
					<marginTop value="12px"/>
					<marginBottom value="5px"/>
				</style>
				<bind name="instance" value="'MouseInstruction'; {_type: 'left', _instructionText: 'IDS_HINT_LEFT_CLICK_TO_OPEN_MODERNIZATIONS_CONFIGURATION', _maxWidth: 290}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!isModernizationsAvailable"/>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'StatusLineWithIcon'; { _text: 'IDS_MODERNIZATIONS_IS_NOT_AVAILABLE_NOW', _maxWidth: 290}"/>
		</block>
	</block>
	<block className="TooltipRewardInstructionAbility">
		<style>
			<width value="100%"/>
		</style>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="isModernizationsAvailable"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<style>
					<width value="100%"/>
					<marginTop value="12px"/>
					<marginBottom value="5px"/>
				</style>
				<bind name="instance" value="'MouseInstruction'; {_type: 'left', _instructionText: 'IDS_HINT_LEFT_CLICK_TO_OPEN_ABILITIES_CONFIGURATION', _maxWidth: 290}"/>
			</block>
		</block>
	</block>
	<block className="TooltipRewardInstructionCampaignToken">
		<style>
			<width value="100%"/>
		</style>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockHorizontalIndent"/>
				<style>
					<width value="100%"/>
					<marginTop value="12px"/>
					<marginBottom value="5px"/>
				</style>
				<bind name="instance" value="'MouseInstruction'; {_type: 'left', _instructionText: 'IDS_GO_TO_CAMPAIGNS_MOUSE_INSTRUCTION', _maxWidth: 290}"/>
			</block>
		</block>
	</block>
	<block className="RewardCollectionCrewItem">
		<bind name="watch" value="'rewardUnlockIconPath'; rewardItem.params.shipClasses == ''	? ('url:../reward_icons/reward_unlocks/reward_' + toLowerCase(tr(rewardItem.name)) + '.png')
																				: ('url:../reward_icons/reward_unlocks/reward_' + toLowerCase(tr(rewardItem.name)) + '_' + toLowerCase(tr(rewardItem.params.shipClasses)) + '.png')"/>
		<style>
			<width value="60px"/>
			<height value="60px"/>
			<backgroundSize value="cover"/>
		</style>
		<bind name="tooltip" value="'RewardCollectionCrewTooltip'; _withTooltip ? { rewardItem: rewardItem } : null"/>
		<bind name="style" value="'backgroundImage'; rewardUnlockIconPath"/>
	</block>
	<block className="RewardCollectionCrewItemTooltip">
		<bind name="watch" value="'title'; tr('IDS_REWARD_' + toUpperCase(tr(rewardItem.name)) +
							(!rewardItem.params.nation == '' ? '_' + toUpperCase(tr(rewardItem.params.nation))
															: ''))"/>
		<bind name="watch" value="'description'; tr('IDS_REWARD_' + toUpperCase(tr(rewardItem.name)) +
								(!rewardItem.params.nation == '' 		? '_' + toUpperCase(tr(rewardItem.params.nation))
																		: '') +
								(rewardItem.params.shipClasses == '' 	? ''
																		: '_' + toUpperCase(tr(rewardItem.params.shipClasses)))
								+ '_DESCRIPTION')"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<style>
				<width value="80px"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'RewardCollectionCrewItem'; { rewardItem: rewardItem }"/>
			</block>
		</block>
		<block>
			<bind name="instance" value="'RewardTooltipItemText'; {_title:title, _description: description}"/>
		</block>
	</block>
	<block className="RewardCollectionCrewTooltip">
		<bind name="watch" value="'rewardNation'; 		rewardItem.params.nation"/>
		<bind name="watch" value="'rewardshipClasses'; 	rewardItem.params.shipClasses"/>
		<bind name="watch" value="'crewFirstNameIDS'; 	rewardItem.params.item.firstNameIDS"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="340px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="12px"/>
				<marginLeft value="12px"/>
			</style>
			<bind name="instance" value="'RewardContainerTooltipItem'; {	id: rewardItem.id,
														amount: rewardItem.amount,
														reasons: rewardItem.reasons,
														name: rewardItem.name,
														type: rewardItem.type,
														subtype: rewardItem.subtype,
														params: rewardItem.params }"/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="crewFirstNameIDS != ''"/>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'RewardCrewImage'; { _crew: rewardItem.params.item}"/>
		</block>
		<block>
			<bind name="visible" value="(rewardshipClasses.length &gt; 0) || (rewardNation != '')"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<bind name="instance" value="'RewardShipAndNationRestriction'; { _rewardshipClasses: rewardshipClasses, _rewardNation: rewardNation }"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="(rewardItem.isPRMP != true)"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'RewardReasonsList'; { _rewardReasons: rewardItem.reasons }"/>
			</block>
		</block>
	</block>
	<block className="RewardCollectionCrewReason">
		<style>
			<flow value="horizontal"/>
			<width value="100%"/>
			<height value="60px"/>
		</style>
		<block>
			<style>
				<width value="60px"/>
				<height value="48px"/>
				<marginTop value="10px"/>
				<alpha value="0.9"/>
				<backgroundSize value="cover"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:../collections/collection_icons/small/' + (details.name) + '.png'"/>
		</block>
		<block type="text">
			<style>
				<maxWidth value="200"/>
				<marginLeft value="10px"/>
			</style>
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$TextDefaultBold"/>
			<bind name="text" value="'IDS_' + toUpperCase(tr(details.name))"/>
		</block>
	</block>
	<block className="RewardSseTooltipItem">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 	'privateTasksAndChallenges'; 
																		'sseId'; 
																		'rewardItem.name';
																		'sseCollection'"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<style>
				<width value="80px"/>
				<height value="80px"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:../reward_icons/icon_reward_sse.png'"/>
		</block>
		<bind name="watch" value="'title'; sseCollection[0].titleText"/>
		<bind name="watch" value="'description'; rewardItem.subtype == SSETypes.CHALLENGE ? 'IDS_PERSONAL_CHALLENGE' : 'IDS_PERSONAL_BATTLE_TASK'"/>
		<bind name="instance" value="'RewardTooltipItemText'; {_title:title, _description: description, _fontDescriptionColorClass: '$FontColorGolden'}"/>
	</block>
	<block className="ModalWindowDogTag">
		<styleClass value="$Fullsize"/>
		<bind name="var" value="{ windowApperaLag: 0.3 }"/>
		<bind name="action" value="'addedToStage'; 'unmarkAllNew'; {}"/>
		<block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
			</style>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap5" type="native">
				<bind name="appear" value="'startShow'; 0.15; 0.2; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
				<bind name="appear" value="'startHide'; 0.15; 0.4; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<block>
			<bind name="appear" value="'startShow'; 0.15; 0.2; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<bind name="appear" value="'startHide'; 0.15; 0.4; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="contrast_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
			<block className="modal_panel" type="native">
				<style>
					<alpha value="0.7"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<paddingRight value="1280:20,1920:46aw"/>
				<paddingLeft value="1280:20,1920:46aw"/>
				<paddingBottom value="1280:20,1920:46aw"/>
				<paddingTop value="1280:20,1920:46aw"/>
			</style>
			<block>
				<bind name="appear" value="'addedToStage'; 0.15; windowApperaLag + 1 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
				<bind name="appear" value="'startHide'; 0.15; 1 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<position value="absolute"/>
						<top value="1px"/>
					</style>
					<bind name="instance" value="'BackButton'; {_text: 'IDS_RETURN_TO_DOCK', _request: 'closeModalSelectBattleType'}"/>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<right value="4px"/>
						<top value="9px"/>
					</style>
					<block className="ModalWindowCloseIcon">
						<style>
							<position value="absolute"/>
							<right value="0px"/>
							<top value="0px"/>
							<flow value="horizontal"/>
						</style>
						<bind name="name" value="'btn_cancel'"/>
						<bind name="input"/>
						<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLOSE'}; 0"/>
						<block>
							<styleClass value="$MiddleVAligned"/>
							<style>
								<backgroundColor value="0x01000000"/>
							</style>
							<bind name="dispatch" value="'mouseOver'; 'overEscapeButton'"/>
							<bind name="dispatch" value="'mouseOut'; 'upEscapeButton'"/>
							<bind name="dispatch" value="'mouseDown'; 'downEscapeButton'"/>
							<block>
								<bind name="soundSet" value="'default_button'"/>
								<bind name="catch" value="'overEscapeButton'; {EscapeButtonOverAlpha: 1}"/>
								<bind name="catch" value="'upEscapeButton'; {EscapeButtonOverAlpha: 0.8}"/>
								<bind name="catch" value="'downEscapeButton'; {EscapeButtonOverAlpha: 0.4}"/>
								<style>
									<alpha value="0.8"/>
								</style>
								<bind name="style" value="'alpha'; EscapeButtonOverAlpha"/>
								<bind name="instance" value="'HotkeyWithText'; {_text: 'ESC'}"/>
							</block>
							<block>
								<style>
									<marginTop value="3px"/>
								</style>
								<block className="button_close" type="native">
									<bind name="catch" value="'overEscapeButton'; {CrossButtonStates: 'over'}"/>
									<bind name="catch" value="'upEscapeButton'; {CrossButtonStates: 'up'}"/>
									<bind name="catch" value="'downEscapeButton'; {CrossButtonStates: 'down'}"/>
									<params>
										<param name="focusable" value="false"/>
									</params>
									<bind name="gotoAndPlay!" value="CrossButtonStates"/>
								</block>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block type="text">
						<styleClass value="$MiddleAligned"/>
						<styleClass value="$TextLargeHeaderBold"/>
						<bind name="text" value="toUpperCase(tr('IDS_MODAL_WINDOW_DOG_TAG_HEADER'))"/>
					</block>
					<block>
						<style>
							<width value="100%"/>
							<marginTop value="720:2,1080:4ah"/>
						</style>
						<block className="HorizontalDivider">
							<styleClass value="$PxHorizontalCorrection"/>
							<style>
								<width value="100%"/>
								<height value="3px"/>
							</style>
							<block className="divider_h" type="native">
								<styleClass value="$Fullsize"/>
							</block>
						</block>
					</block>
				</block>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'DogTagConstructorMain'; {}"/>
			</block>
		</block>
	</block>
	<block className="DogTagConstructorMain">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'accountLevelInfo'"/>
		<bind name="var" value="{dogInset: 0}"/>
		<bind name="catch" value="'changeDogInset'"/>
		<bind name="watch" value="'categoryEntityId'; dogInset == 0 ? dtcategories[0].id : dtcategories[1].id"/>
		<bind name="catch" value="'dogTagCategoryChanged'"/>
		<bind name="action" value="'dogTagCategoryChanged'; 'changeDogTagCategory'; {}"/>
		<bind name="action" value="'changeDogInset'; 'changeDogTagCategory'; {}"/>
		<bind name="entityDH" value="'currentCategoryEntity'; categoryEntityId"/>
		<bind name="collectionDH" value="CC.dogTagComponent; 'dtcomponents'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'dtcomponents'+'ROOT'; 'dtcomponents'; 				{'filter':($entity.dogTagComponent.enabled) &amp;&amp; (!$entity.dogTagComponent.unique) &amp;&amp; ($entity.dogTagComponent.categoryId == currentCategoryEntity.dogTagCategory.type), 'sort':['dogTagComponent.sortOrder']}; ['dogTagComponent.evUpdate']"/>
		<bind name="collectionDH" value="CC.dogTagCategory; 'dtcategories'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'dtcategories'+'ROOT'; 'dtcategories'; 				{'filter': ($entity.dogTagCategory.enabled == true), 'sort':['dogTagCategory.type'], 'sortOrder':[SortType.DESCENDING]}; []"/>
		<bind name="collectionDH" value="CC.dogTagComponentDoll; 'playercomponents'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'playercomponents'+'ROOT'; 'playercomponents'; 		{'filter': !$entity.dogTagComponent.unique, 'sort':['dogTagComponent.zindex']}; []"/>
		<bind name="collectionDH" value="CC.dogTagComponentDoll; 'selectedCategoryComponent'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'selectedCategoryComponent'+'ROOT'; 'selectedCategoryComponent'; {'filter': $entity.dogTagComponent.categoryId == currentCategoryEntity.dogTagCategory.type}; []"/>
		<bind name="collectionDH" value="CC.dogTagComponentDoll; 'unAvailableCategoryComponents'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'unAvailableCategoryComponents'+'ROOT'; 'unAvailableCategoryComponents'; {'filter': $entity.dogTagComponent.enabled == false}; []"/>
		<bind name="collectionDH" value="CC.dogTagComponent; 'dtcomponentsUnique'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'dtcomponentsUnique'+'ROOT'; 'dtcomponentsUnique'; 			{'filter': ($entity.dogTagComponent.unique != false) &amp;&amp; ((($entity.dogTagComponent.enabled &amp;&amp; $entity.dogTagComponent.hidden)) || !($entity.dogTagComponent.hidden)), 'sort':['dogTagComponent.sortOrder']}; ['dogTagComponent.evUpdate']"/>
		<bind name="collectionDH" value="CC.dogTagComponentDoll; 'playercomponentsUnique'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'playercomponentsUnique'+'ROOT'; 'playercomponentsUnique'; 	{'filter': ($entity.dogTagComponent.unique != false), 'sort':['dogTagComponent.zindex']}; []"/>
		<bind name="watch" value="'currentDogTagComponents'; dogInset == 0	? playercomponents.length &gt; 0			? playercomponents
																									: playercomponentsUnique :
											dogInset == 1	? playercomponentsUnique.length &gt; 0		? playercomponentsUnique
																									: playercomponents
																				: playercomponents"/>
		<style>
			<width value="1280:1184,1920:1502aw"/>
		</style>
		<bind name="var" value="{ windowApperaLag: 0.3 }"/>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowApperaLag + 1.5 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 1.5 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<style>
				<marginTop value="720:16,1080:64ah"/>
				<marginBottom value="720:12,1080:98ah"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<block className="tab_bar_bg" type="native">
				<style>
					<position value="absolute"/>
					<width value="100%"/>
					<marginLeft value="-2px"/>
					<marginRight value="-2px"/>
					<height value="29px"/>
				</style>
			</block>
			<block>
				<bind name="primaryEntityDH" value="'newPatchesEntity'; CC.newContent; SC.Common.CONTENT_CATEGORY.PATCHES"/>
				<bind name="watchDH" value="'newPatchesCounter'; ['newPatchesEntity.newContent.evCountChanged']; newPatchesEntity.newContent.count"/>
				<bind name="instance" value="'MainTabButton'; { 	_label: 'IDS_DOGTAG_PATCHES',
												_name: 'DockSubMenuItem' + 0,
												_paragraphText: 'IDS_DOGTAG_PATCHES_TOOLTIP',
												_isInBattle: false,
												_selected: (dogInset == 0),
												_dispatch: 'changeDogInset',
												_dispatchParams: {dogInset: 0},
												_newContentCounter: newPatchesCounter
												}"/>
			</block>
			<block className="divider_v" type="native">
				<style>
					<height value="25px"/>
					<marginTop value="2px"/>
				</style>
			</block>
			<block>
				<bind name="primaryEntityDH" value="'newEmblemsEntity'; CC.newContent; SC.Common.CONTENT_CATEGORY.EMBLEMS"/>
				<bind name="watchDH" value="'newEmblemsCounter'; ['newEmblemsEntity.newContent.evCountChanged']; newEmblemsEntity.newContent.count"/>
				<bind name="instance" value="'MainTabButton'; { 	_label: 'IDS_DOGTAG_EMBLEMS',
												_name: 'DockSubMenuItem' + 1,
												_paragraphText: 'IDS_DOGTAG_EMBLEMS_TOOLTIP',
												_isInBattle: false,
												_selected: (dogInset == 1),
												_dispatch: 'changeDogInset',
												_dispatchParams: {dogInset: 1},
												_newContentCounter: newEmblemsCounter
												}"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<block>
				<bind name="appear" value="'addedToStage'; 0.15; windowApperaLag + 3 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
				<bind name="appear" value="'startHide'; 0.15; 3 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
				<style>
					<marginTop value="32px"/>
				</style>
				<block>
					<style>
						<width value="512px"/>
						<height value="512px"/>
					</style>
					<bind name="objectUnderPoint" value="'flash.display::Shape'"/>
					<bind name="entityDH" value="'entityToView'; _entityToViewId"/>
					<bind name="watchDH" value="'id'; ['entityToView.dogTagComponent.evUpdate']; entityToView.dogTagComponent.id"/>
					<bind name="catch" value="'viewDogTagChanged'"/>
					<bind name="repeat" value="currentDogTagComponents; 'DogTagDollImageItemRenderer'; {_size: 512}"/>
					<bind name="tooltip" value="'DogTagComponentTooltip'; (!_entityToViewId || _entityToViewId == -1) ? null : {_id: id}"/>
				</block>
				<block>
					<bind name="visible" value="unAvailableCategoryComponents.length &gt; 0"/>
					<styleClass value="$MiddleAlignedAbsolutely"/>
					<style>
						<bottom value="-16px"/>
					</style>
					<block className="icon_module_state" type="native">
						<bind name="gotoAndStop!" value="'action'"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefault19NM"/>
						<styleClass value="$FontColorUnready"/>
						<style>
							<marginLeft value="6px"/>
							<maxWidth value="400"/>
							<marginTop value="1px"/>
						</style>
						<bind name="text" value="'IDS_DOGTAG_COMPONENT_NOT_AVAILABLE_TEXT'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block>
				<style>
					<width value="1280:64,1920:128aw"/>
				</style>
			</block>
			<block>
				<block>
					<bind name="appear" value="'addedToStage'; 0.15; windowApperaLag + 2 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
					<bind name="appear" value="'startHide'; 0.15; 2 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
					<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
					<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
					<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
					<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
					<styleClass value="$MiddleAligned"/>
					<style>
						<marginBottom value="15px"/>
					</style>
					<block>
						<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_TOOLTIP_PLAYER_STEREOTYPE_DOGTAG'}"/>
						<style>
							<width value="80px"/>
							<height value="80px"/>
						</style>
						<bind name="repeat" value="currentDogTagComponents; 'PlayerDogTagItem'; {_path: 'url:../dogTags/small/', _playerDbId : selfPlayerDbId, _clanTagPaths:'../fonts/small/', _size:80}"/>
					</block>
					<block>
						<style>
							<marginLeft value="8px"/>
						</style>
						<bind name="instance" value="'PlayerStereotype'; { _playerDbId: selfPlayerDbId, _abuseStatus: accountLevelInfo.abuseStatus }"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<bind name="appear" value="'addedToStage'; 0.15; windowApperaLag + 2 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
					<bind name="appear" value="'startHide'; 0.15; 2 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
					<styleClass value="$MiddleAligned"/>
					<block>
						<bind name="fade" value="(dogInset == 0); 0.15; {alpha:0, height:0}; {alpha:1, height:32}; {alpha:0, height:0}"/>
						<style>
							<height value="1px"/>
						</style>
						<block className="tab_bar_bg" type="native">
							<style>
								<position value="absolute"/>
								<width value="100%"/>
								<marginLeft value="-2px"/>
								<marginRight value="-2px"/>
								<height value="25px"/>
							</style>
						</block>
						<bind name="repeat" value="dogInset == 0 ? dtcategories : null; 'DogTagSubtypeTabButton'; {_curItemId: categoryEntityId, _lastcategory: dtcategories.length}"/>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
				<block>
					<bind name="appear" value="'addedToStage'; 0.15; windowApperaLag + 3 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
					<bind name="appear" value="'startHide'; 0.15; 3 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
					<styleClass value="$DefaultScrollBar"/>
					<bind name="stageSize"/>
					<bind name="watch" value="'dogTagColumns'; ((stageWidth/2.5) - (stageWidth/2.5)%92) / 92"/>
					<bind name="watch" value="'itemsWidth'; (dogTagColumns * 92 + 6)"/>
					<style>
						<marginTop value="16px"/>
						<height value="330px"/>
						<flow value="htile"/>
						<overflow value="scroll"/>
					</style>
					<bind name="style" value="'width'; itemsWidth + 'px'"/>
					<bind name="style" value="'align'; currentComponents.length &lt; dogTagColumns ? 'center' : 'left'"/>
					<bind name="watch" value="'currentComponents'; dogInset == 0 ? dtcomponents : dtcomponentsUnique"/>
					<bind name="repeat" value="currentComponents; 'DogTagComponentItemRenderer'; {_curItemId: selectedCategoryComponent[0].id}"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="DogTagSubtypeTabButton">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="watch" value="'tabButtonSelected'; (_curItemId == id)"/>
		<bind name="entityDH" value="'entity'; id"/>
		<bind name="watchDH" value="'nameIds'; ['entity.dogTagCategory.evUpdate']; entity.dogTagCategory.nameIds"/>
		<bind name="watchDH" value="'type'; ['entity.dogTagCategory.evUpdate']; entity.dogTagCategory.type"/>
		<bind name="watchDH" value="'description'; ['entity.dogTagCategory.evUpdate']; entity.dogTagCategory.description"/>
		<bind name="watch" value="'newContentType'; type == 0 ? SC.Common.CONTENT_CATEGORY.DOLLS : SC.Common.CONTENT_CATEGORY.SIGNS"/>
		<bind name="primaryEntityDH" value="'newMarkerEntity'; CC.newContent; newContentType"/>
		<bind name="watchDH" value="'newContentCounter'; ['newMarkerEntity.newContent.evCountChanged']; newMarkerEntity.newContent.count"/>
		<bind name="watch" value="'tabBarSoundSet'; 'main_tab_' + $index"/>
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: tr(toUpperCase('IDS_DOGTAG_PATCHES_DESCRIPTION_' + description))}"/>
		<style>
			<width value="145px"/>
			<height value="25px"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
				<height value="100%"/>
				<position value="absolute"/>
			</style>
			<block className="tab_bar_item_no_label" type="native">
				<bind name="name" value="'DogTagSubtypeTabButton_' + $index"/>
				<style>
					<height value="100%"/>
				</style>
				<bind name="style" value="'width'; (_lastcategory != ($index + 1)) ? '143px' : '145px'"/>
				<bind name="selected" value="tabButtonSelected"/>
				<bind name="dispatch" value="'buttonClick'; 'dogTagCategoryChanged'; {categoryEntityId: id}"/>
				<bind name="soundSet" value="tabBarSoundSet"/>
			</block>
			<block>
				<bind name="visible" value="(_lastcategory != ($index + 1))"/>
				<style>
					<hitTest value="false"/>
				</style>
				<block className="divider_v" type="native">
					<style>
						<height value="21px"/>
						<marginTop value="2px"/>
					</style>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<hitTest value="false"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefaultBoldNM"/>
				<style>
					<textAlign value="center"/>
					<maxWidth value="143"/>
					<multiline value="false"/>
					<marginTop value="7px"/>
				</style>
				<bind name="class" value="mouseDown 			? '$FontColorTabButtonDown' :
						rollOver 			? '$FontColorWhite' :
						tabButtonSelected	? '$FontColorDefaultButtonUp'
											: '$FontColorTabButtonUp'"/>
				<bind name="text" value="toUpperCase(tr('IDS_DOGTAG_PATCHES_' + nameIds))"/>
			</block>
			<block>
				<bind name="fade" value="(newContentCounter &gt; 0); 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
				<style>
					<position value="absolute"/>
					<top value="1px"/>
					<right value="-23px"/>
				</style>
				<bind name="instance" value="'MarkerNewCounter'; { _newContentCounter: newContentCounter }"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="DogTagDollImageItemRenderer">
		<style>
			<width value="100%"/>
			<height value="100%"/>
			<position value="absolute"/>
		</style>
		<bind name="entityDH" value="'entity'; id"/>
		<bind name="watchDH" value="'gpName'; ['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.gpName"/>
		<bind name="watchDH" value="'iconPath'; ['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.iconPath"/>
		<bind name="style" value="'backgroundImage'; 'url:../dogTags/big/' + iconPath"/>
		<bind name="mc" value="gpName + '_big_mask'; ['objUnderPoint', 'noObjUnderPoint']"/>
		<bind name="dispatch" value="'objUnderPoint'; 'viewDogTagChanged'; {_entityToViewId:id}"/>
		<bind name="dispatch" value="'noObjUnderPoint'; 'viewDogTagChanged'; {_entityToViewId:-1}"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<bind name="watchDH" value="'clanId'; ['selfPlayerEntity.clanman.evClanIdChanged']; selfPlayerEntity.clanman.clanId"/>
		<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; clanId"/>
		<bind name="watchDH" value="'clanTag'; ['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
		<bind name="watchDH" value="'clanTagOffsetX';['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.clanTagOffsetX"/>
		<bind name="watchDH" value="'clanTagOffsetY';['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.clanTagOffsetY"/>
		<bind name="watchDH" value="'clanTagFont';['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.clanTagFont"/>
		<bind name="watchDH" value="'clanTagVisible';['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.clanTagVisible"/>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="style" value="'top'; clanTagOffsetY + '%'"/>
			<bind name="style" value="'left'; clanTagOffsetX + '%'"/>
			<block>
				<style>
					<position value="absolute"/>
					<marginLeft value="-50%"/>
					<marginTop value="-50%"/>
				</style>
				<bind name="visible" value="clanTagVisible"/>
				<bind name="atlasText" value="clanTagVisible ?  (clanTag ? '[' + clanTag + ']' : '^') : '' ; '../fonts/big/' + clanTagFont; 0"/>
			</block>
		</block>
	</block>
	<block className="DogTagDollImageItemMiniRenderer">
		<bind name="entityDH" value="'entity'; id"/>
		<bind name="watchDH" value="'iconPath'; ['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.iconPath"/>
		<styleClass value="$FullsizeAbsolute"/>
		<bind name="style" value="'backgroundImage'; 'url:../dogTags/small/' + iconPath"/>
	</block>
	<block className="DogTagComponentItemRenderer">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="entityDH" value="'dogTagEntity'; id"/>
		<bind name="watchDH" value="'enabled'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.enabled"/>
		<bind name="watchDH" value="'iconPath'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.iconPath"/>
		<bind name="watchDH" value="'categoryId'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.categoryId"/>
		<bind name="watchDH" value="'gpName'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.gpName"/>
		<bind name="watchDH" value="'unique'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.unique"/>
		<style>
			<width value="80px"/>
			<height value="80px"/>
			<marginLeft value="6px"/>
			<marginRight value="6px"/>
			<marginBottom value="6px"/>
			<marginTop value="6px"/>
		</style>
		<bind name="tooltip" value="'DogTagComponentTooltip'; {_id: dogTagEntity.dogTagComponent.id, _canInstall: 'true'}"/>
		<bind name="action" value="'click'; 'setDogTagComponent'; {entityId: id}"/>
		<bind name="action" value="'rollOver'; 'makeSeen'; { entityId: dogTagEntity.id }"/>
		<bind name="soundSet" value="'exterior_item'"/>
		<bind name="name" value="'DogTagComponentItemRenderer_' + gpName"/>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="transition" value="mouseDown; 0.15; {alpha: 1}; {alpha: 0.5}"/>
			<block>
				<styleClass value="$Fullsize"/>
				<bind name="transition" value="rollOver || (_curItemId == id); 0.15; {alpha: 0}; {alpha: 1}"/>
				<bind name="style" value="'backgroundImage'; enabled ? 'url:../dogTags/DTSelected.png' : 'url:../dogTags/DTSelectedNA.png'"/>
			</block>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundStretchX value="true"/>
				<backgroundStretchY value="true"/>
			</style>
			<bind name="style" value="'colorMatrixFilter'; !enabled ? '0 -100 0 -20' : '0 0 0 0'"/>
			<bind name="style" value="'backgroundImage'; 'url:../dogTags/small/' + iconPath"/>
			<bind name="style" value="'alpha'; enabled ? '1.0' : '0.5'"/>
		</block>
		<block>
			<bind name="visible" value="dogTagEntity.dogTagComponentSaved != null"/>
			<bind name="transition" value="dogTagEntity.dogTagComponentSaved != null; 0.07; {alpha: 0, top: -5}; {alpha: 1, top: 2}; {alpha: 0, top: -5}; 1; 0.11"/>
			<style>
				<position value="absolute"/>
				<right value="1px"/>
				<top value="3px"/>
			</style>
			<block>
				<bind name="transition" value="dogTagEntity.dogTagComponentSaved != null; 0.04; {top: 0}; {top: -2}; {top: 0}; 1; 0.18"/>
				<block className="icon_module_state" type="native">
					<bind name="gotoAndStop!" value="'installed'"/>
				</block>
			</block>
		</block>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<bind name="watchDH" value="'clanId'; ['selfPlayerEntity.clanman.evClanIdChanged']; selfPlayerEntity.clanman.clanId"/>
		<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; clanId"/>
		<bind name="watchDH" value="'clanTag'; ['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
		<bind name="watchDH" value="'clanTagOffsetX';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagOffsetX"/>
		<bind name="watchDH" value="'clanTagOffsetY';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagOffsetY"/>
		<bind name="watchDH" value="'clanTagFont';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagFont"/>
		<bind name="watchDH" value="'clanTagVisible';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagVisible"/>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="style" value="'top'; clanTagOffsetY + '%'"/>
			<bind name="style" value="'left'; clanTagOffsetX + '%'"/>
			<block>
				<style>
					<position value="absolute"/>
					<marginLeft value="-50%"/>
					<marginTop value="-50%"/>
				</style>
				<bind name="visible" value="clanTagVisible"/>
				<bind name="atlasText" value="clanTagVisible ?  (clanTag ? '[' + clanTag + ']' : '^') : '' ; '../fonts/small/' + clanTagFont; 0"/>
			</block>
		</block>
		<block>
			<bind name="watch" value="'isnotSeenItem'; dogTagEntity.newItem != null"/>
			<bind name="fade" value="isnotSeenItem; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<style>
				<position value="absolute"/>
				<right value="1px"/>
				<top value="1px"/>
			</style>
			<bind name="instance" value="'MarkerNewAttention'; { }"/>
		</block>
	</block>
	<block className="DogTagConfirmationModalWindow">
		<styleClass value="$Fullsize"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
			</style>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap5" type="native">
				<bind name="appear" value="'startShow'; 0.15; 0.2; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
				<bind name="appear" value="'startHide'; 0.15; 0.4; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<block>
			<bind name="appear" value="'startShow'; 0.15; 0.2; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<bind name="appear" value="'startHide'; 0.15; 0.4; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="contrast_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
			<block className="modal_panel" type="native">
				<style>
					<alpha value="0.7"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$EyeLevelVAligned"/>
			<bind name="instance" value="'ConfirmationDogTagWindow'; {}"/>
		</block>
	</block>
	<block className="ConfirmationDogTagWindow">
		<bind name="var" value="{ windowApperaLag: 0.2 }"/>
		<style>
			<width value="512px"/>
		</style>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowApperaLag + 1 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 1 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="ModalWindowHeaderConfirmation">
				<style>
					<marginBottom value="3px"/>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<marginBottom value="9px"/>
						<width value="100%"/>
					</style>
					<block>
						<styleClass value="$MiddleAligned"/>
						<block className="icon_warning_grey_big" type="native">
							<style>
								<marginTop value="6px"/>
							</style>
						</block>
						<block type="text">
							<styleClass value="$TextLargeHeaderBold"/>
							<text value="IDS_CONFIRMATION"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block className="ModalWindowCloseIcon">
						<style>
							<position value="absolute"/>
							<right value="-70px"/>
							<top value="9px"/>
							<flow value="horizontal"/>
						</style>
						<bind name="name" value="'btn_cancel'"/>
						<bind name="input"/>
						<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLOSE'}; 0"/>
						<block>
							<styleClass value="$MiddleVAligned"/>
							<style>
								<backgroundColor value="0x01000000"/>
							</style>
							<bind name="dispatch" value="'mouseOver'; 'overEscapeButton'"/>
							<bind name="dispatch" value="'mouseOut'; 'upEscapeButton'"/>
							<bind name="dispatch" value="'mouseDown'; 'downEscapeButton'"/>
							<block>
								<bind name="soundSet" value="'default_button'"/>
								<bind name="catch" value="'overEscapeButton'; {EscapeButtonOverAlpha: 1}"/>
								<bind name="catch" value="'upEscapeButton'; {EscapeButtonOverAlpha: 0.8}"/>
								<bind name="catch" value="'downEscapeButton'; {EscapeButtonOverAlpha: 0.4}"/>
								<style>
									<alpha value="0.8"/>
								</style>
								<bind name="style" value="'alpha'; EscapeButtonOverAlpha"/>
								<bind name="instance" value="'HotkeyWithText'; {_text: 'ESC'}"/>
							</block>
							<block>
								<style>
									<marginTop value="3px"/>
								</style>
								<block className="button_close" type="native">
									<bind name="catch" value="'overEscapeButton'; {CrossButtonStates: 'over'}"/>
									<bind name="catch" value="'upEscapeButton'; {CrossButtonStates: 'up'}"/>
									<bind name="catch" value="'downEscapeButton'; {CrossButtonStates: 'down'}"/>
									<params>
										<param name="focusable" value="false"/>
									</params>
									<bind name="gotoAndPlay!" value="CrossButtonStates"/>
								</block>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowApperaLag + 2 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 2 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<block>
					<style>
						<width value="190px"/>
						<height value="190px"/>
					</style>
					<bind name="repeat" value="$root.slots; 'PlayerDogTagItemByPK'; {_path: 'url:../dogTags/medium/', _clanTagPaths: '../fonts/medium/', _size: 190}"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block type="text">
				<style>
					<marginTop value="16px"/>
					<marginBottom value="16px"/>
					<fontSize value="17px"/>
				</style>
				<styleClass value="$TextDefault"/>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$FontColorUnready"/>
				<bind name="text" value="'IDS_DOGTAG_SAVE_WRONG_ITEM_SELECTED'"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowApperaLag + 2 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 2 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="ModalWindowOkCancel">
				<styleClass value="$MiddleAligned"/>
				<style>
					<flow value="horizontal"/>
					<marginTop value="15px"/>
				</style>
				<block>
					<bind name="appear" value="'startShow'; 0.15; 0.60; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
					<bind name="appear" value="'startHide'; 0.15; 0.45; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
					<styleClass value="$InfoLineBoundaries"/>
					<style>
						<width value="129px"/>
						<marginRight value="20px"/>
					</style>
					<bind name="instance" value="'DefaultButton'; {_width: '129px', _name: 'btn_ok', _enabled: true, _isTransactionBtn: true,
													_containerName: ('Modal_window_action_Button' + 'IDS_YES'), _label:  'IDS_YES',
													_focusIndex: 1, _defaultFocused: true}"/>
				</block>
				<block>
					<style>
						<width value="129px"/>
					</style>
					<bind name="appear" value="'startShow'; 0.15; 0.45; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
					<bind name="appear" value="'startHide'; 0.15; 0.45; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
					<block className="DefaultButtonModal">
						<styleClass value="$InfoLineBoundaries"/>
						<style>
							<width value="100%"/>
						</style>
						<bind name="name" value="'Modal_window_action_Button' + 'IDS_NO'"/>
						<block className="button_default" type="native">
							<style>
								<width value="100%"/>
							</style>
							<bind name="label" value="'IDS_NO'"/>
							<params>
								<param name="name" value="btn_cancel"/>
							</params>
							<bind name="input"/>
							<bind name="focus" value="2;false"/>
						</block>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="PlayerDogTag">
		<bind name="primaryEntityDH" value="'playerEntity'; CC.accountSimple; _playerDbId"/>
		<bind name="watchDH" value="'dogTagList';['playerEntity.dogTagView.evComponentsChanged']; playerEntity.dogTagView.components"/>
		<bind name="name" value="'playerDogTag'"/>
		<bind name="watch" value="'size';	_size == 'big' 				? 512 : 
							_size == 'medium' 			? 190 : 
							_size == 'small' 			? 80 :
							_size == 'profile' 			? 60
														: 80"/>
		<bind name="style" value="'width'; size + 'px'"/>
		<bind name="style" value="'height'; size + 'px'"/>
		<bind name="repeat" value="dogTagList; 'PlayerDogTagItemByPK'; {_path: _size == 'small' 		? 'url:../dogTags/small/'  :
														  _size == 'profile' 	? 'url:../dogTags/small/' :
														  _size == 'medium' 	? 'url:../dogTags/medium/' :
														  _size == 'big' 		? 'url:../dogTags/big/'
														  						: 'url:../dogTags/big/'
														  						, _playerDbId : _playerDbId,
													_clanTagPaths: _size == 'small' 	? '../fonts/small/'  :
																   _size == 'profile' 	? '../fonts/small/' :
																   _size == 'medium' 	? '../fonts/medium/' :
																   _size == 'big' 		? '../fonts/big/'
																				: '../fonts/big/'
																				, _size: size}"/>
	</block>
	<block className="PlayerDogTagItem">
		<bind name="entityDH" value="'dogTagEntity'; id"/>
		<bind name="watchDH" value="'iconPath'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.iconPath"/>
		<bind name="primaryEntityDH" value="'playerEntity'; CC.accountSimple; _playerDbId"/>
		<bind name="watchDH" value="'clanId'; ['playerEntity.clanman.evClanIdChanged']; playerEntity.clanman.clanId"/>
		<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; clanId"/>
		<bind name="watchDH" value="'clanTag'; ['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
		<bind name="watchDH" value="'clanTagOffsetX';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagOffsetX"/>
		<bind name="watchDH" value="'clanTagOffsetY';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagOffsetY"/>
		<bind name="watchDH" value="'clanTagFont';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagFont"/>
		<bind name="watchDH" value="'clanTagVisible';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagVisible"/>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="style" value="'top'; clanTagOffsetY + '%'"/>
			<bind name="style" value="'left'; clanTagOffsetX + '%'"/>
			<block>
				<style>
					<position value="absolute"/>
					<marginLeft value="-50%"/>
					<marginTop value="-50%"/>
				</style>
				<bind name="visible" value="clanTagVisible"/>
				<bind name="atlasText" value="clanTagVisible ?  (clanTag ? '[' + clanTag + ']' : '^') : '' ; _clanTagPaths + clanTagFont; 0"/>
			</block>
		</block>
		<styleClass value="$FullsizeAbsolute"/>
		<style>
			<backgroundStretchX value="true"/>
			<backgroundStretchY value="true"/>
		</style>
		<bind name="style" value="'backgroundImage'; _path + iconPath"/>
		<bind name="name" value="'dogTag_' + _path + '_' + $index + '_' + dogTagEntity.dogTagComponent.gpName"/>
	</block>
	<block className="PlayerDogTagItemByPK">
		<bind name="primaryEntityDH" value="'dogTagEntity'; CC.dogTagComponent; $value"/>
		<bind name="watchDH" value="'iconPath'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.iconPath"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<bind name="watchDH" value="'clanId'; ['selfPlayerEntity.clanman.evClanIdChanged']; selfPlayerEntity.clanman.clanId"/>
		<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; clanId"/>
		<bind name="watchDH" value="'clanTag'; ['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
		<bind name="watchDH" value="'clanTagOffsetX';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagOffsetX"/>
		<bind name="watchDH" value="'clanTagOffsetY';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagOffsetY"/>
		<bind name="watchDH" value="'clanTagFont';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagFont"/>
		<bind name="watchDH" value="'clanTagVisible';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagVisible"/>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="style" value="'top'; clanTagOffsetY + '%'"/>
			<bind name="style" value="'left'; clanTagOffsetX + '%'"/>
			<block>
				<style>
					<position value="absolute"/>
					<marginLeft value="-50%"/>
					<marginTop value="-50%"/>
				</style>
				<bind name="visible" value="clanTagVisible"/>
				<bind name="atlasText" value="clanTagVisible ?  (clanTag ? '[' + clanTag + ']' : '^') : '' ; _clanTagPaths + clanTagFont; 0"/>
			</block>
		</block>
		<styleClass value="$FullsizeAbsolute"/>
		<style>
			<backgroundStretchX value="true"/>
			<backgroundStretchY value="true"/>
		</style>
		<bind name="style" value="'backgroundImage'; _path + iconPath"/>
		<bind name="name" value="'dogTag_' + _path + '_' + $index + '_' + dogTagEntity.dogTagComponent.gpName"/>
	</block>
	<block className="DogTagProgressDefault">
		<style>
			<width value="100%"/>
			<flow value="horizontal"/>
			<marginBottom value="12px"/>
		</style>
		<block type="text">
			<style>
				<width value="100%"/>
			</style>
			<bind name="class" value="(_current &lt; _goal) ? '$FontColorUnready' : '$None'"/>
			<styleClass value="$TextDefault17NM"/>
			<bind name="text" value="tr(toUpperCase('IDS_DOGTAG_PARAM_' + _name))"/>
		</block>
		<block type="text">
			<style>
				<marginLeft value="8px"/>
			</style>
			<bind name="class" value="(_current &lt; _goal) ? '$FontColorUnready' : '$None'"/>
			<styleClass value="$TextDefault17NM"/>
			<bind name="text" value="_current"/>
		</block>
	</block>
	<block className="ResultBlock">
		<style>
			<width value="100%"/>
		</style>
		<bind name="child" value="_progress[$index][0];	{_name: _progress[$index][0], _goal: _progress[$index][1], _current: _progress[$index][2]};
										{	battleCount: 'DogTagProgressDefault',
											achievementCount: 'DogTagProgressDefault',
										 	damage: 'DogTagProgressDefault',
										 	clearExp: 'DogTagProgressDefault',
										 	winRate: 'DogTagProgressDefault',
										 	uniqueStars: 'DogTagProgressDefault'	}"/>
	</block>
	<block className="DogTagComponentTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="300px"/>
			<hitTest value="false"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<bind name="primaryEntityDH" value="'dogTagEntity'; CC.dogTagComponent; _id"/>
		<bind name="watchDH" value="'enabled'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.enabled"/>
		<bind name="watchDH" value="'iconPath'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.iconPath"/>
		<bind name="watchDH" value="'gpName'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.gpName"/>
		<bind name="watchDH" value="'categoryId'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.categoryId"/>
		<bind name="watchDH" value="'restriction'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.restriction"/>
		<bind name="watchDH" value="'data'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.data"/>
		<bind name="watchDH" value="'progress'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.progress"/>
		<bind name="watchDH" value="'description'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.description"/>
		<bind name="watchDH" value="'quest'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.quest"/>
		<bind name="watchDH" value="'unique'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.unique"/>
		<bind name="watchDH" value="'clanTagOffsetX';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagOffsetX"/>
		<bind name="watchDH" value="'clanTagOffsetY';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagOffsetY"/>
		<bind name="watchDH" value="'clanTagFont';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagFont"/>
		<bind name="watchDH" value="'clanTagVisible';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagVisible"/>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'DogTagComponentTooltipHeader'; {_iconPath: iconPath, _categoryId: categoryId, _gpName: gpName, _unique: unique,
				_clanTagOffsetX: clanTagOffsetX, _clanTagOffsetY: clanTagOffsetY, _clanTagFont: clanTagFont, _clanTagVisible: clanTagVisible}"/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="isNotSelf != true"/>
			<styleClass value="$InfoBlockIndent"/>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<block className="icon_module_state" type="native">
					<bind name="gotoAndStop!" value="enabled 	? 'installed'
											: 'action'"/>
				</block>
			</block>
			<block type="text">
				<styleClass value="$TextDefault17NM"/>
				<style>
					<maxWidth value="260"/>
					<marginLeft value="4px"/>
				</style>
				<bind name="class" value="	enabled &amp;&amp; dogTagEntity.dogTagComponentSaved != null	? '$FontColorGolden' :
							enabled													? '$None'
																					: '$FontColorUnready'"/>
				<bind name="text" value="	enabled &amp;&amp; dogTagEntity.dogTagComponentSaved != null	? 'IDS_DOGTAG_COMPONENT_SET':
							enabled													? 'IDS_DOGTAG_COMPONENT_AVAILABLE'
																					: 'IDS_DOGTAG_COMPONENT_NOT_AVAILABLE'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="isNotSelf != true"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="description"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<block type="text">
					<styleClass value="$TextDefault17NM"/>
					<style>
						<width value="100%"/>
						<leading value="-3"/>
					</style>
					<bind name="text" value="tr( toUpperCase('IDS_DOGTAG_' + gpName + '_DESCRIPTION'))"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="visible" value="!isRewardTooltip &amp;&amp; quest"/>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<block type="text">
					<styleClass value="$TextDefault17NM"/>
					<style>
						<width value="100%"/>
						<leading value="-3"/>
					</style>
					<bind name="text" value="quest"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block>
					<styleClass value="$InfoBlockIndent"/>
					<style>
						<width value="100%"/>
						<alpha value="0.7"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefault17NM"/>
						<style>
							<width value="100%"/>
							<marginTop value="3px"/>
							<marginBottom value="3px"/>
							<leading value="-3"/>
						</style>
						<bind name="text" value="restriction"/>
					</block>
				</block>
				<block>
					<styleClass value="$InfoBlockIndent"/>
					<block>
						<bind name="repeat" value="data.battleTypes; 'DogTagBattleTypeRestriction'"/>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<bind name="instance" value="'ShipRestrictions'; {_restrictionsEntityId: dogTagEntity.id, _withShipTypeCounters: false}"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="!enabled &amp;&amp; progress[0][2] != 0 &amp;&amp; isNotSelf != true"/>
				<style>
					<width value="100%"/>
					<marginTop value="9px"/>
				</style>
				<block>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<bind name="repeat" value="progress; 'ResultBlock'; {_progress: progress}"/>
				</block>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="(isNotSelf != true &amp;&amp; _canInstall == 'true') || isRewardTooltip"/>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'MouseInstruction'; isRewardTooltip ? {_type: 'left', _instructionText: 'IDS_DOGTAG_TOOLTIP_GO_TO_CONSTUCTOR', _maxWidth: 300 } :
											unique			? {_type: 'left', _instructionText: 'IDS_SELECT_DOGTAG_COMPONENT_UNIQUE', _maxWidth: 300 } 
															: {_type: 'left', _instructionText: 'IDS_SELECT_DOGTAG_COMPONENT', _maxWidth: 300 }"/>
		</block>
	</block>
	<block className="DogTagComponentTooltipHeader">
		<style>
			<width value="100%"/>
			<flow value="horizontal"/>
		</style>
		<block>
			<style>
				<backgroundStretchX value="true"/>
				<backgroundStretchY value="true"/>
				<width value="80px"/>
				<height value="80px"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:../dogTags/small/' + _iconPath"/>
			<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
			<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
			<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
			<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
			<bind name="watchDH" value="'clanId'; ['selfPlayerEntity.clanman.evClanIdChanged']; selfPlayerEntity.clanman.clanId"/>
			<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; clanId"/>
			<bind name="watchDH" value="'clanTag'; ['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
			<block>
				<bind name="visible" value="_clanTagVisible == true"/>
				<style>
					<position value="absolute"/>
				</style>
				<bind name="style" value="'top'; _clanTagOffsetY + '%'"/>
				<bind name="style" value="'left'; _clanTagOffsetX + '%'"/>
				<block>
					<style>
						<position value="absolute"/>
						<marginLeft value="-50%"/>
						<marginTop value="-50%"/>
					</style>
					<bind name="atlasText" value="_clanTagVisible ? (clanTag ? '[' + clanTag + ']' : '^') : '' ; '../fonts/small/' + _clanTagFont; 0"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="6px"/>
			</style>
			<block type="text">
				<styleClass value="$TextHeaderBold"/>
				<style>
					<maxWidth value="192"/>
				</style>
				<bind name="text" value="tr(toUpperCase('IDS_DOGTAG_' + _gpName + '_NAME'))"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<style>
					<maxWidth value="192"/>
				</style>
				<bind name="text" value="_unique ? tr(toUpperCase('IDS_DOGTAG_COMPONENT_TOOLTIP_CATEGORY_' + 'unique')) : tr(toUpperCase('IDS_DOGTAG_COMPONENT_TOOLTIP_CATEGORY_' + _categoryId))"/>
			</block>
		</block>
	</block>
	<block className="DogTagBattleTypeRestriction">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<block className="icon_battletypes_small" type="native">
			<style>
				<marginRight value="6px"/>
				<width value="25px"/>
				<height value="25px"/>
			</style>
			<bind name="gotoAndStop!" value="	($value == 'PVP')			? 'RandomBattle' :
								($value == 'COOPERATIVE')	? 'CooperativeBattle':
								($value == 'RANKED') 		? (rankedBattlesSeason.isJuniorSeason == true) 	? 'RankedBattle_junior'
																											: 'RankedBattle':
								($value == 'PVE')			? 'PVEBattle':
								($value == 'PVE_PREMADE')	? 'PVEBattle_hard':
								($value == 'CLAN')			? 'ClanBattle'
															: null "/>
		</block>
		<block className="VerticalDivider">
			<style>
				<height value="100%"/>
				<width value="3px"/>
			</style>
			<block className="divider_v" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
	</block>
	<block className="PlayerStereotypeDogTag">
		<style>
			<width value="100%f"/>
			<flow value="horizontal"/>
		</style>
		<block>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
			<block>
				<bind name="tooltip" value="'SimpleTooltip'; !_hitTest ? {tooltipText: 'IDS_TOOLTIP_PLAYER_STEREOTYPE_DOGTAG'} : null"/>
				<bind name="tooltip" value="'MouseInstructionTooltip'; _hitTest == true ? {_mouseInstructions: [{_type: 'left', _instructionText: 'IDS_DOGTAG_TOOLTIP_GO_TO_CONSTUCTOR'}], _maxWidth: 250} : null"/>
				<bind name="transition" value="rollOver &amp;&amp; _hitTest == true; 0.15; {alpha: 1}; {alpha: 0.3}"/>
				<bind name="request" value="'click'; _hitTest == true ? 'modalDogTag' : null ; {}"/>
				<bind name="instance" value="'PlayerDogTag'; {_playerDbId: _playerDbId, _size: 'small'}"/>
			</block>
			<block>
				<bind name="visible" value="_hitTest == true"/>
				<styleClass value="$MiddleAlignedAbsolutely"/>
				<styleClass value="$MiddleVAligned"/>
				<bind name="transition" value="rollOver; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: 10}"/>
				<block className="button_dock_bg" type="native">
					<style>
						<hitTest value="false"/>
						<paddingLeft value="8px"/>
						<paddingRight value="8px"/>
						<paddingTop value="8px"/>
						<paddingBottom value="8px"/>
					</style>
					<bind name="transition" value="rollOver &amp;&amp; !(mouseDown); 0.15; {alpha: 0}; {alpha: 1}; {alpha: 0}"/>
					<bind name="gotoAndStop!" value="'up'"/>
					<block>
						<params>
							<param name="name" value="changeDogTag"/>
						</params>
						<style>
							<hitTest value="false"/>
						</style>
						<block type="text">
							<styleClass value="$TextDefaultBoldNM"/>
							<bind name="text" value="toUpperCase(tr('IDS_DOG_TAG_DOLL_CHANGE'))"/>
						</block>
					</block>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%f"/>
				<marginLeft value="8px"/>
			</style>
			<bind name="instance" value="'PlayerStereotype'; {
											_playerDbId: _playerDbId,
											_clanTag: _clanTag,
											_clanTagColor: _clanTagColor,
											_noRank: _noRank,
											_isBot: _isBot,
											_isPlayerNameDisable: _isPlayerNameDisable,
											_isAccountButton: _isAccountButton,
											_tkStatus: _tkStatus,
											_ttkStatus: _ttkStatus,
											_abuseStatus: _abuseStatus,
											_isPremiumAccount: _isPremiumAccount,
											_player: _player,
											_noClanTagColor: _noClanTagColor,
											_isWithKarma: _isWithKarma
											}"/>
		</block>
	</block>
	<block className="PlayerStereotype">
		<bind name="primaryEntityDH" value="'playerEntity'; CC.accountSimple; _playerDbId"/>
		<bind name="watchDH" value="'isSelf';			[]; playerEntity.accountSimple.isSelfPlayer"/>
		<bind name="watchDH" value="'clanId';			['playerEntity.clanman.evClanIdChanged']; playerEntity.clanman.clanId"/>
		<bind name="watchDH" value="'pureName';		['playerEntity.accountName.evChanged']; playerEntity.accountName.name"/>
		<bind name="watchDH" value="'rank'; 			['playerEntity.accountRank.evRankChanged']; playerEntity.accountRank.rank"/>
		<bind name="watchDH" value="'seasonId'; 		['playerEntity.accountRank.evRankChanged']; playerEntity.accountRank.seasonId"/>
		<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; clanId"/>
		<bind name="watchDH" value="'clanTag'; 	['clanEntity.clan.evTagChanged']; _clanTag ? _clanTag : clanEntity.clan.tag"/>
		<bind name="primaryEntityDH" value="'clanExtendedEntity'; CC.clanExtended; clanId"/>
		<bind name="watchDH" value="'clanTagColor'; 	['clanExtendedEntity.clanExtended.evColorChanged']; _clanTagColor ? _clanTagColor : clanExtendedEntity.clanExtended.color"/>
		<bind name="watch" value="'isWithRank'; !_noRank &amp;&amp; !_isBot &amp;&amp; rank != 0 &amp;&amp; rank != null"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'dockDefaultValues'"/>
		<style>
			<width value="100%f"/>
			<marginTop value="16"/>
		</style>
		<block>
			<style>
				<width value="100%f"/>
			</style>
			<block>
				<style>
					<width value="100%f"/>
					<marginLeft value="-4px"/>
					<backgroundColor value="0x01000000"/>
				</style>
				<bind name="style" value="'hitTest'; _isPlayerNameDisable ? false : true"/>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_TOOLTIP_PLAYER_STEREOTYPE_NAME'}"/>
				<bind name="instance" value="'PlayerNameAndClanTag'; {
													_isSelf: 			isSelf,
													_isAccountButton:	_isAccountButton,
													_tkStatus: 			_tkStatus || _abuseStatus == AbuseStatus.SUSPECT,
													_ctkStatus:			_ctkStatus || _abuseStatus == AbuseStatus.CONFIRMED,
													_ttkStatus:			_ttkStatus,
													_isPremiumAccount:	_isPremiumAccount,
													_isInSameDivision:  _player.isInSameDivision,
													_fontSize:			17,
													_playerName:		pureName,
													_clanTag:			clanTag,
													_clanTagColor:		clanTagColor,
													_isDead:			false,
													_noClanTagColor:	_noClanTagColor
													}"/>
			</block>
			<block>
				<bind name="visible" value="_isWithKarma == true"/>
				<bind name="tooltip" value="'SubTextTooltip'; {tooltipText: 'IDS_YOUR_KARMA', tooltipSubText: 'IDS_TOOLTIP_KARMA'}"/>
				<style>
					<marginTop value="-14px"/>
					<marginLeft value="-4px"/>
					<backgroundColor value="0x01000000"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefault13NM"/>
					<style>
						<margin value="8px"/>
					</style>
					<bind name="text" value="format(dockDefaultValues.karma, -1)"/>
					<bind name="name" value="'karma_account_progress_item'"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block type="text">
			<bind name="visible" value="isWithRank"/>
			<styleClass value="$TextDefaultNM"/>
			<style>
				<marginTop value="8"/>
				<maxWidth value="130"/>
				<multiline value="false"/>
				<hitTest value="false"/>
			</style>
			<bind name="text" value="subst('IDS_RANK_X',[], {rank: rank})"/>
		</block>
	</block>
	<block className="PlayerProgressBar">
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="3px"/>
			</style>
			<block>
				<block className="indicator_progress_bar_yellow" type="native">
					<bind name="value" value="(_currentProgress / _levelProgress)*10"/>
					<style>
						<width value="138px"/>
						<marginTop value="8px"/>
					</style>
				</block>
			</block>
			<block>
				<block type="text">
					<styleClass value="$TextSecondary"/>
					<bind name="text" value="(format(_currentProgress, -1)) + ' / ' + (format(_levelProgress, -1))"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ModalWindowPremiumAccount">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'premBefore';		['resourceEntity.accountResource.evChangedPrem'];	resourceEntity.accountResource.premBefore"/>
		<bind name="watchDH" value="'wowsPremBefore';	['resourceEntity.accountResource.evChangedPrem'];	resourceEntity.accountResource.wowsPremBefore"/>
		<bind name="watchDH" value="'activePremiumType';	['resourceEntity.accountResource.evChangedPrem'];	resourceEntity.accountResource.activePremiumType"/>
		<bind name="watchDH" value="'premiumAccountTimeStr';	['resourceEntity.accountResource.evChangedPrem'];	resourceEntity.accountResource.premiumTimeStr"/>
		<bind name="watchDH" value="'wowsPremiumTimeStr';	['resourceEntity.accountResource.evChangedPrem'];	resourceEntity.accountResource.wowsPremiumTimeStr"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_INFO + 'PREM_XP_Coef'; 		'pricePREM_XP_Coef'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_INFO + 'PREM_CR_Coef'; 		'pricePREM_CR_Coef'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_INFO + 'WOWS_PREM_XP_Coef'; 	'priceWOWS_PREM_XP_Coef'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'pricesAll'; PriceInfoSet.OP_INFO + 'WOWS_PREM_CR_Coef'; 	'priceWOWS_PREM_CR_Coef'"/>
		<bind name="watch" value="'wowsPremCoeffXP'; subst('IDS_WOWS_PREMIUM_ACCOUNT_XP_VALUE', 	[], {value: math.round((priceWOWS_PREM_XP_Coef.prices[0].finalPrice - 1) * 100)})"/>
		<bind name="watch" value="'wowsPremCoeffCR'; subst('IDS_WOWS_PREMIUM_ACCOUNT_CR_VALUE', 	[], {value: math.round((priceWOWS_PREM_CR_Coef.prices[0].finalPrice - 1) * 100)})"/>
		<bind name="watch" value="'wgPremCoeffXP'; 	subst('IDS_WG_PREMIUM_ACCOUNT_XP_VALUE', 	[], {value: math.round((pricePREM_XP_Coef.prices[0].finalPrice - 1) * 100)})"/>
		<bind name="watch" value="'wgPremCoeffCR'; 	subst('IDS_WG_PREMIUM_ACCOUNT_CR_VALUE',	[], {value: math.round((pricePREM_CR_Coef.prices[0].finalPrice - 1) * 100)})"/>
		<bind name="watch" value="'wowsAccountStatus'; (wowsPremBefore &gt; 0) 	? subst('IDS_PREMIUM_ACCOUNT_STATUS_ACTIVE', [], { days: wowsPremiumTimeStr }) : 'IDS_PREMIUM_ACCOUNT_STATUS_NOT_ACTIVE'"/>
		<bind name="watch" value="'wgAccountStatus'; (premBefore &gt; 0) ? subst('IDS_PREMIUM_ACCOUNT_STATUS_ACTIVE', [], { days: premiumAccountTimeStr }) : 'IDS_PREMIUM_ACCOUNT_STATUS_NOT_ACTIVE'"/>
		<bind name="watch" value="'accounts';[	{ 	accountType:		2,
									accountName: 		'IDS_PREMIUM_ACCOUNT_WOWS',
									textAffect: 		'IDS_PREMIUM_ACCOUNT_AFFECT_WOWS',
									logoUrl: 			'wows_premium_logo',
									accountStatus: 		wowsAccountStatus,
									coeffXP: 			wowsPremCoeffXP,
									coeffCR: 			wowsPremCoeffCR,
									premActiveTime: 	wowsPremBefore,
									activePremType: 	activePremiumType
								},
								{ 	accountType:		1,
									accountName: 		'IDS_PREMIUM_ACCOUNT_WG',
									textAffect: 		'IDS_PREMIUM_ACCOUNT_AFFECT_WG',
									logoUrl: 			'wg_premium_logo',
									accountStatus: 		wgAccountStatus,
									coeffXP: 			wgPremCoeffXP,
									coeffCR: 			wgPremCoeffCR,
									premActiveTime: 	premBefore,
									activePremType: 	activePremiumType
								}
							]"/>
		<bind name="var" value="{windowAppearLag: 0.2}"/>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; 0.1; {alpha: 0}; {alpha: 1}"/>
			<bind name="appear" value="'startHide'; 0.15; 0.3; {alpha: 1}; {alpha: 0}"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundSize value="cover"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:../premium_account/premium_account_bg.jpg'"/>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 1 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 1 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'ModalWindowHeaderFullSize'; { _windowName: 'IDS_PREMIUM_ACCOUNT_CHOOSE_HEADER', _hideBackButton: true }"/>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<paddingTop value="3px"/>
					<paddingBottom value="5px"/>
					<alpha value="0.7"/>
				</style>
				<bind name="instance" value="'InstructionBigTech'; { _instructionText: 'IDS_PREMIUM_ACCOUNT_CHOOSE_HEADER_DESCR', _maxWidth: 1000 }"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginRight value="1280:20,1920:46aw"/>
					<marginLeft value="1280:20,1920:46aw"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 2 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<style>
				<flow value="horizontal"/>
				<marginTop value="720:10,1080:100ah"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<bind name="repeat" value="accounts; 'PremiumAccountItem'; {}"/>
		</block>
	</block>
	<block className="PremiumAccountItem">
		<style>
			<width value="200px"/>
			<marginLeft value="100px"/>
			<marginRight value="100px"/>
		</style>
		<bind name="var" value="{windowAppearLag: 0.2}"/>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 1 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 1 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<bind name="tooltip" value="'PremiumAccountItemTooltip'; { 	_logoUrl: logoUrl, _accountType: accountType, _isOwned: premActiveTime &gt; 0, 
														_activePremType: activePremType, _accountStatus: accountStatus }"/>
			<block>
				<bind name="visible" value="(activePremType == accountType)"/>
				<styleClass value="$MiddleAligned"/>
				<style>
					<position value="absolute"/>
					<backgroundSize value="cover"/>
					<marginTop value="-50px"/>
					<width value="720:360,1080:400ah"/>
					<height value="720:360,1080:400ah"/>
				</style>
				<bind name="instance" value="'SelectedBattleTypeAnimation'; {}"/>
			</block>
			<block>
				<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; null; 'ct_'"/>
				<bind name="var" value="{ 
		ctRollOver: {
			redMultiplier: 1,
			greenMultiplier: 1,
			blueMultiplier: 1,
			alphaMultiplier: 1,
			redOffset: 30,
			greenOffset: 30,
			blueOffset: 30,
			alphaOffset: 0
		}
	}"/>
				<bind name="var" value="{ 
		ctMouseDown: {
			redMultiplier: 1,
			greenMultiplier: 1,
			blueMultiplier: 1,
			alphaMultiplier: 1,
			redOffset: -30,
			greenOffset: -30,
			blueOffset: -30,
			alphaOffset: 0
		}
	}"/>
				<bind name="colorTransform" value="	true &amp;&amp; (ct_mouseDown)	? ctMouseDown :
							true &amp;&amp; (ct_rollOver)	? ctRollOver
														: {}"/>
				<styleClass value="$MiddleAligned"/>
				<style>
					<width value="720:230,1080:256ah"/>
					<height value="720:230,1080:256ah"/>
					<backgroundSize value="cover"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:../premium_account/' + logoUrl + '.png'"/>
				<bind name="request" value="'click'; 'buttonShowPremiumPeriods'; {selectedPremType: accountType}"/>
			</block>
			<block>
				<style>
					<width value="375px"/>
					<marginTop value="4px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<block type="text">
					<styleClass value="$TextDefaultBold23NM"/>
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
					</style>
					<bind name="class" value="(activePremType == accountType) ? '$FontColorGolden' : '$FontColorWhite'"/>
					<bind name="text" value="toUpperCase(tr(accountName))"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault17NM"/>
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
						<marginTop value="12px"/>
					</style>
					<bind name="class" value="(activePremType == accountType) ? '$FontColorGolden' : '$FontColorWhite'"/>
					<bind name="text" value="accountStatus"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<position value="absolute"/>
				<top value="720:320,1080:350ah"/>
			</style>
			<block>
				<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 3 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
				<bind name="appear" value="'startHide'; 0.15; 3 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'PremiumAccountCoeff'; { 	_coeffXP: coeffXP, _coeffCR: coeffCR, _activePremType: activePremType, 
														_textAffect: textAffect, _accountType: accountType }"/>
			</block>
			<block>
				<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 5 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
				<bind name="appear" value="'startHide'; 0.15; 5 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
				<style>
					<width value="100%"/>
					<marginTop value="24"/>
				</style>
				<bind name="watch" value="'buttonLabel'; (premActiveTime &gt; 0) ? 'IDS_PREMIUM_ACCOUNT_EXTEND' : 'IDS_PRMP_BUY_BUTTON'"/>
				<bind name="instance" value="'DefaultButton';{	_enabled: true, _width: '100%',
												_label: toUpperCase(tr(buttonLabel)),
												_focusIndex: ($index == 0) ? 0 : 1, 
												_defaultFocused: ($index == 0) ? true : false, 
												_request: 'buttonShowPremiumPeriods', 
												_requestParams: { selectedPremType: accountType }
											}"/>
			</block>
		</block>
	</block>
	<block className="PremiumAccountCoeff">
		<bind name="var" value="{windowAppearLag: 0.3}"/>
		<bind name="watch" value="'gamesText'; 	(_accountType == 2) ? 'IDS_PREMIUM_ACCOUNT_AFFECT_WOWS' 		 : 'IDS_PREMIUM_ACCOUNT_AFFECT_ALL_GAMES'"/>
		<bind name="watch" value="'tooltipText'; (_accountType == 2) ? 'IDS_PREMIUM_ACCOUNT_AFFECT_WOWS_TOOLTIP' : 'IDS_PREMIUM_ACCOUNT_AFFECT_ALL_GAMES_TOOLTIP'"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 1 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 1 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<style>
				<width value="100%"/>
				<height value="60px"/>
			</style>
			<bind name="instance" value="'PremiumAccountCoeffBg'; {}"/>
			<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: (subst('IDS_PREMIUM_ACCOUNT_PLUS_XP_TOOLTIP', [], {coeffXP: _coeffXP}))}"/>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="100%"/>
					<hitTest value="false"/>
				</style>
				<bind name="instance" value="'PremiumAccountCoeffItem'; { _activePremType: _activePremType, _accountType: _accountType, _points: _coeffXP, _text: 'IDS_PREMIUM_ACCOUNT_PLUS_XP' }"/>
			</block>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 2 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<style>
				<width value="100%"/>
				<height value="60px"/>
				<marginTop value="3px"/>
			</style>
			<bind name="instance" value="'PremiumAccountCoeffBg'; {}"/>
			<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: (subst('IDS_PREMIUM_ACCOUNT_PLUS_CR_TOOLTIP', [], {coeffCR: _coeffCR})) }"/>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="100%"/>
					<hitTest value="false"/>
				</style>
				<bind name="instance" value="'PremiumAccountCoeffItem'; { _activePremType: _activePremType, _accountType: _accountType, _points: _coeffCR, _text: 'IDS_PREMIUM_ACCOUNT_PLUS_CR' }"/>
			</block>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 3 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 3 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<style>
				<width value="100%"/>
				<height value="80px"/>
				<marginTop value="3px"/>
			</style>
			<bind name="instance" value="'PremiumAccountCoeffBg'; {}"/>
			<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: tooltipText }"/>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="100%"/>
					<hitTest value="false"/>
				</style>
				<bind name="instance" value="'PremiumAccountCoeffItem'; { _activePremType: _activePremType, _accountType: _accountType, _gamesText: gamesText }"/>
			</block>
		</block>
	</block>
	<block className="PremiumAccountCoeffItem">
		<style>
			<width value="100%"/>
		</style>
		<block>
			<bind name="visible" value="(_points != null)"/>
			<styleClass value="$MiddleAligned"/>
			<block type="text">
				<style>
					<textAlign value="center"/>
				</style>
				<styleClass value="$TextDefaultBold25NM"/>
				<bind name="class" value="(_activePremType == _accountType) ? '$FontColorGolden' : '$FontColorWhite'"/>
				<bind name="text" value="_points"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="(_points != null)"/>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginTop value="4"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefaultNM"/>
				<style>
					<textAlign value="center"/>
				</style>
				<bind name="class" value="(_activePremType == _accountType) ? '$FontColorGolden' : '$FontColorWhite'"/>
				<bind name="text" value="_text"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="(_gamesText != null)"/>
			<styleClass value="$MiddleAligned"/>
			<block type="text">
				<styleClass value="$TextDefaultNM"/>
				<style>
					<textAlign value="center"/>
				</style>
				<bind name="class" value="(_activePremType == _accountType) ? '$FontColorGolden' : '$FontColorWhite'"/>
				<bind name="text" value="_gamesText"/>
			</block>
		</block>
	</block>
	<block className="PremiumAccountCoeffBg">
		<styleClass value="$FullsizeAbsolute"/>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<backgroundColor value="0x20000000"/>
			</style>
		</block>
	</block>
	<block className="PremiumAccountItemTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="360px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'TooltipHeaderWithIcon'; {	_iconPath: 'url:../premium_account/' + _logoUrl + '_small.png',
													_headerText: (_accountType == 2 ? 'IDS_PREMIUM_ACCOUNT_WOWS' : 'IDS_PREMIUM_ACCOUNT_WG'),
													_subheaderText: 'IDS_PREMIUM_ACCOUNT_TYPE_TOOLTIP', 
													_headerClass:    (_activePremType == _accountType ? '$FontColorGolden' : null),
													_subheaderClass: (_activePremType == _accountType ? '$FontColorGolden' : null) }"/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!_isOwned"/>
			<style>
				<width value="100%"/>
				<margin value="16|16|12|8"/>
			</style>
			<bind name="instance" value="'InstructionWarning'; _isOwned ? null : { _instructionText: 'IDS_NOT_PURCHASED', _maxWidth: '300' }"/>
		</block>
		<block>
			<bind name="visible" value="_activePremType == _accountType"/>
			<style>
				<width value="100%"/>
				<margin value="16|16|12|12"/>
			</style>
			<bind name="instance" value="'InstructionIsOwned'; _activePremType == _accountType ? { _instructionText: 'IDS_PREMIUM_ACCOUNT_ACTIVE', _maxWidth: '300' } : null"/>
		</block>
		<block>
			<bind name="visible" value="(_activePremType != _accountType) &amp;&amp; _isOwned"/>
			<style>
				<width value="100%"/>
				<margin value="16|16|8|8"/>
			</style>
			<bind name="instance" value="'InstructionParagraph'; (_activePremType != _accountType) &amp;&amp; _isOwned ? { _text: 'IDS_PREMIUM_ACCOUNT_NOT_ACTIVE', _maxWidth: '300' } : null"/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="_isOwned"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<margin value="16|16|12|12"/>
				</style>
				<block type="text">
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$TextDefaultBoldNM"/>
					<bind name="text" value="_accountStatus"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<margin value="16|16|16|16"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefault17NM"/>
					<style>
						<width value="100%"/>
						<alpha value="0.9"/>
					</style>
					<bind name="text" value="_accountType == 2 	? 'IDS_PREMIUM_ACCOUNT_WOWS_TOOLTIP' : 'IDS_PREMIUM_ACCOUNT_WG_TOOLTIP'"/>
				</block>
			</block>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'MouseInstruction'; {	_type: 'left',
												_maxWidth: 260,
												_instructionText: _isOwned ? 'IDS_EXTEND_PREMIUM_ACCOUNT' : 'IDS_PURCHASE_PREMIUM_ACCOUNT'}"/>
		</block>
	</block>
	<block className="ButtonAccountTooltip">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'premBefore';		['resourceEntity.accountResource.evChangedPrem'];	resourceEntity.accountResource.premBefore"/>
		<bind name="watchDH" value="'wowsPremBefore';	['resourceEntity.accountResource.evChangedPrem'];	resourceEntity.accountResource.wowsPremBefore"/>
		<bind name="watchDH" value="'activePremiumType';	['resourceEntity.accountResource.evChangedPrem'];	resourceEntity.accountResource.activePremiumType"/>
		<bind name="watchDH" value="'premiumAccountTimeStr';	['resourceEntity.accountResource.evChangedPrem'];	resourceEntity.accountResource.premiumTimeStr"/>
		<bind name="watchDH" value="'wowsPremiumTimeStr';	['resourceEntity.accountResource.evChangedPrem'];	resourceEntity.accountResource.wowsPremiumTimeStr"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="324px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<bind name="visible" value="(_extendedTooltip == true)"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<margin value="16px|16px|12px|12px"/>
				</style>
				<block type="text">
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$TextDefault17NM"/>
					<bind name="text" value="'IDS_HINT_PREM_GET_MORE_CREDITS_AND_EXP'"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="(wowsPremBefore + premBefore) &gt; 0"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<margin value="16px|16px|12px|12px"/>
				</style>
				<block>
					<bind name="visible" value="wowsPremBefore &gt; 0"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="instance" value="'ButtonAccountTypeTooltip'; wowsPremBefore &gt; 0 ? { 	_isActive: activePremiumType == 2, 
																					_premType: 'IDS_PREMIUM_ACCOUNT_WOWS', 
																					_premTime: wowsPremiumTimeStr } : null"/>
				</block>
				<block>
					<bind name="visible" value="premBefore &gt; 0"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="style" value="'marginTop'; (wowsPremBefore &gt; 0) ? '16px' : '0px'"/>
					<bind name="instance" value="'ButtonAccountTypeTooltip'; premBefore &gt; 0 ? { 	_isActive: activePremiumType == 1, 
																				_premType: 'IDS_PREMIUM_ACCOUNT_WG', 
																				_premTime: premiumAccountTimeStr } : null"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="((wowsPremBefore + premBefore) &gt; 0) &amp;&amp; (_extendedTooltip == true)"/>
			<style>
				<width value="100%"/>
				<marginTop value="-2px"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="(_extendedTooltip == true)"/>
			<style>
				<width value="100%"/>
				<margin value="16px|16px|8px|8px"/>
			</style>
			<bind name="instance" value="'MouseInstruction'; { _type: 'left', _instructionText: 'IDS_PREMIUM_ACCOUNT_CHOOSE_AND_BUY', _maxWidth: 300 }"/>
		</block>
	</block>
	<block className="ButtonAccountTypeTooltip">
		<style>
			<width value="100%"/>
			<flow value="horizontal"/>
		</style>
		<block type="text">
			<bind name="class" value="_isActive == true ? '$FontColorGolden' : '$FontColorWhite'"/>
			<styleClass value="$TextDefault17NM"/>
			<bind name="text" value="_premType"/>
		</block>
		<block type="text">
			<bind name="class" value="_isActive == true ? '$FontColorGolden' : '$FontColorWhite'"/>
			<style>
				<position value="absolute"/>
				<right value="0px"/>
			</style>
			<styleClass value="$TextDefaultBold17NM"/>
			<bind name="text" value="_premTime"/>
		</block>
	</block>
	<block className="CompleteAccountRewardItemAdapter">
		<bind name="entityDH" value="'rewardEntity'; $value"/>
		<bind name="appear" value="'addedToStage'; 0.25; 0.1 + $index*0.23; {alpha: 0, top: 35}; {alpha: 1, top: 0}; 1"/>
		<bind name="appear" value="'hideRewards'; 0.15; 0; {alpha: 1, top: 0}; {alpha: 0, top: 20}"/>
		<style>
			<marginRight value="16px"/>
			<marginLeft value="16px"/>
		</style>
		<block>
			<bind name="instance" value="'RewardItem'; rewardEntity.rewardComponent"/>
		</block>
	</block>
	<block className="ModalWindowCompleteAccount">
		<block className="ModalWindowContainer">
			<styleClass value="$FullsizeAbsolute"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap5" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<block>
				<bind name="appear" value="'startShow'; 0.3; 0.1; 	{alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0.45; 	{alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<block className="contrast_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="visible" value="optionData.contrast"/>
				</block>
				<block className="modal_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$EyeLevelVAligned"/>
				<bind name="instance" value="'ModalWindowCompleteAccountContent'; {}"/>
			</block>
		</block>
	</block>
	<block className="ModalWindowCompleteAccountContent">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
		<bind name="action" value="'addedToStage'; 'SteamContext.clearErrors'; {}"/>
		<bind name="firstEntityDH" value="'incompleteAccountEntity'; CC.incompleteAccount"/>
		<bind name="watchDH" value="'codeSent';						['incompleteAccountEntity.incompleteAccount.evCodeSent'];			incompleteAccountEntity.incompleteAccount.codeSent"/>
		<bind name="watchDH" value="'error';							['incompleteAccountEntity.incompleteAccount.evErrorCodeChanged'];	incompleteAccountEntity.incompleteAccount.error"/>
		<bind name="watchDH" value="'errorIDS';						['incompleteAccountEntity.incompleteAccount.evErrorCodeChanged'];	incompleteAccountEntity.incompleteAccount.errorIDS"/>
		<bind name="watchDH" value="'isPasswordInvalid';				['incompleteAccountEntity.incompleteAccount.evValidationUpdate']; 	incompleteAccountEntity.incompleteAccount.isPasswordInvalid"/>
		<bind name="watchDH" value="'isPasswordValidationRunning';	['incompleteAccountEntity.incompleteAccount.evValidationUpdate']; 	incompleteAccountEntity.incompleteAccount.isPasswordValidationRunning"/>
		<bind name="watchDH" value="'isLoginInvalid';				['incompleteAccountEntity.incompleteAccount.evValidationUpdate']; 	incompleteAccountEntity.incompleteAccount.isLoginInvalid"/>
		<bind name="watchDH" value="'isLoginValidationRunning';		['incompleteAccountEntity.incompleteAccount.evValidationUpdate']; 	incompleteAccountEntity.incompleteAccount.isLoginValidationRunning"/>
		<bind name="var" value="{ windowAppearLag: 0.4 }"/>
		<bind name="watch" value="'userEmail'; ''"/>
		<bind name="dispatch" value="'userEmail' + varChanged; 'evEmailChanged'"/>
		<bind name="action" value="'evEmailChanged'; 'SteamContext.loginChange'; {login: userEmail}"/>
		<bind name="catch" value="'evUsernameChanged'; { error: '' }"/>
		<bind name="watch" value="'password'; ''"/>
		<bind name="dispatch" value="'password' + varChanged; 'evPassChanged'"/>
		<bind name="action" value="'evPassChanged'; 'SteamContext.passwordChange'; {password: password}"/>
		<bind name="catch" value="'evPasswordChanged'; { error: '' }"/>
		<bind name="catch" value="'evEmailChanged';	{ wrongPasswordNotification: false, passWrongSymbolInputed: false }"/>
		<bind name="catch" value="'evPassChanged';	{ wrongLoginNotification: false, emailWrongSymbolInputed: false }"/>
		<bind name="catch" value="'evEmailWrongChanged';	{ wrongPasswordNotification: false, passWrongSymbolInputed: false }"/>
		<bind name="catch" value="'evPassWrongChanged';	{ wrongLoginNotification: false, emailWrongSymbolInputed: false }"/>
		<bind name="dispatch" value="'emailWrongSymbolInputed' + varChanged; emailWrongSymbolInputed == true ? 'evEmailWrongChanged' : null"/>
		<bind name="dispatch" value="'passWrongSymbolInputed' + varChanged; passWrongSymbolInputed == true ? 'evPassWrongChanged' : null"/>
		<bind name="action" value="'evEmailChanged';	'showErrorMessage'; {header: '', message: ''}"/>
		<bind name="action" value="'evPassChanged';	'showErrorMessage'; {header: '', message: ''}"/>
		<bind name="watch" value="'code'; ''"/>
		<bind name="serverTime" value="'serverTime'"/>
		<bind name="var" value="{timerTimeStamp: serverTime}"/>
		<bind name="watch" value="'isServerTimeout'; serverTime &lt; timerTimeStamp"/>
		<bind name="catch" value="'restartServerTimeout'; {timerTimeStamp: serverTime -(- 35)}"/>
		<bind name="countdown" value="timerTimeStamp; 'countdownText'; 'mm:ss';"/>
		<style>
			<width value="600px"/>
		</style>
		<bind name="watch" value="'accountComplitionState';	(!codeSent &amp;&amp; incompleteAccountEntity != null)	? 0 :
											(codeSent  &amp;&amp; incompleteAccountEntity != null)	? 1 
																							: 2"/>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="childParentScope" value="accountComplitionState;
								'EmailModal';
								'CodeModal';
								'AccountDoneModal'"/>
		</block>
	</block>
	<block className="EmailModal">
		<style>
			<width value="100%"/>
		</style>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 0.5 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 0.5 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'ModalWindowHeader'; { _header: 'IDS_ACCOUNT_COMPLETION_HEADER_0', _headerWidth: '600px', _innerCloseButton: false}"/>
			</block>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 1.5 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 1.5 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<style>
				<width value="100%"/>
				<marginTop value="24px"/>
			</style>
			<bind name="repeat" value="[	{_paragraphText: 'IDS_ACCOUNT_COMPLETION_HINT_0'},
						{_paragraphText: 'IDS_ACCOUNT_COMPLETION_HINT_1'}]; 'RepeatParagraphItem'; {	_maxWidth: 580, _marginBottom: 24,
																										_middleAligned: true, _class: '$TextDefault19NM',
																										_textAlign: 'center', _leading: 0}"/>
		</block>
		<bind name="action" value="'hideWrongMessageEv'; 'SteamContext.clearErrors'; {}"/>
		<bind name="catch" value="'hideWrongMessageEv'; { 	wrongLoginNotification: false, wrongPasswordNotification: false,
											emailWrongSymbolInputed: false, passWrongSymbolInputed: false }"/>
		<bind name="watch" value="'loginValidationState'; 	isLoginValidationRunning					? 'validation' :
											isLoginInvalid	|| (userEmail.length == 0)	? 'invalid'
																						: 'valid'"/>
		<bind name="watch" value="'passwordValidationState'; isPasswordValidationRunning					? 'validation' :
											isPasswordInvalid || (password.length == 0)	? 'invalid'
																						: 'valid'"/>
		<bind name="watch" value="'wrongLoginNotification';	(userEmail.length &gt; 0 &amp;&amp;
											(loginValidationState == 'invalid')) "/>
		<bind name="watch" value="'wrongPasswordNotification';	(password.length &gt; 0 &amp;&amp;
												(passwordValidationState == 'invalid')) "/>
		<bind name="watch" value="'sendButtonEnabled'; (loginValidationState == 'valid') &amp;&amp; (passwordValidationState == 'valid') &amp;&amp; !isServerTimeout"/>
		<block>
			<style>
				<width value="410px"/>
				<position value="absolute"/>
				<bottom value="182px"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<bind name="instance" value="'WrongLoginAndPassword';	(error != '') ||
													emailWrongSymbolInputed || passWrongSymbolInputed ||
													wrongLoginNotification || wrongPasswordNotification ?	{	_maxWidth: 356, _startTop: 10,
																												_messageText: errorIDS,
																												_emailWrongSymbolInputed: emailWrongSymbolInputed,
																												_passWrongSymbolInputed: passWrongSymbolInputed,
																												_isPasswordInvalid: wrongPasswordNotification,
																												_isLoginInvalid: wrongLoginNotification
																											}
																										:	null"/>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 2 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginTop value="8px"/>
			</style>
			<block>
				<style>
					<position value="absolute"/>
					<top value="7px"/>
					<right value="100%"/>
					<paddingRight value="8"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefault17NM"/>
					<text value="IDS_EMAIL"/>
				</block>
			</block>
			<block>
				<style>
					<width value="210px"/>
				</style>
				<block className="text_input_caps" type="native">
					<params>
						<param name="name" value="emailField"/>
					</params>
					<style>
						<width value="100%"/>
					</style>
					<params>
						<param name="actAsButton" value="true"/>
						<param name="soundSet" value="hard_textinput"/>
					</params>
					<bind name="action" value="'textInputEnter'; sendButtonEnabled	? 'SteamContext.completeAccount'
																	: null; {login: userEmail, password: password }"/>
					<bind name="dispatch" value="'textInputEnter'; sendButtonEnabled	? 'restartServerTimeout' : null"/>
					<bind name="maxChars" value="realmConstants.loginMaxLengthWgnr"/>
					<bind name="restrict" value="realmConstants.loginRestrict"/>
					<bind name="restrictFeedback" value="realmConstants.loginRestrictRegexp; 'emailWrongSymbolInputed'"/>
					<bind name="defaultText" value="'IDS_ACCOUNT_INPUT_TEXT_EMAIL'"/>
					<bind name="enabled" value="true"/>
					<bind name="soundOn" value="'click'; 'press'; 'default_button'"/>
					<bind name="sync" value="'text'; 'change'; userEmail; 'evUsernameChanged'"/>
					<bind name="focus" value="0, true"/>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<right value="-2px"/>
					</style>
					<bind name="instance" value="'ValidationState'; (userEmail.length &gt; 0) ? {_validationState: loginValidationState} : null"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 3.2 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 3.2 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginTop value="7px"/>
			</style>
			<block>
				<style>
					<position value="absolute"/>
					<top value="7px"/>
					<right value="100%"/>
					<paddingRight value="8"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefault17NM"/>
					<text value="IDS_PASSWORD"/>
				</block>
			</block>
			<bind name="var" value="{showPassword: true}"/>
			<bind name="catch" value="'toggleShowPassword'; {showPassword: !(showPassword)}"/>
			<block>
				<style>
					<width value="210px"/>
				</style>
				<block className="text_input_caps" type="native">
					<params>
						<param name="name" value="passwordField"/>
					</params>
					<style>
						<width value="100%"/>
					</style>
					<bind name="enabled" value="true"/>
					<params>
						<param name="actAsButton" value="true"/>
						<param name="soundSet" value="hard_textinput"/>
					</params>
					<bind name="action" value="'textInputEnter'; sendButtonEnabled	? 'SteamContext.completeAccount'
																	: null; {login: userEmail, password: password }"/>
					<bind name="dispatch" value="'textInputEnter'; sendButtonEnabled	? 'restartServerTimeout' : null"/>
					<bind name="displayAsPassword" value="showPassword"/>
					<bind name="defaultText" value="'IDS_ACCOUNT_INPUT_TEXT_PASSWORD'"/>
					<bind name="maxChars" value="realmConstants.passMaxLengthWgnr"/>
					<bind name="restrict" value="realmConstants.passRestrict"/>
					<bind name="restrictFeedback" value="realmConstants.passRestrictRegexp; 'passWrongSymbolInputed'"/>
					<bind name="sync" value="'text'; 'change'; password; 'evPasswordChanged'"/>
					<bind name="soundOn" value="'click'; 'press'; 'default_button'"/>
					<bind name="focus" value="1"/>
					<params>
						<param name="name" value="passwordField"/>
					</params>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<right value="-2px"/>
					</style>
					<bind name="instance" value="'ValidationState'; (password.length &gt; 0) ? {_validationState: passwordValidationState} : null"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 3.5 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 3.5 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<styleClass value="$MiddleAligned"/>
			<style>
				<width value="210px"/>
				<marginTop value="10px"/>
			</style>
			<bind name="instance" value="'CheckBox'; {switchProperty: !(showPassword), label: 'IDS_SHOW_PASSWORD', _maxTfWidth: 170}"/>
			<bind name="dispatch" value="'click'; 'toggleShowPassword'"/>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 4 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 4 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginTop value="24px"/>
				<width value="210px"/>
			</style>
			<bind name="tooltip" value="'TimerTooltip'; isServerTimeout ? {_text: '-' + countdownText, _isInBattle: false} : null"/>
			<block className="button_special_no_label" type="native">
				<style>
					<width value="100%"/>
					<height value="51px"/>
				</style>
				<bind name="soundSet" value="'hard_button'"/>
				<bind name="enabled" value="sendButtonEnabled"/>
				<bind name="action" value="'buttonClick'; 'SteamContext.completeAccount'; {login: userEmail, password: password }"/>
				<bind name="dispatch" value="'click'; 'restartServerTimeout'"/>
				<params>
					<param name="name" value="completeBtn"/>
				</params>
				<bind name="focus" value="2"/>
				<block type="text">
					<styleClass value="$MiddleVAligned"/>
					<style>
						<hitTest value="false"/>
						<width value="100%"/>
						<position value="absolute"/>
						<textAlign value="center"/>
						<multiline value="true"/>
						<leading value="-4"/>
						<marginLeft value="6px"/>
						<marginRight value="6px"/>
						<fontSize value="21px"/>
					</style>
					<bind name="class" value="sendButtonEnabled ? '$FontColorSpecialButton' : '$FontColorAlmostBlack'"/>
					<bind name="class" value="sendButtonEnabled ? '$FontDropShadowFilter1' : '$FontDropShadowWhite'"/>
					<styleClass value="$TextDefaultBold"/>
					<bind name="text" value="toUpperCase(tr('IDS_ACCOUNT_COMPLETION_BTN_SEND'))"/>
				</block>
			</block>
		</block>
	</block>
	<block className="WrongLoginAndPassword">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
		<bind name="watch" value="'notificationText';	_emailWrongSymbolInputed	?	tr('IDS_ACCOUNT_COMPLETION_EMAIL_WRONG_CHARACTERS') :
										_passWrongSymbolInputed		?	tr('IDS_ACCOUNT_COMPLETION_PASSWORD_WRONG_CHARACTERS') :
										_isLoginInvalid				?	tr('IDS_ACCOUNT_ERROR_LOGIN_INVALID') :
										_isPasswordInvalid			?	subst('IDS_ACCOUNT_ERROR_PASSWORD_MIN_LENGTH', [], {minCharsPwd: realmConstants.passMinLengthWgnr}) :
										_messageText				?	subst(_messageText, [], {minCharsPwd: realmConstants.passMinLengthWgnr})
																	:	null"/>
		<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 2"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginBottom value="-7px"/>
				<marginTop value="-8px"/>
			</style>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<marginTop value="1px"/>
					<marginBottom value="1px"/>
				</style>
				<block className="DeclareBlurLayer">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="transparentPixel" type="native">
						<bind name="blurLayer" value="0"/>
					</block>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block className="BlurMapCustom">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap3" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
			</block>
			<block className="notification_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<bind name="instance" value="'WarningMessage'; { _delay: 0, _startTop: _startTop, _text: notificationText, _maxWidth: _maxWidth}"/>
		</block>
		<block className="button_close" type="native">
			<style>
				<position value="absolute"/>
				<right value="12px"/>
				<top value="4px"/>
			</style>
			<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_CLOSE'}"/>
			<bind name="dispatch" value="'click'; 'hideWrongMessageEv'; {}"/>
		</block>
	</block>
	<block className="CodeModal">
		<style>
			<width value="100%"/>
		</style>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 0.5 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 0.5 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<position value="absolute"/>
					<top value="1px"/>
				</style>
				<bind name="instance" value="'BackButton';   (accountComplitionState == 1) ? 	{_text: 'IDS_ACCOUNT_BACK_BUTTON_NAME', _action: 'SteamContext.resetCompletion'}
										  																		: null"/>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'ModalWindowHeader'; { _header: 'IDS_ACCOUNT_COMPLETION_HEADER_1', _headerWidth: '600px', _innerCloseButton: false}"/>
			</block>
		</block>
		<block type="text">
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 0.5 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 0.5 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<style>
				<width value="100%"/>
				<marginTop value="24px"/>
				<textAlign value="center"/>
				<marginBottom value="32px"/>
				<styleSheet value="h3
				{
					font-family: $WWSDefaultFontBold;
				}"/>
			</style>
			<styleClass value="$TextDefault19NM"/>
			<bind name="text" value="subst('IDS_ACCOUNT_COMPLETION_HINT_3', [], {login: userEmail})"/>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 1 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 1 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<styleClass value="$MiddleAligned"/>
			<block>
				<style>
					<position value="absolute"/>
					<top value="7px"/>
					<right value="100%"/>
					<paddingRight value="8"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefault17NM"/>
					<text value="IDS_CONFIRMATION_KEY"/>
				</block>
			</block>
			<block>
				<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 1.5 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
				<bind name="appear" value="'startHide'; 0.15; 1.5 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
				<style>
					<width value="210px"/>
				</style>
				<block className="text_input_caps" type="native">
					<params>
						<param name="name" value="codeConfirmationField"/>
					</params>
					<style>
						<width value="100%"/>
					</style>
					<params>
						<param name="actAsButton" value="true"/>
						<param name="itemRenderer" value="drop_down_list_item"/>
						<param name="maxChars" value="100"/>
						<param name="soundSet" value="hard_textinput"/>
					</params>
					<bind name="enabled" value="true"/>
					<bind name="defaultText" value="'IDS_ACCOUNT_INPUT_TEXT_CONFIRMATION_CODE'"/>
					<bind name="action" value="'textInputEnter'; 'SteamContext.activateAccount'; {activationCode: code }"/>
					<bind name="dispatch" value="'change'; 'hideWrongMessageEv'; {}"/>
					<bind name="restrict" value="realmConstants.loginRestrict"/>
					<bind name="soundOn" value="'click'; 'press'; 'default_button'"/>
					<bind name="sync" value="'text'; 'change'; code; 'evCodeChanged'"/>
					<bind name="focus" value="0, true"/>
					<params>
						<param name="name" value="codeField"/>
					</params>
				</block>
			</block>
			<block>
				<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
				<bind name="appear" value="'startHide'; 0.15; 2 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
				<style>
					<position value="absolute"/>
					<bottom value="32px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<bind name="dispatch" value="'click'; 'hideWrongMessageEv'; {}"/>
				<bind name="instance" value="'ServerMessage'; error != ''	? {	_messageHighlight: false, _headerText: '',
																			_messageText: errorIDS}
															: null"/>
			</block>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2.5 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 2.5 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginTop value="24px"/>
				<width value="210px"/>
			</style>
			<block className="button_special_no_label" type="native">
				<style>
					<width value="100%"/>
					<height value="51px"/>
				</style>
				<bind name="soundSet" value="'hard_button'"/>
				<bind name="action" value="'buttonClick'; 'SteamContext.activateAccount'; {activationCode: code }"/>
				<params>
					<param name="name" value="completeBtn"/>
				</params>
				<bind name="focus" value="1"/>
				<block type="text">
					<styleClass value="$MiddleVAligned"/>
					<style>
						<hitTest value="false"/>
						<width value="100%"/>
						<textAlign value="center"/>
						<marginLeft value="6px"/>
						<marginRight value="6px"/>
						<fontSize value="21px"/>
					</style>
					<styleClass value="$TextDefaultBold"/>
					<bind name="text" value="toUpperCase(tr('IDS_ACCOUNT_COMPLETION_BTN_CONFIRM'))"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2.5 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 2.5 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginTop value="16px"/>
			</style>
			<bind name="instance" value="'ButtonSendConfirmationKey'; (userEmail.length &gt; 0) ? {_userEmail: userEmail, _password: password, _sendButtonConfirmationKeyEnabled: !(isServerTimeout), _countdownText: countdownText} : null"/>
		</block>
	</block>
	<block className="AccountDoneModal">
		<style>
			<width value="100%"/>
		</style>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 0.5 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 0.5 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'ModalWindowHeader'; { _header: 'IDS_ACCOUNT_COMPLETION_HEADER_2', _headerWidth: '600px', _innerCloseButton: false}"/>
			</block>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 1 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 1 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginTop value="48px"/>
				<marginBottom value="16px"/>
			</style>
			<block className="icon_check" type="native">
				<styleClass value="$MiddleVAligned"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefaultBold19NM"/>
				<styleClass value="$FontColorGolden"/>
				<style>
					<marginLeft value="8px"/>
				</style>
				<bind name="text" value="toUpperCase(tr('IDS_ACCOUNT_COMPLETION_FINISH_SUBHEADER'))"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 2 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 2 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<styleClass value="$MiddleAligned"/>
			<style>
				<align value="center|middle"/>
				<marginBottom value="48px"/>
			</style>
			<bind name="firstEntityDH" value="'completionRewardsEntity'; CC.completionRewards"/>
			<bind name="watchDH" value="'rewards';[]; completionRewardsEntity.completionRewards.rewards"/>
			<bind name="repeat" value="rewards; 'CompleteAccountRewardItemAdapter'; {_openedLootboxRewards: rewards}"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 3 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="appear" value="'startHide'; 0.15; 3 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
			<styleClass value="$MiddleAligned"/>
			<style>
				<width value="100px"/>
			</style>
			<block className="DefaultButtonModal">
				<styleClass value="$InfoLineBoundaries"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="name" value="'Modal_window_action_Button' + 'IDS_CLOSE_UPPER_CASE'"/>
				<block className="button_default" type="native">
					<style>
						<width value="100%"/>
					</style>
					<bind name="label" value="'IDS_CLOSE_UPPER_CASE'"/>
					<params>
						<param name="name" value="btn_cancel"/>
					</params>
					<bind name="input"/>
					<bind name="focus" value="3;false"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ButtonSendConfirmationKey">
		<bind name="tooltip" value="'TimerTooltip'; _sendButtonConfirmationKeyEnabled ? null : {_text: '-' + _countdownText, _isInBattle: false}"/>
		<style>
			<backgroundColor value="0x01000000"/>
		</style>
		<block>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
			<style>
				<width value="200px"/>
				<height value="48px"/>
			</style>
			<bind name="style" value="'hitTest'; _sendButtonConfirmationKeyEnabled"/>
			<bind name="transition" value="_sendButtonConfirmationKeyEnabled; 0.15; {alpha: 0.3}; {alpha: 1}"/>
			<bind name="action" value="'click'; 'SteamContext.completeAccount'; {login: _userEmail, password: _password }"/>
			<bind name="dispatch" value="'click'; 'restartServerTimeout'"/>
			<block className="button_infopanel_no_label" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block type="text">
				<style>
					<hitTest value="false"/>
					<width value="100%"/>
					<textAlign value="center"/>
					<marginLeft value="6px"/>
					<marginRight value="6px"/>
					<leading value="-3"/>
					<marginTop value="12px"/>
				</style>
				<styleClass value="$TextDefaultBold"/>
				<bind name="transition" value="rollOver; 0.1; {alpha: 0.5}; {alpha: 1}"/>
				<bind name="text" value="toUpperCase(tr('IDS_ACCOUNT_COMPLETION_NO_CONFIRMATION'))"/>
			</block>
		</block>
	</block>
	<block className="ShipRestrictions">
		<style>
			<height value="21px"/>
			<flow value="horizontal"/>
			<marginRight value="4px"/>
		</style>
		<bind name="style" value="'flow'; _flow ? _flow : 'horizontal'"/>
		<bind name="style" value="'width'; _width ? _width : 'auto'"/>
		<bind name="entityDH" value="'restrictionsEntity'; _restrictionsEntityId"/>
		<bind name="watchDH" value="'shipRestrictions' ; ['restrictionsEntity.shipRestrictions.evUpdate']; restrictionsEntity.shipRestrictions.selectedFilters"/>
		<bind name="watchDH" value="'shipsCount' ; ['restrictionsEntity.divisionRestrictions.evUpdate']; restrictionsEntity.divisionRestrictions.shipsCount"/>
		<bind name="watchDH" value="'typesCount' ; ['restrictionsEntity.divisionRestrictions.evUpdate']; restrictionsEntity.divisionRestrictions.typesCount"/>
		<bind name="entityDH" value="'defaultRestrictionsEntity'; _defaultRestrictionsEntityId"/>
		<bind name="watchDH" value="'defaultTypesCount' ; ['defaultRestrictionsEntity.divisionRestrictions.evUpdate']; defaultRestrictionsEntity.divisionRestrictions.typesCount"/>
		<bind name="watch" value="'isAllShipTypesAllowed'; 	shipTypefilters.length == ShipTypes.AVAILABLE_TYPES.length"/>
		<bind name="collectionDH" value="CC.shipFilterItem; 'idsfilters'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'idsfilters'+'ROOT'; 'idsfilters'; {'filter':$entity.shipFilterItem.type == 'shipId' &amp;&amp; isIn($entity.id, shipRestrictions)}; []"/>
		<bind name="collectionDH" value="CC.shipFilterItem; 'shipTypefilters'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'shipTypefilters'+'ROOT'; 'shipTypefilters'; {'filter':$entity.shipFilterItem.type == 'shipType' &amp;&amp; isIn($entity.id, shipRestrictions)}; []"/>
		<bind name="collectionDH" value="CC.shipFilterItem; 'levelfilters'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'levelfilters'+'ROOT'; 'levelfilters'; {'filter':$entity.shipFilterItem.type == 'level' &amp;&amp; isIn($entity.id, shipRestrictions)}; []"/>
		<bind name="collectionDH" value="CC.shipFilterItem; 'nationfilters'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'nationfilters'+'ROOT'; 'nationfilters'; {'filter':$entity.shipFilterItem.type == 'nation' &amp;&amp; isIn($entity.id, shipRestrictions)}; []"/>
		<bind name="collectionFields" value="levelfilters; ['shipFilterItem.field']"/>
		<bind name="contains" value="typesCount; $item[1] == -1; 'isAnyShipTypeNotAllowed'"/>
		<bind name="watch" value="'isCarriersRestricted'; typesCount[ShipTypes.AircraftCarrier] &amp;&amp; typesCount[ShipTypes.AircraftCarrier][1] != (defaultRestrictionsEntity ? defaultTypesCount[ShipTypes.AircraftCarrier][1] : 0)"/>
		<bind name="watch" value="'isBattleShipsRestricted'; typesCount[ShipTypes.BattleShip] &amp;&amp; typesCount[ShipTypes.BattleShip][1] != (defaultRestrictionsEntity ? defaultTypesCount[ShipTypes.BattleShip][1] : 0)"/>
		<bind name="watch" value="'isCruisersRestricted'; typesCount[ShipTypes.Cruiser] &amp;&amp; typesCount[ShipTypes.Cruiser][1] != (defaultRestrictionsEntity ? defaultTypesCount[ShipTypes.Cruiser][1] : 0)"/>
		<bind name="watch" value="'isDestroyersRestricted'; typesCount[ShipTypes.Destroyer] &amp;&amp; typesCount[ShipTypes.Destroyer][1] != (defaultRestrictionsEntity ? defaultTypesCount[ShipTypes.Destroyer][1] : 0)"/>
		<bind name="watch" value="'isSubmarinesRestricted'; typesCount[ShipTypes.Submarine] &amp;&amp; typesCount[ShipTypes.Submarine][1] != (defaultRestrictionsEntity ? defaultTypesCount[ShipTypes.Submarine][1] : 0)"/>
		<bind name="watch" value="'isAnyShipTypeRestricted'; isCarriersRestricted || isBattleShipsRestricted || isCruisersRestricted || isDestroyersRestricted || isSubmarinesRestricted"/>
		<bind name="watch" value="'hasRestrictions'; (idsfilters.length &gt; 0)			||
									(shipTypefilters.length &gt; 0)	||
									(levelfilters.length &gt; 0)		||
									(nationfilters.length &gt; 0)		||
									(isAnyShipTypeRestricted)"/>
		<bind name="watch" value="'shipTypeFiltersEnabled'; shipTypefilters.length &gt; 0"/>
		<bind name="watch" value="'isShipFilterRestrictionsVisible'; isAnyShipTypeRestricted &amp;&amp; (isAnyShipTypeNotAllowed || _withShipTypeCounters) &amp;&amp; !(shipTypeFiltersEnabled)"/>
		<block>
			<bind name="visible" value="(idsfilters.length &gt; 0)"/>
			<style>
				<marginRight value="4px"/>
				<marginTop value="-2px"/>
			</style>
			<bind name="repeat" value="idsfilters; 'ConcreteShipRestriction'; (idsfilters.length &gt; 0)	? {_concreteShipsLength: idsfilters.length}
																						: null"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="	(idsfilters.length &gt; 0)					&amp;&amp;
						(
							(levelfilters.length &gt; 0) 			|| 
							(nationfilters.length &gt; 0)			||
							(isAnyShipTypeRestricted == true)
						)"/>
			<style>
				<height value="21px"/>
				<marginRight value="4px"/>
			</style>
			<block className="VerticalDivider">
				<style>
					<height value="100%"/>
					<width value="3px"/>
				</style>
				<block className="divider_v" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<marginTop value="-2px"/>
			</style>
			<bind name="visible" value="(levelfilters.length &gt; 0)"/>
			<bind name="repeat" value="reduceAppliedValues(levelfilters_shipFilterItem_field); 'ShipLevelRome'"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="	(levelfilters.length &gt; 0)				&amp;&amp;
						(
							(shipTypeFiltersEnabled)		||
                        	(nationfilters.length &gt; 0)			||
							(isShipFilterRestrictionsVisible)
						)"/>
			<style>
				<height value="21px"/>
				<marginRight value="4px"/>
			</style>
			<block className="VerticalDivider">
				<style>
					<height value="100%"/>
					<width value="3px"/>
				</style>
				<block className="divider_v" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="(isShipFilterRestrictionsVisible)"/>
			<style>
				<alpha value="0.9"/>
				<marginTop value="5px"/>
			</style>
			<bind name="instance" value="'ShipFilterRestrictions'; isShipFilterRestrictionsVisible ? {_filters: typesCount, _withShipTypeCounters: _withShipTypeCounters} : null"/>
		</block>
		<block>
			<bind name="visible" value="isShipFilterRestrictionsVisible &amp;&amp; ((shipTypeFiltersEnabled) &amp;&amp; !(isAllShipTypesAllowed))"/>
			<style>
				<height value="21px"/>
				<marginRight value="4px"/>
			</style>
			<block className="VerticalDivider">
				<style>
					<height value="100%"/>
					<width value="3px"/>
				</style>
				<block className="divider_v" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="(shipTypeFiltersEnabled) &amp;&amp; !(isAllShipTypesAllowed)"/>
			<style>
				<marginRight value="4px"/>
			</style>
			<bind name="repeat" value="shipTypefilters; 'IconShipClasses'; (shipTypefilters.length &gt; 0)	? {_shipTypefiltersLength: shipTypefilters.length}
																						: null"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="	(nationfilters.length &gt; 0) &amp;&amp; ((shipTypeFiltersEnabled) &amp;&amp; !(isAllShipTypesAllowed))"/>
			<style>
				<height value="21px"/>
				<marginRight value="4px"/>
			</style>
			<block className="VerticalDivider">
				<style>
					<height value="100%"/>
					<width value="3px"/>
				</style>
				<block className="divider_v" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="(nationfilters.length &gt; 0)"/>
			<style>
				<marginRight value="4px"/>
			</style>
			<bind name="repeat" value="nationfilters; 'ShipNationsRestriction'; (nationfilters.length &gt; 0)	? {_shipNationsLength: nationfilters.length}
																							: null"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="!hasRestrictions &amp;&amp; _noRestrictionsText"/>
			<style>
				<alpha value="0.9"/>
				<marginRight value="4px"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefaultWhite"/>
				<bind name="text" value="_noRestrictionsText"/>
			</block>
		</block>
	</block>
	<block className="ShipFilterRestrictions">
		<style>
			<flow value="horizontal"/>
		</style>
		<bind name="instance" value="'ShipFilterRestriction'; {_shipType: ShipTypes.Destroyer,		_filter: _filters[ShipTypes.Destroyer],			_withShipTypeCounters: _withShipTypeCounters}"/>
		<bind name="instance" value="'ShipFilterRestriction'; {_shipType: ShipTypes.Cruiser,			_filter: _filters[ShipTypes.Cruiser],			_withShipTypeCounters: _withShipTypeCounters}"/>
		<bind name="instance" value="'ShipFilterRestriction'; {_shipType: ShipTypes.BattleShip,		_filter: _filters[ShipTypes.BattleShip],		_withShipTypeCounters: _withShipTypeCounters}"/>
		<bind name="instance" value="'ShipFilterRestriction'; {_shipType: ShipTypes.AircraftCarrier,	_filter: _filters[ShipTypes.AircraftCarrier],	_withShipTypeCounters: _withShipTypeCounters}"/>
	</block>
	<block className="ShipFilterRestriction">
		<bind name="visible" value="(_filter[1] != -1)"/>
		<style>
			<flow value="horizontal"/>
			<marginRight value="4px"/>
		</style>
		<bind name="collectionDH" value="CC.shipFilterItem; 'typeFilter'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'typeFilter'+'ROOT'; 'typeFilter'; {'filter':$entity.shipFilterItem.type == 'shipType' &amp;&amp; $entity.shipFilterItem.field == _shipType}; []"/>
		<bind name="style" value="'marginLeft'; (_shipType == ShipTypes.Destroyer) ? '-3px' : '0px'"/>
		<block className="icon_ship" type="native">
			<style>
				<marginRight value="2px"/>
			</style>
			<bind name="gotoAndStop!" value="_shipType"/>
		</block>
		<block>
			<bind name="visible" value="((_filter[1] &gt; 0 || _filter[1] == -1) &amp;&amp; _withShipTypeCounters)"/>
			<block type="text">
				<styleClass value="$TextDefaultNM"/>
				<bind name="class" value="'$Bold'"/>
				<bind name="text" value="((_filter[0] == _filter[1]) ? _filter[0]
													: (_filter[0] + '-' + _filter[1]))"/>
			</block>
		</block>
	</block>
	<block className="ShipNationsRestriction">
		<bind name="entityDH" value="'filterEntity'; id"/>
		<bind name="style" value="'marginRight'; ($index &lt; _shipNationsLength - 1) ? '4px' : '0px'"/>
		<bind name="instance" value="'NationFlagsTiny'; {shipCountry: filterEntity.shipFilterItem.field}"/>
	</block>
	<block className="ConcreteShipRestriction">
		<bind name="style" value="'marginRight'; ($index &lt; _concreteShipsLength) ? '4px' : '0px'"/>
		<bind name="dataRefDH" value="'filterEntity'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'shipId'; ['filterEntity.shipFilterItem.evUpdate']; filterEntity.shipFilterItem.field"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; Number(shipId); 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<block type="text">
			<styleClass value="$TextHeaderBigDefault"/>
			<style>
				<marginLeft value="-4px"/>
				<marginRight value="-4px"/>
			</style>
			<bind name="text" value="toUpperCase(tr(shipInfo.nameIDS)) + (($index &lt; _concreteShipsLength - 1) ? ', ' : '')"/>
		</block>
	</block>
	<block className="IconShipClasses">
		<bind name="style" value="'marginRight'; ($index &lt; _shipTypefiltersLength - 1) ? '4px' : '0px'"/>
		<bind name="entityDH" value="'filterEntity'; id"/>
		<block className="icon_ship" type="native">
			<style>
				<marginTop value="6px"/>
			</style>
			<bind name="gotoAndStop!" value="filterEntity.shipFilterItem.field"/>
		</block>
	</block>
	<block className="UnavailableLootboxTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<style>
				<position value="absolute"/>
			</style>
			<styleClass value="$Fullsize"/>
		</block>
		<block>
			<style>
				<width value="280px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'LootboxWithLabel'; { _lootboxAvailable: false }"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<style>
					<margin value="15px|12px"/>
				</style>
				<block>
					<style>
						<marginBottom value="10px"/>
					</style>
					<bind name="instance" value="'ExpToLootbox'; { _expToLootbox: format(_expToLootbox, -1) }"/>
				</block>
				<block>
					<bind name="instance" value="'LootboxProgressBar'; {_width: 250, _height: 4, _curValue: _lootProgress}"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ExpToLootbox">
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<style>
					<alpha value="0.7"/>
					<marginRight value="8px"/>
				</style>
				<styleClass value="$TextDefaultNM"/>
				<bind name="text" value="'IDS_EXP_LEFT'"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefaultNM"/>
				<bind name="text" value="_expToLootbox"/>
			</block>
			<block className="icon_exp_small" type="native">
				<style>
					<marginLeft value="2"/>
				</style>
				<styleClass value="$MiddleVAligned"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="LootboxProgressBar">
		<bind name="style" value="'width'; _width+'px'"/>
		<bind name="style" value="'height'; _height+'px'"/>
		<block className="indicator_progress_bar_yellow" type="native">
			<styleClass value="$Fullsize"/>
			<bind name="value" value="_curValue"/>
		</block>
	</block>
	<block className="LootboxWithLabel">
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="12px"/>
				<marginTop value="4px"/>
				<marginRight value="12px"/>
				<marginBottom value="4px"/>
			</style>
			<block>
				<style>
					<width value="32px"/>
					<height value="32px"/>
					<marginRight value="12px"/>
				</style>
				<bind name="instance" value="'BannerItemIcon'; { _iconUrl: _lootboxAvailable ? 'url:../service_kit/port_banner/icon_banner_container.png' : 'url:../service_kit/port_banner/icon_banner_container_lock.png' }"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault17NM"/>
				<style>
					<marginTop value="10px"/>
				</style>
				<bind name="class" value="_lootboxAvailable ? '$FontColorGolden' : '$FontColorWhite'"/>
				<bind name="text" value="_lootboxAvailable ? 'IDS_LOOTBOX_AVAILABLE' : 'IDS_LOOTBOX_NOT_AVAILABLE'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<css name="$FontColorBlackArc">
		<textColor value="0xff000000"/>
	</css>
	<css name="$FontColorMilestonePaper">
		<textColor value="0xeefcf8cb"/>
	</css>
	<css name="$FontColorGreenArc">
		<textColor value="0xee69c848"/>
	</css>
	<css name="$ColorBlackArc">
		<backgroundColor value="0xee3f4a4f"/>
	</css>
	<css name="$ColorOfMilestoneDivider">
		<backgroundColor value="0xee69c848"/>
	</css>
	<css name="$ColorOfSelectedElement">
		<backgroundColor value="0xff6cd049"/>
	</css>
	<css name="$TextMilestoneBold19NM">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="19"/>
		<marginText value="-3px|-3px|-8px|-6px"/>
		<dropShadowFilter value="0 0 0x000000 0 0 0 0 0"/>
		<selectable value="false"/>
		<textColor value="0xee69c848"/>
	</css>
	<css name="$TextMilestone19NM">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="19"/>
		<marginText value="-3px|-3px|-7px|-5px"/>
		<dropShadowFilter value="0 0 0x000000 0 0 0 0 0"/>
		<selectable value="false"/>
		<textColor value="0xee69c848"/>
	</css>
	<css name="$TextMilestone17NM">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="19"/>
		<marginText value="-3px|-3px|-7px|-5px"/>
		<dropShadowFilter value="0 0 0x000000 0 0 0 0 0"/>
		<selectable value="false"/>
		<textColor value="0xee69c848"/>
	</css>
	<block className="ModalMilestoneScreen">
		<bind name="collectionDH" value="CC.sseTask; 'tasksCollection'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'tasksCollection'+'ROOT'; 'tasksCollection'; {'filter': $entity.sseTask.epicId == selectedEpic, 'sort':['sseTask.isDone', 'sseTask.sortId'], 'sortOrder':[0, SortType.DESCENDING]}; []"/>
		<bind name="collectionDH" value="CC.sseEpic; 'epics'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'epics'+'ROOT'; 'epics'; {'sort':['sseEpic.sortId'], 'sortOrder':[SortType.DESCENDING]}; []"/>
		<bind name="firstEntityDH" value="'windowEntity'; CC.sseWindowState"/>
		<bind name="watchDH" value="'windowState'; ['windowEntity.sseWindowState.evChanged']; windowEntity.sseWindowState.state"/>
		<bind name="watchDH" value="'selectedEpic'; ['windowEntity.sseWindowState.evChanged']; windowEntity.sseWindowState.selectedEpic"/>
		<bind name="firstEntityDH" value="'enterBattleEntity'; CC.enterBattle"/>
		<bind name="watchDH" value="'sseBattleTypes'; ['enterBattleEntity.enterBattle.evSseBattleTypesChanged']; enterBattleEntity.enterBattle.sseBattleTypes"/>
		<bind name="stageSize"/>
		<bind name="stageSize"/>
		<bind name="watch" value="'widthCoef'; 	(stageWidth / 1280)"/>
		<bind name="watch" value="'heightCoef'; 	(stageHeight / 720)"/>
		<bind name="watch" value="'scaleCoef'; 	math.min(widthCoef, heightCoef)"/>
		<bind name="var" value="{correctedCoef: 0.77}"/>
		<bind name="watch" value="'correctedScaleCoef'; (scaleCoef * correctedCoef) &gt; 1 ? 1 : (scaleCoef * correctedCoef)"/>
		<bind name="watch" value="'lightScreenWidth'; 		math.round(1200 * correctedScaleCoef)"/>
		<bind name="watch" value="'lightScreenHeight'; 		math.round(720 * correctedScaleCoef)"/>
		<bind name="watch" value="'overLightScreenWidth'; 		math.round(1300 * correctedScaleCoef)"/>
		<bind name="watch" value="'overLightScreenHeight'; 	math.round(820 * correctedScaleCoef)"/>
		<bind name="watch" value="'headerHeight'; 			150"/>
		<bind name="catch" value="'epicTaskClick'"/>
		<bind name="catch" value="'milestoneTaskClick'"/>
		<bind name="watch" value="'buttonLabel'; (windowState == 'epic_new')			? 'IDS_ARC_EVENT_GO_FURTHER' :
								(windowState == 'leaderboard_new') 	? toUpperCase(tr('IDS_MILESTONE_LEADERBOARD'))								
																	: 'IDS_CLOSE_UPPER_CASE'"/>
		<bind name="stageSize"/>
		<bind name="soundOn" value="'windowState + varChanged'; 'milestone_state_changed'"/>
		<bind name="watch" value="'delay'; 0.1"/>
		<bind name="var" value="{inset: 0}"/>
		<bind name="catch" value="'changeMilestoneInset'"/>
		<bind name="var" value="{windowAppearLag: 0.1}"/>
		<bind name="appear" value="'addedToStage'; 0.15; windowAppearLag + 1 * 0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
		<bind name="appear" value="'startHide'; 0.15; 1 * 0.055; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
		<styleClass value="$Fullsize"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundSize value="cover"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:../events/british_event/bg_art/arc_bg.png'"/>
			<bind name="appear" value="'startHide'; 0.15; 0.35; {alpha: 1}; {alpha: 0}"/>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="visible" value="windowState == 'standard'"/>
			<block>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$MiddleVAligned"/>
				<block>
					<style>
						<width value="110px"/>
						<height value="445px"/>
						<marginTop value="-15px"/>
						<marginRight value="1280:0,1920:25aw"/>
						<backgroundImage value="url:../events/british_event/icons_epic/milestone_epics_bg.png"/>
						<backgroundSize value="cover"/>
					</style>
					<block>
						<bind name="repeat" value="epics; 'MilestoneEpicItem'; {}"/>
					</block>
				</block>
				<block>
					<bind name="style" value="'width'; lightScreenWidth + 'px'"/>
					<bind name="style" value="'height'; lightScreenHeight + 'px'"/>
					<block>
						<style>
							<backgroundSize value="cover"/>
							<hitTest value="false"/>
						</style>
						<styleClass value="$FullsizeAbsolute"/>
						<bind name="style" value="'backgroundImage'; 'url:../events/british_event/bg_art/bg_art.png'"/>
					</block>
					<block>
						<styleClass value="$FullsizeAbsolute"/>
						<bind name="child" value="inset; {	_tasksCollection: tasksCollection, 
											_selectedEpic: selectedEpic, 
											currentTaskId: currentTaskId,
											_battleTypes: sseBattleTypes, 
											_availableBattleTypes: sseBattleTypes, 
											_headerHeight: headerHeight, 
											_lightScreenWidth: lightScreenWidth, 
											_lightScreenHeight: lightScreenHeight, 
											_delay: delay
											};
											'MilestoneTaskWindow'; 'MilestoneRulesWindow'"/>
					</block>
					<block>
						<styleClass value="$MiddleVHAbsolutely"/>
						<style>
							<backgroundSize value="cover"/>
							<hitTest value="false"/>
						</style>
						<bind name="style" value="'width'; 	overLightScreenWidth + 'px'"/>
						<bind name="style" value="'height'; 	overLightScreenHeight + 'px'"/>
						<bind name="style" value="'backgroundImage'; 'url:../events/british_event/bg_art/task_window_border.png'"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="windowState != 'standard'"/>
			<style>
				<backgroundColor value="0xcc000000"/>
			</style>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="instance" value="'MilestonePoster'; (windowState != 'standard') 	? { _label: buttonLabel,
																				_url: ('url:../events/british_event/posters/' + windowState + '.png'),
																				_text: ('IDS_MILESTONE_POSTER_' + toUpperCase(windowState)), 
																				_action: (windowState != 'no_milestones') ? 'SSEProxyCommonUSS.setScreenSeen' : null, 
																				_request: 	(windowState == 'leaderboard_new') ? 'webBrowser' : 
																							(windowState == 'no_milestones') ? 'goToPort' : null, 
																				_requestParams: (windowState == 'leaderboard_new') ? {url: URL.EVENT_LEADER_BOARD_IN_GAME} : null}
																			: null"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<position value="absolute"/>
			</style>
			<bind name="instance" value="'ModalWindowHeaderFullSize'; { _hideBackButton: true, _hideDivider: true }"/>
		</block>
	</block>
	<block className="MilestoneTaskWindow">
		<styleClass value="$FullsizeAbsolute"/>
		<style>
			<flow value="horizontal"/>
			<margin value="40"/>
		</style>
		<block>
			<style>
				<height value="100%"/>
				<width value="66%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<marginBottom value="8"/>
				</style>
				<bind name="instance" value="'MilestoneEpicDescr'; {}"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<alpha value="0.5"/>
				</style>
				<bind name="instance" value="'MilestoneDivider'; { _height: '2px' }"/>
			</block>
			<block>
				<styleClass value="$Fullsize"/>
				<styleClass value="$DefaultScrollBar"/>
				<style>
					<overflow value="scroll"/>
				</style>
				<bind name="appear" value="_selectedEpic + varChanged; 0.1; 0.1; {alpha: 0}; {alpha: 1}"/>
				<bind name="repeat" value="_tasksCollection; 'MilestoneTaskItem'; { 	currentTaskId: currentTaskId}"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<alpha value="0.5"/>
				</style>
				<bind name="instance" value="'MilestoneDivider'; { _height: '2px' }"/>
			</block>
		</block>
		<block>
			<style>
				<height value="100%"/>
				<width value="33%"/>
			</style>
			<bind name="instance" value="'MilestoneLeaderBoard'; {}"/>
		</block>
	</block>
	<block className="MilestoneEpicItem">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="soundSet" value="'default_button'"/>
		<bind name="firstEntityDH" value="'windowEntity'; CC.sseWindowState"/>
		<bind name="watchDH" value="'selectedEpic'; ['windowEntity.sseWindowState.evChanged']; windowEntity.sseWindowState.selectedEpic"/>
		<bind name="watchDH" value="'windowState'; ['windowEntity.sseWindowState.evChanged']; windowEntity.sseWindowState.state"/>
		<bind name="entityDH" value="'epicEntity'; id"/>
		<bind name="watchDH" value="'isDone'; ['epicEntity.sseEpic.evChanged']; epicEntity.sseEpic.isDone"/>
		<bind name="watchDH" value="'state'; ['epicEntity.sseCore.evChanged']; epicEntity.sseCore.state"/>
		<bind name="watch" value="'isLocked'; 		state == 0"/>
		<bind name="watch" value="'isActive'; 		state == 1"/>
		<bind name="watch" value="'isSelected'; 		selectedEpic == epicEntity.sseCore.id"/>
		<bind name="watch" value="'epicState'; 		isActive ? 'epic_active' : 'epic_disable'"/>
		<bind name="watch" value="'epicMouseState'; 	isSelected  ? '_on_' :
									rollOver	? '_over_'
												: '_off_'"/>
		<bind name="watch" value="'epicIndex'; 		$index + 1"/>
		<bind name="watch" value="'epicImgPath'; 	'url:../events/british_event/icons_epic/' + epicState + epicMouseState + epicIndex + '.png'"/>
		<bind name="soundOn" value="'click'; 'press'; 'milestone_epic_item'"/>
		<bind name="action" value="'click'; 'SSEProxyCommonUSS.setEpicSeen'; { epicId: epicEntity.sseCore.id }"/>
		<bind name="dispatch" value="'click'; 'epicTaskClick'; {	currentTaskId: -1 }"/>
		<bind name="dispatch" value="'click'; 'changeMilestoneInset'; {inset: 0}"/>
		<bind name="action" value="'click'; 'resetTask'; {}"/>
		<bind name="stageSize"/>
		<bind name="watch" value="'widthCoef'; 	(stageWidth / 1280)"/>
		<bind name="watch" value="'heightCoef'; 	(stageHeight / 720)"/>
		<bind name="watch" value="'scaleCoef'; 	math.min(widthCoef, heightCoef)"/>
		<style>
			<width value="70px"/>
			<height value="70px"/>
			<backgroundSize value="cover"/>
		</style>
		<bind name="tooltip" value="'MilestoneEpicItemTooltip'; { _epicEntityId: id }"/>
		<bind name="style" value="'marginTop'; 	epicIndex == 1 ? '18px' :
								epicIndex == 2 ? '16px' :
								epicIndex == 3 ? '21px' :
								epicIndex == 4 ? '29px' :
												 '0px'"/>
		<bind name="style" value="'marginLeft'; 	epicIndex == 1 ? '20px' :
								epicIndex == 2 ? '22px' :
								epicIndex == 3 ? '23px' :
								epicIndex == 4 ? '24px' :
												 '0px'"/>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="style" value="'backgroundImage'; epicImgPath"/>
		</block>
		<block>
			<bind name="visible" value="isLocked"/>
			<styleClass value="$MiddleVHAbsolutely"/>
			<style>
				<width value="40px"/>
				<height value="40px"/>
			</style>
			<bind name="transition" value="(isLocked); 0.15; {alpha: 0}; {alpha: 0.9}"/>
			<bind name="style" value="'backgroundImage'; 'url:../events/british_event/icons_epic/epic_disable.png'"/>
		</block>
		<block>
			<bind name="visible" value="isDone"/>
			<styleClass value="$MiddleVHAbsolutely"/>
			<style>
				<width value="40px"/>
				<height value="40px"/>
			</style>
			<bind name="transition" value="(isDone); 0.15; {alpha: 0}; {alpha: 0.9}"/>
			<bind name="style" value="'backgroundImage'; 'url:../events/british_event/icons_epic/epic_done.png'"/>
		</block>
	</block>
	<block className="MilestoneTaskItem">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="entityDH" value="'tasksEntity'; id"/>
		<bind name="watchDH" value="'epicId'; 			['tasksEntity.sseTask.evChanged']; tasksEntity.sseTask.epicId"/>
		<bind name="watchDH" value="'precondIds'; 		['tasksEntity.sseTask.evChanged']; tasksEntity.sseTask.precondIds"/>
		<bind name="watchDH" value="'addcondIds'; 		['tasksEntity.sseTask.evChanged']; tasksEntity.sseTask.addcondIds"/>
		<bind name="watchDH" value="'aftercondIds'; 		['tasksEntity.sseTask.evChanged']; tasksEntity.sseTask.aftercondIds"/>
		<bind name="watchDH" value="'technoIds'; 		['tasksEntity.sseTask.evChanged']; tasksEntity.sseTask.technoIds"/>
		<bind name="watchDH" value="'conditionSet'; 		['tasksEntity.sseTask.evChanged']; tasksEntity.sseTask.conditionSet"/>
		<bind name="watchDH" value="'taskName'; 			['tasksEntity.sseTask.evChanged']; tasksEntity.sseTask.name"/>
		<bind name="watchDH" value="'rewards'; 			['tasksEntity.sseTask.evChanged']; tasksEntity.sseTask.rewards"/>
		<bind name="watchDH" value="'percentProgress';  	['tasksEntity.sseTask.evChanged']; tasksEntity.sseTask.percentProgress"/>
		<bind name="watchDH" value="'isDone'; 			['tasksEntity.sseTask.evChanged']; tasksEntity.sseTask.isDone"/>
		<bind name="watchDH" value="'orderString'; 		['tasksEntity.sseTask.evChanged']; tasksEntity.sseTask.orderString"/>
		<bind name="primaryEntityDH" value="'epicEntity'; CC.sseCore; epicId"/>
		<bind name="watchDH" value="'state'; ['epicEntity.sseEpic.evChanged']; epicEntity.sseCore.state"/>
		<bind name="watch" value="'showProgress'; (percentProgress &gt; 0) &amp;&amp; (percentProgress != 1)"/>
		<bind name="watch" value="'selectedTask'; currentTaskId == tasksEntity.sseCore.id"/>
		<bind name="watch" value="'isLocked'; state == 0"/>
		<bind name="dispatch" value="'click'; 'milestoneTaskClick'; { currentTaskId: !selectedTask ? tasksEntity.sseCore.id : ''}"/>
		<bind name="soundOn" value="'click'; 'press'; 'milestone_task_item'"/>
		<style>
			<width value="100%"/>
			<backgroundColor value="0x01000000"/>
		</style>
		<block>
			<bind name="transition" value="rollOver &amp;&amp; !selectedTask; 0.1; {alpha: 0}; {alpha: 0.1}"/>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="class" value="'$ColorOfSelectedElement'"/>
		</block>
		<block>
			<bind name="transition" value="selectedTask; 0.1; {alpha: 0}; {alpha: 0.2}"/>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="class" value="'$ColorOfSelectedElement'"/>
		</block>
		<block>
			<bind name="visible" value="$index != 0"/>
			<style>
				<position value="absolute"/>
				<width value="100%"/>
				<top value="0px"/>
				<alpha value="0.5"/>
			</style>
			<bind name="instance" value="'MilestoneDivider'; { _height: '1px' }"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="32"/>
				<marginBottom value="24"/>
				<marginTop value="24"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<maxWidth value="600"/>
				</style>
				<bind name="style" value="'alpha'; (isDone || isLocked) &amp;&amp; !selectedTask ? 0.4 : 1"/>
				<block>
					<bind name="visible" value="(taskName != '') &amp;&amp; (taskName != null)"/>
					<style>
						<width value="100%"/>
					</style>
					<block type="text">
						<style>
							<width value="100%"/>
							<leading value="-4"/>
						</style>
						<styleClass value="$TextDefaultBold25NM"/>
						<bind name="class" value="'$GlowDisabler'"/>
						<bind name="class" value="'$FontColorGreenArc'"/>
						<bind name="text" value="taskName"/>
					</block>
				</block>
				<block>
					<bind name="visible" value="(precondIds != '') &amp;&amp; (precondIds != null)"/>
					<style>
						<width value="100%"/>
						<marginTop value="16"/>
					</style>
					<block type="text">
						<style>
							<width value="100%"/>
						</style>
						<styleClass value="$TextDefault17NM"/>
						<bind name="class" value="'$GlowDisabler'"/>
						<bind name="class" value="'$FontColorGreenArc'"/>
						<bind name="text" value="precondIds"/>
					</block>
				</block>
				<block>
					<bind name="visible" value="(conditionSet.length &gt; 0)"/>
					<style>
						<width value="100%"/>
						<marginTop value="16"/>
					</style>
					<bind name="repeat" value="conditionSet; 'MilestoneConditionItem'; { _id: id }"/>
				</block>
				<block>
					<bind name="visible" value="selectedTask == true"/>
					<bind name="style" value="'marginLeft'; -12"/>
					<style>
						<width value="100%"/>
						<marginTop value="16"/>
					</style>
					<block className="ship_tree_element_frame" type="native">
						<styleClass value="$FullsizeAbsolute"/>
						<bind name="colorTransform" value=" {	redMultiplier: 0,
												greenMultiplier: 0,
												blueMultiplier: 0,
												alphaMultiplier: 0.7,
												redOffset: 107,
												greenOffset: 205,
												blueOffset: 73,
												alphaOffset: 0
												}"/>
					</block>
					<block>
						<style>
							<width value="100%"/>
							<marginLeft value="8"/>
							<marginRight value="8"/>
							<marginTop value="8"/>
							<marginBottom value="8"/>
						</style>
						<block>
							<bind name="visible" value="(aftercondIds != '') &amp;&amp; (aftercondIds != null)"/>
							<style>
								<width value="100%"/>
							</style>
							<block type="text">
								<style>
									<width value="100%"/>
								</style>
								<styleClass value="$TextHeaderBigDefault"/>
								<bind name="class" value="'$FontColorGreenArc'"/>
								<bind name="class" value="'$GlowDisabler'"/>
								<bind name="text" value="aftercondIds"/>
							</block>
						</block>
						<block>
							<bind name="visible" value="(addcondIds != '') &amp;&amp; (addcondIds != null)"/>
							<style>
								<width value="100%"/>
							</style>
							<block type="text">
								<style>
									<width value="100%"/>
								</style>
								<styleClass value="$TextHeaderBigDefault"/>
								<bind name="class" value="'$FontColorGreenArc'"/>
								<bind name="class" value="'$GlowDisabler'"/>
								<bind name="text" value="addcondIds"/>
							</block>
						</block>
						<block>
							<bind name="visible" value="(technoIds != '') &amp;&amp; (technoIds != null)"/>
							<style>
								<width value="100%"/>
							</style>
							<block type="text">
								<style>
									<width value="100%"/>
								</style>
								<styleClass value="$TextHeaderBigDefault"/>
								<bind name="class" value="'$FontColorGreenArc'"/>
								<bind name="class" value="'$GlowDisabler'"/>
								<bind name="text" value="technoIds"/>
							</block>
						</block>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="120px"/>
					<height value="100%"/>
				</style>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<right value="0px"/>
					<width value="120px"/>
					<height value="100%"/>
				</style>
				<block>
					<styleClass value="$MiddleAligned"/>
					<block>
						<bind name="style" value="'alpha'; (isDone || isLocked) ? 0.4 : 1"/>
						<bind name="tooltip" value="'MilestoneRewardTooltip'; { _rewards: rewards }"/>
						<style>
							<backgroundSize value="cover"/>
							<width value="48px"/>
							<height value="44px"/>
						</style>
						<bind name="style" value="'backgroundImage'; 'url:../events/british_event/reskin/icon_giftbox_milestone_medium.png'"/>
					</block>
					<block>
						<bind name="visible" value="(isDone == true)"/>
						<styleClass value="$MiddleVHAbsolutely"/>
						<style>
							<width value="50px"/>
							<height value="37px"/>
							<backgroundSize value="cover"/>
							<hitTest value="false"/>
						</style>
						<bind name="style" value="'backgroundImage'; 'url:../events/british_event/reskin/done_stamp.png'"/>
					</block>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="MilestoneConditionItem">
		<bind name="entityDH" value="'tasksEntity'; _id"/>
		<bind name="watchDH" value="'percentProgress'; ['tasksEntity.sseTask.evChanged']; tasksEntity.sseTask.percentProgress"/>
		<bind name="watch" value="'showProgress'; (percentProgress &gt; 0) &amp;&amp; (percentProgress != 1)"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<bind name="visible" value="showProgress == true"/>
			<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: (tr('IDS_CURRENT_PROGRESS') + tr('IDS_COLON') + ' ' + currentProgress + '/' + maxProgress)}"/>
			<style>
				<width value="100%"/>
				<height value="9px"/>
			</style>
			<bind name="instance" value="'MilestoneProgressBar'; { _percentProgress: percentProgress*100}"/>
		</block>
		<block>
			<bind name="style" value="'marginTop'; showProgress == true ? 12 : '0px'"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<style>
					<width value="100%"/>
				</style>
				<styleClass value="$TextDefault19NM"/>
				<bind name="class" value="'$GlowDisabler'"/>
				<bind name="class" value="'$FontColorGreenArc'"/>
				<bind name="text" value="ids"/>
			</block>
		</block>
	</block>
	<block className="MilestoneEpicItemTooltip">
		<bind name="entityDH" value="'epicEntity'; _epicEntityId"/>
		<bind name="watchDH" value="'activateAt'; 		['epicEntity.sseEpic.evChanged']; epicEntity.sseEpic.activateAt"/>
		<bind name="watchDH" value="'deactivateAt'; 		['epicEntity.sseEpic.evChanged']; epicEntity.sseEpic.deactivateAt"/>
		<bind name="watchDH" value="'previousEpicId'; 	['epicEntity.sseEpic.evChanged']; epicEntity.sseEpic.previousEpicId"/>
		<bind name="watchDH" value="'state'; 			['epicEntity.sseCore.evChanged']; epicEntity.sseCore.state"/>
		<bind name="primaryEntityDH" value="'epicEntityPrev'; CC.sseCore; previousEpicId"/>
		<bind name="watchDH" value="'doneTasksPrev'; 		['epicEntityPrev.progress.evChanged']; epicEntityPrev.progress.value"/>
		<bind name="watchDH" value="'tasksToCompletePrev'; 	['epicEntityPrev.sseEpic.evChanged']; epicEntityPrev.sseEpic.tasksToComplete"/>
		<bind name="watch" value="'tasksCountPrev'; tasksToCompletePrev - doneTasksPrev"/>
		<bind name="serverTime" value="'serverTime'"/>
		<bind name="countdown" value="activateAt; 'unlockTime'; 'HIGHEST,WITH_DAYS'"/>
		<bind name="watch" value="'isActive'; state == 1"/>
		<bind name="watch" value="'timeForUnlock'; activateAt - serverTime"/>
		<bind name="watch" value="'deactivatedTime'; serverTime - deactivateAt"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<bind name="visible" value="isActive != true"/>
			<styleClass value="$InfoBlockIndent"/>
			<style>
				<width value="320px"/>
			</style>
			<block>
				<bind name="visible" value="deactivatedTime &gt; 0"/>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$TextDefault17NM"/>
					<bind name="text" value="'IDS_MILESTONE_EPIC_DEACTIVATED_REASON'"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="timeForUnlock &gt; 0"/>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$TextDefault17NM"/>
					<bind name="text" value="subst('IDS_MILESTONE_EPIC_LOCKED_TIME_REASON', [], {unlockTime: unlockTime})"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="tasksCountPrev &gt; 0"/>
				<bind name="style" value="'marginTop'; (timeForUnlock &gt; 0) ? 16 : '0px'"/>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$TextDefault17NM"/>
					<bind name="text" value="subst('IDS_MILESTONE_EPIC_LOCKED_TASK_REASON', [], {tasksCountPrev: tasksCountPrev}, tasksCountPrev)"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="isActive != true"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<bind name="instance" value="'MouseInstruction'; {_type: 'left', _instructionText: 'IDS_GO_TO_MISSIONS', _maxWidth: 300}"/>
		</block>
	</block>
	<block className="MilestoneRewardTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="360px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$InfoBlockIndent"/>
				<styleClass value="$TextHeaderBigDefault"/>
				<bind name="text" value="_leaderboardReward == true ? 'IDS_MILESTONE_LEADERBOARD_REWARD_HEADER' : _epicReward ? 'IDS_MILESTONE_REWARD_EPIC_TEXT' : 'IDS_MILESTONE_REWARD_TASK_TEXT'"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="16px"/>
					<marginRight value="12px"/>
					<marginTop value="-8"/>
				</style>
				<bind name="repeat" value="_rewards; 'RewardContainerTooltipItemAdapter'"/>
			</block>
		</block>
	</block>
	<block className="MilestoneAchievementRewardTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="360px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block type="text">
			<styleClass value="$InfoBlockIndent"/>
			<styleClass value="$TextHeaderBigDefault"/>
			<bind name="text" value="'IDS_MILESTONE_LEADERBOARD_REWARD_HEADER'"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="16px"/>
				<marginRight value="12px"/>
				<marginTop value="8"/>
				<marginBottom value="14px"/>
			</style>
			<bind name="instance" value="'AchievementRenderer'; {_id: _id}"/>
		</block>
	</block>
	<block className="MilestoneEpicDescr">
		<bind name="firstEntityDH" value="'windowEntity'; CC.sseWindowState"/>
		<bind name="watchDH" value="'selectedEpic'; ['windowEntity.sseWindowState.evChanged']; windowEntity.sseWindowState.selectedEpic"/>
		<bind name="primaryEntityDH" value="'epicEntity'; CC.sseCore; selectedEpic"/>
		<bind name="watchDH" value="'name'; 				['epicEntity.sseEpic.evChanged']; epicEntity.sseEpic.name"/>
		<bind name="watchDH" value="'activateAt'; 		['epicEntity.sseEpic.evChanged']; epicEntity.sseEpic.activateAt"/>
		<bind name="watchDH" value="'state'; 			['epicEntity.sseEpic.evChanged']; epicEntity.sseCore.state"/>
		<bind name="watchDH" value="'isDone'; 			['epicEntity.sseEpic.evChanged']; epicEntity.sseEpic.isDone"/>
		<bind name="watchDH" value="'max'; 				['epicEntity.progress.evChanged']; epicEntity.progress.max"/>
		<bind name="watchDH" value="'min'; 				['epicEntity.progress.evChanged']; epicEntity.progress.mix"/>
		<bind name="watchDH" value="'rewards'; 			['epicEntity.sseEpic.evChanged']; epicEntity.sseEpic.rewards"/>
		<bind name="watchDH" value="'previousEpicId'; 	['epicEntity.sseEpic.evChanged']; epicEntity.sseEpic.previousEpicId"/>
		<bind name="watchDH" value="'doneTasks'; 		['epicEntity.progress.evChanged']; epicEntity.progress.value"/>
		<bind name="watchDH" value="'tasksToComplete'; 	['epicEntity.sseEpic.evChanged']; epicEntity.sseEpic.tasksToComplete"/>
		<bind name="primaryEntityDH" value="'epicEntityPrev'; CC.sseCore; previousEpicId"/>
		<bind name="watchDH" value="'doneTasksPrev'; ['epicEntityPrev.progress.evChanged']; epicEntityPrev.progress.value"/>
		<bind name="watchDH" value="'tasksToCompletePrev'; ['epicEntityPrev.sseEpic.evChanged']; epicEntityPrev.sseEpic.tasksToComplete"/>
		<bind name="serverTime" value="'serverTime'"/>
		<bind name="countdown" value="activateAt; 'unlockTime'; 'HIGHEST,WITH_DAYS'"/>
		<bind name="watch" value="'isActive'; state == 1"/>
		<bind name="watch" value="'isLocked'; state == 0"/>
		<bind name="watch" value="'tasksCount'; tasksToComplete - doneTasks"/>
		<bind name="watch" value="'tasksCountPrev'; tasksToCompletePrev - doneTasksPrev"/>
		<bind name="watch" value="'timeForUnlock'; activateAt - serverTime"/>
		<bind name="watch" value="'showProgress'; (timeForUnlock &lt;= 0) &amp;&amp; (isActive == true) &amp;&amp; (isDone != true)"/>
		<bind name="watch" value="'epicInfo'; 	(epicEntity.leaderboard != null) &amp;&amp; (isLocked != true) 		? (tasksCount &gt; 0)		? subst('IDS_MILESTONE_EPIC_LEADERBOARD_REASON', [], {tasksCount: tasksCount}, tasksCount) 
																							: 'IDS_MILESTONE_EPIC_LEADERBOARD_UNLOCKED':
								(isLocked == true)					? (tasksCountPrev &gt; 0)	? subst('IDS_MILESTONE_EPIC_LOCKED_TASK_REASON', [], {tasksCountPrev: tasksCountPrev}, tasksCountPrev) 
																							: '':
								(isDone != true) &amp;&amp; (isLocked != true)	? subst('IDS_MILESTONE_EPIC_ACTIVE_TASK_REASON', [], {tasksCount: tasksCount}, tasksCount)
																		: 'IDS_TASK_COMPLETED'"/>
		<style>
			<width value="100%"/>
			<marginBottom value="16"/>
			<flow value="horizontal"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
				<maxWidth value="600"/>
			</style>
			<bind name="style" value="'alpha'; (isDone || isLocked) ? 0.4 : 1"/>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$TextDefaultBold30NM"/>
					<bind name="class" value="'$FontColorGreenArc'"/>
					<bind name="class" value="'$GlowDisabler'"/>
					<bind name="text" value="toUpperCase(name)"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="showProgress == true"/>
				<style>
					<width value="100%"/>
					<marginTop value="24"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
							<height value="11px"/>
						</style>
						<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: (tr('IDS_CURRENT_PROGRESS') + tr('IDS_COLON') + ' ' + doneTasks + '/' + tasksToComplete)}"/>
						<bind name="instance" value="'MilestoneProgressBar'; { _value: doneTasks, _maximum: tasksToComplete, _minimum: min}"/>
					</block>
					<block>
						<style>
							<paddingLeft value="8"/>
							<marginTop value="-15px"/>
						</style>
						<bind name="instance" value="'ScoreRatioCounterBritArc'; { 	_playerPointsCounter: doneTasks,
																	_totalPointsCounter: tasksToComplete}"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="style" value="'marginTop'; (showProgress == true) ? '8px' : '16px'"/>
				<block>
					<bind name="visible" value="timeForUnlock &gt; 0"/>
					<style>
						<width value="100%"/>
					</style>
					<block type="text">
						<styleClass value="$TextMilestone19NM"/>
						<style>
							<width value="100%"/>
							<leading value="-4"/>
						</style>
						<bind name="text" value="subst('IDS_MILESTONE_EPIC_LOCKED_TIME_REASON', [], {unlockTime: unlockTime})"/>
					</block>
				</block>
				<block>
					<bind name="visible" value="(epicInfo != '') &amp;&amp; (epicInfo != null)"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="style" value="'marginTop'; timeForUnlock &gt; 0 ? '16px' : '0px'"/>
					<block type="text">
						<styleClass value="$TextMilestone19NM"/>
						<style>
							<width value="100%"/>
							<leading value="-4"/>
						</style>
						<bind name="text" value="epicInfo"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="120px"/>
				<height value="88px"/>
			</style>
		</block>
		<block>
			<bind name="tooltip" value="'MilestoneRewardTooltip'; { _rewards: rewards, _epicReward: true }"/>
			<style>
				<position value="absolute"/>
				<right value="0px"/>
				<width value="120px"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<bind name="style" value="'alpha'; (isDone || isLocked) ? 0.4 : 1"/>
				<style>
					<backgroundSize value="cover"/>
					<width value="96px"/>
					<height value="88px"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:../events/british_event/reskin/icon_giftbox_milestone_big.png'"/>
			</block>
			<block>
				<bind name="visible" value="isDone == true"/>
				<styleClass value="$MiddleVHAbsolutely"/>
				<style>
					<backgroundSize value="cover"/>
					<width value="100px"/>
					<height value="75px"/>
					<hitTest value="false"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:../events/british_event/reskin/done_stamp.png'"/>
			</block>
		</block>
	</block>
	<block className="ScoreRatioCounterBritArc">
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<bind name="style" value="'alpha'; (_playerPointsCounter == 0) ? 0.6 : 1"/>
			<block type="text">
				<styleClass value="$TextLargeHeaderBold"/>
				<bind name="class" value="'$FontSizeHeader4'"/>
				<bind name="class" value="'$GlowDisabler'"/>
				<bind name="class" value="'$FontColorGreenArc'"/>
				<bind name="text" value="_playerPointsCounter"/>
			</block>
		</block>
		<block>
			<style>
				<marginLeft value="-2px"/>
			</style>
			<style>
				<alpha value="0.8"/>
			</style>
			<block type="text">
				<style>
					<marginTop value="1px"/>
				</style>
				<styleClass value="$TextLargeHeaderBold"/>
				<bind name="class" value="'$GlowDisabler'"/>
				<bind name="class" value="'$FontColorGreenArc'"/>
				<bind name="text" value="'/'"/>
			</block>
			<block type="text">
				<style>
					<marginTop value="2px"/>
					<marginLeft value="-2px"/>
				</style>
				<styleClass value="$TextLargeHeaderBold"/>
				<bind name="class" value="'$GlowDisabler'"/>
				<bind name="class" value="'$FontColorGreenArc'"/>
				<bind name="text" value="_totalPointsCounter"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="MilestoneLeaderBoard">
		<bind name="firstEntityDH" value="'leaderboardEntity'; CC.leaderboard"/>
		<bind name="watchDH" value="'rewardsForTop5'; ['leaderboardEntity.leaderboard.evLeaderboardStateChanged']; leaderboardEntity.leaderboard.rewardsForTop5"/>
		<bind name="watchDH" value="'rewardsForTop10'; ['leaderboardEntity.leaderboard.evLeaderboardStateChanged']; leaderboardEntity.leaderboard.rewardsForTop10"/>
		<bind name="watchDH" value="'rewardsForTop25'; ['leaderboardEntity.leaderboard.evLeaderboardStateChanged']; leaderboardEntity.leaderboard.rewardsForTop25"/>
		<bind name="watchDH" value="'rewardsForTop50'; ['leaderboardEntity.leaderboard.evLeaderboardStateChanged']; leaderboardEntity.leaderboard.rewardsForTop50"/>
		<bind name="watchDH" value="'guaranteedReward'; ['leaderboardEntity.leaderboard.evLeaderboardStateChanged']; leaderboardEntity.leaderboard.guaranteedReward"/>
		<bind name="watchDH" value="'achievementsForTop100'; ['leaderboardEntity.leaderboard.evLeaderboardStateChanged']; leaderboardEntity.leaderboard.achievementsForTop100"/>
		<bind name="watch" value="'rewardsForTopTypes'; 	[{_rewardTypes: achievementsForTop100, _rewardTypeName: 'achievementsForTop100'},
										{_rewardTypes: rewardsForTop5, _rewardTypeName: 'rewardsForTop5'}, 
										{_rewardTypes: rewardsForTop10, _rewardTypeName: 'rewardsForTop10'},  
										{_rewardTypes: rewardsForTop25, _rewardTypeName: 'rewardsForTop25'}, 
										{_rewardTypes: rewardsForTop50, _rewardTypeName: 'rewardsForTop50'},
										{_rewardTypes: guaranteedReward, _rewardTypeName: 'guaranteedReward'}]"/>
		<styleClass value="$Fullsize"/>
		<style>
			<marginLeft value="32"/>
		</style>
		<block>
			<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_MILESTONE_REGLAMENT_DESCRIPTION'}; 0"/>
			<style>
				<width value="100%"/>
				<backgroundColor value="0x01000000"/>
			</style>
			<block className="frame_milestone_header" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="colorTransform" value=" {	redMultiplier: 0,
										greenMultiplier: 0,
										blueMultiplier: 0,
										alphaMultiplier: 0.5,
										redOffset: 107,
										greenOffset: 205,
										blueOffset: 73,
										alphaOffset: 0
										}"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<margin value="16"/>
				</style>
				<block type="text">
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
					</style>
					<styleClass value="$TextDefaultBold25NM"/>
					<bind name="class" value="'$GlowDisabler'"/>
					<bind name="class" value="'$FontColorGreenArc'"/>
					<bind name="text" value="toUpperCase(tr('IDS_MILESTONE_LEADERBOARD_HEADER'))"/>
				</block>
				<block>
					<styleClass value="$MiddleAligned"/>
					<style>
						<marginBottom value="16"/>
						<marginTop value="16"/>
						<alpha value="0.6"/>
					</style>
					<bind name="instance" value="'MilestoneDivider'; {_width: '80px', _height: '1px'}"/>
				</block>
				<block type="text">
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
						<leading value="-4"/>
					</style>
					<styleClass value="$TextDefault19NM"/>
					<bind name="class" value="'$GlowDisabler'"/>
					<bind name="class" value="'$FontColorGreenArc'"/>
					<bind name="text" value="'IDS_MILESTONE_LEADERBOARD_DESCR'"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="32"/>
			</style>
			<bind name="repeat" value="rewardsForTopTypes; 'MilestoneLeaderBoardRewardRow'; {}"/>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<bottom value="0"/>
				<position value="absolute"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<bind name="tooltip" value="'MouseInstructionTooltip'; {_mouseInstructions: [{_type: 'left', _instructionText: 'IDS_MILESTONE_LEADERBOARD_TOOLTIP'}], _maxWidth: 250}"/>
				<bind name="instance" value="'MilestoneDefaultButton'; 	{_name: ArcEventLeaderBoard, 
														_request: 'webBrowser', 
														_requestParams: {url: URL.EVENT_LEADER_BOARD_IN_GAME}, 
														_label: toUpperCase(tr('IDS_MILESTONE_LEADERBOARD'))}"/>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<marginTop value="16"/>
				</style>
				<bind name="tooltip" value="'MouseInstructionTooltip'; {_mouseInstructions: [{_type: 'left', _instructionText: 'IDS_MILESTONE_REGLAMENT_TOOLTIP'}], _maxWidth: 250}"/>
				<bind name="instance" value="'MilestoneDefaultButton'; 	{_name: ArcEventLeaderBoardRules, 
														_dispatchEv: 'changeMilestoneInset', 
														_dispatchParams: {inset: 1}, 
														_label: 'IDS_MILESTONE_REGLAMENT'}"/>
			</block>
		</block>
	</block>
	<block className="MilestoneLeaderBoardRewardRow">
		<style>
			<flow value="horizontal"/>
			<marginLeft value="8"/>
			<marginRight value="8"/>
			<width value="100%"/>
			<marginBottom value="16"/>
		</style>
		<bind name="tooltip" value="'MilestoneRewardTooltip';  _rewardTypeName != 'achievementsForTop100' ? {_index: $index, _rewards: _rewardTypes, _leaderboardReward: true} : null"/>
		<bind name="tooltip" value="'MilestoneAchievementRewardTooltip'; _rewardTypeName == 'achievementsForTop100' ? {_id: _rewardTypes[0]} : null"/>
		<block type="text">
			<style>
				<width value="100%"/>
				<marginRight value="32"/>
			</style>
			<styleClass value="$TextDefault17NM"/>
			<bind name="class" value="'$GlowDisabler'"/>
			<bind name="class" value="'$FontColorGreenArc'"/>
			<bind name="text" value="toUpperCase(tr('IDS_' + _rewardTypeName))"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<right value="0"/>
				<top value="-4"/>
				<width value="24px"/>
				<height value="21px"/>
				<backgroundSize value="cover"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:../events/british_event/reskin/icon_giftbox_milestone_small.png'"/>
		</block>
	</block>
	<block className="MilestonePoster">
		<bind name="stageSize"/>
		<bind name="watch" value="'widthCoef'; 	(stageWidth / 1280)"/>
		<bind name="watch" value="'heightCoef'; 	(stageHeight / 720)"/>
		<bind name="watch" value="'scaleCoef'; 	math.min(widthCoef, heightCoef)"/>
		<bind name="var" value="{correctedCoef: 0.8}"/>
		<bind name="watch" value="'correctedScaleCoef'; (scaleCoef * correctedCoef) &gt; 1 ? 1 : (scaleCoef * correctedCoef)"/>
		<styleClass value="$MiddleVHAbsolutely"/>
		<style>
			<backgroundSize value="cover"/>
		</style>
		<bind name="style" value="'width'; math.round(1200 * correctedScaleCoef) + 'px'"/>
		<bind name="style" value="'height'; math.round(720 * correctedScaleCoef) + 'px'"/>
		<bind name="style" value="'backgroundImage'; _url"/>
		<block>
			<bind name="style" value="'height'; math.round(130 * correctedScaleCoef) + 'px'"/>
			<style>
				<align value="middle"/>
				<width value="100%"/>
				<position value="absolute"/>
				<bottom value="0px"/>
			</style>
			<block type="text">
				<style>
					<width value="100%"/>
					<marginLeft value="50px"/>
					<marginRight value="50px"/>
					<alpha value="0.9"/>
				</style>
				<styleClass value="$TextDefaultBold23NM"/>
				<bind name="class" value="'$GlowDisabler'"/>
				<bind name="class" value="'$FontColorGreenArc'"/>
				<bind name="text" value="_text"/>
			</block>
			<block>
				<style>
					<marginRight value="50px"/>
				</style>
				<bind name="instance" value="'MilestoneDefaultButton'; 	{	_name: 'milestonePosterButton', 
															_action: _action, 
															_actionParams: _actionParams, 
															_request: _request, 
															_requestParams: _requestParams, 
															_label: _label}"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="FilmoscopeAnimation">
		<styleClass value="$Fullsize"/>
		<block className="lesta.controls.video.VideoResourcePlayer" type="native">
			<params>
				<param name="keepAspectRatio" value="false"/>
			</params>
			<styleClass value="$Fullsize"/>
			<bind name="volume" value="0"/>
			<bind name="play!" value="'./gui/video/filmoscope_style.usm'"/>
		</block>
	</block>
	<block className="MilestoneTaskDecoration">
		<style>
			<width value="100%"/>
			<alpha value="0.5"/>
		</style>
		<block type="text">
			<style>
				<width value="100%"/>
			</style>
			<styleClass value="$TextDefault17NM"/>
			<bind name="style" value="'textAlign'; _textAlign ? _textAlign : 'left'"/>
			<bind name="class" value="'$FontColorGreenArc'"/>
			<bind name="class" value="'$GlowDisabler'"/>
			<bind name="text" value="_text"/>
		</block>
	</block>
	<block className="MilestoneDivider">
		<bind name="class" value="'$ColorOfMilestoneDivider'"/>
		<bind name="style" value="'width'; 	_width ? 	_width 	: '100%'"/>
		<bind name="style" value="'height';	_height ? 	_height : '100%'"/>
	</block>
	<block className="MilestoneRulesWindow">
		<bind name="stageSize"/>
		<bind name="watch" value="'smallResolution';	true"/>
		<bind name="watch" value="'marginM'; 	smallResolution ? 8 : 16"/>
		<bind name="watch" value="'marginMS'; 	smallResolution ? 16 : 24"/>
		<bind name="watch" value="'marginL'; 	smallResolution ? 24 : 32"/>
		<bind name="watch" value="'marginLS'; 	smallResolution ? 32 : 40"/>
		<bind name="watch" value="'marginXL'; 	smallResolution ? 48 : 64"/>
		<bind name="watch" value="'marginXLM'; 	smallResolution ? 98 : 128"/>
		<styleClass value="$FullsizeAbsolute"/>
		<style>
			<marginBottom value="32"/>
		</style>
		<block>
			<style>
				<position value="absolute"/>
				<alpha value="0.8"/>
				<top value="16"/>
				<left value="32"/>
			</style>
			<bind name="instance" value="'MilestoneBackButton'; {}"/>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<width value="704px"/>
				<position value="absolute"/>
				<top value="48"/>
			</style>
			<block type="text">
				<style>
					<width value="100%"/>
					<marginBottom value="16"/>
				</style>
				<bind name="style" value="'marginLeft'; marginM"/>
				<styleClass value="$TextDefaultBold30NM"/>
				<bind name="class" value="'$FontColorGreenArc'"/>
				<bind name="class" value="'$GlowDisabler'"/>
				<bind name="text" value="'IDS_MILESTONE_REGLAMENT'"/>
			</block>
			<block type="text">
				<style>
					<width value="100%"/>
				</style>
				<bind name="style" value="'marginLeft'; marginM"/>
				<styleClass value="$TextDefault17NM"/>
				<bind name="class" value="'$FontColorGreenArc'"/>
				<bind name="class" value="'$GlowDisabler'"/>
				<bind name="text" value="'IDS_MILESTONE_REGLAMENT_DESCRIPTION'"/>
			</block>
		</block>
		<block>
			<styleClass value="$ColorOfMilestoneDivider"/>
			<style>
				<width value="100%"/>
				<height value="2px"/>
			</style>
			<bind name="style" value="'marginTop'; _headerHeight  + 'px'"/>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<width value="100%f"/>
			</style>
			<bind name="appear" value="'addedToStage'; 0.05; _delay; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="instance" value="'EventReglamentContent'; 	{	_lightScreenWidth: _lightScreenWidth, 
														_lightScreenHeight: _lightScreenHeight, 
														_headerHeight: _headerHeight, 
														_delay: _delay}"/>
		</block>
	</block>
	<block className="EventReglamentContent">
		<bind name="firstEntityDH" value="'leaderboardEntity'; CC.leaderboard"/>
		<bind name="watch" value="'randomBattle'; leaderboardEntity.leaderboard.randomBattleScoringRules.PVP"/>
		<bind name="watch" value="'coopBattle'; leaderboardEntity.leaderboard.coopBattleScoringRules.COOPERATIVE"/>
		<bind name="watch" value="'eventBattle'; leaderboardEntity.leaderboard.eventBattleScoringRules.EVENT"/>
		<bind name="watch" value="'pveBattle'; leaderboardEntity.leaderboard.pveBattlePointsForStar"/>
		<bind name="watch" value="'rankBattle'; leaderboardEntity.leaderboard.rankBattleWinPoints"/>
		<bind name="watch" value="'clanBattle'; leaderboardEntity.leaderboard.clanBattleWinPoints"/>
		<bind name="watch" value="'arrayRules'; [{_battletype: randomBattle, header: 'random_battle', _delay: _delay}, 
								{_battletype: coopBattle, header: 'coop_battle', _delay: _delay},
								{_battletype: eventBattle, header: 'event_battle', _delay: _delay}]"/>
		<bind name="watch" value="'arrayShortRules'; [{points: clanBattle, header: 'clan_battle'},
									 {points: rankBattle, header: 'ranked_battle'},
									 {points: pveBattle, header: 'pve_battle'}]"/>
		<styleClass value="$DefaultScrollBar"/>
		<style>
			<overflow value="scroll"/>
		</style>
		<bind name="style" value="'width';	math.round(_lightScreenWidth) + 'px'"/>
		<bind name="style" value="'height'; (_lightScreenHeight - _headerHeight) + 'px'"/>
		<styleClass value="$MiddleAligned"/>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<width value="704px"/>
				<marginTop value="32"/>
			</style>
			<bind name="repeat" value="arrayRules; 'MilestoneTablet'; {_battletype: _battletype}"/>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<width value="704px"/>
			</style>
			<bind name="repeat" value="arrayShortRules; 'MilestoneRulesRow'; {_delay: (arrayRules.length + 1)*0.05}"/>
		</block>
	</block>
	<block className="MilestoneRulesRow">
		<bind name="visible" value="points &gt; 0"/>
		<bind name="appear" value="'addedToStage'; 0.15; _delay ? (($index + 1)*0.05) + _delay : 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
		<styleClass value="$MiddleAligned"/>
		<style>
			<width value="704px"/>
			<marginBottom value="48"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
				<marginBottom value="16"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="8"/>
					<marginRight value="8"/>
					<marginBottom value="16"/>
				</style>
				<block type="text">
					<style>
						<width value="645px"/>
					</style>
					<styleClass value="$TextDefaultBold25NM"/>
					<bind name="class" value="'$FontColorGreenArc'"/>
					<bind name="class" value="'$GlowDisabler'"/>
					<bind name="text" value="header == 'pve_battle' 	? 'IDS_ARC_EVENT_RULES_POINTS_SCENARIO_BATTLES'
													: toUpperCase(tr('IDS_' + header))"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<styleClass value="$ColorOfMilestoneDivider"/>
				<style>
					<width value="100%"/>
					<height value="1px"/>
					<position value="absolute"/>
					<bottom value="0px"/>
				</style>
			</block>
		</block>
		<block type="text">
			<style>
				<width value="100%"/>
				<marginLeft value="8"/>
				<marginRight value="8"/>
				<alpha value="0.85"/>
			</style>
			<styleClass value="$TextMilestoneBold19NM"/>
			<bind name="text" value="header == 'pve_battle' 	? subst('IDS_PL_EARN_POINTS_BY_SCENARIO_STARS', [], {_pointsScenario: points}, points)
											: subst('IDS_PL_EARN_POINTS_BY_RANK_WIN', [], {_pointsRank: points}, points)"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<width value="100%"/>
				<bottom value="-8"/>
			</style>
			<bind name="instance" value="'MilestoneDottedDivider'; {}"/>
		</block>
	</block>
	<block className="MilestoneTablet">
		<bind name="appear" value="'addedToStage'; 0.15; _delay ? (($index + 1)*0.05) + _delay : 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
		<bind name="watch" value="'arrayScoreType'; 	[{_typeOfScore: _battletype.Kill, 			_rowName: 'IDS_TOTAL_TASK_FOR_BATTLE_FRAG'}, 
									{_typeOfScore: _battletype.Win, 			_rowName: 'IDS_TOTAL_TASK_FOR_BATTLE_WIN'}, 
									{_typeOfScore: _battletype.OtherAchiev, 	_rowName: 'IDS_EARN_OTHER_ACHIVE'},
									{_typeOfScore: _battletype.HeroicAchiev,  	_rowName: 'IDS_EARN_HEROIC_ACHIVE'}]"/>
		<bind name="watch" value="'levelArray'; [{_level: 'V'}, {_level: 'VI'}, {_level: 'VII'}, {_level: 'VIII'}, {_level: 'IX'}, {_level: 'X'}]"/>
		<styleClass value="$MiddleAligned"/>
		<style>
			<width value="100%"/>
			<marginBottom value="32"/>
		</style>
		<block>
			<style>
				<width value="100%f"/>
			</style>
			<bind name="instance" value="'MilestoneTabletHeaderRow'; {_header: header, _levelArray: levelArray}"/>
		</block>
		<block>
			<style>
				<width value="100%f"/>
			</style>
			<bind name="repeat" value="arrayScoreType; 'MilestoneTabletRow'; {_arrayScoreType: arrayScoreType}"/>
		</block>
	</block>
	<block className="MilestoneTabletRow">
		<bind name="watch" value="'valueRow'; _typeOfScore[0] &gt; 0 || _typeOfScore[1] &gt; 0 || _typeOfScore[2] &gt; 0 || _typeOfScore[3] &gt; 0 || _typeOfScore[4] &gt; 0 || _typeOfScore[5] &gt; 0 ? true : false"/>
		<bind name="watch" value="'needShowTheRow'; _headerRow != true &amp;&amp; valueRow == true ? true : false"/>
		<bind name="visible" value="_headerRow == true || needShowTheRow == true"/>
		<style>
			<width value="704px"/>
			<marginBottom value="16"/>
		</style>
		<block>
			<style>
				<width value="100%f"/>
				<marginLeft value="8"/>
				<marginRight value="8"/>
				<marginBottom value="8"/>
			</style>
			<block type="text">
				<style>
					<width value="368px"/>
				</style>
				<styleClass value="$TextDefault19NM"/>
				<bind name="class" value="'$FontColorGreenArc'"/>
				<bind name="class" value="'$GlowDisabler'"/>
				<bind name="text" value="_headerRow == true ? toUpperCase(tr('IDS_' + _header)) : _rowName"/>
			</block>
			<block>
				<style>
					<width value="320px"/>
				</style>
				<bind name="repeat" value="_typeOfScore; 'MilestoneTabletItem'; {_typeOfScore: _typeOfScore}"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<width value="100%"/>
				<bottom value="0px"/>
			</style>
			<bind name="instance" value="'MilestoneDottedDivider'; {}"/>
		</block>
	</block>
	<block className="MilestoneTabletHeaderRow">
		<style>
			<width value="704px"/>
			<marginBottom value="16"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="8"/>
				<marginRight value="8"/>
				<marginBottom value="16"/>
			</style>
			<block type="text">
				<style>
					<width value="326px"/>
					<marginRight value="43px"/>
				</style>
				<styleClass value="$TextDefaultBold25NM"/>
				<bind name="class" value="'$FontColorGreenArc'"/>
				<bind name="class" value="'$GlowDisabler'"/>
				<bind name="text" value="toUpperCase(tr('IDS_' + _header))"/>
			</block>
			<block>
				<style>
					<width value="320px"/>
				</style>
				<bind name="repeat" value="_levelArray; 'MilestoneTabletItem'; {_level: _levelArray, _headerRow: true}"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<styleClass value="$ColorOfMilestoneDivider"/>
			<style>
				<width value="100%"/>
				<height value="1px"/>
				<position value="absolute"/>
				<bottom value="0px"/>
			</style>
		</block>
	</block>
	<block className="MilestoneTabletItem">
		<bind name="watch" value="'scores'; _typeOfScore[$index] &gt; 0 ? _typeOfScore[$index] : 'IDS_MILESTONE_DASH'"/>
		<style>
			<width value="40px"/>
		</style>
		<bind name="style" value="'marginRight';	$index != 5 ? '16px' : 0"/>
		<block type="text">
			<style>
				<width value="100%"/>
				<textAlign value="center"/>
			</style>
			<bind name="class" value="_headerRow == true ? '$TextMilestoneBold19NM' : '$TextMilestone19NM'"/>
			<bind name="text" value="_headerRow == true ? _level : scores"/>
		</block>
	</block>
	<block className="MilestoneBackButton">
		<style>
			<height value="30px"/>
			<width value="100%f"/>
		</style>
		<block className="button_milestone_back" type="native">
			<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_MILESTONE_BACK_TO_TASKS'}"/>
			<styleClass value="$FullsizeAbsolute"/>
			<params>
				<param name="focusable" value="false"/>
			</params>
			<bind name="dispatch" value="'buttonClick'; 'changeMilestoneInset'; {inset: 0}"/>
		</block>
		<block>
			<style>
				<hitTest value="false"/>
				<width value="100%f"/>
			</style>
			<block className="icon_navigate_milestone" type="native">
				<style>
					<marginTop value="7px"/>
					<marginLeft value="6px"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%f"/>
					<marginLeft value="2px"/>
					<marginRight value="7px"/>
				</style>
				<block type="text">
					<styleClass value="$TextBackBtn"/>
					<bind name="class" value="'$FontColorGreenArc'"/>
					<bind name="text" value="'IDS_MILESTONE_BACK_TO_TASKS'"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="MilestoneDefaultButton">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="name" value="_name"/>
		<bind name="action" value="'buttonClick'; _action ? _action : null; _actionParams ? _actionParams : {}"/>
		<bind name="dispatch" value="'buttonClick'; _dispatchEv ? _dispatchEv : null; _dispatchEv ? _dispatchParams  : {}"/>
		<bind name="request" value="'buttonClick'; _request ? _request : null; _requestParams ? _requestParams : {}"/>
		<block className="button_milestone_default_no_label" type="native">
			<style>
				<minWidth value="135"/>
				<width value="100%f"/>
				<height value="32px"/>
				<align value="center|middle"/>
			</style>
			<block>
				<style>
					<width value="100%f"/>
				</style>
				<block type="text">
					<style>
						<width value="100%f"/>
						<textAlign value="center"/>
						<marginLeft value="32"/>
						<marginRight value="32"/>
						<hitTest value="false"/>
					</style>
					<styleClass value="$TextDefaultBoldNM"/>
					<bind name="class" value="'$GlowDisabler'"/>
					<bind name="class" value="rollOver ? '$FontColorBlackArc' : '$FontColorGreenArc'"/>
					<bind name="text" value="toUpperCase(tr(_label))"/>
				</block>
			</block>
		</block>
	</block>
	<block className="MilestoneDottedDivider">
		<style>
			<backgroundImage value="symbol:dotted_line_black"/>
			<backgroundRepeatX value="true"/>
			<position value="absolute"/>
			<width value="100%"/>
			<height value="1px"/>
			<alpha value="0.5"/>
			<bottom value="0"/>
		</style>
		<bind name="colorTransform" value=" {	redMultiplier: 0,
								greenMultiplier: 0,
								blueMultiplier: 0,
								alphaMultiplier: 0.7,
								redOffset: 107,
								greenOffset: 205,
								blueOffset: 73,
								alphaOffset: 0
								}"/>
	</block>
	<block className="MilestoneProgressBar">
		<bind name="watch" value="'min'; _minimum ? _minimum : 0"/>
		<bind name="var" value="{percentProgress: 0}"/>
		<bind name="watch" value="'percentProgress'; _percentProgress 	? 	_percentProgress  	:
									_value &amp;&amp; _maximum 	? 	(_value &gt; _maximum) ? 100 :
															(_value &lt; min) 		? 0
																				: _value/(_maximum - min)*100
														: 0"/>
		<styleClass value="$Fullsize"/>
		<block className="ship_tree_element_frame" type="native">
			<styleClass value="$Fullsize"/>
			<bind name="colorTransform" value=" {	redMultiplier: 0,
									greenMultiplier: 0,
									blueMultiplier: 0,
									alphaMultiplier: 0.7,
									redOffset: 107,
									greenOffset: 205,
									blueOffset: 73,
									alphaOffset: 0
									}"/>
			<block>
				<bind name="visible" value="percentProgress &gt; 0"/>
				<styleClass value="$ColorOfMilestoneDivider"/>
				<style>
					<height value="100%"/>
					<width value="0px"/>
					<margin value="2px"/>
				</style>
				<bind name="style" value="'width'; percentProgress + '%'"/>
			</block>
		</block>
	</block>
	<block className="ArcEventHeader3">
		<bind name="watch" value="'isMainScreen'; _page &gt; 0"/>
		<style>
			<width value="100%"/>
			<height value="32px"/>
		</style>
		<block>
			<bind name="visible" value="isMainScreen"/>
			<style>
				<position value="absolute"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefault17NM"/>
				<styleClass value="$ArcEventTextStyle"/>
				<bind name="text" value="subst('IDS_ARC_EVENT_TITLE_PAGE', [], {page: _page})"/>
			</block>
		</block>
		<block type="text">
			<styleClass value="$TextDefault19NM"/>
			<styleClass value="$ArcEventTextStyle"/>
			<style>
				<width value="100%"/>
				<textAlign value="center"/>
			</style>
			<bind name="text" value="_headerText"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<right value="0"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefault17NM"/>
				<styleClass value="$ArcEventTextStyle"/>
				<bind name="text" value="'IDS_ARC_EVENT_TITLE_DECOR'"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!isMainScreen"/>
			<styleClass value="$MiddleAligned"/>
			<style>
				<position value="absolute"/>
				<width value="336px"/>
				<bottom value="0"/>
			</style>
			<bind name="instance" value="'BlackDivider2'; {}"/>
		</block>
		<block>
			<bind name="visible" value="isMainScreen"/>
			<style>
				<position value="absolute"/>
				<width value="100%px"/>
				<bottom value="0"/>
			</style>
			<bind name="instance" value="'BlackDivider2'; {}"/>
		</block>
	</block>
	<block className="ArcEventHeader2">
		<style>
			<width value="100%"/>
		</style>
		<block>
			<bind name="colorTransform" value="_isFinalScreen ? {redOffset:119,greenOffset:44,blueOffset:-29} : {}"/>
			<style>
				<position value="absolute"/>
				<width value="100%%"/>
				<marginTop value="13px"/>
			</style>
			<bind name="instance" value="'BlackDivider1'; {}"/>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<block>
				<style>
					<height value="1px"/>
					<width value="100%"/>
					<position value="absolute"/>
					<top value="13px"/>
					<backgroundRepeatX value="true"/>
				</style>
				<bind name="style" value="'backgroundImage';  _isFinalScreen ? 'url:../events/arc_event/final_screen/header_line_mask.png' : 'url:../events/arc_event/common/header_line_mask.png'"/>
			</block>
			<block>
				<bind name="colorTransform" value="_isFinalScreen ? {redOffset:119,greenOffset:44,blueOffset:-29} : {}"/>
				<style>
					<width value="10px"/>
					<height value="13px"/>
					<marginTop value="7px"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:../events/arc_event/common/header_arrow_right.png'"/>
			</block>
			<block>
				<block type="text">
					<style>
						<margin value="24px|0"/>
					</style>
					<styleClass value="$TextDefaultBold30NM"/>
					<styleClass value="$ArcEventTextStyle"/>
					<bind name="text" value="_headerText"/>
				</block>
				<bind name="instance" value="'ArcEventHeaderUnderline'; _showUnderline ? {} : null"/>
			</block>
			<block>
				<bind name="colorTransform" value="_isFinalScreen ? {redOffset:119,greenOffset:44,blueOffset:-29} : {}"/>
				<style>
					<width value="10px"/>
					<height value="13px"/>
					<marginTop value="7px"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:../events/arc_event/common/header_arrow_left.png'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ArcEventHeaderUnderline">
		<style>
			<flow value="horizontal"/>
			<position value="absolute"/>
			<bottom value="-15px"/>
			<width value="100%"/>
			<height value="10px"/>
		</style>
		<block>
			<style>
				<width value="22px"/>
				<height value="100%"/>
				<backgroundImage value="url:../events/arc_event/common/underline_left.png"/>
			</style>
		</block>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<backgroundImage value="url:../events/arc_event/common/underline_repeater.png"/>
				<backgroundRepeatX value="true"/>
			</style>
		</block>
		<block>
			<style>
				<width value="19px"/>
				<height value="100%"/>
				<backgroundImage value="url:../events/arc_event/common/underline_right.png"/>
			</style>
		</block>
	</block>
	<block className="ArcEventHeader1">
		<style>
			<width value="100%"/>
		</style>
		<block>
			<bind name="visible" value="!_isFinalScreen"/>
			<style>
				<width value="100%"/>
				<marginTop value="8px"/>
			</style>
			<bind name="instance" value="'ArcEventHeader3'; { _page: _page, _headerText: 'IDS_ARC_EVENT_TITLE' }"/>
		</block>
		<block>
			<bind name="colorTransform" value="_isFinalScreen ? {redOffset:119,greenOffset:44,blueOffset:-29} : {}"/>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginTop value="24px"/>
				<marginBottom value="24px"/>
			</style>
			<block type="text">
				<style>
					<letterSpacing value="2"/>
				</style>
				<styleClass value="$TextDefaultBold50NM"/>
				<styleClass value="$ArcEventTextStyle"/>
				<bind name="text" value="toUpperCase(tr(_headerText))"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!_isFinalScreen"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'BlackDivider4'; {}"/>
		</block>
	</block>
	<block className="ArcEventDecorFooter">
		<styleClass value="$Fullsize"/>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'BlackDivider2'; {}"/>
		</block>
		<block>
			<style>
				<paddingTop value="16px"/>
				<height value="100%"/>
			</style>
			<block>
				<style>
					<width value="272px"/>
					<height value="100%"/>
				</style>
				<block type="text">
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$TextDefaultBold30NM"/>
					<styleClass value="$ArcEventTextStyle"/>
					<bind name="text" value="'IDS_ARC_EVENT_FOOTER_'+ _windowName +'_TEXT_0'"/>
				</block>
				<block type="text">
					<style>
						<marginTop value="24px"/>
						<textAlign value="justify"/>
						<overflow value="hidden"/>
					</style>
					<styleClass value="$Fullsize"/>
					<styleClass value="$TextDefault17NM"/>
					<styleClass value="$ArcEventTextStyle"/>
					<bind name="text" value="'IDS_ARC_EVENT_FOOTER_'+ _windowName +'_TEXT_1'"/>
				</block>
			</block>
			<block>
				<style>
					<height value="100%"/>
					<margin value="16px|0px"/>
				</style>
				<bind name="instance" value="'BlackDivider1'; { _vertical: true }"/>
			</block>
			<block>
				<style>
					<width value="272px"/>
					<height value="100%"/>
				</style>
				<block type="text">
					<style>
						<textAlign value="justify"/>
						<overflow value="hidden"/>
					</style>
					<styleClass value="$Fullsize"/>
					<styleClass value="$TextDefault17NM"/>
					<styleClass value="$ArcEventTextStyle"/>
					<bind name="text" value="'IDS_ARC_EVENT_FOOTER_'+ _windowName +'_TEXT_2'"/>
				</block>
			</block>
			<block>
				<style>
					<height value="100%"/>
					<margin value="16px|0px"/>
				</style>
				<bind name="instance" value="'BlackDivider1'; { _vertical: true }"/>
			</block>
			<block>
				<style>
					<width value="272px"/>
					<height value="100%"/>
				</style>
				<block type="text">
					<style>
						<textAlign value="justify"/>
						<overflow value="hidden"/>
					</style>
					<styleClass value="$Fullsize"/>
					<styleClass value="$TextDefault17NM"/>
					<styleClass value="$ArcEventTextStyle"/>
					<bind name="text" value="'IDS_ARC_EVENT_FOOTER_'+ _windowName +'_TEXT_3'"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ArcEventSideHeader">
		<bind name="firstEntityDH" value="'arcEventEntity'; CC.arcEvent"/>
		<bind name="watchDH" value="'sides';	[]; arcEventEntity.arcEvent.sides"/>
		<bind name="watchDH" value="'sideId'; ['arcEventEntity.playerArcEventInfo.evSideChanged']; arcEventEntity.playerArcEventInfo.sideId"/>
		<bind name="watchDH" value="'state'; ['arcEventEntity.arcEvent.evChanged']; arcEventEntity.arcEvent.state"/>
		<bind name="watch" value="'isFinalScreen'; state == 2"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
				<height value="120px"/>
			</style>
		</block>
		<block>
			<bind name="colorTransform" value="isFinalScreen ? {redOffset:119,greenOffset:44,blueOffset:-29} : {}"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'BlackDivider2'; {}"/>
		</block>
		<block>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<block>
				<bind name="instance" value="'ArcEventSideHeaderLogo';	{ _side: sides[0], _sideId: sideId, _isFinalScreen: isFinalScreen }"/>
			</block>
			<block>
				<style>
					<width value="320px"/>
					<height value="120px"/>
				</style>
				<bind name="instance" value="'ArcEventSideHeaderLeft';	{ _side: sides[0], _sideId: sideId, _isFinalScreen: isFinalScreen }"/>
			</block>
			<block>
				<style>
					<width value="320px"/>
					<height value="120px"/>
				</style>
				<bind name="instance" value="'ArcEventSideHeaderRight';	{ _side: sides[1], _sideId: sideId, _isFinalScreen: isFinalScreen }"/>
			</block>
			<block>
				<bind name="instance" value="'ArcEventSideHeaderLogo';	{ _side: sides[1], _sideId: sideId, _isFinalScreen: isFinalScreen }"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="tooltip" value="'SimpleTooltip'; sideId == -1 ? null : {tooltipText: tr('IDS_COMMON_TEAM_VICTORY_POINTS_TOOLTIP')}"/>
			<styleClass value="$MiddleAligned"/>
			<style>
				<position value="absolute"/>
				<bottom value="18px"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefault17NM"/>
				<styleClass value="$ArcEventTextStyle"/>
				<bind name="text" value="isFinalScreen 	? 'IDS_COMMON_TEAM_VICTORY_POINTS' 
										: sideId == -1 	? 'IDS_ARC_EVENT_CHOOSE_SIDE' 
																				: 'IDS_COMMON_FINAL_STAT_POINTS'"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="(sideId == -1) &amp;&amp; !isFinalScreen"/>
			<styleClass value="$MiddleAligned"/>
			<style>
				<position value="absolute"/>
				<width value="247px"/>
				<height value="100px"/>
				<marginTop value="50px"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:../events/arc_event/common/icon_selected.png'"/>
		</block>
	</block>
	<block className="ArcEventSideHeaderLogo">
		<bind name="watch" value="'isSelected'; _side == _sideId"/>
		<bind name="watch" value="'sideLogoSmall'; 	'url:../events/arc_event/common/side_icon_' + _side + '.png'"/>
		<bind name="watch" value="'sideLogoBig'; 	'url:../events/arc_event/common/side_icon_' + _side + '_selected.png'"/>
		<block>
			<style>
				<width value="120px"/>
				<height value="120px"/>
			</style>
			<bind name="style" value="'alpha'; isSelected ? 0 : 1"/>
			<bind name="style" value="'backgroundImage'; sideLogoSmall"/>
			<bind name="colorTransform" value="_isFinalScreen ? {redOffset:119,greenOffset:44,blueOffset:-29} : {}"/>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<bind name="visible" value="isSelected &amp;&amp; !_isFinalScreen"/>
			<style>
				<width value="200px"/>
				<height value="200px"/>
				<position value="absolute"/>
				<marginTop value="-70px"/>
			</style>
			<bind name="style" value="'backgroundImage'; sideLogoBig"/>
		</block>
	</block>
	<block className="ArcEventSideHeaderLeft">
		<bind name="primaryEntityDH" value="'arcEventSideEntity'; CC.arcEventSide; _side"/>
		<bind name="watchDH" value="'sideDailyProgress'; ['arcEventSideEntity.arcEventSide.evProgressChanged']; arcEventSideEntity.arcEventSide.sideDailyProgress"/>
		<bind name="watchDH" value="'sideVictoryDays'; ['arcEventSideEntity.arcEventSide.evProgressChanged']; arcEventSideEntity.arcEventSide.sideVictoryDays"/>
		<bind name="watchDH" value="'myTotalBattles'; ['arcEventSideEntity.arcEventSide.evProgressChanged']; arcEventSideEntity.arcEventSide.myTotalBattles"/>
		<bind name="watchDH" value="'state'; ['arcEventEntity.arcEvent.evChanged']; arcEventEntity.arcEvent.state"/>
		<bind name="watch" value="'isSelected'; _side == _sideId"/>
		<styleClass value="$Fullsize"/>
		<block>
			<bind name="colorTransform" value="_isFinalScreen ? {redOffset:119,greenOffset:44,blueOffset:-29} : {}"/>
			<style>
				<position value="absolute"/>
				<height value="100%"/>
				<margin value="0px|8px"/>
			</style>
			<bind name="instance" value="'BlackDivider2'; { _vertical: true }"/>
		</block>
		<block>
			<style>
				<height value="70px"/>
			</style>
			<block>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: tr('IDS_ARC_EVENT_SIDE_TOOLTIP_0')}"/>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="240px"/>
					<paddingLeft value="32px"/>
				</style>
				<block type="text">
					<style>
						<width value="100%"/>
						<multiline value="false"/>
					</style>
					<styleClass value="$TextDefaultBold40NM"/>
					<styleClass value="$ArcEventTextStyle"/>
					<bind name="text" value="toUpperCase(tr('IDS_ARC_EVENT_SIDE_' + _side))"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="isSelected &amp;&amp; !(state == 2)"/>
				<style>
					<position value="absolute"/>
					<width value="135px"/>
					<height value="11px"/>
					<top value="55px"/>
					<left value="25px"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:../events/arc_event/common/side_selected.png'"/>
			</block>
			<block>
				<bind name="colorTransform" value="_isFinalScreen ? {redOffset:119,greenOffset:44,blueOffset:-29} : {}"/>
				<style>
					<height value="100%"/>
					<margin value="0px|8px"/>
				</style>
				<bind name="instance" value="'BlackDivider2'; { _vertical: true }"/>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="80px"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
						<align value="right"/>
						<paddingRight value="20px"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefaultBold40NM"/>
						<styleClass value="$ArcEventTextStyle"/>
						<bind name="text" value="sideVictoryDays"/>
					</block>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="colorTransform" value="_isFinalScreen ? {redOffset:119,greenOffset:44,blueOffset:-29} : {}"/>
			<style>
				<width value="100%"/>
				<paddingLeft value="8px"/>
			</style>
			<bind name="instance" value="'BlackDivider1'; {}"/>
		</block>
		<block>
			<style>
				<height value="50px"/>
			</style>
			<block>
				<bind name="visible" value="(_sideId != -1) || (_isFinalScreen == true)"/>
				<style>
					<marginLeft value="32px"/>
				</style>
				<styleClass value="$MiddleVAligned"/>
				<block type="text">
					<styleClass value="$TextDefault21NM"/>
					<styleClass value="$ArcEventTextStyle"/>
					<bind name="class" value="isSelected	? '$Bold' : '$None'"/>
					<bind name="text" value="_isFinalScreen ? format(myTotalBattles) : format(sideDailyProgress)"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ArcEventSideHeaderRight">
		<bind name="primaryEntityDH" value="'arcEventSideEntity'; CC.arcEventSide; _side"/>
		<bind name="watchDH" value="'sideDailyProgress'; ['arcEventSideEntity.arcEventSide.evProgressChanged']; arcEventSideEntity.arcEventSide.sideDailyProgress"/>
		<bind name="watchDH" value="'sideVictoryDays'; ['arcEventSideEntity.arcEventSide.evProgressChanged']; arcEventSideEntity.arcEventSide.sideVictoryDays"/>
		<bind name="watchDH" value="'myTotalBattles'; ['arcEventSideEntity.arcEventSide.evProgressChanged']; arcEventSideEntity.arcEventSide.myTotalBattles"/>
		<bind name="watchDH" value="'state'; ['arcEventEntity.arcEvent.evChanged']; arcEventEntity.arcEvent.state"/>
		<bind name="watch" value="'isSelected'; _side == _sideId"/>
		<styleClass value="$Fullsize"/>
		<block>
			<style>
				<height value="70px"/>
			</style>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<marginLeft value="-1px"/>
					<position value="absolute"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefaultBold40NM"/>
					<styleClass value="$ArcEventTextStyle"/>
					<bind name="text" value="':'"/>
				</block>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="80px"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
						<align value="left"/>
						<paddingLeft value="20px"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefaultBold40NM"/>
						<styleClass value="$ArcEventTextStyle"/>
						<bind name="text" value="sideVictoryDays"/>
					</block>
				</block>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<left value="-80px"/>
					<width value="160px"/>
					<height value="100%"/>
					<backgroundColor value="0x01000000"/>
				</style>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: tr('IDS_COMMON_STAT_POINTS_TOOLTIP')}"/>
			</block>
			<block>
				<bind name="colorTransform" value="_isFinalScreen ? {redOffset:119,greenOffset:44,blueOffset:-29} : {}"/>
				<style>
					<height value="100%"/>
					<margin value="0px|8px"/>
				</style>
				<bind name="instance" value="'BlackDivider2'; { _vertical: true }"/>
			</block>
			<block>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: tr('IDS_ARC_EVENT_SIDE_TOOLTIP_1')}"/>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="240px"/>
					<paddingRight value="32px"/>
				</style>
				<block type="text">
					<style>
						<width value="100%"/>
						<multiline value="false"/>
						<textAlign value="right"/>
					</style>
					<styleClass value="$TextDefaultBold40NM"/>
					<styleClass value="$ArcEventTextStyle"/>
					<bind name="text" value="toUpperCase(tr('IDS_ARC_EVENT_SIDE_' + _side))"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="isSelected &amp;&amp; !(state == 2)"/>
				<style>
					<position value="absolute"/>
					<width value="135px"/>
					<height value="11px"/>
					<top value="55px"/>
					<right value="25px"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:../events/arc_event/common/side_selected.png'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="colorTransform" value="_isFinalScreen ? {redOffset:119,greenOffset:44,blueOffset:-29} : {}"/>
			<style>
				<width value="100%"/>
				<paddingRight value="8px"/>
			</style>
			<bind name="instance" value="'BlackDivider1'; {}"/>
		</block>
		<block>
			<style>
				<height value="50px"/>
				<width value="100%"/>
			</style>
			<block>
				<bind name="visible" value="(_sideId != -1) || (_isFinalScreen == true)"/>
				<style>
					<align value="right"/>
					<width value="100%"/>
					<marginRight value="32px"/>
				</style>
				<styleClass value="$MiddleVAligned"/>
				<block type="text">
					<styleClass value="$TextDefault21NM"/>
					<style>
						<textAlign value="right"/>
					</style>
					<styleClass value="$ArcEventTextStyle"/>
					<bind name="class" value="isSelected	? '$Bold' : '$None'"/>
					<bind name="text" value="_isFinalScreen ? format(myTotalBattles) : format(sideDailyProgress)"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="colorTransform" value="_isFinalScreen ? {redOffset:119,greenOffset:44,blueOffset:-29} : {}"/>
			<style>
				<position value="absolute"/>
				<right value="0px"/>
				<height value="100%"/>
				<margin value="0px|8px"/>
			</style>
			<bind name="instance" value="'BlackDivider2'; { _vertical: true }"/>
		</block>
	</block>
	<block className="ArcEventPlayerLoyalty">
		<bind name="firstEntityDH" value="'arcEventEntity'; CC.arcEvent"/>
		<bind name="watchDH" value="'sides';[]; arcEventEntity.arcEvent.sides"/>
		<bind name="firstEntityDH" value="'arcEventConfigEntity'; CC.arcEventConfig"/>
		<bind name="watchDH" value="'stagesNumberForEventLoyalty';[]; arcEventConfigEntity.arcEventConfig.stagesNumberForEventLoyalty"/>
		<bind name="primaryEntityDH" value="'arcEventFirstSideEntity'; CC.arcEventSide; sides[0]"/>
		<bind name="watchDH" value="'myLoyaltyFirstSide';['arcEventFirstSideEntity.arcEventSide.evLoyaltyChanged']; arcEventFirstSideEntity.arcEventSide.myLoyalty"/>
		<bind name="primaryEntityDH" value="'arcEventSecondSideEntity'; CC.arcEventSide; sides[1]"/>
		<bind name="watchDH" value="'myLoyaltySecondSide';['arcEventSecondSideEntity.arcEventSide.evLoyaltyChanged']; arcEventSecondSideEntity.arcEventSide.myLoyalty"/>
		<bind name="watch" value="'gainedReward'; (myLoyaltyFirstSide &gt;= stagesNumberForEventLoyalty) &amp;&amp; (myLoyaltySecondSide &gt;= stagesNumberForEventLoyalty)"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<styleClass value="$MiddleAligned"/>
			<bind name="instance" value="'ArcEventPlayerLoyaltyRow'; { _side: sides[0] }"/>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginTop value="16px"/>
			</style>
			<bind name="instance" value="'ArcEventPlayerLoyaltyRow'; { _side: sides[1] }"/>
		</block>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<width value="80px"/>
				<height value="80px"/>
				<position value="absolute"/>
				<right value="140px"/>
			</style>
			<bind name="tooltip" value="'ArcEventEventLoyaltyTooltip'; { _isEventLoyalty: true, _isEventLoyaltyReward: true }"/>
			<bind name="style" value="'backgroundImage'; gainedReward 	? 'url:../events/arc_event/personal_progress/loyalty_event_reward_full.png'
														: 'url:../events/arc_event/personal_progress/loyalty_event_reward_empty.png'"/>
		</block>
		<block>
			<bind name="visible" value="gainedReward"/>
			<style>
				<width value="25px"/>
				<height value="25px"/>
				<position value="absolute"/>
				<right value="125px"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:../events/arc_event/personal_progress/icon_done.png'"/>
		</block>
		<block type="text">
			<style>
				<position value="absolute"/>
				<marginTop value="7px"/>
				<right value="655px"/>
			</style>
			<styleClass value="$TextDefault19NM"/>
			<styleClass value="$ArcEventTextStyle"/>
			<bind name="text" value="'IDS_ARC_EVENT_SIDE_TOOLTIP_0'"/>
		</block>
		<block type="text">
			<style>
				<position value="absolute"/>
				<marginTop value="53px"/>
				<right value="655px"/>
			</style>
			<styleClass value="$TextDefault19NM"/>
			<styleClass value="$ArcEventTextStyle"/>
			<bind name="text" value="'IDS_ARC_EVENT_SIDE_TOOLTIP_1'"/>
		</block>
	</block>
	<block className="ArcEventPlayerLoyaltyRow">
		<bind name="firstEntityDH" value="'arcEventEntity'; CC.arcEvent"/>
		<bind name="watchDH" value="'sides';[]; arcEventEntity.arcEvent.sides"/>
		<bind name="firstEntityDH" value="'arcEventConfigEntity'; CC.arcEventConfig"/>
		<bind name="watchDH" value="'stagesNumberForTeamLoyalty';[]; arcEventConfigEntity.arcEventConfig.stagesNumberForTeamLoyalty"/>
		<bind name="watchDH" value="'stagesNumberForEventLoyalty';[]; arcEventConfigEntity.arcEventConfig.stagesNumberForEventLoyalty"/>
		<bind name="primaryEntityDH" value="'arcEventSideEntity'; CC.arcEventSide; sides[_side]"/>
		<bind name="watchDH" value="'myLoyalty';['arcEventSideEntity.arcEventSide.evLoyaltyChanged']; arcEventSideEntity.arcEventSide.myLoyalty"/>
		<bind name="watch" value="'teamLoyaltyCounter'; 	stagesNumberForTeamLoyalty[_side] / myLoyalty"/>
		<bind name="watch" value="'teamLoyaltyPercent'; 10 / teamLoyaltyCounter"/>
		<bind name="watch" value="'eventLoyaltyCounter'; (stagesNumberForEventLoyalty - stagesNumberForTeamLoyalty[_side]) / (myLoyalty - stagesNumberForTeamLoyalty[_side])"/>
		<bind name="watch" value="'eventLoyaltyPercent'; 10 / eventLoyaltyCounter"/>
		<bind name="watch" value="'teamLoyalty'; 	(myLoyalty &gt; 0) 	? teamLoyaltyPercent  : 0"/>
		<bind name="watch" value="'eventLoyalty'; 	(teamLoyalty &gt;= 10) ? eventLoyaltyPercent : 0"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<bind name="tooltip" value="'ArcEventEventLoyaltyTooltip'; { _side: _side }"/>
			<style>
				<height value="30px"/>
				<backgroundColor value="0x01000000"/>
			</style>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<block className="indicator_progress_bar_dark_bg" type="native">
					<style>
						<width value="170px"/>
						<height value="8px"/>
					</style>
				</block>
				<block className="indicator_progress_bar_dark_mask" type="native">
					<style>
						<width value="170px"/>
						<height value="6px"/>
						<position value="absolute"/>
					</style>
					<bind name="value" value="teamLoyalty"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="tooltip" value="'ArcEventEventLoyaltyTooltip'; { _side: _side }"/>
			<style>
				<height value="30px"/>
				<marginLeft value="8px"/>
				<backgroundColor value="0x01000000"/>
			</style>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="30px"/>
					<height value="30px"/>
				</style>
				<bind name="style" value="'backgroundImage'; (_side == 0) 	? 	(teamLoyalty &gt;= 10) ? 'url:../events/arc_event/personal_progress/loyalty_reward_honor_full.png'
																					: 'url:../events/arc_event/personal_progress/loyalty_reward_honor_empty.png'
															: 	(teamLoyalty &gt;= 10) ? 'url:../events/arc_event/personal_progress/loyalty_reward_glory_full.png'
																					: 'url:../events/arc_event/personal_progress/loyalty_reward_glory_empty.png'"/>
			</block>
			<block>
				<bind name="visible" value="(teamLoyalty &gt;= 10)"/>
				<style>
					<width value="25px"/>
					<height value="25px"/>
					<position value="absolute"/>
					<left value="20px"/>
					<top value="-20px"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:../events/arc_event/personal_progress/icon_done.png'"/>
			</block>
		</block>
		<block>
			<bind name="tooltip" value="'ArcEventEventLoyaltyTooltip'; { _side: _side, _isEventLoyalty: true }"/>
			<style>
				<height value="30px"/>
				<marginLeft value="8px"/>
				<backgroundColor value="0x01000000"/>
			</style>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<block className="indicator_progress_bar_dark_bg" type="native">
					<style>
						<width value="170px"/>
						<height value="8px"/>
					</style>
				</block>
				<block className="indicator_progress_bar_dark_mask" type="native">
					<style>
						<width value="170px"/>
						<height value="6px"/>
						<position value="absolute"/>
					</style>
					<bind name="value" value="eventLoyalty"/>
				</block>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="11px"/>
					<height value="19px"/>
					<marginLeft value="8px"/>
				</style>
				<bind name="style" value="'backgroundImage'; (eventLoyalty &gt;= 10) 	? 'url:../events/arc_event/personal_progress/loyalty_reward_unlocked.png'
																	: 'url:../events/arc_event/personal_progress/loyalty_reward_locked.png'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ArcEventEventLoyaltyTooltip">
		<bind name="firstEntityDH" value="'arcEventEntity'; CC.arcEvent"/>
		<bind name="watchDH" value="'sides'; []; arcEventEntity.arcEvent.sides"/>
		<bind name="watchDH" value="'stagesNumberForTeamLoyalty'; []; arcEventEntity.arcEventConfig.stagesNumberForTeamLoyalty"/>
		<bind name="watchDH" value="'stagesNumberForEventLoyalty'; []; arcEventEntity.arcEventConfig.stagesNumberForEventLoyalty"/>
		<bind name="primaryEntityDH" value="'arcEventSideEntity'; CC.arcEventSide; sides[_side]"/>
		<bind name="watchDH" value="'myLoyalty'; ['arcEventSideEntity.arcEventSide.evLoyaltyChanged']; arcEventSideEntity.arcEventSide.myLoyalty"/>
		<bind name="watch" value="'totalPoints'; _isEventLoyalty ? stagesNumberForEventLoyalty : stagesNumberForTeamLoyalty[_side]"/>
		<bind name="watchDH" value="'teamLoyaltyRewardIds';  []; arcEventEntity.arcEventConfig.teamLoyaltyRewardIds"/>
		<bind name="watchDH" value="'eventLoyaltyRewardIds'; []; arcEventEntity.arcEventConfig.eventLoyaltyRewardIds"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="360px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block type="text">
			<style>
				<width value="100%"/>
			</style>
			<styleClass value="$ArcEventTooltipMargins"/>
			<styleClass value="$TextDefaultBold19NM"/>
			<bind name="text" value="_isEventLoyalty ? 'IDS_ARC_EVENT_LOYALTY' : tr('IDS_ARC_EVENT_SIDE_' + _side + '_LOYALTY')"/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block type="text">
			<style>
				<width value="100%"/>
			</style>
			<styleClass value="$TextDefault17NM"/>
			<styleClass value="$ArcEventTooltipMargins"/>
			<bind name="text" value="_isEventLoyalty ? 'IDS_ARC_EVENT_LOYALTY_DESCR' : tr('IDS_ARC_EVENT_TEAM_LOYALTY_DESCR_' + _side)"/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!_isEventLoyaltyReward"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<margin value="16px|8px"/>
				</style>
				<bind name="instance" value="'ArcEventEventLoyaltyPoints'; { _text: 'IDS_ARC_EVENT_LOYALTY_PROGRESS_COUNTER', _playerPointsCounter: myLoyalty, _totalPointsCounter: totalPoints }"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<marginBottom value="5px"/>
				<marginLeft value="16px"/>
			</style>
			<bind name="repeat" value="_isEventLoyalty ? eventLoyaltyRewardIds : teamLoyaltyRewardIds[_side]; 'RewardContainerTooltipItemAdapter'"/>
		</block>
	</block>
	<block className="ArcEventEventLoyaltyPoints">
		<style>
			<width value="100%"/>
			<marginTop value="8px"/>
			<marginBottom value="8px"/>
		</style>
		<block type="text">
			<styleClass value="$TextDefault17NM"/>
			<bind name="text" value="_text"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<right value="0px"/>
				<marginTop value="-8px"/>
			</style>
			<bind name="instance" value="'ScoreRatioCounter'; { _playerPointsCounter: _playerPointsCounter, _totalPointsCounter: _totalPointsCounter }"/>
		</block>
	</block>
	<block className="ArcEventSideModifier">
		<bind name="firstEntityDH" value="'arcEventEntity'; CC.arcEvent"/>
		<bind name="watchDH" value="'yesterdayWinnerSideId'; ['arcEventEntity.arcEvent.evChanged']; arcEventEntity.arcEvent.yesterdayWinnerSideId"/>
		<bind name="watchDH" value="'sideId';['arcEventEntity.playerArcEventInfo.evSideChanged']; arcEventEntity.playerArcEventInfo.sideId"/>
		<bind name="primaryEntityDH" value="'arcEventSide'; CC.arcEventSide; _sideId"/>
		<bind name="watchDH" value="'complexity'; ['arcEventSide.arcEventSide.evChanged']; arcEventSide.arcEventSide.complexity"/>
		<bind name="watchDH" value="'sideModifierTeam';   ['arcEventSide.arcEventSide.evChanged']; arcEventSide.arcEventSide.sideModifierTeam"/>
		<bind name="watch" value="'arcEventSideModifierItems'; [
			{_text: tr('IDS_ARC_EVENT_SIDE_MODIFIER_COMPLEXITY_' + complexity)}, 
			{_text: (complexity &gt; 0 								? 'IDS_ARC_EVENT_SIDE_MODIFIER_REWARD_1'	: 'IDS_ARC_EVENT_SIDE_MODIFIER_REWARD_0')}, 
			{_text: (complexity &gt; 0 || yesterdayWinnerSideId == -1	? 'IDS_ARC_EVENT_SIDE_MODIFIER_TEAM_1' 		: subst('IDS_SUBST_ARC_EVENT_SIDE_MODIFIER_TEAM_0', [], {modifier: sideModifierTeam}))}
		]
	"/>
		<style>
			<width value="100%"/>
		</style>
		<bind name="tooltip" value="'ArcEventSideModifierTooltip'; {_sideId: _sideId}"/>
		<bind name="repeat" value="arcEventSideModifierItems; 'ArcEventSideModifierItemRenderer'; {}"/>
	</block>
	<block className="ArcEventSideModifierItemRenderer">
		<style>
			<width value="100%"/>
			<backgroundColor value="0x01000000"/>
		</style>
		<block>
			<bind name="visible" value="($index &gt; 0) &amp;&amp; _text"/>
			<style>
				<width value="100%"/>
				<marginLeft value="8px"/>
				<marginRight value="8px"/>
				<marginBottom value="16px"/>
			</style>
			<bind name="instance" value="'BlackDivider1'; {}"/>
		</block>
		<block type="text">
			<bind name="class" value="$index ? '$TextDefault17NM' : '$TextDefaultBold17NM'"/>
			<bind name="class" value="'$ArcEventTextStyle'"/>
			<style>
				<width value="100%"/>
				<textAlign value="center"/>
				<marginBottom value="16px"/>
			</style>
			<bind name="text" value="_text"/>
		</block>
	</block>
	<block className="ArcEventSideModifierTooltip">
		<bind name="firstEntityDH" value="'arcEventEntity'; CC.arcEvent"/>
		<bind name="watchDH" value="'yesterdayWinnerSideId'; []; arcEventEntity.arcEvent.yesterdayWinnerSideId"/>
		<bind name="primaryEntityDH" value="'arcEventWinnerSideEntity'; CC.arcEventSide; yesterdayWinnerSideId"/>
		<bind name="watchDH" value="'complexityWinner'; ['arcEventWinnerSideEntity.arcEventSide.evChanged']; arcEventWinnerSideEntity.arcEventSide.complexity"/>
		<bind name="primaryEntityDH" value="'arcEventSideEntity'; CC.arcEventSide; _sideId"/>
		<bind name="watchDH" value="'complexity'; ['arcEventSideEntity.arcEventSide.evChanged']; arcEventSideEntity.arcEventSide.complexity"/>
		<bind name="watchDH" value="'stageProgressRules';	['arcEventEntity.arcEvent.evChanged']; arcEventEntity.arcEventConfig.stageProgressRules"/>
		<bind name="watch" value="'sideScoreModifier'; stageProgressRules[complexityWinner][1][1]"/>
		<bind name="watch" value="'isLastDayWinner'; yesterdayWinnerSideId == _sideId"/>
		<bind name="watch" value="'rewards1'; stageProgressRules[complexity][0][0][1][_sideId]"/>
		<bind name="watch" value="'rewards2'; stageProgressRules[complexity][0][1][1][_sideId]"/>
		<bind name="watch" value="'rewards3'; stageProgressRules[complexity][0][2][1][_sideId]"/>
		<bind name="watch" value="'rewards4'; stageProgressRules[complexity][0][3][1][_sideId]"/>
		<bind name="watch" value="'rewards5'; stageProgressRules[complexity][0][4][1][_sideId]"/>
		<bind name="watch" value="'rewards'; [rewards1, rewards2, rewards3, rewards4, rewards5]"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="352px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<margin value="16px"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefaultBold19NM"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="text" value="tr('IDS_ARC_EVENT_SIDE_MODIFIER_COMPLEXITY_' + complexity)"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<margin value="16px|16px|16px|0"/>
			</style>
			<bind name="repeat" value="isLastDayWinner	? [{_paragraphText: 'IDS_ARC_EVENT_SIDE_MODIFIER_TOOLTIP_DESCRIPTION_COMPLEXITY'}, {_paragraphText: 'IDS_ARC_EVENT_SIDE_MODIFIER_TOOLTIP_DESCRIPTION_COMPLEXITY_WINNER'}]
										: [{_paragraphText: 'IDS_ARC_EVENT_SIDE_MODIFIER_TOOLTIP_DESCRIPTION_COMPLEXITY'}]; 
			'RepeatParagraphItemNM'; {_class: '$TextDefault17NM', _maxWidth: 320}"/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<styleClass value="$PxHorizontalCorrection"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<margin value="16px|16px|16px|0"/>
				</style>
				<bind name="repeat" value="rewards; 'ArcEventSideModifierTooltipParamsWrapper'; {_sideId: _sideId}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="yesterdayWinnerSideId &gt; -1"/>
			<style>
				<width value="100%"/>
				<margin value="16px"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block type="text">
				<style>
					<width value="100%"/>
				</style>
				<styleClass value="$TextDefault17NM"/>
				<bind name="text" value="isLastDayWinner ? 'IDS_ARC_EVENT_SIDE_MODIFIER_TOOLTIP_DESCRIPTION_MODIFIER_WINNER' : 'IDS_ARC_EVENT_SIDE_MODIFIER_TOOLTIP_DESCRIPTION_MODIFIER_LOSER'"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="isLastDayWinner == false &amp;&amp; sideScoreModifier &gt; 0"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<styleClass value="$PxHorizontalCorrection"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<margin value="16px|16px|16px|0"/>
				</style>
				<bind name="instance" value="'ParamsModifierList'; { _attributesPositive: [ {
				attributeIDS: 'IDS_ARC_EVENT_SIDE_MODIFIER_TOOLTIP_PARAM_LOSER_MODIFIER_TEAM',
				measuredValue: '+'+ sideScoreModifier   +'%',
				category: 'positive'} ] }"/>
			</block>
		</block>
	</block>
	<block className="ArcEventSideModifierTooltipParamsWrapper">
		<bind name="entityDH" value="'rewardEntity'; $value"/>
		<bind name="watch" value="'rewardSubtype'; rewardEntity.rewardComponent.subtype"/>
		<bind name="watch" value="'rewardAmount'; rewardEntity.rewardComponent.amount"/>
		<bind name="primaryEntityDH" value="'arcEventSideEntity'; CC.arcEventSide; _sideId"/>
		<bind name="watchDH" value="'complexity'; ['arcEventSideEntity.arcEventSide.evChanged']; arcEventSideEntity.arcEventSide.complexity"/>
		<bind name="firstEntityDH" value="'arcEventEntity'; CC.arcEvent"/>
		<bind name="watchDH" value="'stageProgressRules'; []; arcEventEntity.arcEventConfig.stageProgressRules"/>
		<bind name="watch" value="'points'; stageProgressRules[complexity][0][$index][0]"/>
		<bind name="watch" value="'paramsObject'; {
		attributeIDS: subst('IDS_SUBST_POINTS', [], {points: points}, points),
		measuredValue: format(rewardAmount),
		measure: ' ' + subst( (rewardSubtype != 'credits' ? 'IDS_PL_REWARD_'+toUpperCase(tr(rewardSubtype)) : 'IDS_PL_CREDITS'), [], {}, rewardAmount) }"/>
		<style>
			<width value="100%"/>
		</style>
		<bind name="instance" value="'ParamsModifierItem'; paramsObject"/>
	</block>
	<block className="ArcEventSideResultsTooltip">
		<bind name="primaryEntityDH" value="'arcEventSideEntity'; CC.arcEventSide; _side"/>
		<bind name="watchDH" value="'sideDailyProgress'; ['arcEventSideEntity.arcEventSide.evProgressChanged']; arcEventSideEntity.arcEventSide.sideDailyProgress"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="340px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<margin value="16px"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefaultBold19NM"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="text" value="tr('IDS_ARC_EVENT_SIDE_TOOLTIP_' + _side)"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<margin value="16px"/>
			</style>
			<block type="text">
				<style>
					<width value="100%"/>
				</style>
				<styleClass value="$TextDefault17NM"/>
				<bind name="text" value="'IDS_ARC_EVENT_SIDE_RESULTS_COUNTER'"/>
			</block>
			<block type="text">
				<style>
					<textAlign value="right"/>
				</style>
				<styleClass value="$TextDefault17NM"/>
				<bind name="text" value="format(sideDailyProgress, -1)"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ClubInfoTooltip">
		<bind name="entityDH" value="'entityClub'; _clubEntityId"/>
		<bind name="watchDH" value="'name';['entityClub.club.evNameChanged']; entityClub.club.name"/>
		<bind name="watchDH" value="'league';['entityClub.club.evRatingChanged']; entityClub.club.league"/>
		<bind name="watchDH" value="'creationTimeStamp';['entityClub.club.evRatingChanged']; entityClub.club.creatingTime"/>
		<bind name="watchDH" value="'battlesCount';['entityClub.club.evRatingChanged']; entityClub.club.battlesCount"/>
		<bind name="watchDH" value="'winCount';['entityClub.club.evRatingChanged']; entityClub.club.winCount"/>
		<bind name="watchDH" value="'drawCount';['entityClub.club.evRatingChanged']; entityClub.club.drawCount"/>
		<bind name="watchDH" value="'loseCount';['entityClub.club.evRatingChanged']; entityClub.club.loseCount"/>
		<bind name="watchDH" value="'lastBattleTimeStamp';['entityClub.club.evRatingChanged']; entityClub.club.lastBattleTime"/>
		<bind name="watchDH" value="'winRate';['entityClub.club.evRatingChanged']; entityClub.club.winRate"/>
		<bind name="watch" value="'drawRate'; drawCount / battlesCount * 100"/>
		<bind name="watch" value="'loseRate'; loseCount / battlesCount * 100"/>
		<bind name="watch" value="'stats'; [	{label: 'IDS_CLUB_BATTLES_COUNT', rate: 'no_rate',	count: battlesCount},
							{label: 'IDS_VICTORIES'			, rate: winRate,	count: winCount},
							{label: 'IDS_DRAWS'				, rate: drawRate,	count: drawCount},
							{label: 'IDS_DEFEATS'			, rate: loseRate,	count: loseCount}]"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="300px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<block type="text">
				<styleClass value="$TextAccentBold"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="text" value="name"/>
			</block>
			<block type="text">
				<styleClass value="$TextHeaderBigDefault"/>
				<style>
					<width value="100%"/>
					<alpha value="0.7"/>
					<marginTop value="-2px"/>
				</style>
				<bind name="text" value="tr('IDS_LEAGUE_'+league)"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<block type="text">
					<styleClass value="$TextHeaderBigDefault"/>
					<bind name="text" value="tr('IDS_CLUB_CREATOR')+tr('IDS_COLON')"/>
				</block>
				<block>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="instance" value="'PlayerContactItem'; {_entityAccountId: entityClub.club.creatorEntityId, _isOfflineAlpha: true}"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<position value="absolute"/>
					<bottom value="0"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<block type="text">
				<styleClass value="$TextHeaderBigDefault"/>
				<bind name="timeFormat" value="creationTimeStamp; 'dd.MM.yyyy'; 'creationTime'; false"/>
				<bind name="text" value="tr('IDS_CREATION_DATE')+tr('IDS_COLON') + ' ' + creationTime"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="visible" value="battlesCount &gt; 0"/>
			<bind name="timeFormat" value="lastBattleTimeStamp; 'dd.MM.yyyy'; 'lastBattleDate'; false"/>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<block type="text">
					<styleClass value="$TextHeaderBigDefault"/>
					<bind name="text" value="tr('IDS_LAST_BATTLE')+tr('IDS_COLON') + ' ' + lastBattleDate"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<bind name="repeat" value="stats; 'ClubTooltipStatRow'"/>
			</block>
		</block>
	</block>
	<block className="ClubTooltipStatRow">
		<style>
			<width value="100%"/>
		</style>
		<bind name="style" value="'marginBottom'; (rate == 'no_rate') ? '4px' : '0px'"/>
		<block type="text">
			<styleClass value="$TextHeaderBigDefault"/>
			<bind name="text" value="label"/>
		</block>
		<block type="text">
			<bind name="visible" value="rate != 'no_rate'"/>
			<style>
				<alpha value="0.7"/>
				<position value="absolute"/>
				<right value="70"/>
			</style>
			<styleClass value="$TextHeaderBigDefault"/>
			<bind name="text" value="format((rate ? rate : 0), 0) +'%'"/>
		</block>
		<block type="text">
			<styleClass value="$AlignRight"/>
			<styleClass value="$TextHeaderBigDefault"/>
			<bind name="text" value="count"/>
		</block>
	</block>
	<block className="ClubLeagueIconSmall">
		<style>
			<width value="60px"/>
			<height value="60px"/>
		</style>
		<style>
			<backgroundSize value="cover"/>
		</style>
		<bind name="style" value="'backgroundImage'; 'symbol:club_icon_league_' + ((_league != null)	? ((_league &gt; 2)	? '2'
																										: _league)
																					: '-1')"/>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<bind name="child" value="_state ? _state : 'Rating'; { _rating: _rating, _isPartyMember: _isPartyMember, _isCommander: _isCommander}; {	Rating: 'ClubIconRatingSmall',
																																	InBattle: 'ClubIconInBattleSmall',
																																	Party: 'ClubIconPartySmall'}"/>
		</block>
	</block>
	<block className="ClubIconRatingSmall">
		<block type="text">
			<style>
				<marginBottom value="1px"/>
			</style>
			<styleClass value="$TextDefaultBold"/>
			<bind name="text" value="format(_rating, -1)"/>
		</block>
	</block>
	<block className="ClubIconInBattleSmall">
		<block>
			<style>
				<width value="32px"/>
				<height value="29px"/>
				<backgroundSize value="cover"/>
			</style>
			<bind name="style" value="'backgroundImage'; _isPartyMember	? 'symbol:icon_club_status_in_battle_member_small'
														: 'symbol:icon_club_status_in_battle_small'"/>
		</block>
	</block>
	<block className="ClubIconPartySmall">
		<block>
			<style>
				<marginTop value="1px"/>
				<width value="32px"/>
				<height value="29px"/>
				<backgroundSize value="cover"/>
			</style>
			<bind name="style" value="'backgroundImage'; _isCommander	? 'symbol:icon_club_status_party_commander_small' :
										_isPartyMember 	? 'symbol:icon_club_status_party_member_small'
														: 'symbol:icon_club_status_party_small'"/>
		</block>
	</block>
	<block className="ClubLeagueIconSmallSimple">
		<bind name="tooltip" value="'ClubInfoTooltipSimple'; {_teamName: _teamName, _rating: _rating, _league: _league, _isInBattle: _isInBattle}"/>
		<block className="ClubLeagueIconSmall">
			<style>
				<width value="60px"/>
				<height value="60px"/>
			</style>
			<style>
				<backgroundSize value="cover"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'symbol:club_icon_league_' + ((_league != null)	? ((_league &gt; 2)	? '2'
																										: _league)
																					: '-1')"/>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$MiddleAlignedAbsolutely"/>
				<bind name="child" value="_state ? _state : 'Rating'; { _rating: _rating, _isPartyMember: _isPartyMember, _isCommander: _isCommander}; {	Rating: 'ClubIconRatingSmall',
																																	InBattle: 'ClubIconInBattleSmall',
																																	Party: 'ClubIconPartySmall'}"/>
			</block>
		</block>
	</block>
	<block className="ClubInfoTooltipSimple">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="240px"/>
		</style>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'MenuTooltipBackground'; {_isInBattle: _isInBattle}"/>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<block type="text">
				<styleClass value="$TextAccentBold"/>
				<style>
					<width value="100%"/>
					<marginTop value="-4px"/>
				</style>
				<bind name="text" value="_teamName"/>
			</block>
			<block type="text">
				<styleClass value="$TextHeaderBigDefault"/>
				<bind name="text" value="tr('IDS_RATING')+tr('IDS_COLON') + ' ' + format(_rating, -1) +', ' + tr('IDS_LEAGUE_'+ _league)"/>
			</block>
		</block>
	</block>
	<block className="ClubHeaderIcon">
		<bind name="entityDH" value="'entityClub'; _clubEntityId"/>
		<bind name="watchDH" value="'league';['entityClub.club.evRatingChanged']; entityClub.club.league"/>
		<bind name="watch" value="'curLeague';	_fakeLeague		? ((_fakeLeague &gt; 2) ? '2'
																	 : _fakeLeague) :
								league != null	? ((league &gt; 2) ? '2'
																: league)
												: '-1'"/>
		<style>
			<width value="260px"/>
			<height value="330px"/>
		</style>
		<block>
			<style>
				<backgroundSize value="cover"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="watch" value="'clubHeaderBgrSymbol'; 'symbol:club_header_bgr_league_' + curLeague"/>
			<bind name="style" value="'backgroundImage'; clubHeaderBgrSymbol"/>
			<bind name="transition" value="_isActiveClubIcon; 0.15; {alpha: 0.65}; {alpha: 1}; {alpha: 0.65}; 0"/>
			<block>
				<bind name="name" value="'clubInfo'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="child" value="_clubIconState ? _clubIconState : 'Party'; {	_clubEntityId: _clubEntityId,
																		_animParams: _animParams,
																		_ratingValue: _ratingValue};

																	{	RatingCounter: 'ClubIconRatingCounter',
																		Rating: 'ClubIconRating',
																		InBattle: 'ClubIconInBattle',
																		Party: 'ClubIconParty'}"/>
			</block>
			<block>
				<style>
					<bottom value="102"/>
					<hitTest value="false"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<bind name="appear" value="'CountPoints_0'; 0.2; 0.3; {top: 10, alpha: 0}; {top: 0, alpha: 1}; 1"/>
				<bind name="instance" value="'ClubLeagueLabel'; (curLeague != '-1') ? {	_league: (_fakeLeague	? _fakeLeague : league),
																		_state : (_leagueState ? _leagueState : 'issued')} : null"/>
			</block>
		</block>
		<block>
			<style>
				<backgroundSize value="cover"/>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="watch" value="'clubLeagueSymbol'; 'symbol:club_header_league_' + curLeague"/>
			<bind name="style" value="'backgroundImage'; clubLeagueSymbol"/>
		</block>
		<block>
			<bind name="visible" value="_isLeader &amp;&amp; (curLeague != '-1')"/>
			<style>
				<marginLeft value="16px"/>
				<marginTop value="26px"/>
				<position value="absolute"/>
			</style>
			<block className="icon_club_leader_big" type="native"/>
			<bind name="tooltip" value="'MouseInstructionTooltip'; {	_multiParagraphArray: [	{_paragraphText: 'IDS_YOU_ARE_CLUB_LEADER'},
																			{_paragraphText: 'IDS_CLUB_LEADER_DESCRIPTION_0'},
																			{_paragraphText: 'IDS_CLUB_LEADER_DESCRIPTION_1'},
																			{_paragraphText: 'IDS_CLUB_LEADER_DESCRIPTION_2'}],
													_marginBottom: '4px'}"/>
		</block>
	</block>
	<block className="ClubIconRating">
		<bind name="entityDH" value="'entityClub'; _clubEntityId"/>
		<bind name="watchDH" value="'lastBattleRatingDelta';['entityClub.club.evRatingChanged']; entityClub.club.lastBattleRatingDelta"/>
		<bind name="watchDH" value="'rating';['entityClub.club.evRatingChanged']; entityClub.club.rating"/>
		<bind name="watch" value="'ratingValue'; _clubEntityId ? rating : _ratingValue"/>
		<styleClass value="$Fullsize"/>
		<style>
			<marginTop value="80px"/>
		</style>
		<block>
			<styleClass value="$MiddleAligned"/>
			<block type="text">
				<bind name="appear" value="'addedToStage'; 0.15; 0.3;	{scaleY: 0.5, scaleX: 0.5, ubScaleY: 0.5, ubScaleX: 0.5, alpha: 0, top: 10};
														{scaleY: 1, scaleX: 1, ubScaleY: 1, ubScaleX: 1, alpha: 1, top: 0}"/>
				<bind name="tooltip" value="'MouseInstructionTooltip'; {	_multiParagraphArray: [{_paragraphText: 'IDS_RATING_HINT_0'}, {_paragraphText: 'IDS_RATING_HINT_1'}]}"/>
				<styleClass value="$TextAccentBoldAccountLevel1"/>
				<bind name="text" value="format(ratingValue, -1)"/>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<bind name="appear" value="'addedToStage'; 0.15; 0.42; {scaleY: 0.5, alpha: 0, top: 20}; {scaleY: 1, alpha: 1, top: 0}"/>
			<style>
				<marginTop value="-8px"/>
			</style>
			<block>
				<block>
					<bind name="tooltip" value="'MouseInstructionTooltip'; {	_multiParagraphArray: [{_paragraphText: 'IDS_RATING_HINT_0'}, {_paragraphText: 'IDS_RATING_HINT_1'}]}"/>
					<block type="text">
						<styleClass value="$TextHeader"/>
						<bind name="class" value="'$Bold'"/>
						<bind name="text" value="toLowerCase(tr('IDS_RATING'))"/>
					</block>
				</block>
				<block>
					<bind name="visible" value="(lastBattleRatingDelta &amp;&amp; (lastBattleRatingDelta != 0))"/>
					<block className="icon_value_changed" type="native">
						<bind name="tooltip" value="'MouseInstructionTooltip'; {	_multiParagraphArray: lastBattleRatingDelta &gt; 0 ? [{_paragraphText: 'IDS_RATING_UP_LB'}]
																												: [{_paragraphText: 'IDS_RATING_DOWN_LB'}]}"/>
						<style>
							<marginTop value="11px"/>
						</style>
						<bind name="gotoAndStop!" value="lastBattleRatingDelta &gt; 0 	? 'up' 
																	: 'down'"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ClubIconPartyState">
		<style>
			<width value="34px"/>
			<height value="34px"/>
		</style>
		<bind name="appear" value="'addedToStage'; 0.15; 0.3; {width: 34, height: 34, alpha: 0, top: 20};
											 {width: 68, height: 68, alpha: 1, top: 0}"/>
		<bind name="var" value="{firstChange: true}"/>
		<bind name="dispatch" value="'addedToStage'; 'changePartyStateEv'; false; 0.5"/>
		<bind name="catch" value="'changePartyStateEv'; {firstChange: false}"/>
		<bind name="watch" value="'change';  _isPartyCommander 	? 2 :
							_isPartyMember 		? 1
												: 0"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundSize value="cover"/>
			</style>
			<bind name="fade" value="change==0; 0.14;	{left: 68, alpha: 0}; {left: 0, alpha: 1}; {left: -68, alpha: 0}; 0;	firstChange	? 0 :
																												change==0	? 0.57
																															: 0.5"/>
			<bind name="style" value="'backgroundImage'; 'symbol:icon_club_status_party'"/>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundSize value="cover"/>
			</style>
			<bind name="fade" value="change==1; 0.14;	{left: 68, alpha: 0}; {left: 0, alpha: 1}; {left: -68, alpha: 0}; 0;	firstChange	? 0 :
																												change==1	? 0.57
																															: 0.5"/>
			<bind name="style" value="'backgroundImage'; 'symbol:icon_club_status_party_member'"/>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundSize value="cover"/>
			</style>
			<bind name="fade" value="change==2; 0.14; {left: 68, alpha: 0}; {left: 0, alpha: 1}; {left: -68, alpha: 0}; 0;	firstChange	? 0 :
																											change==2	? 0.57
																														: 0.5"/>
			<bind name="style" value="'backgroundImage'; 'symbol:icon_club_status_party_commander'"/>
		</block>
	</block>
	<block className="ClubIconParty">
		<bind name="entityDH" value="'entityClub'; _clubEntityId"/>
		<bind name="watchDH" value="'partyPlayersCount'; ['entityClub.party.evUpdate']; entityClub.party.playersCount"/>
		<bind name="watchDH" value="'partyPlayersLimit'; ['entityClub.party.evUpdate']; entityClub.party.playersLimit"/>
		<bind name="watchDH" value="'isPartyMember'; ['entityClub.party.evUpdate']; entityClub.party.isMember"/>
		<bind name="watchDH" value="'isPartyCommander'; ['entityClub.party.evUpdate']; entityClub.party.isOwner"/>
		<bind name="tooltip" value="'MouseInstructionTooltip'; {	_multiParagraphArray: isPartyMember ? [{_paragraphText: 'IDS_PARTY_UP_FOR_BATTLE'}]
																					: [{_paragraphText: 'IDS_PARTY_UP_FOR_BATTLE'}, {_paragraphText: 'IDS_PROFILE_CLUBS_INSTRUCTION_9_1'}]}"/>
		<style>
			<marginTop value="63px"/>
		</style>
		<styleClass value="$MiddleAligned"/>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<height value="68px"/>
			</style>
			<bind name="instance" value="'ClubIconPartyState'; {_isPartyCommander: isPartyCommander, _isPartyMember: isPartyMember}"/>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; 0.42; {scaleY: 0.7, alpha: 0, top: 25}; {scaleY: 1, alpha: 1, top: 0}"/>
			<styleClass value="$MiddleAligned"/>
			<block type="text">
				<style>
					<marginTop value="-4px"/>
					<alpha value="0.85"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$TextHeaderWhiteBold"/>
				<bind name="text" value="toLowerCase(tr('IDS_GATHERING_TO_BATTLE'))"/>
			</block>
			<block>
				<style>
					<marginTop value="-4px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<block type="text">
					<styleClass value="$TextAccentBold"/>
					<style>
						<marginTop value="-4px"/>
					</style>
					<bind name="text" value="partyPlayersCount"/>
				</block>
				<block type="text">
					<styleClass value="$TextAccentBold"/>
					<style>
						<alpha value="0.9"/>
						<marginTop value="-4px"/>
						<marginRight value="-1px"/>
						<marginLeft value="-3px"/>
					</style>
					<text value="/"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefaultBold"/>
					<bind name="class" value="'$FontSizeHeader5'"/>
					<style>
						<alpha value="0.9"/>
					</style>
					<bind name="text" value="partyPlayersLimit"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ClubIconBattleState">
		<style>
			<width value="34px"/>
			<height value="34px"/>
		</style>
		<bind name="appear" value="'addedToStage'; 0.15; 0.3; {width: 34, height: 34, alpha: 0, top: 20};
											 {width: 68, height: 68, alpha: 1, top: 0}"/>
		<bind name="var" value="{firstChange: true}"/>
		<bind name="dispatch" value="'addedToStage'; 'changeBattleStateEv'; false; 0.5"/>
		<bind name="catch" value="'changeBattleStateEv'; {firstChange: false}"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundSize value="cover"/>
			</style>
			<bind name="fade" value="!(_isPartyMember); 0.14;	{left: 68, alpha: 0}; {left: 0, alpha: 1}; {left: -68, alpha: 0}; 0;	firstChange			? 0 :
																														!(_isPartyMember)	? 0.57
																																			: 0.5"/>
			<bind name="style" value="'backgroundImage'; 'symbol:icon_club_status_in_battle'"/>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundSize value="cover"/>
			</style>
			<bind name="fade" value="_isPartyMember; 0.14;	{left: 68, alpha: 0}; {left: 0, alpha: 1}; {left: -68, alpha: 0}; 0;	firstChange			? 0 :
																													_isPartyMember		? 0.57
																																		: 0.5"/>
			<bind name="style" value="'backgroundImage'; 'symbol:icon_club_status_in_battle_member'"/>
		</block>
	</block>
	<block className="ClubIconInBattle">
		<bind name="entityDH" value="'entityClub'; _clubEntityId"/>
		<bind name="watchDH" value="'isPartyMember'; ['entityClub.party.evUpdate']; entityClub.party.isMember"/>
		<bind name="tooltip" value="'MouseInstructionTooltip'; {	_multiParagraphArray: [{_paragraphText: 'IDS_PARTY_IN_BATTLE'}]}"/>
		<style>
			<marginTop value="75px"/>
		</style>
		<styleClass value="$MiddleAligned"/>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<height value="68px"/>
			</style>
			<bind name="instance" value="'ClubIconBattleState'; {_isPartyMember: isPartyMember}"/>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<bind name="appear" value="'addedToStage'; 0.15; 0.42; {scaleY: 0.5, alpha: 0, top: 20}; {scaleY: 1, alpha: 1, top: 0}"/>
			<block type="text">
				<style>
					<marginTop value="-8px"/>
					<alpha value="0.9"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$TextHeaderWhiteBold"/>
				<bind name="text" value="toLowerCase(tr('IDS_IN_BATTLE'))"/>
			</block>
		</block>
	</block>
	<block className="ClubLeagueLabel">
		<bind name="tooltip" value="'MouseInstructionTooltip'; {	_multiParagraphArray: [{_paragraphText: 'IDS_CURRENT_LEAGUE_' + _league}]}"/>
		<bind name="watch" value="'label'; toUpperCase(tr('IDS_LEAGUE_'+_league))"/>
		<block>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<position value="absolute"/>
			</style>
			<block>
				<style>
					<position value="absolute"/>
				</style>
				<block className="icon_issued" type="native">
					<bind name="name" value="'league'"/>
					<innerBind elementName="item.item" name="text" value="label"/>
					<bind name="gotoAndPlay!" value="_state"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ClubLeagueIconTiny">
		<style>
			<width value="35px"/>
			<height value="35px"/>
			<backgroundSize value="cover"/>
		</style>
		<bind name="style" value="'backgroundImage'; 'symbol:club_icon_league_'+(_league != null	? ((_league &gt; 2)	? '2'
																									: _league)
																				: '-1')"/>
	</block>
	<block className="ClubBattleClubsVS">
		<styleClass value="$MiddleAligned"/>
		<block>
			<style>
				<marginBottom value="15px"/>
			</style>
			<block>
				<bind name="visible" value="_alliedClub.clubLeague != null &amp;&amp; _alliedClub.clubLeague == _enemyClub.clubLeague"/>
				<styleClass value="$MiddleAligned"/>
				<style>
					<position value="absolute"/>
					<alpha value="0.25"/>
					<bottom value="-6"/>
					<hitTest value="false"/>
				</style>
				<bind name="instance" value="'ClubLeagueLabel'; (_alliedClub.clubLeague != '-1') ? {	_league: _alliedClub.clubLeague, _state: 'issued'} : null"/>
			</block>
			<block>
				<bind name="tooltip" value="'ClubInfoTooltipSimple'; {_teamName: _alliedClub.clubName, _rating: format(_alliedClub.clubRating, -1), _league: _alliedClub.clubLeague}"/>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<position value="absolute"/>
					<right value="105%"/>
				</style>
				<block type="text">
					<styleClass value="$TextAccentBold"/>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<marginRight value="6px"/>
						<alpha value="0.85"/>
					</style>
					<bind name="text" value="_alliedClub.clubName"/>
				</block>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<block>
						<bind name="visible" value="_alliedClub.clubLeague != _enemyClub.clubLeague"/>
						<style>
							<position value="absolute"/>
							<alpha value="0.25"/>
							<top value="90%"/>
							<left value="10%"/>
							<hitTest value="false"/>
						</style>
						<bind name="instance" value="'ClubLeagueLabel'; (_alliedClub.clubLeague != '-1') ? {	_league: _alliedClub.clubLeague, _state: 'issued'} : null"/>
					</block>
					<block type="text">
						<styleClass value="$TextAccentBold"/>
						<bind name="class" value="'$FontAccentSize2'"/>
						<bind name="text" value="format(_alliedClub.clubRating, -1)"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<style>
					<width value="30px"/>
					<height value="30px"/>
				</style>
			</block>
			<block>
				<bind name="tooltip" value="'ClubInfoTooltipSimple'; {_teamName: _enemyClub.clubName, _rating: _enemyClub.clubRating, _league: _enemyClub.clubLeague}"/>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<position value="absolute"/>
					<left value="105%"/>
				</style>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<block>
						<bind name="visible" value="_alliedClub.clubLeague != _enemyClub.clubLeague"/>
						<style>
							<position value="absolute"/>
							<alpha value="0.25"/>
							<top value="90%"/>
							<right value="10%"/>
							<hitTest value="false"/>
						</style>
						<bind name="instance" value="'ClubLeagueLabel'; (_enemyClub.clubLeague != '-1') ? { _league: _enemyClub.clubLeague, _state: 'issued' } : null"/>
					</block>
					<block type="text">
						<styleClass value="$TextAccentBold"/>
						<bind name="class" value="'$FontAccentSize2'"/>
						<bind name="text" value="format(_enemyClub.clubRating, -1)"/>
					</block>
				</block>
				<block type="text">
					<styleClass value="$TextAccentBold"/>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<marginLeft value="6px"/>
						<alpha value="0.85"/>
					</style>
					<bind name="text" value="_enemyClub.clubName"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="CarouselFilters">
		<bind name="stageSize"/>
		<bind name="watch" value="'isFourRowsEnabled'; (stageHeight != null) ? (stageHeight &gt; (720 + 160)) : true"/>
		<bind name="watch" value="'isThreeRowsEnabled'; (stageHeight != null) ? (stageHeight &gt; (720 + 88)) : true"/>
		<bind name="watch" value="'curCarouselRows';	(userPrefs.curRowCountIndex == null)															? 0 :
									(userPrefs.curRowCountIndex == 2 &amp;&amp; isFourRowsEnabled)											? 2 :
									((userPrefs.curRowCountIndex == 2 || userPrefs.curRowCountIndex == 1) &amp;&amp; isThreeRowsEnabled)	? 1
																																	: 0"/>
		<bind name="action" value="'carouselRowsCountChangedByStageHeight'; 'setUserPref' ; {value : curCarouselRows, name: 'curRowCountIndex'}"/>
		<bind name="changeDispatch" value="curCarouselRows; 'carouselRowsCountChangedByStageHeight'"/>
		<bind name="feature" value="13;''"/>
		<bind name="action" value="(feature_13 == 'locked') ? 'addedToStage' : '';  'setFilterValue'; {type: 'special', field: 'IDS_WITH_COMMANDER', value: false, ident: 0 }"/>
		<bind name="action" value="(feature_13 == 'locked') ? 'addedToStage' : '';  'setFilterValue'; {type: 'special', field: 'IDS_WITHOUT_COMMANDER', value: false, ident: 0 }"/>
		<style>
			<marginLeft value="7px"/>
			<height value="30px"/>
			<flow value="horizontal"/>
		</style>
		<block>
			<bind name="name" value="'CarouselFiltersButton'"/>
			<block className="button_carousel_filters" type="native">
				<bind name="tooltip" value="'CarouselFiltersInfotip'; {	AppliedFiltersCounter: AppliedFiltersCounter,
														_isSmallCarouselView: isSmallCarouselView,
														_isFilteredShipsHided: isFilteredShipsHided}; TooltipBehaviour.verticalInfotipSwitch; null; 'carouselFiltersInfotipIsVIsible'"/>
				<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_TOOLTIP_CAROUSEL_FILTERS'}], _maxWidth: 240 }"/>
				<bind name="selected" value="carouselFiltersInfotipIsVIsible"/>
			</block>
		</block>
		<bind name="catch" value="'shipNameFIlterInfotipSelectedChanged'"/>
		<bind name="firstEntityDH" value="'panelEntity'; CC.filterPanelComponent"/>
		<bind name="watchDH" value="'selectedFilters'; ['panelEntity.shipRestrictions.evUpdate']; panelEntity.shipRestrictions.selectedFilters"/>
		<block>
			<style>
				<height value="32px"/>
				<marginTop value="-4px"/>
				<marginRight value="12px"/>
				<marginLeft value="4px"/>
			</style>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
			<bind name="firstEntityDH" value="'enterBattleEntity'; CC.enterBattle"/>
			<bind name="firstEntityDH" value="'trainingRoomEntity'; CC.trainingRoomWindowState"/>
			<bind name="watchDH" value="'selectedBattle'; ['enterBattleEntity.enterBattle.evBattleTypesChanged']; enterBattleEntity.enterBattle.selectedBattle"/>
			<block>
				<block className="HasTrainingRoomRestrictions">
					<bind name="watchDH" value="'shipRestrictions' ; ['trainingRoomEntity.shipRestrictions.evUpdate']; trainingRoomEntity.shipRestrictions.selectedFilters"/>
					<bind name="watchDH" value="'shipsCount' ; ['trainingRoomEntity.divisionRestrictions.evUpdate']; trainingRoomEntity.divisionRestrictions.shipsCount"/>
					<bind name="watchDH" value="'typesCount' ; ['trainingRoomEntity.divisionRestrictions.evUpdate']; trainingRoomEntity.divisionRestrictions.typesCount"/>
					<bind name="primaryEntityDH" value="'defaultRestrictionsEntity'; CC.battleType; BattleTypes.TRAINING_BATTLE"/>
					<bind name="watchDH" value="'defaultTypesCount' ; ['defaultRestrictionsEntity.divisionRestrictions.evUpdate']; defaultRestrictionsEntity.divisionRestrictions.typesCount"/>
					<bind name="collectionDH" value="CC.shipFilterItem; 'idsfilters'+'ROOT'"/>
					<bind name="collectionDesign" value="'DES_'+'idsfilters'+'ROOT'; 'idsfilters'; {'filter':$entity.shipFilterItem.type == 'shipId' &amp;&amp; isIn($entity.id, shipRestrictions)}; []"/>
					<bind name="collectionDH" value="CC.shipFilterItem; 'levelfilters'+'ROOT'"/>
					<bind name="collectionDesign" value="'DES_'+'levelfilters'+'ROOT'; 'levelfilters'; {'filter':$entity.shipFilterItem.type == 'level' &amp;&amp; isIn($entity.id, shipRestrictions)}; []"/>
					<bind name="collectionDH" value="CC.shipFilterItem; 'nationfilters'+'ROOT'"/>
					<bind name="collectionDesign" value="'DES_'+'nationfilters'+'ROOT'; 'nationfilters'; {'filter':$entity.shipFilterItem.type == 'nation' &amp;&amp; isIn($entity.id, shipRestrictions)}; []"/>
					<bind name="collectionFields" value="levelfilters; ['shipFilterItem.field']"/>
					<bind name="contains" value="typesCount; $item[1] == -1; 'isAnyShipTypeNotAllowed'"/>
					<bind name="watch" value="'isCarriersRestricted'; typesCount[ShipTypes.AircraftCarrier] &amp;&amp; typesCount[ShipTypes.AircraftCarrier][1] != defaultTypesCount[ShipTypes.AircraftCarrier][1]"/>
					<bind name="watch" value="'isBattleShipsRestricted'; typesCount[ShipTypes.BattleShip] &amp;&amp; typesCount[ShipTypes.BattleShip][1] != defaultTypesCount[ShipTypes.BattleShip][1]"/>
					<bind name="watch" value="'isCruisersRestricted'; typesCount[ShipTypes.Cruiser] &amp;&amp; typesCount[ShipTypes.Cruiser][1] != defaultTypesCount[ShipTypes.Cruiser][1]"/>
					<bind name="watch" value="'isDestroyersRestricted'; typesCount[ShipTypes.Destroyer] &amp;&amp; typesCount[ShipTypes.Destroyer][1] != defaultTypesCount[ShipTypes.Destroyer][1]"/>
					<bind name="watch" value="'isAnyShipTypeRestricted'; isCarriersRestricted || isBattleShipsRestricted || isCruisersRestricted || isDestroyersRestricted"/>
					<bind name="watch" value="'hasTrainingRoomRestrictions'; (idsfilters.length &gt; 0)			||
												(shipTypefilters.length &gt; 0)	||
												(levelfilters.length &gt; 0)		||
												(nationfilters.length &gt; 0)		||
												isShipFilterRestrictionsVisible"/>
					<bind name="watch" value="'isShipFilterRestrictionsVisible'; isAnyShipTypeRestricted &amp;&amp; isAnyShipTypeNotAllowed"/>
				</block>
				<bind name="watch" value="'pveFilterVisible'; selectedBattle.type == BattleTypes.PVE_BATTLE"/>
				<bind name="watch" value="'trainingFilterVisible'; trainingRoomEntity &amp;&amp; hasTrainingRoomRestrictions"/>
				<bind name="watch" value="'rankedFilterVisible'; selectedBattle.type == BattleTypes.RANKED_BATTLE"/>
				<bind name="watch" value="'eventFilterVisible'; selectedBattle.type == BattleTypes.EVENT_BATTLE"/>
				<bind name="watch" value="'clanFilterVisible'; selectedBattle.type == BattleTypes.CLAN_BATTLE"/>
				<bind name="watch" value="'battleTypeFilterVisible'; pveFilterVisible || trainingFilterVisible || rankedFilterVisible || eventFilterVisible || clanFilterVisible"/>
				<bind name="instance" value="'AppliedBattleTypeFilter'; battleTypeFilterVisible ? {}	: null"/>
			</block>
			<block>
				<bind name="instance" value="'AppliedFilter'; {_filterType: 'shipName', shipNameFilterInfotipSelected: shipNameFilterInfotipSelected, _panelEntityId: panelEntity.id}"/>
				<bind name="instance" value="'AppliedFilter'; {_filterType: 'level', _panelEntityId: panelEntity.id}"/>
				<bind name="instance" value="'AppliedFilter'; {_filterType: 'shipType', _panelEntityId: panelEntity.id}"/>
				<bind name="instance" value="'AppliedFilter'; {_filterType: 'nation', _panelEntityId: panelEntity.id}"/>
				<bind name="instance" value="'AppliedFilter'; {_filterType: 'special', _panelEntityId: panelEntity.id}"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<bind name="instance" value="'ResetAllFilters'; selectedFilters.length &gt; 0 ? {} : null"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="CarouselFiltersInfotip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<bind name="firstEntityDH" value="'panelEntity'; CC.filterPanelComponent"/>
		<bind name="collectionDH" value="CC.shipFilterItem; 'selectedFilters'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'selectedFilters'+'ROOT'; 'selectedFilters'; {'filter':isIn($entity.id, panelEntity.shipRestrictions.selectedFilters)}; []"/>
		<styleClass value="$VerticalInfotipBehaviourCenterUpper"/>
		<bind name="dispatch" value="'carouselRowsCountChanged'; 'Tooltip.Place'; {}; 2; 0.15"/>
		<bind name="dispatch" value="'carouselViewChanged'; 'Tooltip.Place'; {}; 2; 0.15"/>
		<bind name="name" value="CarouselFiltersInfotipClip"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginLeft value="8px"/>
				<marginRight value="13px"/>
				<marginTop value="9px"/>
				<marginBottom value="11px"/>
			</style>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
		</block>
		<block className="dock_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginBottom value="-6px"/>
				<marginLeft value="-6px"/>
				<position value="absolute"/>
			</style>
		</block>
		<block>
			<style>
				<marginLeft value="9px"/>
				<marginRight value="13px"/>
				<marginTop value="10px"/>
			</style>
			<bind name="var" value="{isSearchingShipByName: false}"/>
			<bind name="catch" value="'searchShipButtonClicked'; {isSearchingShipByName: true}"/>
			<bind name="catch" value="'closeSearchField'; {isSearchingShipByName: false}"/>
			<bind name="catch" value="'TextInputWithCancel.shipSearchCancelled'; {isSearchingShipByName: false, inputStr: ''}"/>
			<bind name="watch" value="'shipSearchStringValue'; searchStr ? searchStr : false"/>
			<bind name="dispatch" value="'Tooltip.selfOpened'; shipSearchStringValue ? 'searchShipButtonClicked' : 'closeSearchField'"/>
			<bind name="dispatch" value="'Tooltip.selfClosed'; shipSearchStringValue ? null : 'closeSearchField'"/>
			<block>
				<style>
					<height value="34px"/>
					<width value="100%"/>
					<position value="absolute"/>
				</style>
				<block type="text">
					<style>
						<marginLeft value="12px"/>
						<marginTop value="3px"/>
					</style>
					<styleClass value="$TextHeaderBold"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<bind name="text" value="'IDS_FILTERS'"/>
				</block>
				<block>
					<style>
						<marginTop value="1px"/>
						<marginLeft value="6px"/>
					</style>
					<bind name="instance" value="'ResetAllFilters'; selectedFilters.length &gt; 0 ? {} : null"/>
				</block>
				<block className="button_search" type="native">
					<style>
						<right value="12px"/>
						<marginTop value="6px"/>
						<position value="absolute"/>
					</style>
					<bind name="visible" value="!(isSearchingShipByName)"/>
					<bind name="dispatch" value="'buttonClick';'searchShipButtonClicked'"/>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_SEARCH_SHIP_BY_NAME'}"/>
				</block>
				<block>
					<bind name="visible" value="isSearchingShipByName"/>
					<bind name="collectionDH" value="CC.shipFilterItem; 'shipNameFilters'+'ROOT'"/>
					<bind name="collectionDesign" value="'DES_'+'shipNameFilters'+'ROOT'; 'shipNameFilters'; {'filter':$entity.shipFilterItem.type == 'shipName'}; []"/>
					<bind name="firstEntityDH" value="'panelEntity'; CC.filterPanelComponent"/>
					<bind name="watchDH" value="'searchStr'; ['panelEntity.shipRestrictions.evUpdate']; panelEntity.shipRestrictions.selectedFiltersData[shipNameFilters[0].id]"/>
					<style>
						<width value="284px"/>
						<position value="absolute"/>
						<top value="15px"/>
						<right value="0"/>
					</style>
					<bind name="instance" value="'TextInputWithCancelCustom'; isSearchingShipByName	?	{	onEnterEvent: 'startShipSearch',
																						onCancelEvent: 'shipSearchCancelled',
																						onInputStrChangedEvent: 'inputStrChanged',
																						_onEnterTooltipText: 'IDS_HINT_FIND',
																						_closeButtonTooltipText: 'IDS_HINT_RESET_FILTER',
																						_defaultInputValue: searchStr,
																						_maxChars: 20,
																						_tfWidth: '250px'}
																				: null"/>
					<bind name="watch" value="'strForSearch'; inputStr"/>
					<bind name="catch" value="'TextInputWithCancel.inputStrChanged'"/>
					<bind name="changeDispatch" value="strForSearch; 'strForChanged'"/>
					<bind name="action" value="'strForChanged'; 'setFilterValue' ; {type: 'shipName', field: 'IDS_SHIP_NAME_FILTER', value: strForSearch, ident: 0}"/>
				</block>
				<block>
					<style>
						<bottom value="0px"/>
						<position value="absolute"/>
						<width value="100%"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<style>
					<marginTop value="34px"/>
					<marginBottom value="80px"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block>
					<bind name="firstEntityDH" value="'panelEntity'; CC.filterPanelComponent"/>
					<bind name="instance" value="'FilterBlock'; {_title: 'IDS_LEVEL', _filterType: 'level', needDivider: false, _panelEntityId: panelEntity.id, _ident: 0}"/>
					<bind name="instance" value="'FilterBlock'; {_title: 'IDS_CLASS', _filterType: 'shipType', needDivider: true, _panelEntityId: panelEntity.id, _ident: 0}"/>
					<bind name="instance" value="'FilterBlock'; {_title: 'IDS_NATION', _filterType: 'nation', needDivider: true, _panelEntityId: panelEntity.id, _ident: 0}"/>
					<bind name="instance" value="'FilterBlock'; {_title: 'IDS_SPECIAL', _filterType: 'special', needDivider: true, _panelEntityId: panelEntity.id, _ident: 0}"/>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<style>
						<bottom value="-1px"/>
						<position value="absolute"/>
						<width value="100%"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<position value="absolute"/>
					<bottom value="0px"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
						<marginLeft value="14px"/>
						<marginBottom value="2px"/>
					</style>
					<block>
						<style>
							<marginTop value="7px"/>
						</style>
						<bind name="name" value="'SmallCarouselView'"/>
						<bind name="tooltip" value="'SimpleTooltip'; {tooltipText:	(_isSmallCarouselView ?	'IDS_HINT_CHECKBOX_DISABLE_SMALL_VIEW' :
																							'IDS_HINT_CHECKBOX_ENABLE_SMALL_VIEW')}"/>
						<bind name="instance" value="'CheckBox'; {switchProperty: _isSmallCarouselView, label: 'IDS_SMALL_CAROUSEL_VIEW'}"/>
						<bind name="dispatch" value="'left_click'; 'carouselViewChanged'"/>
						<bind name="clickSplit"/>
					</block>
					<block>
						<bind name="style" value="'hitTest'; _isSmallCarouselView == true ? true : false"/>
						<bind name="transition" value="_isSmallCarouselView == true; 0.1; {alpha: 0}; {alpha: 1}"/>
						<bind name="instance" value="'CarouselRowsChooser'; {}"/>
					</block>
					<block>
						<style>
							<right value="14px"/>
							<position value="absolute"/>
						</style>
						<block type="text">
							<style>
								<marginTop value="4px"/>
							</style>
							<styleClass value="$TextHeaderBold"/>
							<bind name="class" value="'$FontColorBlueish'"/>
							<bind name="text" value="tr('IDS_SORTING_TYPE')+tr('IDS_COLON')"/>
						</block>
						<block>
							<bind name="name" value="'CarouselOrdering'"/>
							<style>
								<marginLeft value="2px"/>
								<marginTop value="3px"/>
							</style>
							<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
							<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
							<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
							<bind name="watch" value="'_curItemIndex';	(userPrefs.shipCarouselSortIndex == null) 	? 0 		: userPrefs.shipCarouselSortIndex"/>
							<bind name="watch" value="'_direction';		(userPrefs.shipCarouselSortReverse == null) ? false 	: userPrefs.shipCarouselSortReverse"/>
							<bind name="action" value="'shipSortChanged'; 'setUserPref' ; {value: _curItemIndex, name: 'shipCarouselSortIndex'}"/>
							<bind name="catch" value="'ItemChooser.shipsSortSelected'"/>
							<bind name="watchDH" value="'shipSorter'; ['panelEntity.filterPanelComponent.evUpdate']; panelEntity.filterPanelComponent.sortFields"/>
							<bind name="instance" value="'ItemChooser'; {	_items: [shipSorter[0].ids, shipSorter[1].ids, shipSorter[2].ids, shipSorter[3].ids], curIndex: _curItemIndex, curDirection: _direction,
															_choosedItemRenderer: 'BluishTextChoosedItemRenderer', _listItemRenderer: 'TextListItemRenderer',
															onItemSelectedEvent: 'shipsSortSelected', _itemChooserTooltipText: 'IDS_HINT_SHIP_CAROUSEL_SORT'}"/>
							<bind name="changeDispatch" value="_curItemIndex; 'shipSortChanged'"/>
							<bind name="changeDispatch" value="_direction; 'shipSortChanged'"/>
							<bind name="action" value="'shipSortChanged'; 'setSortOrder'; {sortPriority: shipSorter[_curItemIndex].field, reverse: _direction}"/>
							<bind name="action" value="'shipSortChanged'; 'setUserPref' ; {value: _direction, name: 'shipCarouselSortReverse'}"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<style>
						<marginLeft value="14px"/>
						<marginBottom value="13px"/>
					</style>
					<bind name="name" value="'HideFilteredShips'"/>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText:	(_isFilteredShipsHided	?	'IDS_TURN_OFF_HIDE_FILTERED_SHIPS'
																						:	'IDS_TURN_ON_HIDE_FILTERED_SHIPS')}"/>
					<bind name="instance" value="'CheckBox'; {switchProperty: _isFilteredShipsHided, label: 'IDS_HIDE_FILTERED_SHIPS'}"/>
					<bind name="dispatch" value="'left_click'; 'carouselHideFilteredChanged'"/>
					<bind name="clickSplit"/>
				</block>
			</block>
		</block>
		<block className="dock_panel_pin" type="native">
			<style>
				<marginLeft value="10px"/>
				<marginBottom value="3px"/>
				<alpha value="0.5"/>
			</style>
			<bind name="gotoAndStop!" value="'down'"/>
		</block>
	</block>
	<block className="TextInputWithCancelCustom">
		<styleClass value="$Fullsize"/>
		<bind name="var" value="{textInput: ''}"/>
		<bind name="catch" value="'removedFromStage'; {textInput: ''}"/>
		<bind name="changeDispatch" value="_defaultInputValue; 'setDefaultValue'"/>
		<bind name="catch" value="'setDefaultValue'; {textInput: _defaultInputValue}"/>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<block className="text_input_caps_enter" type="native">
				<bind name="tooltip" value="'SimpleTooltip'; _tooltipText ? {tooltipText: _tooltipText} : null"/>
				<bind name="style" value="'width'; _tfWidth ? _tfWidth : '270px'"/>
				<params>
					<param name="actAsButton" value="true"/>
				</params>
				<bind name="maxChars" value="_maxChars ? _maxChars : 32"/>
				<bind name="defaultText" value="defaultText"/>
				<bind name="focus" value="0; true"/>
				<bind name="restrict" value="restrict"/>
				<bind name="text" value="textInput"/>
				<bind name="sync" value="'text'; 'change'; textInput"/>
				<bind name="dispatch" value="'change'; 'TextInputWithCancel.'+ onInputStrChangedEvent; {inputStr: textInput}"/>
				<bind name="dispatch" value="'textInputEnter'; 'TextInputWithCancel.' + onEnterEvent; {inputStr: textInput}"/>
				<block className="button_dock" type="native">
					<bind name="tooltip" value="'SimpleTooltip'; _onEnterTooltipText ? {tooltipText: _onEnterTooltipText} : null"/>
					<styleClass value="$TextInputEnterButton"/>
					<bind name="enabled" value="textInput"/>
					<bind name="dispatch" value="'buttonClick'; 'TextInputWithCancel.' + onEnterEvent; {inputStr: textInput}"/>
				</block>
			</block>
			<block className="button_close" type="native">
				<bind name="tooltip" value="'SimpleTooltip'; _closeButtonTooltipText ? {tooltipText: _closeButtonTooltipText} : null"/>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<marginLeft value="6px"/>
				</style>
				<bind name="dispatch" value="'buttonClick'; 'TextInputWithCancel.' + onCancelEvent"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="CarouselRowsChooser">
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="watch" value="'_curItemIndex';	(userPrefs.curRowCountIndex == null) ? 0 : userPrefs.curRowCountIndex"/>
		<bind name="action" value="'carouselRowsCountChanged'; 'setUserPref' ; {value : _curItemIndex, name: 'curRowCountIndex'}"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<bind name="name" value="'CarouselRows'"/>
			<style>
				<marginLeft value="2px"/>
				<marginRight value="6px"/>
				<marginTop value="3px"/>
			</style>
			<bind name="catch" value="'ItemChooser.carouselRowsSelected'"/>
			<bind name="instance" value="'ItemChooser'; {	_items: ['2', '3', '4'], curIndex: _curItemIndex, _dropDownWidth: '50px',
											_choosedItemRenderer: 'BluishTextChoosedItemRenderer', _listItemRenderer: 'CarouselShipRowsListItemRenderer',
											onItemSelectedEvent: 'carouselRowsSelected', _itemChooserTooltipText: 'IDS_HINT_ROWS_IN_CAROUSEL'}"/>
			<bind name="changeDispatch" value="_curItemIndex; 'carouselRowsCountChanged'"/>
		</block>
	</block>
	<block className="CarouselAppliedFilterInfotip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<bind name="class" value="(_arrow == 'top') ? '$ReplaysInfotipFilter' : '$VerticalInfotipBehaviourCenterUpper'"/>
		<bind name="name" value="'CarouselAppliedFilterInfotip'"/>
		<bind name="firstEntityDH" value="'panelEntity'; CC.filterPanelComponent"/>
		<block className="dock_panel_pin" type="native">
			<bind name="visible" value="_arrow == 'top'"/>
			<bind name="gotoAndStop!" value="'up'"/>
			<params>
				<param name="name" value="pinTop"/>
			</params>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginLeft value="8px"/>
				<marginRight value="13px"/>
				<marginTop value="9px"/>
				<marginBottom value="11px"/>
			</style>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap3" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
		</block>
		<block className="dock_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginBottom value="-6px"/>
				<marginLeft value="-6px"/>
			</style>
		</block>
		<block>
			<style>
				<marginLeft value="9px"/>
				<marginRight value="13px"/>
				<marginTop value="10px"/>
			</style>
			<bind name="instance" value="'FilterBlock'; {_title: _title, _filterType: _filterType, needDivider: false, _panelEntityId: panelEntity.id, _ident: 0}}"/>
		</block>
		<block className="dock_panel_pin" type="native">
			<bind name="style" value="'alpha'; _arrow != 'top' ? '0.5' : '0'"/>
			<style>
				<marginBottom value="3px"/>
			</style>
			<bind name="gotoAndStop!" value="'down'"/>
			<params>
				<param name="name" value="pinBottom"/>
			</params>
		</block>
	</block>
	<block className="CarouselAppliedFilterShipNameInfotip">
		<bind name="firstEntityDH" value="'panelEntity'; CC.filterPanelComponent"/>
		<bind name="collectionDH" value="CC.shipFilterItem; 'shipNameFilters'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'shipNameFilters'+'ROOT'; 'shipNameFilters'; {'filter':$entity.shipFilterItem.type == 'shipName'}; []"/>
		<bind name="watchDH" value="'searchStr'; ['panelEntity.shipRestrictions.evUpdate']; panelEntity.shipRestrictions.selectedFiltersData[shipNameFilters[0].id]"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<styleClass value="$VerticalInfotipBehaviourCenterUpper"/>
		<bind name="name" value="'CarouselAppliedFilterShipNameInfotip'"/>
		<style>
			<width value="305px"/>
			<height value="65px"/>
		</style>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginLeft value="8px"/>
				<marginRight value="13px"/>
				<marginTop value="9px"/>
				<marginBottom value="11px"/>
			</style>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap3" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
		</block>
		<block className="dock_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginBottom value="-6px"/>
				<marginLeft value="-6px"/>
			</style>
		</block>
		<block>
			<style>
				<width value="284px"/>
				<height value="40px"/>
				<marginTop value="11px"/>
				<right value="6px"/>
			</style>
			<bind name="instance" value="'TextInputWithCancelCustom'; {	onEnterEvent: 'startShipSearch',
													onCancelEvent: 'shipSearchCancelled',
													onInputStrChangedEvent: 'inputStrChanged',													
													_onEnterTooltipText: 'IDS_HINT_FIND',
													_closeButtonTooltipText: 'IDS_HINT_RESET_FILTER',
													_defaultInputValue: searchStr,
													_maxChars: 20,
													_tfWidth: '250px'}"/>
			<bind name="watch" value="'strForSearch'; inputStr"/>
			<bind name="catch" value="'TextInputWithCancel.inputStrChanged'"/>
			<bind name="changeDispatch" value="strForSearch; 'strForChanged'"/>
			<bind name="catch" value="'TextInputWithCancel.shipSearchCancelled'; {inputStr: ''}"/>
			<bind name="action" value="'strForChanged'; 'setFilterValue' ; {type: 'shipName', field: 'IDS_SHIP_NAME_FILTER', value: strForSearch, ident: 0}"/>
			<bind name="dispatch" value="'TextInputWithCancel.shipSearchCancelled'; 'Tooltip.Close'; {}; false; 0.1"/>
		</block>
		<block className="dock_panel_pin" type="native">
			<style>
				<position value="absolute"/>
				<bottom value="3px"/>
				<alpha value="0.5"/>
			</style>
			<bind name="gotoAndStop!" value="'down'"/>
			<params>
				<param name="name" value="pinBottom"/>
			</params>
		</block>
	</block>
	<block className="FilterBlock">
		<bind name="collectionDH" value="CC.shipFilterItem; 'filters'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'filters'+'ROOT'; 'filters'; {'filter':$entity.shipFilterItem.type == _filterType}; []"/>
		<block type="text">
			<style>
				<marginTop value="5px"/>
				<marginBottom value="8px"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$TextHeaderBold"/>
			<bind name="class" value="'$FontColorBlueish'"/>
			<bind name="text" value="_title"/>
		</block>
		<block>
			<bind name="name" value="'FilterBlockValues'"/>
			<style>
				<flow value="vtile"/>
				<height value="155px"/>
				<marginLeft value="30px"/>
				<marginRight value="6px"/>
			</style>
			<bind name="repeat" value="filters; 'FilterItem'; {_panelEntityId: _panelEntityId, _ident: _ident, _tooltipPrefix: _tooltipPrefix}"/>
		</block>
		<block>
			<bind name="visible" value="needDivider == true"/>
			<style>
				<height value="100%"/>
				<position value="absolute"/>
			</style>
			<block className="divider_v" type="native">
				<style>
					<height value="100%"/>
				</style>
			</block>
		</block>
	</block>
	<block className="FilterItem">
		<bind name="entityDH" value="'entity'; id"/>
		<bind name="entityDH" value="'panelEntity'; _panelEntityId"/>
		<bind name="watchDH" value="'_value'; ['panelEntity.shipRestrictions.evUpdate']; isIn(entity.id, panelEntity.shipRestrictions.selectedFilters)"/>
		<bind name="watchDH" value="'_filterType'; ['entity.shipFilterItem.evUpdate']; entity.shipFilterItem.type"/>
		<bind name="watchDH" value="'_field'; ['entity.shipFilterItem.evUpdate']; entity.shipFilterItem.field"/>
		<bind name="instance" value="(_filterType == 'level')	? 'ShipLevelCheckBox'	:
                    (_filterType == 'shipType')	? 'ShipClassCheckBox'	:
                    (_filterType == 'nation')	? (_field != 'Events' ? 'ShipNationCheckBox' : 'EmptyItem') :
                    (_filterType == 'special')	? 'ShipSpecialCheckBox'
                                          		: 'FilterCheckBox'; {_filterType: _filterType, value: _value, field: _field, _ident: _ident, _tooltipPrefix: _tooltipPrefix}"/>
	</block>
	<block className="FilterCheckBox">
		<style>
			<marginRight value="44px"/>
			<marginBottom value="8px"/>
		</style>
		<bind name="instance" value="'CheckBox'; {switchProperty: value, label: field, _maxTfWidth: 150}"/>
		<bind name="action" value="'left_click'; 'setFilterValue' ; {type: _filterType, field: field, value: !value, ident: _ident}"/>
		<bind name="clickSplit"/>
	</block>
	<block className="ShipLevelCheckBox">
		<bind name="name" value="'CarouselCheckBox_' + _filterType + '_' + field"/>
		<style>
			<marginBottom value="8px"/>
			<width value="80px"/>
		</style>
		<bind name="action" value="'left_click'; 'setFilterValue' ; {type: _filterType, field: field, value: !value, ident: _ident}"/>
		<bind name="clickSplit"/>
		<bind name="watch" value="'tooltipPrefix'; _tooltipPrefix ? _tooltipPrefix : 'IDS_'"/>
		<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: subst(tooltipPrefix + 'HINT_CHECKBOX_FILTER_LEVEL', [], {level: field}) }"/>
		<bind name="instance" value="'CheckBox'; {switchProperty: !!(value), label: ShipLevels.RLEVELS[field], _maxTfWidth: 150}"/>
	</block>
	<block className="ShipClassCheckBox">
		<bind name="visible" value="field != ShipTypes.Submarine"/>
		<bind name="name" value="'CarouselCheckBox_' + _filterType + '_' + field"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="action" value="'left_click'; 'setFilterValue' ; {type: _filterType, field: field, value: !value, ident: _ident}"/>
		<bind name="clickSplit"/>
		<bind name="watch" value="'tooltipPrefix'; _tooltipPrefix ? _tooltipPrefix : 'IDS_'"/>
		<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: tooltipPrefix + 'HINT_CHECKBOX_FILTER_CLASS_' + toUpperCase(field) }"/>
		<style>
			<marginBottom value="8px"/>
			<width value="80px"/>
			<height value="21px"/>
			<flow value="horizontal"/>
		</style>
		<block className="checkbox_no_label" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="selected" value="!!(value)"/>
		</block>
		<block>
			<style>
				<marginTop value="5px"/>
				<hitTest value="false"/>
			</style>
			<bind name="transition" value="rollOver &amp;&amp; !mouseDown; 0.15; {alpha: 0.8}; {alpha: 1}; {alpha: 0.8}; 2"/>
			<bind name="style" value="'marginLeft'; 	field == ShipTypes.Submarine 	? '29px' :
									field == ShipTypes.Destroyer 	? '24px'
																	: '27px'"/>
			<block className="icon_ship" type="native">
				<bind name="gotoAndStop!" value="field"/>
			</block>
		</block>
	</block>
	<block className="ShipNationCheckBox">
		<bind name="name" value="'CarouselCheckBox_' + _filterType + '_' + field"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="action" value="'left_click'; 'setFilterValue' ; {type: _filterType, field: field, value: !value, ident: _ident}"/>
		<bind name="watch" value="'tooltipPrefix'; _tooltipPrefix ? _tooltipPrefix : 'IDS_'"/>
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: tr(tooltipPrefix + 'HINT_CHECKBOX_FILTER_NATION_') +  tr(toUpperCase(field))}"/>
		<bind name="clickSplit"/>
		<style>
			<marginBottom value="8px"/>
			<width value="80px"/>
			<flow value="horizontal"/>
		</style>
		<block className="checkbox_no_label" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="selected" value="!!(value)"/>
		</block>
		<block>
			<style>
				<marginLeft value="27px"/>
				<hitTest value="false"/>
			</style>
			<bind name="transition" value="rollOver &amp;&amp; !mouseDown; 0.15; {alpha: 0.8}; {alpha: 1}; {alpha: 0.8}; 2"/>
			<bind name="instance" value="'NationFlagsTiny'; {shipCountry: field}"/>
		</block>
	</block>
	<block className="ShipSpecialCheckBox">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; field == 'IDS_RANKED_BATTLES' ? 'rankedBattlesSeason' : null"/>
		<bind name="collectionDH" value="CC.clubsCommon; 'clubsCommonCollection'"/>
		<bind name="entityDH" value="'clubsCommonEntity'; clubsCommonCollection[0].id"/>
		<bind name="watchDH" value="'clubBattlesSeasonId'; ['clubsCommonEntity.clubsCommon.evRulesChanged']; clubsCommonEntity.clubsCommon.seasonId"/>
		<bind name="watchDH" value="'clubBattlesSeasonStage'; ['clubsCommonEntity.clubsCommon.evRulesChanged']; clubsCommonEntity.clubsCommon.stage"/>
		<bind name="name" value="'CarouselCheckBox_' + _filterType + '_' + field"/>
		<bind name="feature" value="13; ''"/>
		<bind name="feature" value="16; ''"/>
		<bind name="feature" value="19; ''"/>
		<bind name="watch" value="'isVisible';	(field == 'IDS_RANKED_BATTLES'	&amp;&amp;	(feature_16 == 'locked' || rankedBattlesSeason.denyReason &amp; RBDeny.NO_SEASON))			? false :
								(field == 'IDS_CLUB_BATTLES'	&amp;&amp;	(feature_19 == 'locked' || clubBattlesSeasonId &lt;= 0 || clubBattlesSeasonStage != 2))	? false :
								((field == 'IDS_WITH_COMMANDER'	||	field == 'IDS_WITHOUT_COMMANDER') &amp;&amp; feature_13 == 'locked')							? false
																																							: true"/>
		<bind name="visible" value="isVisible"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="action" value="'left_click'; 'setFilterValue' ; {type: _filterType, field: field, value: !value, ident: _ident}"/>
		<bind name="clickSplit"/>
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText:	((field == 'IDS_SELECTED_BY_USER') 	? 'IDS_HINT_CHECKBOX_FILTER_SELECTED_BY_USER':
													(field == 'IDS_FILTER_PREMIUM') 	? 'IDS_HINT_CHECKBOX_FILTER_PREMIUM':
													(field == 'IDS_WITH_COMMANDER') 	? 'IDS_HINT_CHECKBOX_FILTER_WITH_COMMANDER':
													(field == 'IDS_WITHOUT_COMMANDER') 	? 'IDS_HINT_CHECKBOX_FILTER_WITHOUT_COMMANDER':
													(field == 'IDS_FILTER_ELITE')	 	? 'IDS_HINT_CHECKBOX_FILTER_ELITE'	:
													(field == 'IDS_FILTER_NOT_ELITE')	? 'IDS_HINT_CHECKBOX_FILTER_NOT_ELITE':
													(field == 'IDS_RANKED_BATTLES')		? 'IDS_HINT_CHECKBOX_FILTER_RANKED':
													(field == 'IDS_PVE_BATTLES')		? 'IDS_HINT_CHECKBOX_FILTER_PVE'	:
													(field == 'IDS_CLUB_BATTLES')		? 'IDS_HINT_CHECKBOX_FILTER_CLUB'	:
													(field == 'IDS_PROMO_FILTER')		? 'IDS_HINT_CHECKBOX_FILTER_SHARE'	:
													'UNKNOWN_FILTER_TYPE')}"/>
		<style>
			<marginBottom value="8px"/>
			<width value="80px"/>
			<height value="21px"/>
			<flow value="horizontal"/>
		</style>
		<block className="checkbox_no_label" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="selected" value="!!(value)"/>
		</block>
		<block>
			<bind name="transition" value="rollOver &amp;&amp; !mouseDown; 0.15; {alpha: 0.8}; {alpha: 1}; {alpha: 0.8}; 2"/>
			<style>
				<marginTop value="-2px"/>
				<marginLeft value="27px"/>
				<hitTest value="false"/>
			</style>
			<bind name="child" value="field; {_isCheckBox: true}; {	IDS_SELECTED_BY_USER: 'PrimaryIcon',
													IDS_FILTER_NOT_ELITE: 'NotEliteIcon',
													IDS_FILTER_ELITE: 'EliteIcon',
													IDS_FILTER_PREMIUM: 'PremiumIcon',
													IDS_RANKED_BATTLES: 'RankedIcon',
													IDS_PVE_BATTLES	: 'PVEIcon',
													IDS_CLUB_BATTLES: 'ClubIcon',
													IDS_PROMO_FILTER: 'ShareIcon',
													IDS_WITH_COMMANDER: 'WithCrewIcon',
													IDS_WITHOUT_COMMANDER: 'WithoutCrewIcon'}"/>
		</block>
	</block>
	<block className="AppliedBattleTypeFilter">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<bind name="firstEntityDH" value="'enterBattleEntity'; CC.enterBattle"/>
		<bind name="watchDH" value="'selectedBattle'; ['enterBattleEntity.enterBattle.evBattleTypesChanged']; enterBattleEntity.enterBattle.selectedBattle"/>
		<bind name="primaryEntityDH" value="'selectedBattleTypeEntity'; CC.battleType; selectedBattle.type"/>
		<bind name="firstEntityDH" value="'pveStateEntity'; CC.pveState"/>
		<bind name="watchDH" value="'chosenOperationId'; ['pveStateEntity.pveState.evStateUpdated']; pveStateEntity.pveState.chosenOperation"/>
		<bind name="primaryEntityDH" value="'operationEntity'; CC.operation; chosenOperationId"/>
		<bind name="watchDH" value="'operationType';	['operationEntity.operation.evStatusChanged']; operationEntity.operation.type"/>
		<bind name="watchDH" value="'operationIsHard'; []; operationEntity.operation.isHard"/>
		<bind name="firstEntityDH" value="'trainingRoomEntity'; CC.trainingRoomWindowState"/>
		<bind name="primaryEntityDH" value="'defaultRestrictionsEntity'; CC.battleType; BattleTypes.TRAINING_BATTLE"/>
		<bind name="primaryEntityDH" value="'rankedRestrictionsEntity'; CC.shipRestrictions; 7"/>
		<bind name="watch" value="'pveDifficultyPostfix'; operationIsHard ? '_hard' : ''"/>
		<bind name="watch" value="'pveIconLabel'; (operationType == 'event' ? 'PVEBattle_event' : 'PVEBattle') + pveDifficultyPostfix"/>
		<bind name="firstEntityDH" value="'currentSeasonEntity'; CC.clanBattleSeason; 'current'"/>
		<bind name="firstEntityDH" value="'currentEventStateEntity'; CC.selectedEventBattle"/>
		<bind name="watchDH" value="'currentEventId'; ['currentEventStateEntity.eventBattleState.evChanged']; currentEventStateEntity.eventBattleState.eventId"/>
		<bind name="primaryEntityDH" value="'eventBattleParamsEntity'; CC.eventBattleParams; currentEventId"/>
		<bind name="firstEntityDH" value="'clanCurrentSeasonEntity'; CC.clanBattleSeason; 'current'"/>
		<bind name="watchDH" value="'isBrawl'; ['clanCurrentSeasonEntity.clanBattleSeason.evChanged']; clanCurrentSeasonEntity.clanBattleSeason.isBrawl"/>
		<bind name="watch" value="'restrictionsEntityId';	selectedBattle.type == BattleTypes.PVE_BATTLE 		? 	operationEntity.id :
											selectedBattle.type == BattleTypes.TRAINING_BATTLE	?	trainingRoomEntity.id :
											selectedBattle.type == BattleTypes.RANKED_BATTLE	?	rankedRestrictionsEntity.id :
											selectedBattle.type == BattleTypes.CLAN_BATTLE		?	currentSeasonEntity.id :
											selectedBattle.type == BattleTypes.EVENT_BATTLE		?	eventBattleParamsEntity.id
																								:	selectedBattleTypeEntity.id"/>
		<bind name="watch" value="'filterIcons';	selectedBattle.type == BattleTypes.PVE_BATTLE 		? 	pveIconLabel :
								selectedBattle.type == BattleTypes.TRAINING_BATTLE	?	'training_room':
								selectedBattle.type == BattleTypes.RANKED_BATTLE	?	(rankedBattlesSeason.isJuniorSeason == true) 	? 'rank_junior' 
																																		: 'rank' :
								selectedBattle.type == BattleTypes.EVENT_BATTLE		?	'event' :
								selectedBattle.type == BattleTypes.CLAN_BATTLE		?	isBrawl ? 'brawl'
																								: 'club'
																					:	'no_icon'"/>
		<bind name="watch" value="'filterText';	selectedBattle.type == BattleTypes.PVE_BATTLE		? tr('IDS_' + toUpperCase(operationEntity.operation.gpName) + '_NAME') :
								selectedBattle.type == BattleTypes.TRAINING_BATTLE	? 'IDS_CUSTOM_ROOM' :
								selectedBattle.type == BattleTypes.RANKED_BATTLE 	? 'IDS_RANKED_BATTLES' :
								selectedBattle.type == BattleTypes.CLAN_BATTLE 		? isBrawl ? 'IDS_CLAN_BRAWL'
																							  : 'IDS_CLANBATTLE' :
								selectedBattle.type == BattleTypes.EVENT_BATTLE 	? 'IDS_EVENTBATTLE'
																					: 'UNKNOWN_BATTLE_TYPE'"/>
		<style>
			<height value="30px"/>
			<flow value="horizontal"/>
		</style>
		<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 2"/>
		<bind name="tooltip" value="'SimpleTooltip'; selectedBattle.type != BattleTypes.CLAN_BATTLE ? {tooltipText: tr(toUpperCase('IDS_CAROUSEL_' + selectedBattle.type + '_FILTER'))} : null"/>
		<block className="button_dock_bg" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="gotoAndStop!" value="'down'"/>
		</block>
		<block className="icon_filters" type="native">
			<styleClass value="$MiddleVAligned"/>
			<style>
				<marginLeft value="4px"/>
			</style>
			<bind name="gotoAndStop!" value="filterIcons"/>
		</block>
		<block type="text">
			<style>
				<marginTop value="2px"/>
			</style>
			<styleClass value="$TextHeaderBigDefault"/>
			<bind name="text" value="filterText"/>
		</block>
		<block>
			<style>
				<marginLeft value="16px"/>
			</style>
			<styleClass value="$MiddleVAligned"/>
			<bind name="instance" value="'ShipRestrictions'; 
			selectedBattle.type == BattleTypes.TRAINING_BATTLE 	? {	_restrictionsEntityId: restrictionsEntityId, 
																	_defaultRestrictionsEntityId: defaultRestrictionsEntity.id }
																: { _restrictionsEntityId: restrictionsEntityId }"/>
		</block>
	</block>
	<css name="$HugeFilterMargins">
		<marginLeft value="8px"/>
		<marginRight value="8px"/>
	</css>
	<css name="$TinyFilterMargins">
		<marginLeft value="4px"/>
		<marginRight value="4px"/>
	</css>
	<block className="AppliedFilter">
		<bind name="visible" value="selectedItems.length &gt; 0"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="entityDH" value="'panelEntity'; _panelEntityId"/>
		<bind name="watchDH" value="'selectedFilters'; ['panelEntity.shipRestrictions.evUpdate']; panelEntity.shipRestrictions.selectedFilters"/>
		<bind name="collectionDH" value="CC.shipFilterItem; 'selectedItems'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'selectedItems'+'ROOT'; 'selectedItems'; {'filter':isIn($entity.id, selectedFilters) &amp;&amp; ($entity.shipFilterItem.type == _filterType)}; []"/>
		<bind name="collectionFields" value="selectedItems; ['shipFilterItem.field']"/>
		<bind name="transition" value="(rollOver &amp;&amp; !mouseDown) || appliedFiltersInfotipSelected || shipNameFilterInfotipSelected; 0.15; {alpha: 0.7}; {alpha: 1}"/>
		<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0, top: 10}; {alpha: 0.7, top: 0}; 2"/>
		<style>
			<height value="30px"/>
		</style>
		<block className="button_dock_bg" type="native">
			<bind name="gotoAndStop!" value="'down'"/>
			<bind name="transition" value="((rollOver &amp;&amp; !mouseDown) || (mouseDown)) || appliedFiltersInfotipSelected || shipNameFilterInfotipSelected; 0.15; {alpha: 0}; {alpha: 0.7}"/>
			<style>
				<height value="100%"/>
			</style>
			<bind name="tooltip" value="'CarouselAppliedFilterInfotip';	_filterType == 'level' 		? {_title: 'IDS_LEVEL', _filterType: _filterType, _arrow: _arrow} :
														_filterType == 'shipType'	? {_title: 'IDS_CLASS', _filterType: _filterType, _arrow: _arrow} :
														_filterType == 'nation' 	? {_title: 'IDS_NATION', _filterType: _filterType, _arrow: _arrow} :
														_filterType == 'special'	? {_title: 'IDS_SPECIAL', _filterType: _filterType, _arrow: _arrow}
																					: null; TooltipBehaviour.verticalInfotip; null; 'appliedFiltersInfotipSelected'"/>
			<bind name="tooltip" value="'CarouselAppliedFilterShipNameInfotip'; (_filterType == 'shipName')	? {}
																							: null;	 TooltipBehaviour.verticalInfotip; null; 'shipNameFIlterInfotipSelected'"/>
			<bind name="tooltip" value="'MouseInstructionTooltip'; (_filterType != 'shipName') ? { _mouseInstructions: [{_type: 'left', _instructionText: tr('IDS_CAROUSEL_APPLIED_FILTER_HINT_'+toUpperCase(_filterType))}], _maxWidth: 240 }
																				: null"/>
			<bind name="changeDispatch" value="shipNameFilterInfotipSelected; 'shipNameFIlterInfotipSelectedChanged';{shipNameFilterInfotipSelected: shipNameFilterInfotipSelected}"/>
			<block>
				<style>
					<height value="100%"/>
					<marginTop value="1px"/>
				</style>
				<bind name="class" value="_disableReset ? '$TinyFilterMargins' : '$HugeFilterMargins'"/>
				<block>
					<bind name="visible" value="_filterType == 'level'"/>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="repeat" value="reduceAppliedValues(selectedItems_shipFilterItem_field); 'ShipLevelRome'"/>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<bind name="visible" value="_filterType != 'level'"/>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="repeat" value="selectedItems; (_filterType == 'shipName')	? 'CarouselSortingText'
											:(_filterType == 'shipType')	? 'ShipTypeIcon'
											:(_filterType == 'nation')		? 'TinyNationFlag'
											:(_filterType == 'special')		? 'SpecialSortingIcon'
																			: 'CarouselSortingText'"/>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<style>
						<height value="100%"/>
						<marginLeft value="0px"/>
					</style>
					<bind name="visible" value="_needDivider == true"/>
					<block className="VerticalDivider">
						<style>
							<height value="100%"/>
							<width value="3px"/>
						</style>
						<block className="divider_v" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
				<block>
					<bind name="visible" value="_disableReset != true"/>
					<style>
						<height value="100%"/>
						<width value="12px"/>
					</style>
					<block>
						<bind name="transition" value="((rollOver &amp;&amp; !mouseDown) || mouseDown) || appliedFiltersInfotipSelected || shipNameFilterInfotipSelected; 0.15; {alpha: 0}; {alpha: 0.7}"/>
						<bind name="action" value="'click'; 'resetFilterType' ; {type: _filterType, ident: 0}"/>
						<styleClass value="$MiddleVAligned"/>
						<block className="button_close" type="native">
							<style>
								<marginRight value="1px"/>
							</style>
							<bind name="name" value="'CarouselFilterClose_' + _filterType"/>
							<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_HINT_RESET_FILTER'}"/>
						</block>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ResetAllFilters">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<style>
			<height value="30px"/>
			<marginRight value="4px"/>
		</style>
		<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 2"/>
		<bind name="action" value="'click'; 'resetAllFilters'; {ident: 0}"/>
		<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_HINT_RESET_ALL_FILTERS'}], _maxWidth: 250}"/>
		<bind name="soundSet" value="'resetallfilters_item'"/>
		<block className="button_dock_bg" type="native">
			<bind name="gotoAndStop!" value="'down'"/>
			<style>
				<height value="100%"/>
			</style>
			<bind name="transition" value="((rollOver &amp;&amp; !mouseDown) || (mouseDown)); 0.15; {alpha: 0}; {alpha: 0.7}"/>
			<block>
				<style>
					<height value="100%"/>
					<marginLeft value="8px"/>
					<marginRight value="8px"/>
				</style>
				<bind name="transition" value="rollOver &amp;&amp; !mouseDown; 0.15; {alpha: 0.7}; {alpha: 1}"/>
				<block type="text">
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$TextHeaderBigDefault"/>
					<bind name="text" value="'IDS_RESET_ALL_FILTERS'"/>
				</block>
				<block>
					<bind name="transition" value="((rollOver &amp;&amp; !mouseDown) || mouseDown); 0.15; {alpha: 0}; {alpha: 0.7}"/>
					<style>
						<marginLeft value="2px"/>
						<marginRight value="1px"/>
						<marginTop value="10px"/>
						<hitTest value="false"/>
					</style>
					<block className="button_close" type="native"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ShipLevelRome">
		<style>
			<marginRight value="2px"/>
		</style>
		<block type="text">
			<styleClass value="$TextHeaderBigDefault"/>
			<bind name="text" value="ShipLevels.RLEVELS[$value]"/>
		</block>
	</block>
	<block className="CarouselSortingText">
		<bind name="firstEntityDH" value="'panelEntity'; CC.filterPanelComponent"/>
		<bind name="collectionDH" value="CC.shipFilterItem; 'shipNameFilters'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'shipNameFilters'+'ROOT'; 'shipNameFilters'; {'filter':$entity.shipFilterItem.type == 'shipName'}; []"/>
		<bind name="watchDH" value="'searchStr'; ['panelEntity.shipRestrictions.evUpdate']; panelEntity.shipRestrictions.selectedFiltersData[shipNameFilters[0].id]"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<style>
				<hitTest value="false"/>
				<marginTop value="2px"/>
				<marginRight value="1px"/>
			</style>
			<block className="button_search" type="native"/>
		</block>
		<block type="text">
			<style>
				<marginRight value="4px"/>
				<marginTop value="-1px"/>
			</style>
			<styleClass value="$TextHeaderBigDefault"/>
			<bind name="text" value="searchStr"/>
		</block>
	</block>
	<block className="ShipTypeIcon">
		<bind name="dataRefDH" value="'filterEntity'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'_field'; ['filterEntity.shipFilterItem.evUpdate']; filterEntity.shipFilterItem.field"/>
		<block>
			<style>
				<marginRight value="4px"/>
			</style>
			<block className="icon_ship" type="native">
				<bind name="gotoAndStop!" value="_field"/>
			</block>
		</block>
	</block>
	<block className="TinyNationFlag">
		<bind name="dataRefDH" value="'filterEntity'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'_field'; ['filterEntity.shipFilterItem.evUpdate']; filterEntity.shipFilterItem.field"/>
		<block>
			<style>
				<marginRight value="2px"/>
			</style>
			<bind name="instance" value="'NationFlagsTiny'; {shipCountry: _field}"/>
		</block>
	</block>
	<block className="SpecialSortingIcon">
		<bind name="dataRefDH" value="'filterEntity'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'_field'; ['filterEntity.shipFilterItem.evUpdate']; filterEntity.shipFilterItem.field"/>
		<style>
			<marginLeft value="-2px"/>
		</style>
		<bind name="child" value="_field; {}; {	IDS_SELECTED_BY_USER: 'PrimaryIcon',
								IDS_FILTER_NOT_ELITE: 'NotEliteIcon',
								IDS_FILTER_ELITE: 'EliteIcon',
								IDS_FILTER_PREMIUM: 'PremiumIcon',
								IDS_RANKED_BATTLES: 'RankedIcon',
								IDS_PVE_BATTLES: 'PVEIcon', 
								IDS_CLUB_BATTLES: 'ClubIcon',
								IDS_PROMO_FILTER: 'ShareIcon',
								IDS_WITH_COMMANDER: 'WithCrewIcon',
								IDS_WITHOUT_COMMANDER: 'WithoutCrewIcon'}"/>
	</block>
	<block className="NotEliteIcon">
		<block className="icon_filters" type="native">
			<bind name="gotoAndStop!" value="'default'"/>
		</block>
	</block>
	<block className="EliteIcon">
		<block className="icon_filters" type="native">
			<bind name="gotoAndStop!" value="'elite'"/>
		</block>
	</block>
	<block className="PrimaryIcon">
		<bind name="style" value="'marginTop'; _isCheckBox ? '0px': '1px'"/>
		<style>
			<marginTop value="1px"/>
		</style>
		<block className="icon_filters" type="native">
			<bind name="gotoAndStop!" value="'primary'"/>
		</block>
	</block>
	<block className="WithCrewIcon">
		<bind name="style" value="'marginTop'; _isCheckBox ? '1px': '2px'"/>
		<block className="icon_filters" type="native">
			<bind name="gotoAndStop!" value="'withCrew'"/>
		</block>
	</block>
	<block className="WithoutCrewIcon">
		<bind name="style" value="'marginTop'; _isCheckBox ? '0px': '1px'"/>
		<block className="icon_filters" type="native">
			<bind name="gotoAndStop!" value="'withoutCrew'"/>
		</block>
	</block>
	<block className="PremiumIcon">
		<block className="icon_filters" type="native">
			<bind name="gotoAndStop!" value="'premium'"/>
		</block>
	</block>
	<block className="ShareIcon">
		<style>
			<marginTop value="1px"/>
		</style>
		<block className="icon_filters" type="native">
			<bind name="gotoAndStop!" value="'share'"/>
		</block>
	</block>
	<block className="RankedIcon">
		<bind name="style" value="'marginTop'; _isCheckBox ? '0px': '1px'"/>
		<block className="icon_filters" type="native">
			<bind name="gotoAndStop!" value="'rank'"/>
		</block>
	</block>
	<block className="PVEIcon">
		<bind name="style" value="'marginTop'; _isCheckBox ? '0px': '1px'"/>
		<block className="icon_filters" type="native">
			<bind name="gotoAndStop!" value="'pve'"/>
		</block>
	</block>
	<block className="ClubIcon">
		<bind name="style" value="'marginTop'; _isCheckBox ? '0px': '1px'"/>
		<style>
			<marginTop value="1px"/>
		</style>
		<block className="icon_filters" type="native">
			<bind name="gotoAndStop!" value="'club'"/>
		</block>
	</block>
	<block className="CarouselShipRowsListItemRenderer">
		<styleClass value="$ContextMenuListItem"/>
		<bind name="var" value="{_toLowerCase: true}"/>
		<bind name="stageSize"/>
		<bind name="watch" value="'isFourRowsEnabled'; (stageHeight &gt; (720 + 160))"/>
		<bind name="watch" value="'isThreeRowsEnabled'; (stageHeight &gt; (720 + 88))"/>
		<bind name="watch" value="'isEnabled';	($index == 0)							? true :
								(isThreeRowsEnabled &amp;&amp; ($index == 1))	? true :
								(isFourRowsEnabled &amp;&amp; ($index == 2))	? true
																		: false"/>
		<style>
			<backgroundColor value="0x01000000"/>
		</style>
		<bind name="tooltip" value="'SimpleWarningTooltip'; isEnabled ? null : {_text: tr('IDS_NOT_ENABLED_ON_LOW_RESOLUTION')}"/>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="style" value="'alpha'; isEnabled ? 1 : 0.5"/>
			<bind name="style" value="'hitTest'; isEnabled"/>
			<block className="MenuItemWithSelection">
				<styleClass value="$Fullsize"/>
				<bind name="name" value="$value"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="selected" value="(_curItemIndex == $index)"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="class" value="(_curItemIndex == $index) == true ? '$Bold' : '$None'"/>
					<bind name="text" value="(_toLowerCase ? toLowerCase(tr($value))
											: (tr($value)))"/>
				</block>
			</block>
			<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 	($index == 0)	? tr('IDS_SHOW_TWO_ROWS_IN_CAROUSEL') :
														($index == 1)	? tr('IDS_SHOW_THREE_ROWS_IN_CAROUSEL') :
														($index == 2)	? tr('IDS_SHOW_FOUR_ROWS_IN_CAROUSEL')
																		: ''}"/>
			<bind name="dispatch" value="'click'; ('ItemChooserInnerEvent.' + _onItemSelectedEvent); {_curItemIndex: $index}"/>
			<bind name="dispatch" value="'click'; ('ItemChooserInnerEventDublicate.' + _onItemSelectedEvent)"/>
		</block>
	</block>
	<block className="HasTrainingRoomRestrictions">
		<bind name="watchDH" value="'shipRestrictions' ; ['trainingRoomEntity.shipRestrictions.evUpdate']; trainingRoomEntity.shipRestrictions.selectedFilters"/>
		<bind name="watchDH" value="'shipsCount' ; ['trainingRoomEntity.divisionRestrictions.evUpdate']; trainingRoomEntity.divisionRestrictions.shipsCount"/>
		<bind name="watchDH" value="'typesCount' ; ['trainingRoomEntity.divisionRestrictions.evUpdate']; trainingRoomEntity.divisionRestrictions.typesCount"/>
		<bind name="primaryEntityDH" value="'defaultRestrictionsEntity'; CC.battleType; BattleTypes.TRAINING_BATTLE"/>
		<bind name="watchDH" value="'defaultTypesCount' ; ['defaultRestrictionsEntity.divisionRestrictions.evUpdate']; defaultRestrictionsEntity.divisionRestrictions.typesCount"/>
		<bind name="collectionDH" value="CC.shipFilterItem; 'idsfilters'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'idsfilters'+'ROOT'; 'idsfilters'; {'filter':$entity.shipFilterItem.type == 'shipId' &amp;&amp; isIn($entity.id, shipRestrictions)}; []"/>
		<bind name="collectionDH" value="CC.shipFilterItem; 'levelfilters'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'levelfilters'+'ROOT'; 'levelfilters'; {'filter':$entity.shipFilterItem.type == 'level' &amp;&amp; isIn($entity.id, shipRestrictions)}; []"/>
		<bind name="collectionDH" value="CC.shipFilterItem; 'nationfilters'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'nationfilters'+'ROOT'; 'nationfilters'; {'filter':$entity.shipFilterItem.type == 'nation' &amp;&amp; isIn($entity.id, shipRestrictions)}; []"/>
		<bind name="collectionFields" value="levelfilters; ['shipFilterItem.field']"/>
		<bind name="contains" value="typesCount; $item[1] == -1; 'isAnyShipTypeNotAllowed'"/>
		<bind name="watch" value="'isCarriersRestricted'; typesCount[ShipTypes.AircraftCarrier] &amp;&amp; typesCount[ShipTypes.AircraftCarrier][1] != defaultTypesCount[ShipTypes.AircraftCarrier][1]"/>
		<bind name="watch" value="'isBattleShipsRestricted'; typesCount[ShipTypes.BattleShip] &amp;&amp; typesCount[ShipTypes.BattleShip][1] != defaultTypesCount[ShipTypes.BattleShip][1]"/>
		<bind name="watch" value="'isCruisersRestricted'; typesCount[ShipTypes.Cruiser] &amp;&amp; typesCount[ShipTypes.Cruiser][1] != defaultTypesCount[ShipTypes.Cruiser][1]"/>
		<bind name="watch" value="'isDestroyersRestricted'; typesCount[ShipTypes.Destroyer] &amp;&amp; typesCount[ShipTypes.Destroyer][1] != defaultTypesCount[ShipTypes.Destroyer][1]"/>
		<bind name="watch" value="'isAnyShipTypeRestricted'; isCarriersRestricted || isBattleShipsRestricted || isCruisersRestricted || isDestroyersRestricted"/>
		<bind name="watch" value="'hasTrainingRoomRestrictions'; (idsfilters.length &gt; 0)			||
												(shipTypefilters.length &gt; 0)	||
												(levelfilters.length &gt; 0)		||
												(nationfilters.length &gt; 0)		||
												isShipFilterRestrictionsVisible"/>
		<bind name="watch" value="'isShipFilterRestrictionsVisible'; isAnyShipTypeRestricted &amp;&amp; isAnyShipTypeNotAllowed"/>
	</block>
	<css name="$CrewSkillSmallSize">
		<width value="26px"/>
		<height value="26px"/>
	</css>
	<css name="$CrewSkillMediumSize">
		<width value="40px"/>
		<height value="40px"/>
	</css>
	<block className="SkillHeader">
		<bind name="primaryEntityDH" value="'crewSkillEntity'; CC.crewSkill; skillId; 'evUpdate'"/>
		<bind name="watchDH" value="'crewSkill'; ['crewSkillEntity.crewSkill.evUpdate']; crewSkillEntity.crewSkill"/>
		<bind name="primaryEntityDH" value="'skillEntity'; CC.skill; crewSkill.skillId"/>
		<bind name="watchDH" value="'skill'; []; skillEntity.skill"/>
		<style>
			<width value="100%"/>
			<flow value="horizontal"/>
			<marginBottom value="16px"/>
		</style>
		<block>
			<bind name="instance" value="'CrewSkillEpicIcon'; skill.isEpic ? {} : null"/>
			<style>
				<width value="60px"/>
				<height value="60px"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:../crew_commander/skills/big/icon_perk_' + skill.name + '.png')"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="6px"/>
			</style>
			<block type="text">
				<style>
					<maxWidth value="210"/>
					<marginLeft value="4px"/>
					<leading value="-3"/>
				</style>
				<styleClass value="$TextDefaultBold19NM"/>
				<bind name="class" value="_penalty &amp;&amp; crewSkill.learned 	? '$FontColorUnready' :
						!_penalty &amp;&amp; crewSkill.learned 	? '$FontColorGolden'
														: '$None'"/>
				<bind name="text" value="'IDS_SKILL_' + toUpperCase(skill.name)"/>
			</block>
			<block type="text">
				<style>
					<maxWidth value="210"/>
					<marginLeft value="4px"/>
					<marginTop value="12px"/>
				</style>
				<styleClass value="$TextDefaultNM"/>
				<bind name="class" value="_penalty &amp;&amp; crewSkill.learned 	? '$FontColorUnready' :
						!_penalty &amp;&amp; crewSkill.learned 	? '$FontColorGolden'
														: '$None'"/>
				<bind name="watch" value="'category'; (	(skill.column == 0 || skill.column == 1)	?  	'IDS_SKILL_CAT_NAME_ENDURANCE' :
										(skill.column == 2 || skill.column == 3)	?	'IDS_SKILL_CAT_NAME_ATTACK' :
										(skill.column == 4 || skill.column == 5)	?	'IDS_SKILL_CAT_NAME_SUPPORT' :
										(skill.column == 6 || skill.column == 7) 	?	'IDS_SKILL_CAT_NAME_VERSALITY'
																					:   'IDS_SKILL_CAT_NAME_DEFAULT')
										+ (skill.isEpic ? '_ISEPIC' : '')"/>
				<bind name="text" value="category"/>
			</block>
		</block>
	</block>
	<block className="CrewSkillEpicIcon">
		<style>
			<width value="14px"/>
			<height value="14px"/>
			<position value="absolute"/>
		</style>
		<bind name="style" value="'backgroundImage'; 'url:../service_kit/item_types/icon_modernization_special.png')"/>
	</block>
	<block className="CrewSkillItemSmall">
		<bind name="primaryEntityDH" value="'crewSkillEntity'; CC.crewSkill; _skillIDs[$index]; 'evUpdate'"/>
		<bind name="watchDH" value="'crewSkill'; ['crewSkillEntity.crewSkill.evUpdate']; crewSkillEntity.crewSkill"/>
		<bind name="primaryEntityDH" value="'skillEntity'; CC.skill; crewSkill.skillId"/>
		<bind name="watchDH" value="'skill'; []; skillEntity.skill"/>
		<bind name="watchDH" value="'isUseless'; ['skillEntity.attributes.evUsefulChanged']; !(skillEntity.attributes.useful)"/>
		<style>
			<marginLeft value="5px"/>
		</style>
		<block>
			<style>
				<width value="35px"/>
				<height value="35px"/>
			</style>
			<bind name="style" value="'alpha'; isUseless ? 0.2 : 1"/>
			<bind name="style" value="'backgroundImage'; 'url:../crew_commander/skills/small/icon_perk_small_' + skill.name + (_penalty ? '_penalty.png' : '.png')"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="scaleX" value="0.7"/>
			<bind name="scaleY" value="0.7"/>
			<bind name="style" value="'alpha'; isUseless ? 0.2 : 1"/>
			<bind name="instance" value="'CrewSkillEpicIcon'; skill.isEpic ? {} : null"/>
		</block>
		<block>
			<bind name="visible" value="isUseless"/>
			<style>
				<hitTest value="false"/>
				<position value="absolute"/>
				<width value="35px"/>
				<height value="35px"/>
				<alpha value="1.2"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:../service_kit/icons/icon_useless.png'"/>
		</block>
	</block>
	<block className="CrewSkillItem">
		<bind name="primaryEntityDH" value="'crewSkillEntity'; CC.crewSkill; $value; 'evUpdate'"/>
		<bind name="watchDH" value="'crewSkill'; ['crewSkillEntity.crewSkill.evUpdate']; crewSkillEntity.crewSkill"/>
		<bind name="primaryEntityDH" value="'skillEntity'; CC.skill; crewSkill.skillId"/>
		<bind name="watchDH" value="'skill'; []; skillEntity.skill"/>
		<bind name="watchDH" value="'isUseless'; ['skillEntity.attributes.evUsefulChanged']; !(skillEntity.attributes.useful)"/>
		<style>
			<marginRight value="5px"/>
			<marginLeft value="5px"/>
			<marginBottom value="5px"/>
			<marginTop value="5px"/>
		</style>
		<block>
			<style>
				<width value="60px"/>
				<height value="60px"/>
			</style>
			<bind name="style" value="'alpha'; isUseless ? 0.2 : 1"/>
			<bind name="style" value="'backgroundImage'; 'url:../crew_commander/skills/big/icon_perk_' + skill.name + (_penalty ? '_penalty.png' : '.png')"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="style" value="'alpha'; isUseless ? 0.2 : 1"/>
			<bind name="instance" value="'CrewSkillEpicIcon'; skill.isEpic ? {} : null"/>
		</block>
		<block>
			<bind name="visible" value="isUseless"/>
			<style>
				<hitTest value="false"/>
				<position value="absolute"/>
				<width value="60px"/>
				<height value="60px"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:../service_kit/icons/icon_useless_big.png'"/>
		</block>
	</block>
	<block className="CrewFileSkillItem">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="primaryEntityDH" value="'crewEntity'; CC.crew; _crewId"/>
		<bind name="watchDH" value="'crew'; ['crewEntity.crew.evBasketChanged', 'crewEntity.crew.evLevelUp', 'crewEntity.crew.evExpChanged', 'crewEntity.crew.evShipChanged', 'crewEntity.crew.evSkillsChanged', 'crewEntity.crew.evResetCostChanged', 'crewEntity.crew.evAdaptationUpdated', 'crewEntity.crew.evChanged', 'crewEntity.crew.evRecentnessUpdated']; crewEntity.crew"/>
		<bind name="watchDH" value="'crew'+'Retraining'; ['crewEntity.crew.evRetrainingUpdated']; crewEntity.retraining"/>
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; crew.shipID"/>
		<bind name="primaryEntityDH" value="'crewSkillEntity'; CC.crewSkill; $value; 'evUpdate'"/>
		<bind name="watchDH" value="'crewSkill'; ['crewSkillEntity.crewSkill.evUpdate']; crewSkillEntity.crewSkill"/>
		<bind name="primaryEntityDH" value="'skillEntity'; CC.skill; crewSkill.skillId"/>
		<bind name="watchDH" value="'skill'; []; skillEntity.skill"/>
		<bind name="watchDH" value="'isUseless';		['skillEntity.attributes.evUsefulChanged']; !(skillEntity.attributes.useful)"/>
		<bind name="watchDH" value="'isLocked';		['shipOwnEntity.ownShip.evUpdateLock'];		shipOwnEntity.ownShip.isLocked"/>
		<style>
			<position value="absolute"/>
			<backgroundColor value="0x01000000"/>
		</style>
		<bind name="left" value="((skill.column * 60) + (skill.column * _iconHorizontalPadding) + ((skill.column - skill.column % 2)/2 * _iconHorizontalPadding * _groupPaddingCoeff))"/>
		<bind name="top" value="((skill.tier - 1) * (60 + _iconVerticalPadding)))"/>
		<bind name="watch" value="'isAvailableToLearn'; (crew.freeSkillPoints &gt;= skill.tier &amp;&amp; crewSkill.hasLearnedSkillOnPreviousTier &amp;&amp; !isLocked &amp;&amp; !(crewSkill.learned))"/>
		<block>
			<bind name="transition" value="	(crewSkill.learned || (crewSkill.canBeLearned &amp;&amp; rollOver)) &amp;&amp;
							!isLocked; 0.1; {alpha: 0.6}; {alpha: 1.0}; {alpha: 0.6}; 2"/>
			<block>
				<bind name="name" value="'IconSkill_' + skill.name"/>
				<bind name="tooltip" value="'SkillTooltip'; {_id: $value, _crewId: _crewId}"/>
				<style>
					<width value="60px"/>
					<height value="60px"/>
				</style>
				<bind name="style" value="'alpha'; isUseless ? 0.2 : 1"/>
				<bind name="instance" value="'CrewSkillEpicIcon'; skill.isEpic ? {} : null"/>
				<bind name="style" value="'backgroundImage'; ('url:../crew_commander/skills/big/icon_perk_' + skill.name +
											((crew.skillsEffectiveness &lt; 1) &amp;&amp; crewSkill.learned 	?	'_penalty.png' :
											crewSkill.hasLearnedSkillOnPreviousTier					?	'.png'
																									: 	'_inactive.png'))"/>
				<bind name="soundOn" value="'click'; 'press'; 'crew_skill_item'"/>
				<bind name="request" value="'click'; isAvailableToLearn ? 'learnSkill' : ''; {crewID: _crewId, skillType:skill.skillType, skillID:crewSkill.id}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="isUseless"/>
			<style>
				<hitTest value="false"/>
				<position value="absolute"/>
				<width value="60px"/>
				<height value="60px"/>
			</style>
			<bind name="style" value="'backgroundImage';	crewSkill.learned												? 'url:../service_kit/icons/icon_useless_big.png' :
										crewSkill.hasLearnedSkillOnPreviousTier &amp;&amp; !(crewSkill.learned)	? 'url:../service_kit/icons/icon_useless_inactive_big.png'
																										: 'url:../service_kit/icons/icon_useless_locked_big.png'"/>
		</block>
		<block className="icon_check" type="native">
			<style>
				<position value="absolute"/>
				<hitTest value="false"/>
				<right value="-10px"/>
				<top value="-9px"/>
			</style>
			<bind name="visible" value="crewSkill.learned"/>
		</block>
	</block>
	<block className="CrewSkillPointBadge">
		<style>
			<width value="32px"/>
			<height value="32px"/>
		</style>
		<block className="icon_sticker_new_small" type="native">
			<style>
				<position value="absolute"/>
			</style>
			<bind name="gotoAndStop!" value="_state == 'inactive' ? 'inactive' : 'active'"/>
		</block>
		<block type="text">
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$TextDefaultBold"/>
			<style>
				<marginTop value="4px"/>
			</style>
			<bind name="text" value="'+' + _skillPoints"/>
		</block>
	</block>
	<css name="$TextDockBig">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="21"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0x9CBABA"/>
	</css>
	<block className="ItemChooser">
		<bind name="watch" value="'_curItemIndex'; curIndex"/>
		<bind name="watch" value="'_direction'; curDirection"/>
		<bind name="watch" value="'isEnabled'; _disabled != true"/>
		<bind name="name" value="_name"/>
		<bind name="var" value="{_lastItemIndex: curIndex}"/>
		<bind name="style" value="'width'; _width ? _width : 'auto'"/>
		<bind name="catch" value="('ItemChooserInnerEvent.' + onItemSelectedEvent)"/>
		<block type="text">
			<bind name="name" value="_items[curIndex]"/>
		</block>
		<bind name="catch" value="('ItemChooserInnerEventDublicate.' + onItemSelectedEvent); {	_direction: (_curItemIndex==_lastItemIndex) ? !_direction : false,
																			_lastItemIndex: _curItemIndex}"/>
		<bind name="dispatch" value="('ItemChooserInnerEventDublicate.' + onItemSelectedEvent); ('ItemChooser.'+onItemSelectedEvent); {_curItemIndex: _curItemIndex, _direction: _direction}; false; 0.001"/>
		<bind name="tooltip" value="_customDropdown ? _customDropdown : 'ItemChooserDropdown';
											_items.length &gt; 1 	? {	_items: _items, _listItemRenderer: _listItemRenderer, _listItemRendererData: _listItemRendererData, _onItemSelectedEvent: onItemSelectedEvent,
																	_curItemIndex: _curItemIndex, _maxDropDownHeight: _maxDropDownHeight, _dropDownWidth: _dropDownWidth, _showHint: _showHint, _text: _text}
																: null;
											TooltipBehaviour.verticalInfoWidget; null; 'dropdownChooserListIsVisible'"/>
		<bind name="var" value="{ _tooltipData: !_itemChooserTooltipText || (_items.length &lt;= 1) ? null : { tooltipText: _itemChooserTooltipText } }"/>
		<bind name="tooltip" value="'SimpleTooltip'; _tooltipData"/>
		<bind name="style" value="'hitTest'; _items.length &gt; 1 &amp;&amp; isEnabled"/>
		<bind name="watch" value="'isItemNavigateVisible'; (_items.length &gt; 1 &amp;&amp; isEnabled)"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<bind name="style" value="'marginRight'; isItemNavigateVisible ? '-8px' : '0px'"/>
		<block className="button_dock" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginTop value="1px"/>
				<marginBottom value="1px"/>
			</style>
			<params>
				<param name="soundSet" value="dropmenu_button"/>
			</params>
			<bind name="enabled" value="_items.length &gt; 1"/>
			<bind name="selected" value="dropdownChooserListIsVisible"/>
		</block>
		<block>
			<bind name="style" value="'width'; _width ? '100%f' : 'auto'"/>
			<bind name="instance" value="_choosedItemRenderer; {_item: _items[curIndex], _choosedItemRendererParams: _choosedItemRendererParams}"/>
		</block>
		<block>
			<bind name="visible" value="isItemNavigateVisible"/>
			<style>
				<marginLeft value="5px"/>
				<marginRight value="4px"/>
				<hitTest value="false"/>
			</style>
			<styleClass value="$MiddleVAligned"/>
			<block className="icon_navigate" type="native">
				<bind name="gotoAndStop!" value="'down'"/>
			</block>
		</block>
	</block>
	<block className="ItemChooserDropdown">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<styleClass value="$DefaultMenuBehaviour"/>
		<bind name="style" value="'width'; _dropDownWidth ? _dropDownWidth : '180px'"/>
		<block className="MenuBg">
			<styleClass value="$FullsizeAbsolute"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<bind name="visible" value="optionData.contrast &amp;&amp; !(true)"/>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="!(true)"/>
				<block className="hint_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="true"/>
				<block className="dock_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginBottom value="-19px"/>
						<marginRight value="-14px"/>
						<marginLeft value="-14px"/>
						<marginTop value="-9px"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<style>
				<backgroundColor value="0x01000000"/>
				<hitTest value="false"/>
			</style>
			<params>
				<param name="name" value="ItemChooserDropdown"/>
			</params>
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<styleClass value="$DefaultScrollBar"/>
			<bind name="style" value="'maxHeight'; _maxDropDownHeight ? _maxDropDownHeight : 220"/>
			<style>
				<width value="100%"/>
				<overflow value="scroll"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="repeat" value="_items; _listItemRenderer; {_onItemSelectedEvent: _onItemSelectedEvent, _curItemIndex: _curItemIndex, _listItemRendererData: _listItemRendererData}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!(rankedBattlesSeason.denyReason &amp; RBDeny.NO_SEASON) &amp;&amp; (_showHint == true)"/>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'StatusLineWithIcon'; { _text: _text, _maxWidth: 140}"/>
		</block>
	</block>
	<block className="BluishTextChoosedItemRenderer">
		<style>
			<height value="32px"/>
		</style>
		<block type="text">
			<style>
				<hitTest value="false"/>
				<marginLeft value="4px"/>
				<marginTop value="1px"/>
			</style>
			<styleClass value="$TextHeaderBold"/>
			<bind name="class" value="'$FontColorBlueish'"/>
			<bind name="text" value="(tr(_item))"/>
		</block>
	</block>
	<block className="LowerCaseTextListItemRenderer">
		<styleClass value="$ContextMenuListItem"/>
		<bind name="var" value="{_toLowerCase: true}"/>
		<block className="MenuItemWithSelection">
			<styleClass value="$Fullsize"/>
			<bind name="name" value="$value"/>
			<block className="dock_submenu_item" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="selected" value="(_curItemIndex == $index)"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$ContextMenuListItemContent"/>
				<bind name="class" value="(_curItemIndex == $index) == true ? '$Bold' : '$None'"/>
				<bind name="text" value="(_toLowerCase ? toLowerCase(tr($value))
											: (tr($value)))"/>
			</block>
		</block>
		<bind name="dispatch" value="'click'; ('ItemChooserInnerEvent.' + _onItemSelectedEvent); {_curItemIndex: $index}"/>
		<bind name="dispatch" value="'click'; ('ItemChooserInnerEventDublicate.' + _onItemSelectedEvent)"/>
	</block>
	<block className="LargeTextChoosedItemRenderer">
		<style>
			<height value="35px"/>
		</style>
		<block type="text">
			<style>
				<hitTest value="false"/>
				<marginLeft value="4px"/>
				<marginTop value="1px"/>
			</style>
			<styleClass value="$TextDockBig"/>
			<bind name="text" value="(tr(_item))"/>
		</block>
	</block>
	<block className="TextListItemRenderer">
		<styleClass value="$ContextMenuListItem"/>
		<block className="MenuItemWithSelection">
			<styleClass value="$Fullsize"/>
			<bind name="name" value="$value"/>
			<block className="dock_submenu_item" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="selected" value="(_curItemIndex == $index)"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$ContextMenuListItemContent"/>
				<bind name="class" value="(_curItemIndex == $index) == true ? '$Bold' : '$None'"/>
				<bind name="text" value="(_toLowerCase ? toLowerCase(tr($value))
											: (tr($value)))"/>
			</block>
		</block>
		<bind name="dispatch" value="'click'; ('ItemChooserInnerEvent.' + _onItemSelectedEvent); {_curItemIndex: $index}"/>
		<bind name="dispatch" value="'click'; ('ItemChooserInnerEventDublicate.' + _onItemSelectedEvent)"/>
	</block>
	<block className="TextChoosedItemRenderer">
		<style>
			<height value="33px"/>
		</style>
		<bind name="style" value="'width'; _choosedItemRendererParams.width ? _choosedItemRendererParams.width : 'auto'"/>
		<block type="text">
			<style>
				<hitTest value="false"/>
				<marginLeft value="5px"/>
				<marginTop value="4px"/>
			</style>
			<bind name="class" value="_choosedItemRendererParams.fontClass ? _choosedItemRendererParams.fontClass : '$TextDockBig'"/>
			<bind name="text" value="(tr(_item))"/>
		</block>
	</block>
	<block className="GalleryViewer">
		<bind name="watch" value="'currentSelectedImage'; 	_currentImageIdx ? _currentImageIdx : 1"/>
		<bind name="watch" value="'nextSelectedImage'; 		(currentSelectedImage == _galleryItemRendererParams.length	? 1
																										: currentSelectedImage + 1)"/>
		<bind name="watch" value="'previousSelectedImage';	(currentSelectedImage == 1	? _galleryItemRendererParams.length
																		: currentSelectedImage - 1)"/>
		<bind name="dispatch" value="'imageSelectionEv'; 'changeImage'; null; 1; 0.08"/>
		<bind name="catch" value="'imageSelectionEv'"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<bind name="var" value="{ _isAutoSwitchStoped: false }"/>
		<bind name="watch" value="'autoSwitchStopped'; _isAutoSwitchStoped == true || _galleryItemRendererParams.length &lt; 2"/>
		<bind name="catch" value="'nextEv'; 		{ autoSwitchStopped: true }"/>
		<bind name="catch" value="'previousEv'; 	{ autoSwitchStopped: true }"/>
		<bind name="catch" value="'changeImage'; { autoSwitchStopped: true }"/>
		<bind name="serverTime" value="'serverTime'"/>
		<bind name="var" value="{ timerTimeStamp: 0 }"/>
		<bind name="catch" value="'addedToStage'; { timerTimeStamp: serverTime - (-_autoSwitchDelay) }"/>
		<bind name="countdown" value="timerTimeStamp; 'countdownText'; 'ss'; (autoSwitchStopped == true) ? null : 'timeoutEvent'"/>
		<bind name="catch" value="'timeoutEvent'; (autoSwitchStopped == true) ? null : { timerTimeStamp: serverTime - (-_autoSwitchDelay), currentSelectedImage: nextSelectedImage}"/>
		<bind name="dispatch" value="'timeoutEvent'; (autoSwitchStopped == true) ? null : 'timeOutEv'; {}; 1"/>
		<block>
			<bind name="visible" value="(_galleryItemRendererParams.length &gt; 1) &amp;&amp; (_arrowsDisabled != true)"/>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
			<bind name="transition" value="rollOver; 0.15; {alpha: 0.5}; {alpha: 1}"/>
			<bind name="dispatch" value="'click'; 'previousEv'; {}; 1"/>
			<bind name="catch" value="'click'; { currentSelectedImage: previousSelectedImage }"/>
			<bind name="soundOn" value="'mouseDown'; 'press'; 'default_button'"/>
			<style>
				<height value="100%"/>
				<width value="40px"/>
				<backgroundColor value="0x01000000"/>
			</style>
			<block className="button_slide_left" type="native">
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$MiddleAligned"/>
			</block>
		</block>
		<block>
			<block>
				<style>
					<overflow value="scroll"/>
					<scrollbar value="ModernScrollBar"/>
					<scrollbarController value="lesta.unbound.style.UbScrollingControllerModern"/>
					<scrollArea value="ModernScrollArea"/>
					<scrollbarTrackMode value="scrollToCursor"/>
				</style>
				<bind name="style" value="'width'; _galleryImageWidth + 'px'"/>
				<bind name="style" value="'height'; _galleryImageHeight + 'px'"/>
				<bind name="repeat" value="_galleryItemRendererParams; 'GalleryItem'; {	_currentSelectedImage: 	 	currentSelectedImage,
																		_nextSelectedImage: 		nextSelectedImage,
																		_previousSelectedImage: 	previousSelectedImage,
																		_galleryImageWidth: 		_galleryImageWidth, 
																		_galleryImageHeight: 		_galleryImageHeight, 
																		_galleryItemRenderer: 		_galleryItemRenderer, 
																		_galleryItemRendererParams: _galleryItemRendererParams
																	}; true"/>
			</block>
			<block>
				<bind name="visible" value="(_galleryItemRendererParams.length &gt; 1) &amp;&amp; (_indicatorDisabled != true)"/>
				<bind name="style" value="'marginLeft'; _galleryItemRendererImageIndicatorMarginLeft ? (_galleryItemRendererImageIndicatorMarginLeft + 'px') : 0"/>
				<bind name="repeat" value="_galleryItemRendererParams; _galleryItemRendererImageIndicator; 	{	
																							_currentSelectedImage: currentSelectedImage,
																							_imageCount: _galleryItemRendererParams.length,
																							_imageWidth: _galleryImageWidth
																							}"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<bind name="visible" value="(_galleryItemRendererParams.length &gt; 1) &amp;&amp; (_arrowsDisabled != true)"/>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
			<bind name="transition" value="rollOver; 0.15; {alpha: 0.5}; {alpha: 1}"/>
			<bind name="dispatch" value="'click'; 'nextEv'; {}; 1"/>
			<bind name="catch" value="'click'; { currentSelectedImage: nextSelectedImage }"/>
			<bind name="soundOn" value="'mouseDown'; 'press'; 'default_button'"/>
			<style>
				<height value="100%"/>
				<width value="40px"/>
				<backgroundColor value="0x01000000"/>
			</style>
			<block className="button_slide_right" type="native">
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$MiddleAligned"/>
			</block>
		</block>
	</block>
	<block className="GalleryItem">
		<bind name="var" value="{imageIndex: $index + 1}"/>
		<bind name="appear" value="imageIndex == _nextSelectedImage		?	'timeOutEv'		: null ; 0.35; 0; 	{alpha: 1, left: _galleryImageWidth};		{alpha: 1, left: 0}; 1"/>
		<bind name="appear" value="imageIndex == _currentSelectedImage	?	'timeOutEv'		: null ; 0.35; 0; 	{alpha: 1, left: 0};						{alpha: 1, left: -_galleryImageWidth}; 1"/>
		<bind name="appear" value="imageIndex == _nextSelectedImage		?	'nextEv'		: null ; 0.35; 0; 	{alpha: 1, left: _galleryImageWidth};		{alpha: 1, left: 0}; 1"/>
		<bind name="appear" value="imageIndex == _currentSelectedImage	?	'nextEv'		: null ; 0.35; 0; 	{alpha: 1, left: 0};						{alpha: 1, left: -_galleryImageWidth}; 1"/>
		<bind name="appear" value="imageIndex == _previousSelectedImage 	?	'previousEv'	: null ; 0.35; 0; 	{alpha: 1, left: -_galleryImageWidth};		{alpha: 1, left: 0}; 1"/>
		<bind name="appear" value="imageIndex == _currentSelectedImage 	?	'previousEv'	: null ; 0.35; 0; 	{alpha: 1, left: 0};						{alpha: 1, left: _galleryImageWidth}; 1"/>
		<bind name="appear" value="imageIndex == _currentSelectedImage 	?	'changeImage'	: null ; 0.35; 0; 	{alpha: 1, left: 0};						{alpha: 1, left: 0}; 1"/>
		<bind name="appear" value="imageIndex != _currentSelectedImage	? 	'changeImage'	: null ; 0; 0;		{alpha: 0, left: _galleryImageWidth};		{alpha: 0, left: _galleryImageWidth}; 1"/>
		<styleClass value="$FullsizeAbsolute"/>
		<bind name="style" value="'alpha'; (imageIndex == _currentSelectedImage) ? 1 : 0)"/>
		<bind name="instance" value="_galleryItemRenderer; { _galleryItemRendererParams: _galleryItemRendererParams, _index: $index,
											_galleryImageWidth: _galleryImageWidth, _galleryImageHeight: _galleryImageHeight }"/>
	</block>
	<block className="SelectedImageIndicator">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="watch" value="'indicatorLength'; ((_imageWidth - ((_imageCount - 1)*2)) / _imageCount)"/>
		<bind name="watch" value="'indicatorLengthRemainder'; ((_imageWidth - ((_imageCount - 1)*2)) % _imageCount)"/>
		<bind name="style" value="'marginRight'; (($index + 1) &lt; _imageCount) ? '2px' : '0px'"/>
		<bind name="style" value="'width'; $index &lt; indicatorLengthRemainder ? ((indicatorLength + 1) + 'px') : indicatorLength + 'px'"/>
		<bind name="var" value="{ imageIndex: $index + 1 }"/>
		<bind name="dispatch" value="'click'; 'imageSelectionEv'; { currentSelectedImage: imageIndex }; 0"/>
		<bind name="soundOn" value="'mouseDown'; 'press'; 'default_button'"/>
		<bind name="style" value="'backgroundColor'; ( _currentSelectedImage == imageIndex ) ? '0xCC4CE8AA' : '0x779CBABA'"/>
		<bind name="transition" value="rollOver; 0.05; {height: 5}; {height: 10}"/>
		<style>
			<height value="5px"/>
		</style>
		<block>
			<style>
				<backgroundColor value="0x01000000"/>
				<height value="20px"/>
				<top value="-10px"/>
				<position value="absolute"/>
				<width value="100%"/>
			</style>
		</block>
	</block>
	<block className="SelectedImageIndicatorAccountLeveling">
		<bind name="watch" value="'indicatorState'; _currentSelectedImage == imageIndex ? 'selected' : 'unselected'"/>
		<bind name="var" value="{ imageIndex: $index + 1 }"/>
		<bind name="dispatch" value="'click'; 'imageSelectionEv'; { currentSelectedImage: imageIndex }; 0"/>
		<bind name="soundOn" value="'mouseDown'; 'press'; 'default_button'"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; null; 'ct_'"/>
		<bind name="var" value="{ 
		ctRollOver: {
			redMultiplier: 1,
			greenMultiplier: 1,
			blueMultiplier: 1,
			alphaMultiplier: 1,
			redOffset: 30,
			greenOffset: 30,
			blueOffset: 30,
			alphaOffset: 0
		}
	}"/>
		<bind name="var" value="{ 
		ctMouseDown: {
			redMultiplier: 1,
			greenMultiplier: 1,
			blueMultiplier: 1,
			alphaMultiplier: 1,
			redOffset: -30,
			greenOffset: -30,
			blueOffset: -30,
			alphaOffset: 0
		}
	}"/>
		<bind name="colorTransform" value="	true &amp;&amp; (ct_mouseDown)	? ctMouseDown :
							true &amp;&amp; (ct_rollOver)	? ctRollOver
														: {}"/>
		<style>
			<width value="25px"/>
			<height value="25px"/>
			<backgroundColor value="0x01000000"/>
		</style>
		<block>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<width value="9px"/>
				<height value="9px"/>
				<backgroundSize value="cover"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:../accountLevel/progressBarIcons/account_leveling_gallery_conrol_' + indicatorState + '.png'"/>
		</block>
	</block>
	<block className="PlayerSummaryPve">
		<styleClass value="$MiddleAligned"/>
		<style>
			<flow value="horizontal"/>
			<marginBottom value="24px"/>
		</style>
		<bind name="collectionDH" value="CC.rankedSeasonHistory; 'statDataEntities'; 'statToShow'"/>
		<bind name="entityDH" value="'statDataEntity'; statDataEntities[0].id"/>
		<bind name="watchDH" value="'statData'; ['statDataEntity.dataComponent.evDataChanged']; statDataEntity.dataComponent.data"/>
		<bind name="repeat" value="statData.basicStats.colData; 'PlayerSummaryItemPveRow'; {}"/>
	</block>
	<block className="PlayerSummaryItemPveRow">
		<style>
			<marginTop value="40px"/>
			<width value="1280:274,1920:310aw"/>
		</style>
		<block className="BlurMapCustom">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
			</style>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap5_feather" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<block type="text">
			<style>
				<textAlign value="center"/>
				<width value="100%"/>
				<height value="720:70,1080:120ah"/>
			</style>
			<bind name="style" value="'marginTop'; $index == 1 ? '-15px' : '0px'"/>
			<styleClass value="$TextDefaultBold25NM"/>
			<bind name="text" value="'IDS_SUMMARY_HEADER_' + toUpperCase(block)"/>
		</block>
		<block>
			<style>
				<height value="720:70,1080:120ah"/>
				<minWidth value="70"/>
				<backgroundColor value="0x01000000"/>
			</style>
			<bind name="style" value="'marginTop'; $index == 1 ? '15px' : '0px'"/>
			<styleClass value="$MiddleAligned"/>
			<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: tr('IDS_PVE_OPERATION_BATTLES_PLAYED_TOOLTIP_' + $index)}"/>
			<block type="text">
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$ResultsReward"/>
				<bind name="text" value="gamesPlayed"/>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<width value="274px"/>
				<marginTop value="720:40,1080:80ah"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<height value="140px"/>
					<marginTop value="5px"/>
				</style>
				<bind name="repeat" value="diag.battles; 'LineDiagramItem'; {maxValue: diag.maxValue, _columnColor: 0xFFf3ae5a}"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="Switcher">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<block className="tab_bar_bg" type="native">
			<block>
				<style>
					<marginLeft value="2px"/>
					<marginRight value="2px"/>
				</style>
				<block>
					<style>
						<position value="absolute"/>
					</style>
					<block>
						<style>
							<position value="absolute"/>
						</style>
						<bind name="transition" value="_autorechargeOn == false; 0.2; {x: 0}; {x: 102}; {x: 0}; 2; 0.2"/>
						<bind name="fade" value="_autorechargeOn == false; 0.2; {alpha: 1}; {alpha: 0}; {alpha: 0}; 0; 0.2"/>
						<block className="status_transition_element" type="native">
							<style>
								<marginTop value="2px"/>
								<position value="absolute"/>
								<height value="23px"/>
							</style>
						</block>
					</block>
					<block>
						<style>
							<position value="absolute"/>
						</style>
						<bind name="transition" value="_autorechargeOn == true; 0.2; {x: 102}; {x: 0}; {x: 102}; 2; 0.2"/>
						<bind name="fade" value="_autorechargeOn == true; 0.2; {alpha: 1}; {alpha: 0}; {alpha: 0}; 0; 0.2"/>
						<block className="status_transition_element" type="native">
							<style>
								<marginTop value="2px"/>
								<position value="absolute"/>
								<height value="23px"/>
							</style>
						</block>
					</block>
				</block>
				<block className="status_ready_item" type="native">
					<style>
						<width value="100px"/>
						<height value="27px"/>
					</style>
					<bind name="action" value="'buttonClick'; _action ? _action : null; _actionParams"/>
					<bind name="enabled" value="!_disableReason"/>
					<bind name="style" value="'colorMatrixFilter'; _disableReason ? '0 -100 0 0' : '0 0 0 0'"/>
					<bind name="selected" value="_autorechargeOn == true"/>
					<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: _switchOnHintText }; 0"/>
					<bind name="label" value="_autorechargeOn == true ? toUpperCase(tr(_switchOptionOnLabel)) : toUpperCase(tr(_switchOptionTurnOnLabel))"/>
				</block>
				<block className="divider_v" type="native">
					<style>
						<height value="27px"/>
					</style>
				</block>
				<block className="status_not_ready_item" type="native">
					<style>
						<width value="100px"/>
						<height value="27px"/>
					</style>
					<bind name="action" value="'buttonClick'; _action ? _action : null; _actionParams"/>
					<bind name="selected" value="_autorechargeOn == false"/>
					<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: _switchOffHintText }; 0"/>
					<bind name="label" value="_autorechargeOn == false ? toUpperCase(tr(_switchOptionOffLabel)): toUpperCase(tr(_switchOptionTurnOffLabel))"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="CrewSuperAbilitySlot">
		<style>
			<width value="360px"/>
		</style>
		<bind name="tooltip" value="'CrewSuperAbilityInfotip'; {}; TooltipBehaviour.infotip"/>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="300px"/>
				</style>
				<block type="text">
					<style>
						<textAlign value="right"/>
						<right value="10px"/>
						<maxWidth value="300"/>
					</style>
					<styleClass value="$TextHeader"/>
					<text value="IDS_SUPERABILITY"/>
				</block>
				<block type="text">
					<style>
						<textAlign value="right"/>
						<right value="10px"/>
						<maxWidth value="300"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<text value="IDS_USE_SUPERABILITY"/>
				</block>
			</block>
			<block>
				<style>
					<width value="62px"/>
					<height value="62px"/>
				</style>
				<block>
					<block className="button_empty_slot" type="native"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="CrewSuperAbilityInfotip">
		<styleClass value="$VerticalInfotipBehaviourCenter"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap3" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
		</block>
		<block className="dock_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginLeft value="-13px"/>
				<marginRight value="-13px"/>
				<marginTop value="-9px"/>
				<marginBottom value="-18px"/>
			</style>
		</block>
		<block>
			<style>
				<width value="350px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="repeat" value="3; 'CrewSuperAbilityInfotipItem'"/>
			</block>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<block type="text">
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorStrongBlueish'"/>
					<text value="IDS_CHOOSE_SUPERABILITY"/>
				</block>
			</block>
		</block>
		<block className="dock_panel_pin_h" type="native">
			<styleClass value="$MiddleVAligned"/>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="gotoAndStop!" value="'left'"/>
		</block>
	</block>
	<block className="CrewSuperAbilityInfotipItem">
		<bind name="tooltip" value="'CrewSuperAbilityTooltip'; {}"/>
		<block className="dock_submenu_item" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<params>
				<param name="soundSet" value="dropmenu_button"/>
			</params>
		</block>
		<block>
			<style>
				<hitTest value="false"/>
			</style>
			<bind name="instance" value="'CrewSuperAbilityHeader'; {}"/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
	</block>
	<block className="CrewSuperAbilityTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block>
			<style>
				<marginTop value="9px"/>
				<marginBottom value="9px"/>
				<hitTest value="false"/>
			</style>
			<bind name="instance" value="'CrewSuperAbilityHeader'; {}"/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<styleClass value="$TextHeaderBigWhite"/>
					<bind name="text" value="tr('IDS_SUPERABILITY_ACTIVATION_COST') +  ' ' + '_PriceTag'"/>
				</block>
				<block type="text">
					<style>
						<marginTop value="-3px"/>
					</style>
					<styleClass value="$TextHeaderBigWhite"/>
					<bind name="class" value="'$FontColorUnready'"/>
					<bind name="text" value="tr('IDS_SUPERABILITY_ACTIVE') + ' ' + '_Hours'"/>
				</block>
			</block>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<block type="text">
				<style>
					<maxWidth value="320"/>
				</style>
				<styleClass value="$TextHeaderBigWhite"/>
				<bind name="text" value="'IDS_SKILL_DESC_AIRDEFENCEBARRAGEABILITY'"/>
			</block>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'MouseInstruction'; {_type: 'left', _instructionText: 'IDS_SUPERABILITY_ACTIVATE', _maxWidth: 320}"/>
		</block>
	</block>
	<block className="CrewSuperAbilityHeader">
		<style>
			<width value="350px"/>
			<height value="70px"/>
		</style>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<block>
				<style>
					<marginLeft value="10px"/>
					<width value="70px"/>
					<height value="70px"/>
				</style>
				<bind name="instance" value="'CrewSuperAbilityIcon'; {}"/>
			</block>
			<block type="text">
				<style>
					<marginLeft value="8px"/>
					<marginTop value="8px"/>
					<maxWidth value="200"/>
				</style>
				<styleClass value="$TextHeaderBold"/>
				<text value="IDS_SUPERABILITY_WORK_ON_PLAYER"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block type="text">
			<style>
				<position value="absolute"/>
				<right value="8px"/>
				<marginTop value="8px"/>
			</style>
			<styleClass value="$TextDefault"/>
			<text value="PriceTag"/>
		</block>
	</block>
	<block className="CrewSuperAbilityIcon">
		<styleClass value="$MiddleAligned"/>
		<styleClass value="$MiddleVAligned"/>
		<style>
			<width value="60px"/>
			<height value="60px"/>
		</style>
		<bind name="style" value="'backgroundImage'; 'url:../crew_commander/skills/big/icon_perk_SurvivalModifier.png'"/>
		<block type="text">
			<styleClass value="$TextHeader"/>
			<styleClass value="$MiddleAligned"/>
			<bind name="class" value="'$FontColorUnready'"/>
			<style>
				<position value="absolute"/>
				<bottom value="-10px"/>
			</style>
			<text value="06:21:18"/>
		</block>
		<block type="text">
			<styleClass value="$TextDefault"/>
			<style>
				<position value="absolute"/>
				<right value="0px"/>
				<top value="0px"/>
			</style>
			<text value="5"/>
		</block>
	</block>
	<block className="TaskContainerRestriction">
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerRange; 'shipLevelsRange'; shipLevels"/>
		<bind name="primaryEntityDH" value="'campaignTaskEntity'; CC.campaignTaskParams; _taskID"/>
		<bind name="watchDH" value="'battleTypes';[]; campaignTaskEntity.campaignTaskRestrictions.battleTypes"/>
		<bind name="watchDH" value="'shipLevels';[]; campaignTaskEntity.campaignTaskRestrictions.shipLevels"/>
		<bind name="watchDH" value="'shipClasses';[]; campaignTaskEntity.campaignTaskRestrictions.shipClasses"/>
		<bind name="watchDH" value="'shipNations';[]; campaignTaskEntity.campaignTaskRestrictions.shipNations"/>
		<bind name="watchDH" value="'shipIDs';[]; campaignTaskEntity.campaignTaskRestrictions.shipIDs"/>
		<bind name="watchDH" value="'goalEntityId';['']; campaignTaskEntity.campaignTaskParams.goal"/>
		<bind name="entityDH" value="'campaignGoalEntity'; goalEntityId"/>
		<bind name="watchDH" value="'l10nRestriction';[]; campaignGoalEntity.campaignTaskGoal.l10nRestriction"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<styleClass value="$HugeMargins"/>
			<block type="text">
				<styleClass value="$TextHeader"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="text" value="l10nRestriction"/>
			</block>
			<block>
				<style>
					<flow value="htile"/>
					<width value="100%"/>
				</style>
				<block>
					<bind name="visible" value="battleTypes.length != 0"/>
					<styleClass value="$InfoLineBoundaries"/>
					<block>
						<bind name="repeat" value="battleTypes; 'TaskBattleTypeRestriction'; {}"/>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<bind name="visible" value="shipLevels.length != 0"/>
						<style>
							<height value="25px"/>
							<marginLeft value="3px"/>
							<marginRight value="3px"/>
						</style>
						<block className="VerticalDivider">
							<style>
								<height value="100%"/>
								<width value="3px"/>
							</style>
							<block className="divider_v" type="native">
								<styleClass value="$Fullsize"/>
							</block>
						</block>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<bind name="visible" value="shipLevels.length != 0"/>
					<bind name="tooltip" value="'ShipListTooltipCampaigns'; {_taskID: _taskID}"/>
					<styleClass value="$InfoLineBoundaries"/>
					<block>
						<style>
							<marginLeft value="6px"/>
							<marginRight value="6px"/>
						</style>
						<bind name="repeat" value="shipLevelsRange; 'TaskShipLevelRestriction'; {}"/>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<bind name="visible" value="shipClasses.length != 0"/>
						<style>
							<height value="25px"/>
							<marginLeft value="3px"/>
							<marginRight value="3px"/>
						</style>
						<block className="VerticalDivider">
							<style>
								<height value="100%"/>
								<width value="3px"/>
							</style>
							<block className="divider_v" type="native">
								<styleClass value="$Fullsize"/>
							</block>
						</block>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<bind name="visible" value="shipClasses.length != 0"/>
					<bind name="tooltip" value="'ShipListTooltipCampaigns'; {_taskID: _taskID}"/>
					<styleClass value="$InfoLineBoundaries"/>
					<block>
						<style>
							<marginLeft value="6px"/>
							<marginRight value="6px"/>
						</style>
						<bind name="repeat" value="shipClasses; 'TaskShipClassRestriction';	{_shipIsPremium: campaignTaskEntity.campaignTaskRestrictions.shipIsPremium,																												
																			_shipIsElite: campaignTaskEntity.campaignTaskRestrictions.shipIsElite}"/>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<bind name="visible" value="shipNations.length != 0"/>
					<styleClass value="$InfoLineBoundaries"/>
					<style>
						<height value="25px"/>
						<marginLeft value="3px"/>
						<marginRight value="9px"/>
					</style>
					<block className="VerticalDivider">
						<style>
							<height value="100%"/>
							<width value="3px"/>
						</style>
						<block className="divider_v" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
				<block>
					<styleClass value="$InfoLineBoundaries"/>
					<bind name="visible" value="shipNations.length != 0"/>
					<bind name="repeat" value="shipNations; 'TaskShipNationRestriction'; {}"/>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="TaskBattleTypeRestriction">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<block className="icon_battletypes_small" type="native">
			<style>
				<marginRight value="6px"/>
				<width value="25px"/>
				<height value="25px"/>
			</style>
			<bind name="gotoAndStop!" value=" 	($value == 0)	? 'RandomBattle' :
								($value == 1) 	? 'TrainingBattle' :
								($value == 2) 	? 'CooperativeBattle' :
								($value == 3) 	? 'TutorialBattle' :
								($value == 4) 	? (rankedBattlesSeason.isJuniorSeason == true) 	? 'RankedBattle_junior' 
																								: 'RankedBattle':
								($value == 5) 	? 'ClubBattle':
								($value == 6) 	? 'PVEBattle' :
								($value == 7) 	? 'PVEBattle' :
								($value == 8) 	? 'ClanBattle' :
								($value == 9) 	? 'EventBattle'
												: null"/>
		</block>
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 	($value == 0)	? 'IDS_RANDOM_BATTLE' :
													($value == 1) 	? 'IDS_TRAINING_BATTLE' :
													($value == 2) 	? 'IDS_COOPERATIVE_BATTLE' :
													($value == 3) 	? 'IDS_INTRO_MISSION_BATTLE' :
													($value == 4) 	? 'IDS_RANKED_BATTLE':
													($value == 5) 	? 'IDS_CLUB_BATTLE':
													($value == 6) 	? 'IDS_PVE_BATTLE':
													($value == 7) 	? 'IDS_PVE_BATTLE':
													($value == 8) 	? 'IDS_CLAN_BATTLE':
													($value == 9) 	? 'IDS_EVENTBATTLE'
																	: null}"/>
	</block>
	<block className="TaskShipLevelRestriction">
		<block type="text">
			<styleClass value="$TextDefault"/>
			<bind name="text" value="ShipLevels.RLEVELS[$value]"/>
		</block>
	</block>
	<block className="TaskShipClassRestriction">
		<style>
			<marginRight value="3px"/>
			<height value="22px"/>
		</style>
		<block className="icon_ship" type="native">
			<styleClass value="$MiddleVAligned"/>
			<bind name="gotoAndStop!" value="_shipIsPremium ?  $value + '_P' : $value"/>
		</block>
		<block className="icon_wreath" type="native">
			<bind name="visible" value="_shipIsPremium || _shipIsElite"/>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<position value="absolute"/>
				<left value="-5px"/>
			</style>
			<bind name="gotoAndStop!" value="_shipIsPremium ?  'premium' : 'elite'"/>
		</block>
	</block>
	<block className="TaskShipNationRestriction">
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_SHIP_NATION_RESTRICTION'}"/>
		<style>
			<marginRight value="3px"/>
		</style>
		<block>
			<bind name="instance" value="'NationFlagsTiny'; {shipCountry: $value}"/>
		</block>
	</block>
	<block className="ShipListTooltipCampaigns">
		<bind name="collectionDH" value="CC.ownShip; 'shipList'; 'campaigns_task_current'"/>
		<bind name="action" value="'Tooltip.selfOpened'; 'updateTaskShipList'; {taskId: _taskID}"/>
		<bind name="instance" value="'ShipListTooltip'; {_shipList: shipList}"/>
	</block>
	<block className="ShipListTooltip">
		<bind name="watch" value="'countShipList'; _shipList.length - 10"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="250px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<bind name="visible" value="_shipList.length &gt; 0"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$InfoBlockIndent"/>
				<styleClass value="$TextHeaderBigDefaultTech"/>
				<bind name="class" value="'$FontColorBlueish'"/>
				<text value="IDS_AVAILABLE_SHIP"/>
			</block>
			<block>
				<bind name="repeat" value="(_shipList.length &gt; 10 ? 10 : _shipList.length); 'ShipItem'; {_shipList: _shipList}"/>
			</block>
			<block type="text">
				<bind name="visible" value="(_shipList.length) &gt; 10"/>
				<style>
					<marginTop value="-2px"/>
				</style>
				<styleClass value="$InfoBlockIndent"/>
				<styleClass value="$TextHeaderBigDefaultTech"/>
				<bind name="class" value="'$FontColorBlueish'"/>
				<bind name="text" value="subst('IDS_AND_OTHER_SHIPS', [], {count: countShipList}, countShipList)}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="_shipList.length &lt;= 0"/>
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<block className="icon_warning_orange" type="native">
				<style>
					<marginTop value="5px"/>
					<marginRight value="2px"/>
				</style>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorUnready'"/>
				<style>
					<maxWidth value="240"/>
					<leading value="-3"/>
				</style>
				<text value="IDS_NO_SUITABLE_SHIPS"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ShipItem">
		<styleClass value="$InfoBlockIndent"/>
		<bind name="instance" value="'ShipLineItem'; {_shipId: _shipList[$index].ship.id, _width: '185px'}"/>
	</block>
	<css name="$HugeMargins">
		<width value="100%"/>
		<marginTop value="10px"/>
		<marginLeft value="18px"/>
		<marginBottom value="10px"/>
		<marginRight value="18px"/>
	</css>
	<block className="DogTagInHUD">
		<styleClass value="$FullsizeAbsolute"/>
		<style>
			<align value="center|middle"/>
		</style>
		<block>
			<style>
				<width value="190px"/>
				<height value="190px"/>
			</style>
			<bind name="instance" value="'DogTagInHUDContent'; {}"/>
		</block>
	</block>
	<block className="DogTagInHUDContent">
		<styleClass value="$Fullsize"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="firstEntityDH" value="'selfAvatarEntity'; CC.playerAvatar"/>
		<bind name="watchDH" value="'playerIsAlive'; ['selfAvatarEntity.playerAvatar.evIsAliveChanged']; selfAvatarEntity.playerAvatar.isAlive"/>
		<bind name="watchDH" value="'killerId'; ['selfAvatarEntity.health.evKillerIdChanged']; selfAvatarEntity.health.killerId"/>
		<bind name="primaryEntityDH" value="'killerEntity'; CC.avatar; killerId"/>
		<bind name="watchDH" value="'enemyName'; ['killerEntity.accountName.evChanged']; killerEntity.accountName.name"/>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="instance" value="'BattleKillerDogTag'; (!playerIsAlive) &amp;&amp; (killerId != 0) ? {_killerId: killerId, _enemyName: enemyName} : null"/>
		</block>
	</block>
	<block className="BattleKillerDogTag">
		<bind name="var" value="{dogTagVisible: true}"/>
		<bind name="appear" value="'addedToStage'; 1; 0.5; {alpha: 0}; {alpha: 1}"/>
		<bind name="appear" value="'hideDogTagEv'; 1; 0.5; {alpha: 1}; {alpha: 0}"/>
		<bind name="appear" value="'hideDogTagEvFast'; 0.2; 0.5; {alpha: 1}; {alpha: 0}"/>
		<bind name="dispatch" value="'addedToStage'; 'evDelayedHideDogTag'; {}; 0; 12"/>
		<bind name="dispatch" value="'evDelayedHideDogTag'; dogTagVisible ? 'hideDogTagEv' : ''"/>
		<bind name="catch" value="'hideDogTagEv'; {dogTagVisible: false}"/>
		<bind name="catch" value="'hideDogTagEvFast'; {dogTagVisible: false}"/>
		<bind name="firstEntityDH" value="'selfAvatarEntity'; CC.playerAvatar"/>
		<bind name="watchDH" value="'timeToRespawn'; ['selfAvatarEntity.playerAvatar.evTimeToRespawnChanged']; selfAvatarEntity.playerAvatar.timeToRespawn"/>
		<bind name="dispatch" value="'timeToRespawn' + varChanged; timeToRespawn &amp;&amp; dogTagVisible ? 'hideDogTagEvFast' : ''"/>
		<bind name="primaryEntityDH" value="'killerEntity'; CC.avatar; _killerId"/>
		<bind name="watchDH" value="'playerDbId'; [] ; killerEntity.accountSimple.dbId "/>
		<style>
			<width value="190px"/>
			<height value="190px"/>
		</style>
		<bind name="repeat" value="killerEntity.dogTagView.components; 'DogTagViewImageItemAvatar'; {_playerDbId : playerDbId}"/>
		<block>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<style>
				<top value="190px"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefaultBold21NM"/>
				<style>
					<textColor value="0xfd7054"/>
				</style>
				<bind name="text" value="subst('IDS_DOGTAG_HUD_SHIP_IS_DEAD', [], {enemyName: tr(_enemyName)})"/>
			</block>
		</block>
	</block>
	<block className="DogTagViewImageItemAvatar">
		<bind name="primaryEntityDH" value="'entity'; CC.dogTagComponent; $value"/>
		<bind name="watchDH" value="'enabled'; ['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.enabled"/>
		<bind name="watchDH" value="'iconPath'; ['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.iconPath"/>
		<style>
			<width value="190px"/>
			<height value="190px"/>
			<backgroundStretchX value="true"/>
			<backgroundStretchY value="true"/>
			<position value="absolute"/>
		</style>
		<bind name="style" value="'backgroundImage'; 'url:../dogTags/medium/' + iconPath"/>
		<bind name="name" value="'dogTagBattle_' + $index + '_' + entity.dogTagComponent.gpName"/>
		<bind name="primaryEntityDH" value="'playerEntity'; CC.accountSimple; _playerDbId"/>
		<bind name="watchDH" value="'clanId'; ['playerEntity.clanman.evClanIdChanged']; playerEntity.clanman.clanId"/>
		<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; clanId"/>
		<bind name="watchDH" value="'clanTag'; ['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
		<bind name="watchDH" value="'clanTagOffsetX';['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.clanTagOffsetX"/>
		<bind name="watchDH" value="'clanTagOffsetY';['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.clanTagOffsetY"/>
		<bind name="watchDH" value="'clanTagFont';['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.clanTagFont"/>
		<bind name="watchDH" value="'clanTagVisible';['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.clanTagVisible"/>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="style" value="'top'; clanTagOffsetY + '%'"/>
			<bind name="style" value="'left'; clanTagOffsetX + '%'"/>
			<block>
				<style>
					<position value="absolute"/>
					<marginLeft value="-50%"/>
					<marginTop value="-50%"/>
				</style>
				<bind name="visible" value="clanTagVisible"/>
				<bind name="atlasText" value="clanTagVisible ?  (clanTag ? '[' + clanTag + ']' : '^') : '' ; '../fonts/medium/' + clanTagFont; 0"/>
			</block>
		</block>
	</block>
	<block className="ConfirmationModalWindow">
		<style>
			<width value="450px"/>
		</style>
		<block>
			<bind name="appear" value="'startShow'; 0.15; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<bind name="appear" value="'startHide'; 0.15; 0.15; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="ModalWindowHeaderConfirmation">
				<style>
					<marginBottom value="3px"/>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<marginBottom value="9px"/>
						<width value="100%"/>
					</style>
					<block>
						<styleClass value="$MiddleAligned"/>
						<block className="icon_warning_grey_big" type="native">
							<style>
								<marginTop value="6px"/>
							</style>
						</block>
						<block type="text">
							<styleClass value="$TextLargeHeaderBold"/>
							<text value="IDS_CONFIRMATION"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block className="ModalWindowCloseIcon">
						<style>
							<position value="absolute"/>
							<right value="-70px"/>
							<top value="9px"/>
							<flow value="horizontal"/>
						</style>
						<bind name="name" value="'btn_cancel'"/>
						<bind name="input"/>
						<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLOSE'}; 0"/>
						<block>
							<styleClass value="$MiddleVAligned"/>
							<style>
								<backgroundColor value="0x01000000"/>
							</style>
							<bind name="dispatch" value="'mouseOver'; 'overEscapeButton'"/>
							<bind name="dispatch" value="'mouseOut'; 'upEscapeButton'"/>
							<bind name="dispatch" value="'mouseDown'; 'downEscapeButton'"/>
							<block>
								<bind name="soundSet" value="'default_button'"/>
								<bind name="catch" value="'overEscapeButton'; {EscapeButtonOverAlpha: 1}"/>
								<bind name="catch" value="'upEscapeButton'; {EscapeButtonOverAlpha: 0.8}"/>
								<bind name="catch" value="'downEscapeButton'; {EscapeButtonOverAlpha: 0.4}"/>
								<style>
									<alpha value="0.8"/>
								</style>
								<bind name="style" value="'alpha'; EscapeButtonOverAlpha"/>
								<bind name="instance" value="'HotkeyWithText'; {_text: 'ESC'}"/>
							</block>
							<block>
								<style>
									<marginTop value="3px"/>
								</style>
								<block className="button_close" type="native">
									<bind name="catch" value="'overEscapeButton'; {CrossButtonStates: 'over'}"/>
									<bind name="catch" value="'upEscapeButton'; {CrossButtonStates: 'up'}"/>
									<bind name="catch" value="'downEscapeButton'; {CrossButtonStates: 'down'}"/>
									<params>
										<param name="focusable" value="false"/>
									</params>
									<bind name="gotoAndPlay!" value="CrossButtonStates"/>
								</block>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
		</block>
		<block>
			<bind name="appear" value="'startShow'; 0.15; 0.3; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<bind name="appear" value="'startHide'; 0.15; 0.3; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<style>
					<marginBottom value="10px"/>
					<marginTop value="6px"/>
					<textAlign value="center"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$TextAccent"/>
				<bind name="text" value="$root.subtitle"/>
			</block>
			<block>
				<bind name="visible" value="!($root.targetShipIsPremium)"/>
				<styleClass value="$MiddleAligned"/>
				<bind name="style" value="'marginBottom'; $root.instruction.length &gt; 0 ? 8 : 0"/>
				<bind name="instance" value="'InstructionBigTech'; $root.instruction ? { _instructionText: $root.instruction, _maxWidth: '300' } : null"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block className="ModalWindowOkCancel">
			<styleClass value="$MiddleAligned"/>
			<style>
				<flow value="horizontal"/>
				<marginTop value="15px"/>
			</style>
			<block>
				<bind name="appear" value="'startShow'; 0.15; 0.60; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
				<bind name="appear" value="'startHide'; 0.15; 0.45; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
				<styleClass value="$InfoLineBoundaries"/>
				<style>
					<width value="129px"/>
					<marginRight value="20px"/>
				</style>
				<bind name="instance" value="'DefaultButton'; {_width: '129px', _name: 'btn_ok', _enabled: true, _isTransactionBtn: true,
													_containerName: ('Modal_window_action_Button' + 'IDS_YES'), _label:  'IDS_YES',
													_focusIndex: 1, _defaultFocused: true}"/>
			</block>
			<block>
				<style>
					<width value="129px"/>
				</style>
				<bind name="appear" value="'startShow'; 0.15; 0.45; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
				<bind name="appear" value="'startHide'; 0.15; 0.45; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
				<block className="DefaultButtonModal">
					<styleClass value="$InfoLineBoundaries"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="name" value="'Modal_window_action_Button' + 'IDS_NO'"/>
					<block className="button_default" type="native">
						<style>
							<width value="100%"/>
						</style>
						<bind name="label" value="'IDS_NO'"/>
						<params>
							<param name="name" value="btn_cancel"/>
						</params>
						<bind name="input"/>
						<bind name="focus" value="2;false"/>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="RestartModalWindow">
		<style>
			<width value="450px"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="appear" value="'startShow'; 0.15; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<bind name="appear" value="'startHide'; 0.15; 0.15; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
			<bind name="instance" value="'ModalWindowHeader'; { _header: toUpperCase(tr($root.title))}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="appear" value="'startShow'; 0.15; 0.3; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<bind name="appear" value="'startHide'; 0.15; 0.3; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
			<block type="text">
				<style>
					<maxWidth value="450"/>
					<textAlign value="center"/>
					<marginBottom value="10px"/>
					<marginTop value="6px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$TextAccent"/>
				<bind name="text" value="$root.subtitle"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="15px"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<block>
					<bind name="visible" value="($root.btnTitle != null ? true : false)"/>
					<style>
						<width value="210px"/>
						<marginRight value="30px"/>
					</style>
					<bind name="appear" value="'startShow'; 0.15; 0.45; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
					<bind name="appear" value="'startHide'; 0.15; 0.45; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
					<block className="DefaultButtonModal">
						<styleClass value="$InfoLineBoundaries"/>
						<style>
							<width value="100%"/>
						</style>
						<bind name="name" value="'Modal_window_action_Button' + 'IDS_RESTART_NOW'"/>
						<block className="button_default" type="native">
							<style>
								<width value="100%"/>
							</style>
							<bind name="label" value="'IDS_RESTART_NOW'"/>
							<params>
								<param name="name" value="btn_restart"/>
							</params>
							<bind name="input"/>
							<bind name="focus" value="2;false"/>
						</block>
					</block>
				</block>
				<block>
					<style>
						<width value="130px"/>
					</style>
					<bind name="appear" value="'startShow'; 0.15; 0.60; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
					<bind name="appear" value="'startHide'; 0.15; 0.45; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
					<block className="DefaultButtonModal">
						<styleClass value="$InfoLineBoundaries"/>
						<style>
							<width value="100%"/>
						</style>
						<bind name="name" value="'Modal_window_action_Button' + $root.btnTitle ? $root.btnTitle : 'IDS_OK'"/>
						<block className="button_default" type="native">
							<style>
								<width value="100%"/>
							</style>
							<bind name="label" value="$root.btnTitle ? $root.btnTitle : 'IDS_OK'"/>
							<params>
								<param name="name" value="btn_ok"/>
							</params>
							<bind name="input"/>
							<bind name="focus" value="1;true"/>
						</block>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="($root.btnTitle != null ? false : true)"/>
				<style>
					<width value="210px"/>
					<left value="-200px"/>
					<position value="absolute"/>
				</style>
				<bind name="appear" value="'startShow'; 0.15; 0.45; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
				<bind name="appear" value="'startHide'; 0.15; 0.45; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
				<block className="DefaultButtonModal">
					<styleClass value="$InfoLineBoundaries"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="name" value="'Modal_window_action_Button' + 'IDS_RESTART_NOW'"/>
					<block className="button_default" type="native">
						<style>
							<width value="100%"/>
						</style>
						<bind name="label" value="'IDS_RESTART_NOW'"/>
						<params>
							<param name="name" value="btn_restart"/>
						</params>
						<bind name="input"/>
						<bind name="focus" value="2;false"/>
					</block>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ConfirmationModalWindowKickPlayer">
		<styleClass value="$ModalWindowDefaultWidth"/>
		<block>
			<bind name="appear" value="'startShow'; 0.15; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<bind name="appear" value="'startHide'; 0.15; 0.15; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="ModalWindowHeaderConfirmation">
				<style>
					<marginBottom value="3px"/>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<marginBottom value="9px"/>
						<width value="100%"/>
					</style>
					<block>
						<styleClass value="$MiddleAligned"/>
						<block className="icon_warning_grey_big" type="native">
							<style>
								<marginTop value="6px"/>
							</style>
						</block>
						<block type="text">
							<styleClass value="$TextLargeHeaderBold"/>
							<text value="IDS_CONFIRMATION"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block className="ModalWindowCloseIcon">
						<style>
							<position value="absolute"/>
							<right value="-70px"/>
							<top value="9px"/>
							<flow value="horizontal"/>
						</style>
						<bind name="name" value="'btn_cancel'"/>
						<bind name="input"/>
						<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLOSE'}; 0"/>
						<block>
							<styleClass value="$MiddleVAligned"/>
							<style>
								<backgroundColor value="0x01000000"/>
							</style>
							<bind name="dispatch" value="'mouseOver'; 'overEscapeButton'"/>
							<bind name="dispatch" value="'mouseOut'; 'upEscapeButton'"/>
							<bind name="dispatch" value="'mouseDown'; 'downEscapeButton'"/>
							<block>
								<bind name="soundSet" value="'default_button'"/>
								<bind name="catch" value="'overEscapeButton'; {EscapeButtonOverAlpha: 1}"/>
								<bind name="catch" value="'upEscapeButton'; {EscapeButtonOverAlpha: 0.8}"/>
								<bind name="catch" value="'downEscapeButton'; {EscapeButtonOverAlpha: 0.4}"/>
								<style>
									<alpha value="0.8"/>
								</style>
								<bind name="style" value="'alpha'; EscapeButtonOverAlpha"/>
								<bind name="instance" value="'HotkeyWithText'; {_text: 'ESC'}"/>
							</block>
							<block>
								<style>
									<marginTop value="3px"/>
								</style>
								<block className="button_close" type="native">
									<bind name="catch" value="'overEscapeButton'; {CrossButtonStates: 'over'}"/>
									<bind name="catch" value="'upEscapeButton'; {CrossButtonStates: 'up'}"/>
									<bind name="catch" value="'downEscapeButton'; {CrossButtonStates: 'down'}"/>
									<params>
										<param name="focusable" value="false"/>
									</params>
									<bind name="gotoAndPlay!" value="CrossButtonStates"/>
								</block>
							</block>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
		</block>
		<block>
			<bind name="appear" value="'startShow'; 0.15; 0.3; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<bind name="appear" value="'startHide'; 0.15; 0.3; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<marginBottom value="10px"/>
					<marginTop value="6px"/>
				</style>
				<block type="text">
					<styleClass value="$TextAccent"/>
					<style>
						<styleSheet value="h3
					 	{
					 		color: #FFCC66;
						}"/>
					</style>
					<bind name="text" value="'&lt;body&gt;' + subst($root.subtitle, [], { playerName: $root.name }) + '&lt;/body&gt;'"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<bind name="style" value="'marginBottom'; $root.instruction.length &gt; 0 ? 8 : 0"/>
				<bind name="instance" value="'InstructionBigTech'; $root.instruction ? { _instructionText: $root.instruction, _maxWidth: '450' } : null"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block className="ModalWindowOkCancel">
			<styleClass value="$MiddleAligned"/>
			<style>
				<flow value="horizontal"/>
				<marginTop value="15px"/>
			</style>
			<block>
				<bind name="appear" value="'startShow'; 0.15; 0.60; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
				<bind name="appear" value="'startHide'; 0.15; 0.45; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
				<styleClass value="$InfoLineBoundaries"/>
				<style>
					<width value="129px"/>
					<marginRight value="20px"/>
				</style>
				<bind name="instance" value="'DefaultButton'; {_width: '129px', _name: 'btn_ok', _enabled: true, _isTransactionBtn: true,
													_containerName: ('Modal_window_action_Button' + 'IDS_YES'), _label:  'IDS_YES',
													_focusIndex: 1, _defaultFocused: true}"/>
			</block>
			<block>
				<style>
					<width value="129px"/>
				</style>
				<bind name="appear" value="'startShow'; 0.15; 0.45; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
				<bind name="appear" value="'startHide'; 0.15; 0.45; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
				<block className="DefaultButtonModal">
					<styleClass value="$InfoLineBoundaries"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="name" value="'Modal_window_action_Button' + 'IDS_NO'"/>
					<block className="button_default" type="native">
						<style>
							<width value="100%"/>
						</style>
						<bind name="label" value="'IDS_NO'"/>
						<params>
							<param name="name" value="btn_cancel"/>
						</params>
						<bind name="input"/>
						<bind name="focus" value="2;false"/>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="NotificationModalWindow">
		<block type="text">
			<style>
				<marginBottom value="14px"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$TextDefault"/>
			<bind name="class" value="'$FontSizeHeader6'"/>
			<bind name="text" value="$root.title"/>
		</block>
		<block className="ModalWindowOk">
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginTop value="15px"/>
			</style>
			<block>
				<bind name="appear" value="'startShow'; 0.15; 0.60; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
				<bind name="appear" value="'startHide'; 0.15; 0.45; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
				<style>
					<width value="130px"/>
				</style>
				<block className="DefaultButtonModal">
					<styleClass value="$InfoLineBoundaries"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="name" value="'Modal_window_action_Button' + 'IDS_OK'"/>
					<block className="button_default" type="native">
						<style>
							<width value="100%"/>
						</style>
						<bind name="label" value="'IDS_OK'"/>
						<params>
							<param name="name" value="btn_ok"/>
						</params>
						<bind name="input"/>
						<bind name="focus" value="1;true"/>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="SimpleModalWindow">
		<styleClass value="$Fullsize"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMapCustom">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
			</style>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap5" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<block className="modal_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<bind name="class" value="'$MiddleAligned'"/>
			<bind name="class" value="'$EyeLevelVAligned'"/>
			<bind name="child" value="$root.type; 'ConfirmationModalWindow'; 'NotificationModalWindow'; 'ConfirmationModalWindowKickPlayer'; 'RestartModalWindow'"/>
		</block>
	</block>
	<block className="ModalWindowShowDogTag">
		<block className="ModalWindowContainer">
			<styleClass value="$FullsizeAbsolute"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap5" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<block>
				<bind name="appear" value="'startShow'; 0.3; 0.1; 	{alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0.45; 	{alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<block className="contrast_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="visible" value="optionData.contrast"/>
				</block>
				<block className="modal_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$EyeLevelVAligned"/>
				<bind name="instance" value="'ModalWindowShowDogTagContent'; {}"/>
			</block>
		</block>
	</block>
	<block className="ModalWindowShowDogTagContent">
		<bind name="primaryEntityDH" value="'userEntity'; CC.accountSimple; $root.userId"/>
		<bind name="watchDH" value="'dogTagList';['userEntity.dogTagView.evComponentsChanged']; userEntity.dogTagView.components"/>
		<style>
			<width value="1184px"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<position value="absolute"/>
					<right value="4px"/>
					<top value="9px"/>
				</style>
				<block className="ModalWindowCloseIcon">
					<style>
						<position value="absolute"/>
						<right value="0px"/>
						<top value="0px"/>
						<flow value="horizontal"/>
					</style>
					<bind name="name" value="'btn_cancel'"/>
					<bind name="input"/>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLOSE'}; 0"/>
					<block>
						<styleClass value="$MiddleVAligned"/>
						<style>
							<backgroundColor value="0x01000000"/>
						</style>
						<bind name="dispatch" value="'mouseOver'; 'overEscapeButton'"/>
						<bind name="dispatch" value="'mouseOut'; 'upEscapeButton'"/>
						<bind name="dispatch" value="'mouseDown'; 'downEscapeButton'"/>
						<block>
							<bind name="soundSet" value="'default_button'"/>
							<bind name="catch" value="'overEscapeButton'; {EscapeButtonOverAlpha: 1}"/>
							<bind name="catch" value="'upEscapeButton'; {EscapeButtonOverAlpha: 0.8}"/>
							<bind name="catch" value="'downEscapeButton'; {EscapeButtonOverAlpha: 0.4}"/>
							<style>
								<alpha value="0.8"/>
							</style>
							<bind name="style" value="'alpha'; EscapeButtonOverAlpha"/>
							<bind name="instance" value="'HotkeyWithText'; {_text: 'ESC'}"/>
						</block>
						<block>
							<style>
								<marginTop value="3px"/>
							</style>
							<block className="button_close" type="native">
								<bind name="catch" value="'overEscapeButton'; {CrossButtonStates: 'over'}"/>
								<bind name="catch" value="'upEscapeButton'; {CrossButtonStates: 'up'}"/>
								<bind name="catch" value="'downEscapeButton'; {CrossButtonStates: 'down'}"/>
								<params>
									<param name="focusable" value="false"/>
								</params>
								<bind name="gotoAndPlay!" value="CrossButtonStates"/>
							</block>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$TextLargeHeaderBold"/>
					<bind name="text" value="toUpperCase(tr('IDS_MODAL_WINDOW_PLAYER_DOG_TAG_HEADER'))"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<marginTop value="10px"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginTop value="24px"/>
				<marginBottom value="8px"/>
			</style>
			<bind name="instance" value="'PlayerStereotypeDogTag'; {_playerDbId: $root.userId, _width: 'auto'}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<block>
					<style>
						<width value="512px"/>
						<height value="512px"/>
					</style>
					<bind name="objectUnderPoint" value="'flash.display::Shape'"/>
					<bind name="entityDH" value="'entityToView'; _entityToViewId"/>
					<bind name="watchDH" value="'enabled'; ['entityToView.dogTagComponent.evUpdate']; entityToView.dogTagComponent.enabled"/>
					<bind name="watchDH" value="'iconPath'; ['entityToView.dogTagComponent.evUpdate']; entityToView.dogTagComponent.iconPath"/>
					<bind name="watchDH" value="'categoryId'; ['entityToView.dogTagComponent.evUpdate']; entityToView.dogTagComponent.categoryId"/>
					<bind name="watchDH" value="'gpName'; ['entityToView.dogTagComponent.evUpdate']; entityToView.dogTagComponent.gpName"/>
					<bind name="catch" value="'viewDogTagChanged'"/>
					<bind name="repeat" value="dogTagList; 'DogTagDollImageViewItemRenderer'"/>
					<bind name="tooltip" value="'DogTagComponentTooltip'; (_entityToViewId == -1) ? null : {_id: _entityToViewId, isNotSelf: true}"/>
				</block>
			</block>
		</block>
	</block>
	<block className="DogTagDollImageViewItemRenderer">
		<bind name="primaryEntityDH" value="'entity'; CC.dogTagComponent; $value"/>
		<bind name="watchDH" value="'gpName'; ['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.gpName"/>
		<bind name="watchDH" value="'id'; ['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.id"/>
		<bind name="watchDH" value="'iconPath'; ['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.iconPath"/>
		<style>
			<width value="512px"/>
			<height value="512px"/>
			<backgroundStretchX value="true"/>
			<backgroundStretchY value="true"/>
			<position value="absolute"/>
		</style>
		<bind name="style" value="'backgroundImage'; 'url:../dogTags/big/' + iconPath"/>
		<block>
			<bind name="style" value="'backgroundImage'; 'symbol:' + gpName + '_big'"/>
		</block>
		<bind name="mc" value="gpName + '_big_mask'; ['objUnderPoint', 'noObjUnderPoint']"/>
		<bind name="dispatch" value="'objUnderPoint'; 'viewDogTagChanged'; {_entityToViewId:id}"/>
		<bind name="dispatch" value="'noObjUnderPoint'; 'viewDogTagChanged'; {_entityToViewId:-1}"/>
	</block>
	<block className="ExternalLoginButton">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController;"/>
		<style>
			<width value="24px"/>
			<height value="24px"/>
			<marginRight value="3px"/>
			<marginLeft value="3px"/>
		</style>
		<bind name="style" value="'backgroundImage'; 'url:../service_kit/icons/' + $value + '_login_btn.png'"/>
		<bind name="request" value="'click'; 'showWaitingAuthorization'; {hostId: _curHostIndex, external: $value, rememberMe: _saveCredentials}"/>
		<bind name="action" value="'click'; 'showErrorMessage'; {header: '', message: ''}"/>
		<bind name="tooltip" value="'MouseInstructionTooltip'; 	{	_multiParagraphArray:	[{_paragraphText: 'IDS_EXTERNAL_LOGIN_TOOLTIP'}],
													_mouseInstructions:		[{_type: 'left', _instructionText: 'IDS_LOGIN_WITH_' + tr(toUpperCase($value)) + '_MOUSE_INSTRUCTION'}],
													_maxWidth: 270}"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundColor value="0xffffffff"/>
			</style>
			<bind name="transition" value="rollOver; 0.1; {alpha: 0}; {alpha: 0.17}"/>
		</block>
	</block>
	<block className="HostChooser">
		<bind name="appear" value="'addedToStage'; 0.15; 0 + 0*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
		<style>
			<width value="200px"/>
		</style>
		<block>
			<style>
				<position value="absolute"/>
				<top value="4px"/>
				<right value="100%"/>
				<paddingRight value="4px"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<text value="IDS_SERVER"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'ItemChooser'; {	_items: _hostsItems, _choosedItemRenderer: 'TextChoosedItemRenderer', _name: 'HostChooser',
											_choosedItemRendererParams: {width: '177px', fontClass: '$TextDefault'},
											_listItemRenderer: 'TextListItemRenderer', curIndex: _curItemIndex,
											onItemSelectedEvent: 'hostSelected', _itemChooserTooltipText: 'IDS_CHOOSE_HOST_TOOLTIP', _dropDownWidth: '196px'}"/>
			<bind name="action" value="'click'; 'showErrorMessage'; {header: '', message: ''}"/>
		</block>
	</block>
	<block className="SavedExternalLoginContent">
		<bind name="watchDH" value="'spaId'; ['externalLoginEntity.loginCredentials.evUpdate']; externalLoginEntity.loginCredentials.dbId"/>
		<bind name="watchDH" value="'token2'; ['externalLoginEntity.loginCredentials.evUpdate']; externalLoginEntity.loginCredentials.token2"/>
		<style>
			<width value="200px"/>
		</style>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; 0 + 1*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<style>
				<width value="100%"/>
				<marginTop value="4px"/>
			</style>
			<block className="BlurMapCustomPxOutbound">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="style" value="'marginLeft'; -3px"/>
				<bind name="style" value="'marginRight'; -3px"/>
				<bind name="style" value="'marginTop'; -3px"/>
				<bind name="style" value="'marginBottom'; -3px"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap10_feather" type="native">
					<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0}; {alpha: 0.7}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<right value="100%"/>
					<paddingRight value="4px"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<text value="IDS_LOGIN_ACCOUNT"/>
				</block>
			</block>
			<block type="text">
				<style>
					<marginLeft value="5px"/>
				</style>
				<styleClass value="$TextDefaultBold"/>
				<bind name="text" value="savedExternalLogin"/>
			</block>
		</block>
		<block className="button_special_no_label" type="native">
			<bind name="appear" value="'addedToStage'; 0.15; 0 + 2*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<style>
				<width value="100%"/>
				<height value="51px"/>
				<marginTop value="24px"/>
			</style>
			<bind name="soundSet" value="'hard_button'"/>
			<bind name="request" value="'click'; 'doLoginWithExternalCredentials';	{	hostId: curHostIndex, spaId: spaId, token: token2}"/>
			<bind name="focus" value="3; (defaultFocus == 'loginBtn')"/>
			<params>
				<param name="name" value="connectBtn"/>
			</params>
			<block type="text">
				<styleClass value="$MiddleVAligned"/>
				<style>
					<hitTest value="false"/>
					<width value="100%"/>
					<position value="absolute"/>
					<textAlign value="center"/>
					<multiline value="true"/>
					<leading value="-4"/>
					<marginLeft value="6px"/>
					<marginRight value="6px"/>
				</style>
				<styleClass value="$TextAccentBold"/>
				<bind name="class" value="'$FontColorSpecialButton'"/>
				<bind name="class" value="'$FontDropShadowFilter1'"/>
				<bind name="text" value="toUpperCase(tr('IDS_LOGIN_BUTTON'))"/>
			</block>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; 0 + 3*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
			<style>
				<width value="100%"/>
				<height value="44px"/>
				<marginTop value="12px"/>
			</style>
			<bind name="transition" value="rollOver; 0.1; {alpha: 0.75}; {alpha: 0.9}"/>
			<block className="BlurMapCustomPxOutbound">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="style" value="'marginLeft'; -3px"/>
				<bind name="style" value="'marginRight'; -3px"/>
				<bind name="style" value="'marginTop'; -3px"/>
				<bind name="style" value="'marginBottom'; -3px"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap10_feather" type="native">
					<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0}; {alpha: 0.7}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="button_infopanel_no_label" type="native">
					<styleClass value="$Fullsize"/>
					<bind name="request" value="'click'; 'switchAccount'; {}"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<styleClass value="$MiddleVAligned"/>
				<block type="text">
					<style>
						<hitTest value="false"/>
						<width value="100%"/>
						<textAlign value="center"/>
						<marginLeft value="6px"/>
						<marginRight value="6px"/>
						<leading value="-3"/>
					</style>
					<styleClass value="$TextDefaultBold"/>
					<bind name="text" value="'IDS_CHANGE_ACCOUNT_ON_LOGIN_BUTTON'"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ExternalOnlyLoginButtonContent">
		<style>
			<width value="200px"/>
		</style>
		<block>
			<style>
				<position value="absolute"/>
				<bottom value="51px"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<bind name="instance" value="'ServerMessage'; loginMessage.length &gt; 0	? {	_messageHighlight: loginMessageHighlight, _headerText: loginMessageHeader,
                                                                        _messageText: loginMessage}
                                                                    : null"/>
		</block>
		<block className="button_special_no_label" type="native">
			<bind name="appear" value="'addedToStage'; 0.15; 0 + 2*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="enabled" value="isLoginBtnEnabled"/>
			<style>
				<width value="100%"/>
				<height value="51px"/>
				<marginTop value="24px"/>
			</style>
			<bind name="soundSet" value="'hard_button'"/>
			<bind name="request" value="'click'; isDMM ? 'doLoginDMM' : 'doLoginPmangKr' ; {	}"/>
			<bind name="focus" value="3; (defaultFocus == 'loginBtn')"/>
			<params>
				<param name="name" value="connectBtn"/>
			</params>
			<block type="text">
				<styleClass value="$MiddleVAligned"/>
				<style>
					<hitTest value="false"/>
					<width value="100%"/>
					<position value="absolute"/>
					<textAlign value="center"/>
					<multiline value="true"/>
					<leading value="-4"/>
					<marginLeft value="6px"/>
					<marginRight value="6px"/>
				</style>
				<styleClass value="$TextAccentBold"/>
				<bind name="class" value="isLoginBtnEnabled ? '$FontColorSpecialButton' : '$FontColorAlmostBlack'"/>
				<bind name="class" value="isLoginBtnEnabled ? '$FontDropShadowFilter1' : '$FontDropShadowWhite'"/>
				<bind name="text" value="toUpperCase(tr('IDS_LOGIN_BUTTON'))"/>
			</block>
		</block>
	</block>
	<block className="ButtonSwitchLogin">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<style>
			<width value="200px"/>
			<height value="44px"/>
		</style>
		<bind name="transition" value="_isActive; 0.15; {top: 0}; {top: 10}"/>
		<bind name="transition" value="rollOver; 0.15; {alpha: 0.8}; {alpha: 1}"/>
		<block className="BlurMapCustomPxOutbound">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="style" value="'marginLeft'; -3px"/>
			<bind name="style" value="'marginRight'; -3px"/>
			<bind name="style" value="'marginTop'; -3px"/>
			<bind name="style" value="'marginBottom'; -3px"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap10_feather" type="native">
				<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0}; {alpha: 0.7}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<params>
			<param name="name" value="switchLoginButton"/>
		</params>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="transition" value="!!(_isActive); 0.15; {alpha: 0}; {alpha: 1}"/>
			<block className="button_infopanel_no_label" type="native">
				<styleClass value="$Fullsize"/>
				<bind name="dispatch" value="'click'; 'changeLoginScreenState'; {loginScreenState: (_loginScreenState == 2) ? 1
																															: 2}"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="transition" value="_isActive; 0.15; {alpha: 0.8}; {alpha: 1}"/>
			<styleClass value="$MiddleVAligned"/>
			<block type="text">
				<bind name="style" value="'alpha'; (_loginScreenState == 2) ? 1 : 0.8"/>
				<style>
					<hitTest value="false"/>
					<width value="100%"/>
					<textAlign value="center"/>
					<marginLeft value="6px"/>
					<marginRight value="6px"/>
					<leading value="-3"/>
				</style>
				<styleClass value="$TextDefaultBold"/>
				<bind name="text" value="(_loginScreenState == 2	? _isExternalPlatformClient	? toUpperCase(tr('IDS_ALREADY_HAVE_WGID_Q'))
																						: toUpperCase(tr('IDS_ENTER_WITH_PASSWORD_BUTTON'))
																	: _isExternalPlatformClient	? toUpperCase(tr('IDS_JOIN_VIA_STEAM'))
																						: toUpperCase(tr('IDS_PLAY_WITHOUT_REGISTRATION_BUTTON')))"/>
			</block>
		</block>
	</block>
	<block className="NoLoginContent">
		<style>
			<marginTop value="16px"/>
			<width value="200px"/>
		</style>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; 0 + 1*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<style>
				<marginBottom value="18px"/>
			</style>
			<block className="button_special_no_label" type="native">
				<style>
					<width value="200px"/>
					<height value="51px"/>
				</style>
				<bind name="soundSet" value="'default_button'"/>
				<params>
					<param name="name" value="goPermanentLogin_button"/>
				</params>
				<bind name="dispatch" value="'click'; 'changeLoginScreenState'; {loginScreenState: 1}"/>
				<block type="text">
					<styleClass value="$MiddleAlignedAbsolutely"/>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<hitTest value="false"/>
					</style>
					<styleClass value="$TextAccentBold"/>
					<bind name="class" value="'$FontColorSpecialButton'"/>
					<bind name="class" value="'$FontSizeLarge'"/>
					<bind name="text" value="toUpperCase(tr('IDS_ENTER_WITH_PASSWORD_BUTTON'))"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; 0 + 2*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<style>
				<width value="100%"/>
				<marginBottom value="12px"/>
			</style>
			<block>
				<style>
					<position value="absolute"/>
					<width value="75px"/>
					<top value="11px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block type="text">
				<style>
					<alpha value="0.9"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$TextDefaultBold"/>
				<text value="IDS_OR"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<width value="75px"/>
					<top value="11px"/>
					<right value="0px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; 0 + 3*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<styleClass value="$MiddleAligned"/>
			<bind name="instance" value="'ButtonSwitchLogin'; { _isActive: true, _loginScreenState: loginScreenState }"/>
		</block>
	</block>
	<block className="PermanentLoginContent">
		<style>
			<width value="200px"/>
			<marginTop value="4px"/>
		</style>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; 0 + 1*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<position value="absolute"/>
					<top value="3px"/>
					<right value="100%"/>
					<paddingRight value="4px"/>
				</style>
				<block className="BlurMapCustomPxOutbound">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<style>
						<hitTest value="false"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="style" value="'marginLeft'; -3px"/>
					<bind name="style" value="'marginRight'; -3px"/>
					<bind name="style" value="'marginTop'; -3px"/>
					<bind name="style" value="'marginBottom'; -3px"/>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap10_feather" type="native">
						<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0}; {alpha: 0.7}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<text value="IDS_EMAIL"/>
				</block>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<top value="3px"/>
					<left value="100%"/>
					<paddingLeft value="4px"/>
				</style>
				<block className="BlurMapCustomPxOutbound">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<style>
						<hitTest value="false"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="style" value="'marginLeft'; -3px"/>
					<bind name="style" value="'marginRight'; -3px"/>
					<bind name="style" value="'marginTop'; -3px"/>
					<bind name="style" value="'marginBottom'; -3px"/>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap10_feather" type="native">
						<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0}; {alpha: 0.7}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
				<block>
					<bind name="instance" value="'LinkText'; {	_label: 'IDS_EMAIL_REGISTRATION', _urlIdent: URL.REGISTER,
												_tooltipText: 'IDS_REGISTER_NEW_PLAYER', _name: 'ButtonRegister'}"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="text_input_caps" type="native">
					<style>
						<width value="100%"/>
					</style>
					<params>
						<param name="actAsButton" value="true"/>
						<param name="itemRenderer" value="drop_down_list_item"/>
						<param name="maxChars" value="100"/>
						<param name="soundSet" value="hard_textinput"/>
					</params>
					<bind name="restrict" value="realmConstants.loginRestrict"/>
					<bind name="enabled" value="!isWaitingAnswer"/>
					<bind name="soundOn" value="'click'; 'press'; 'default_button'"/>
					<bind name="action" value="'textInputEnter'; isLoginBtnEnabled	? isExternalPlatformClient ? 'joinSteamWithWGAcc' : 'doLogin' :
												(login.length == 0)	? 'showErrorMessage'
																	: null;
												isLoginBtnEnabled	? { hostId: curHostIndex, user: login,
																		password: password, savePassword: saveCredentials} :
												(login.length == 0)	? {header: 'IDS_ERROR_HEADER_DEFAULT', message: 'IDS_EMPTY_LOGIN'}
																	: null "/>
					<bind name="sync" value="'text'; 'change'; login; 'evUsernameChanged'"/>
					<bind name="action" value="'evUsernameChanged'; 'evUIChanged'; {item: 'username'}"/>
					<bind name="focus" value="1; (defaultFocus == 'loginInput')"/>
					<params>
						<param name="name" value="userNameField"/>
					</params>
				</block>
			</block>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; 0 + 2*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<style>
				<width value="100%"/>
				<marginTop value="7px"/>
			</style>
			<block>
				<style>
					<position value="absolute"/>
					<top value="3px"/>
					<right value="100%"/>
					<paddingRight value="4px"/>
				</style>
				<block className="BlurMapCustomPxOutbound">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<style>
						<hitTest value="false"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="style" value="'marginLeft'; -3px"/>
					<bind name="style" value="'marginRight'; -3px"/>
					<bind name="style" value="'marginTop'; -3px"/>
					<bind name="style" value="'marginBottom'; -3px"/>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap10_feather" type="native">
						<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0}; {alpha: 0.7}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<text value="IDS_PASSWORD"/>
				</block>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<top value="3px"/>
					<left value="100%"/>
					<paddingLeft value="4px"/>
				</style>
				<block className="BlurMapCustomPxOutbound">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<style>
						<hitTest value="false"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="style" value="'marginLeft'; -3px"/>
					<bind name="style" value="'marginRight'; -3px"/>
					<bind name="style" value="'marginTop'; -3px"/>
					<bind name="style" value="'marginBottom'; -3px"/>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap10_feather" type="native">
						<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0}; {alpha: 0.7}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
				<block>
					<bind name="instance" value="'LinkText'; {	_label: 'IDS_QUESTION_PASSWORD_FORGET', _urlIdent: URL.PASSWORD_RECOVERY,
												_tooltipText: 'IDS_PASSWORD_RECOVERY', _name: 'ButtonForgotPassword'}"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="text_input_caps" type="native">
					<style>
						<width value="100%"/>
					</style>
					<params>
						<param name="actAsButton" value="true"/>
						<param name="displayAsPassword" value="true"/>
						<param name="maxChars" value="100"/>
						<param name="soundSet" value="hard_textinput"/>
					</params>
					<bind name="restrict" value="realmConstants.passRestrict"/>
					<bind name="enabled" value="!isWaitingAnswer"/>
					<bind name="sync" value="'text'; 'change'; password; 'evPasswordChanged'"/>
					<bind name="soundOn" value="'click'; 'press'; 'default_button'"/>
					<bind name="action" value="'textInputEnter'; isLoginBtnEnabled	? isExternalPlatformClient ? 'joinSteamWithWGAcc' : 'doLogin' :
												(login.length == 0)	? 'showErrorMessage'
																	: null;
												isLoginBtnEnabled	? { hostId: curHostIndex, user: login,
																		password: password, savePassword: saveCredentials} :
												(login.length == 0)	? {header: 'IDS_ERROR_HEADER_DEFAULT', message: 'IDS_EMPTY_LOGIN'}
																	: null "/>
					<bind name="action" value="'evPasswordChanged'; 'evUIChanged'; {item:'password', 'text':password}"/>
					<bind name="focus" value="2; (defaultFocus == 'passwordInput')"/>
					<params>
						<param name="name" value="passwordField"/>
					</params>
				</block>
			</block>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; 0 + 3*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<style>
				<width value="100%"/>
				<marginTop value="7px"/>
			</style>
			<params>
				<param name="name" value="save_credentials_box"/>
			</params>
			<bind name="instance" value="'CheckBox'; {switchProperty: saveCredentials, label: 'IDS_SAVE_PASSWORD', _maxTfWidth: 170}"/>
			<bind name="dispatch" value="'click'; 'toggleSaveCredentials'"/>
		</block>
	</block>
	<block className="LazyLoginContent">
		<style>
			<marginTop value="13px"/>
		</style>
		<bind name="appear" value="'addedToStage'; 0.15; 0 + 1*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
		<block className="BlurMapCustomPxOutbound">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="style" value="'marginLeft'; -50px"/>
			<bind name="style" value="'marginRight'; -50px"/>
			<bind name="style" value="'marginTop'; -12px"/>
			<bind name="style" value="'marginBottom'; -12px"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap10_feather" type="native">
				<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0}; {alpha: 0.7}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<block type="text">
			<styleClass value="$MiddleAligned"/>
			<style>
				<width value="350px"/>
				<textAlign value="center"/>
			</style>
			<styleClass value="$TextHeaderBigDefault"/>
			<bind name="text" value="isExternalPlatformClient 				? 'IDS_JOIN_VIA_STEAM_DESC' :
								((savedLazyName.length &gt; 0) ? 'IDS_LAZY_LOGIN_SAVED_INFO'
												: 'IDS_LAZY_LOGIN_NOT_SAVED_INFO')"/>
		</block>
		<block type="text">
			<bind name="visible" value="isExternalPlatformClient"/>
			<styleClass value="$TextDefault"/>
			<styleClass value="$MiddleAligned"/>
			<style>
				<width value="350px"/>
				<textAlign value="center"/>
				<alpha value="0.8"/>
			</style>
			<text value="IDS_I_HAVE_WGID_HINT"/>
		</block>
	</block>
	<block className="SteamNoLoginContent">
		<style>
			<marginTop value="16px"/>
			<width value="200px"/>
		</style>
		<block className="BlurMapCustomPxOutbound">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="style" value="'marginLeft'; -20px"/>
			<bind name="style" value="'marginRight'; -20px"/>
			<bind name="style" value="'marginTop'; -12px"/>
			<bind name="style" value="'marginBottom'; -12px"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap10_feather" type="native">
				<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0}; {alpha: 0.7}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginBottom value="8px"/>
			</style>
			<block className="button_dock" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="dispatch" value="'click'; 'changeLoginScreenState'; { loginScreenState: 6 }"/>
			</block>
			<block>
				<style>
					<hitTest value="false"/>
					<paddingLeft value="4px"/>
					<paddingRight value="4px"/>
					<paddingTop value="2px"/>
					<paddingBottom value="4px"/>
				</style>
				<block className="icon_navigate" type="native">
					<params>
						<param name="name" value="backToSelectSteamHostName"/>
					</params>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<marginRight value="2px"/>
					</style>
					<bind name="gotoAndStop!" value="'left'"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefaultBold"/>
					<bind name="text" value="tr('IDS_REGION') + ' ' + tr(selectedSteamHostName)"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; 0 + 1*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<style>
				<marginBottom value="9px"/>
				<width value="200px"/>
			</style>
			<block className="button_special_no_label" type="native">
				<style>
					<width value="100%"/>
					<height value="51px"/>
				</style>
				<bind name="soundSet" value="'default_button'"/>
				<params>
					<param name="name" value="goConnectWGIDLogin_button"/>
				</params>
				<bind name="dispatch" value="'buttonClick'; 'changeLoginScreenState'; {loginScreenState: 1}"/>
				<block type="text">
					<styleClass value="$MiddleVAligned"/>
					<style>
						<hitTest value="false"/>
						<width value="100%"/>
						<textAlign value="center"/>
						<marginLeft value="6px"/>
						<marginRight value="6px"/>
					</style>
					<styleClass value="$TextAccentBold"/>
					<bind name="class" value="'$FontColorSpecialButton'"/>
					<bind name="class" value="'$FontSizeLarge'"/>
					<text value="IDS_ALREADY_HAVE_WGID_Q"/>
				</block>
			</block>
			<block type="text">
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$TextDefault"/>
				<style>
					<width value="300px"/>
					<textAlign value="center"/>
				</style>
				<text value="IDS_I_HAVE_WGID_DESC"/>
			</block>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; 0 + 2*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<style>
				<width value="100%"/>
				<marginBottom value="12px"/>
			</style>
			<block>
				<style>
					<position value="absolute"/>
					<width value="75px"/>
					<top value="11px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block type="text">
				<style>
					<alpha value="0.9"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$TextDefaultBold"/>
				<text value="IDS_OR"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<width value="75px"/>
					<top value="11px"/>
					<right value="0px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="200px"/>
			</style>
			<bind name="appear" value="'addedToStage'; 0.15; 0 + 3*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<block className="button_special_no_label" type="native">
				<style>
					<width value="100%"/>
					<height value="51px"/>
				</style>
				<bind name="soundSet" value="'default_button'"/>
				<params>
					<param name="name" value="goCreateWGIDLogin_button"/>
				</params>
				<bind name="dispatch" value="'buttonClick'; 'changeLoginScreenState'; {loginScreenState: 2}"/>
				<block type="text">
					<styleClass value="$MiddleVAligned"/>
					<style>
						<hitTest value="false"/>
						<width value="100%"/>
						<textAlign value="center"/>
						<marginLeft value="6px"/>
						<marginRight value="6px"/>
					</style>
					<styleClass value="$TextAccentBold"/>
					<bind name="class" value="'$FontColorSpecialButton'"/>
					<bind name="class" value="'$FontSizeLarge'"/>
					<text value="IDS_JOIN_VIA_STEAM"/>
				</block>
			</block>
			<block type="text">
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$TextDefault"/>
				<style>
					<width value="300px"/>
					<textAlign value="center"/>
				</style>
				<text value="IDS_JOIN_VIA_STEAM_DESC"/>
			</block>
		</block>
	</block>
	<block className="AutoLoginContent">
		<style>
			<marginTop value="32px"/>
		</style>
		<bind name="appear" value="'addedToStage'; 0.15; 0 + 1*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
		<block className="BlurMapCustomPxOutbound">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="style" value="'marginLeft'; -50px"/>
			<bind name="style" value="'marginRight'; -50px"/>
			<bind name="style" value="'marginTop'; -12px"/>
			<bind name="style" value="'marginBottom'; -12px"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap10_feather" type="native">
				<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0}; {alpha: 0.7}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<block type="text">
			<styleClass value="$TextDefaultTech"/>
			<bind name="class" value="'$Bold'"/>
			<bind name="text" value="(isGettingBoundAccountInfo ? toUpperCase(tr('IDS_STATUS_GET_ACCOUNT_INFO')) : toUpperCase(tr('IDS_LOGGING_IN')))"/>
		</block>
	</block>
	<block className="SteamLoggedOutContent">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="firstEntityDH" value="'loginEntity'; CC.loginData"/>
		<bind name="firstEntityDH" value="'wgcLoginEntity'; CC.wgcLoginData"/>
		<bind name="watchDH" value="'isWinStore'; ['loginEntity.loginData.evUpdate']; loginEntity.loginData.isWinStore"/>
		<bind name="watchDH" value="'isWGC'; ['loginEntity.loginData.evUpdate']; loginEntity.loginData.isWGC"/>
		<bind name="watchDH" value="'wgcName'; ['wgcLoginEntity.wgcLoginData.evNameChanged']; wgcLoginEntity.wgcLoginData.name"/>
		<style>
			<width value="200px"/>
			<marginTop value="32px"/>
		</style>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; 0 + 1*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<style>
				<width value="100%"/>
				<height value="51px"/>
			</style>
			<block className="button_special_no_label" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="soundSet" value="'hard_button'"/>
				<params>
					<param name="name" value="steamLoginRetryBtn"/>
				</params>
				<bind name="enabled" value="isLoginBtnEnabled"/>
				<bind name="action" value="'buttonClick'; 'reconnect'; { hostId: curHostIndex, user: login, password: password, savePassword: saveCredentials }"/>
				<block type="text">
					<style>
						<hitTest value="false"/>
						<width value="100%"/>
						<textAlign value="center"/>
						<multiline value="true"/>
						<marginLeft value="6px"/>
						<marginRight value="6px"/>
						<leading value="-4"/>
					</style>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$TextAccentBold"/>
					<bind name="class" value="isLoginBtnEnabled ? '$FontColorSpecialButton' : '$FontColorAlmostBlack'"/>
					<bind name="class" value="isLoginBtnEnabled ? '$FontDropShadowFilter1' : '$FontDropShadowWhite'"/>
					<bind name="text" value="toUpperCase(tr('IDS_LOGIN_BUTTON'))"/>
				</block>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<bottom value="51px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'ServerMessage'; loginMessage.length &gt; 0	? {	_messageHighlight: loginMessageHighlight, _headerText: loginMessageHeader,
																			_messageText: loginMessage}
																		: null"/>
			</block>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; 0 + 2*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="visible" value="isWinStore == true || isWGC == true"/>
			<style>
				<width value="100%"/>
				<height value="44px"/>
				<marginTop value="12px"/>
			</style>
			<block className="BlurMapCustomPxOutbound">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="style" value="'marginLeft'; -3px"/>
				<bind name="style" value="'marginRight'; -3px"/>
				<bind name="style" value="'marginTop'; -3px"/>
				<bind name="style" value="'marginBottom'; -3px"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap10_feather" type="native">
					<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0}; {alpha: 0.7}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<bind name="transition" value="rollOver; 0.1; {alpha: 0.75}; {alpha: 0.9}"/>
			<block className="button_infopanel_no_label" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="enabled" value="isLoginBtnEnabled"/>
				<bind name="request" value="'click'; 'switchAccount'; {}"/>
				<block type="text">
					<style>
						<width value="100%"/>
						<textAlign value="center"/>
						<marginLeft value="6px"/>
						<marginRight value="6px"/>
						<leading value="-3"/>
						<hitTest value="false"/>
					</style>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$TextDefaultBold"/>
					<bind name="text" value="'IDS_CHANGE_ACCOUNT_ON_LOGIN_BUTTON'"/>
				</block>
			</block>
		</block>
	</block>
	<block className="SteamChooseRealmContent">
		<style>
			<marginTop value="12px"/>
			<width value="250px"/>
		</style>
		<bind name="appear" value="'addedToStage'; 0.15; 0 + 1*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
		<block className="BlurMapCustomPxOutbound">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="style" value="'marginLeft'; -20px"/>
			<bind name="style" value="'marginRight'; -20px"/>
			<bind name="style" value="'marginTop'; -20px"/>
			<bind name="style" value="'marginBottom'; -20px"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap10_feather" type="native">
				<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0}; {alpha: 0.7}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<block type="text">
				<styleClass value="$TextDefault17NM"/>
				<style>
					<width value="400px"/>
					<textAlign value="center"/>
					<marginBottom value="8px"/>
				</style>
				<bind name="text" value="'IDS_CHOOSE_REGION')"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<maxHeight value="250"/>
				<overflow value="scroll"/>
			</style>
			<styleClass value="$DefaultScrollBar"/>
			<bind name="repeat" value="steamLoginEntity.steamLoginData.hostsDataProvider; 'SteamHostRenderer'; { _selectedSteamHostIndex: selectedSteamHostIndex }"/>
		</block>
	</block>
	<block className="WarningMessageBigIcon">
		<style>
			<flow value="horizontal"/>
		</style>
		<block className="BlurMapCustomPxOutbound">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="style" value="'marginLeft'; -50px"/>
			<bind name="style" value="'marginRight'; -50px"/>
			<bind name="style" value="'marginTop'; -12px"/>
			<bind name="style" value="'marginBottom'; -12px"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap10_feather" type="native">
				<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0}; {alpha: 0.7}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<bind name="style" value="'width'; _noWidth ? 'auto' : '100%'"/>
		<block>
			<bind name="visible" value="!(_medium)"/>
			<style>
				<marginRight value="5px"/>
				<marginTop value="3px"/>
			</style>
			<block className="icon_warning_orange_big" type="native"/>
		</block>
		<block>
			<bind name="visible" value="(_medium == true)"/>
			<style>
				<marginRight value="3px"/>
				<marginTop value="2px"/>
			</style>
			<block className="icon_warning_orange_mid" type="native"/>
		</block>
		<block type="text">
			<bind name="style" value="'width'; _noWidth ? 'auto' : '100%'"/>
			<bind name="class" value="_medium ? '$TextHeaderBigWhite' : '$TextLargeHeader'"/>
			<bind name="class" value="'$FontColorUnready'"/>
			<bind name="text" value="_text"/>
		</block>
	</block>
	<block className="SteamNewNicknameContent">
		<bind name="watchDH" value="'nicknameSuggestions'; ['steamLoginEntity.steamLoginData.evUpdate']; steamLoginEntity.steamLoginData.nicknameSuggestions"/>
		<bind name="watchDH" value="'lastAttemptedNickname'; ['steamLoginEntity.steamLoginData.evUpdate']; steamLoginEntity.steamLoginData.lastAttemptedNickname"/>
		<bind name="catch" value="'steamSelectName'"/>
		<bind name="var" value="{isFirstEdit: true}"/>
		<bind name="catch" value="'nameChangedEv'; {isFirstEdit: false}"/>
		<bind name="var" value="{selectedNameIndex: -1}"/>
		<bind name="watch" value="'steamNewNickname';	(nicknameSuggestions.length &gt; 0) &amp;&amp; (selectedNameIndex != -1)	? nicknameSuggestions[selectedNameIndex] :
																						isFirstEdit		? lastAttemptedNickname
															 											: steamNewNickname"/>
		<style>
			<marginTop value="12px"/>
			<width value="400px"/>
		</style>
		<bind name="appear" value="'addedToStage'; 0.15; 0 + 1*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
		<block>
			<block className="BlurMapCustomPxOutbound">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="style" value="'marginLeft'; -15px"/>
				<bind name="style" value="'marginRight'; -15px"/>
				<bind name="style" value="'marginTop'; -2px"/>
				<bind name="style" value="'marginBottom'; -2px"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap10_feather" type="native">
					<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0}; {alpha: 0.7}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<top value="-24px"/>
			</style>
			<block className="button_dock" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="dispatch" value="'click'; 'changeLoginScreenState'; { loginScreenState: 6 }"/>
			</block>
			<block>
				<style>
					<hitTest value="false"/>
					<paddingLeft value="4px"/>
					<paddingRight value="4px"/>
					<paddingTop value="2px"/>
					<paddingBottom value="4px"/>
				</style>
				<block className="icon_navigate" type="native">
					<params>
						<param name="name" value="backToSelectSteamHostName"/>
					</params>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<marginRight value="2px"/>
					</style>
					<bind name="gotoAndStop!" value="'left'"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefaultBold"/>
					<bind name="text" value="tr('IDS_REGION') + ' ' + tr(selectedSteamHostName)"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginBottom value="24px"/>
			</style>
			<block className="BlurMapCustomPxOutbound">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="style" value="'marginLeft'; -20px"/>
				<bind name="style" value="'marginRight'; -20px"/>
				<bind name="style" value="'marginTop'; -22px"/>
				<bind name="style" value="'marginBottom'; -22px"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap10_feather" type="native">
					<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0}; {alpha: 0.7}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<block type="text">
				<styleClass value="$TextDefault17NM"/>
				<style>
					<width value="100%"/>
					<textAlign value="center"/>
				</style>
				<bind name="text" value="'IDS_CHOOSE_WOWS_NAME')"/>
			</block>
		</block>
		<bind name="watchDH" value="'isWrongName'; ['steamLoginEntity.steamLoginData.evUpdate']; (steamLoginEntity.steamLoginData.isNicknameInUse ||
																				steamLoginEntity.steamLoginData.isNicknameInvalid)"/>
		<bind name="watchDH" value="'isNicknameValidationRunning'; ['steamLoginEntity.steamLoginData.evUpdate']; steamLoginEntity.steamLoginData.isNicknameValidationRunning"/>
		<bind name="catch" value="'hideWrongMessageEv'; { wrongSymbolInputed: false, showWrongNickNotification: false}"/>
		<bind name="catch" value="'nameChangedEv'; {	selectedNameIndex: ((steamNewNickname != nicknameSuggestions[selectedNameIndex])	? -1
																														: selectedNameIndex)}"/>
		<bind name="watch" value="'isSteamNewNicknameLoginBtnEnabled'; !(isWrongName || isNicknameValidationRunning)"/>
		<block>
			<block className="BlurMapCustomPxOutbound">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="style" value="'marginLeft'; -10px"/>
				<bind name="style" value="'marginRight'; -10px"/>
				<bind name="style" value="'marginTop'; -4px"/>
				<bind name="style" value="'marginBottom'; -4px"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap10_feather" type="native">
					<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0}; {alpha: 0.7}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<styleClass value="$MiddleAligned"/>
			<block className="text_input_caps" type="native">
				<style>
					<width value="200px"/>
					<height value="29px"/>
				</style>
				<params>
					<param name="actAsButton" value="true"/>
					<param name="itemRenderer" value="drop_down_list_item"/>
					<param name="soundSet" value="hard_textinput"/>
				</params>
				<bind name="enabled" value="!isWaitingAnswer"/>
				<bind name="maxChars" value="realmConstants.nicknameMaxLength"/>
				<bind name="restrict" value="realmConstants.nicknameRestrict"/>
				<bind name="restrictFeedback" value="realmConstants.nicknameRestrictRegexp; 'wrongSymbolInputed'"/>
				<bind name="soundOn" value="'click'; 'press'; 'default_button'"/>
				<bind name="action" value="'textInputEnter'; isSteamNewNicknameLoginBtnEnabled	? 'steamNicknameEdited'
																				: null; { nickname: steamNewNickname }"/>
				<bind name="defaultText" value="'IDS_ENTER_LOGIN_ON_LOGIN'"/>
				<bind name="sync" value="'text'; 'change'; steamNewNickname; 'evUsernameChanged'"/>
				<bind name="dispatch" value="'steamNewNickname' + varChanged; 'nameChangedEv'"/>
				<bind name="focus" value="1; usernameFocused"/>
				<params>
					<param name="name" value="steamUserNameField"/>
				</params>
				<bind name="action" value="'nameChangedEv'; 'nickNameChange'; {nickname: steamNewNickname}"/>
				<bind name="action" value="'addedToStage'; 'nickNameChange'; {nickname: steamNewNickname}"/>
				<block>
					<style>
						<width value="410px"/>
					</style>
					<styleClass value="$MiddleAligned"/>
					<block>
						<bind name="watch" value="'showWrongNickNotification';	(steamNewNickname.length &gt; 0 &amp;&amp;
																(isWrongName &amp;&amp; !isNicknameValidationRunning)) "/>
						<style>
							<width value="410px"/>
							<position value="absolute"/>
							<bottom value="2px"/>
						</style>
						<bind name="instance" value="'WrongNickNameNotificationAndSuggestions';	showWrongNickNotification	||
																				wrongSymbolInputed				?	{	_maxWidth: 356, _startTop: 10,
																														_wrongSymbolInputed: wrongSymbolInputed}
																												:	null"/>
					</block>
				</block>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<right value="-2px"/>
				</style>
				<bind name="watchDH" value="'isNicknameInUse'; ['steamLoginEntity.steamLoginData.evUpdate']; steamLoginEntity.steamLoginData.isNicknameInUse"/>
				<bind name="watchDH" value="'isNicknameInvalid'; ['steamLoginEntity.steamLoginData.evUpdate']; steamLoginEntity.steamLoginData.isNicknameInvalid"/>
				<bind name="watch" value="'validationState'; isNicknameValidationRunning				? 'validation' :
											(isNicknameInvalid || isNicknameInUse)	? 'invalid'
																					: 'valid'"/>
				<bind name="instance" value="'ValidationState'; (steamNewNickname.length &gt; 0) ? {_validationState: validationState} : null"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="button_special_no_label" type="native">
			<styleClass value="$MiddleAligned"/>
			<style>
				<width value="200px"/>
				<height value="51px"/>
				<marginTop value="32px"/>
			</style>
			<bind name="soundSet" value="'hard_button'"/>
			<bind name="enabled" value="isSteamNewNicknameLoginBtnEnabled"/>
			<bind name="action" value="'buttonClick'; 'steamNicknameEdited'; {nickname: steamNewNickname}"/>
			<bind name="focus" value="2; loginFocused"/>
			<bind name="name" value="isSteamNewNicknameLoginBtnEnabled ? 'steamNewNicknameBtn' : ''"/>
			<block type="text">
				<styleClass value="$MiddleVAligned"/>
				<style>
					<hitTest value="false"/>
					<width value="100%"/>
					<position value="absolute"/>
					<textAlign value="center"/>
					<multiline value="true"/>
					<leading value="-4"/>
					<marginLeft value="6px"/>
					<marginRight value="6px"/>
				</style>
				<styleClass value="$TextAccentBold"/>
				<bind name="class" value="isSteamNewNicknameLoginBtnEnabled ? '$FontColorSpecialButton' : '$FontColorAlmostBlack'"/>
				<bind name="class" value="isSteamNewNicknameLoginBtnEnabled ? '$FontDropShadowFilter1' : '$FontDropShadowWhite'"/>
				<bind name="text" value="'IDS_LOGIN_BUTTON'"/>
			</block>
		</block>
	</block>
	<block className="ValidationState">
		<block>
			<bind name="transition" value="(_validationState == 'invalid'); 0.07; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
			<style>
				<position value="absolute"/>
				<left value="3px"/>
				<top value="8px"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'symbol:icon_warning_orange_bm'"/>
		</block>
		<block>
			<bind name="transition" value="(_validationState == 'valid'); 0.07; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
			<style>
				<position value="absolute"/>
				<top value="5px"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'symbol:checkbox_check'"/>
		</block>
		<block>
			<bind name="transition" value="(_validationState == 'validation'); 0.07; {alpha: 0}; {alpha: 1}"/>
			<style>
				<position value="absolute"/>
				<top value="15px"/>
				<left value="10px"/>
			</style>
			<block className="loading_bar_small_centered" type="native"/>
		</block>
	</block>
	<block className="SteamLoginDenied">
		<bind name="watchDH" value="'lastAttemptedNickname'; ['steamLoginEntity.steamLoginData.evUpdate']; steamLoginEntity.steamLoginData.lastAttemptedNickname"/>
		<bind name="watchDH" value="'isWinStore'; ['loginEntity.loginData.evUpdate']; loginEntity.loginData.isWinStore"/>
		<style>
			<width value="420px"/>
			<marginTop value="16px"/>
		</style>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; 0 + 1*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="BlurMapCustomPxOutbound">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="style" value="'marginLeft'; -20px"/>
				<bind name="style" value="'marginRight'; -20px"/>
				<bind name="style" value="'marginTop'; -20px"/>
				<bind name="style" value="'marginBottom'; -20px"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap10_feather" type="native">
					<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0}; {alpha: 0.7}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<style>
						<width value="100%"/>
						<leading value="-1"/>
						<textAlign value="center"/>
						<styleSheet value="h3
					    {
					        color: #FFCC66;
					    }"/>
					</style>
					<styleClass value="$TextDefault17NM"/>
					<bind name="text" value="isWinStore 	? ('&lt;body&gt;' + subst('IDS_PLATFORM_MICROSOFT_ACCOUNT_DENIED',	[], {accountName: '&lt;h3&gt;' + lastAttemptedNickname + '&lt;/h3&gt;'}) + '&lt;/body&gt;')
										: ('&lt;body&gt;' + subst('IDS_PLATFORM_STEAM_ACCOUNT_DENIED', 		[], {accountName: '&lt;h3&gt;' + lastAttemptedNickname + '&lt;/h3&gt;'}) + '&lt;/body&gt;')"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<height value="36px"/>
			</style>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; 0 + 2*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
			<style>
				<marginBottom value="16px"/>
			</style>
			<block className="BlurMapCustomPxOutbound">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="style" value="'marginLeft'; -3px"/>
				<bind name="style" value="'marginRight'; -3px"/>
				<bind name="style" value="'marginTop'; -3px"/>
				<bind name="style" value="'marginBottom'; -3px"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap10_feather" type="native">
					<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0}; {alpha: 0.7}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<styleClass value="$MiddleAligned"/>
			<params>
				<param name="name" value="personalAccountBtn"/>
			</params>
			<block>
				<style>
					<height value="44px"/>
					<width value="200px"/>
				</style>
				<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_PERSONAL_ACCOUNT_HINT'}], 
															_maxWidth: 250 }"/>
				<bind name="action" value="'click'; 'gotoUrlByIdent'; {ident: URL.PERSONAL_ACCOUNT}"/>
				<block className="button_infopanel_no_label" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block>
					<bind name="transition" value="rollOver; 0.1; {alpha: 0.85}; {alpha: 1}"/>
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$MiddleVAligned"/>
					<block type="text">
						<style>
							<hitTest value="false"/>
							<width value="100%"/>
							<textAlign value="center"/>
							<marginLeft value="6px"/>
							<marginRight value="6px"/>
							<leading value="-3"/>
						</style>
						<styleClass value="$TextDefaultBold"/>
						<bind name="text" value="'IDS_PERSONAL_ACCOUNT_BTN'"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<bind name="appear" value="'addedToStage'; 0.15; 0 + 3*0.075; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 1"/>
			<style>
				<width value="200px"/>
				<height value="51px"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<block className="button_special_no_label" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="soundSet" value="'hard_button'"/>
				<params>
					<param name="name" value="steamLoginRetryBtn"/>
				</params>
				<bind name="enabled" value="isLoginBtnEnabled"/>
				<bind name="action" value="'buttonClick'; 'reconnect'; { hostId: curHostIndex, user: login, password: password, savePassword: saveCredentials }"/>
				<block type="text">
					<style>
						<hitTest value="false"/>
						<width value="100%"/>
						<textAlign value="center"/>
						<multiline value="true"/>
						<marginLeft value="6px"/>
						<marginRight value="6px"/>
						<leading value="-4"/>
					</style>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$TextAccentBold"/>
					<bind name="class" value="isLoginBtnEnabled ? '$FontColorSpecialButton' : '$FontColorAlmostBlack'"/>
					<bind name="class" value="isLoginBtnEnabled ? '$FontDropShadowFilter1' : '$FontDropShadowWhite'"/>
					<bind name="text" value="toUpperCase(tr('IDS_LOGIN_BUTTON'))"/>
				</block>
			</block>
		</block>
	</block>
	<block className="WrongNickNameNotificationAndSuggestions">
		<bind name="firstEntityDH" value="'steamLoginEntity'; CC.steamLoginData"/>
		<bind name="watchDH" value="'isNicknameInUse'; ['steamLoginEntity.steamLoginData.evUpdate']; steamLoginEntity.steamLoginData.isNicknameInUse"/>
		<bind name="watchDH" value="'isNicknameInvalid'; ['steamLoginEntity.steamLoginData.evUpdate']; steamLoginEntity.steamLoginData.isNicknameInvalid"/>
		<bind name="watchDH" value="'nicknameSuggestions'; ['steamLoginEntity.steamLoginData.evUpdate']; steamLoginEntity.steamLoginData.nicknameSuggestions"/>
		<bind name="watchDH" value="'lastAttemptedNickname'; ['steamLoginEntity.steamLoginData.evUpdate']; steamLoginEntity.steamLoginData.lastAttemptedNickname"/>
		<bind name="watch" value="'notificationText';	_wrongSymbolInputed				? (tr('IDS_LOGIN_SCREEN_WRONG_SYMBOL_INPUT')) :
										isNicknameInvalid				? (tr('IDS_LOGIN_SCREEN_NAME_RESTRICTIONS')) :
										nicknameSuggestions.length &gt; 0	? (tr('IDS_CHOOSED_NAME_IS_TAKEN_IN_WOWS_SUGGESTIONS'))
																		: (tr('IDS_CHOOSED_NAME_IS_TAKEN_IN_WOWS'))}"/>
		<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 2"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginBottom value="-7px"/>
				<marginTop value="-8px"/>
			</style>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<marginTop value="1px"/>
					<marginBottom value="1px"/>
				</style>
				<block className="DeclareBlurLayer">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="transparentPixel" type="native">
						<bind name="blurLayer" value="0"/>
					</block>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block className="BlurMapCustom">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap3" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
			</block>
			<block className="notification_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<bind name="instance" value="'WarningMessage'; true	? { _delay: 0, _startTop: _startTop, _messageHiglight: _messageHiglight,
													_maxWidth: _maxWidth, _text: notificationText, _maxWidth: 350}
												: null"/>
		</block>
		<block>
			<style>
				<marginTop value="4px"/>
				<width value="100%"/>
				<flow value="htile"/>
				<align value="center"/>
			</style>
			<bind name="visible" value="(nicknameSuggestions.length &gt; 0 &amp;&amp; _wrongSymbolInputed == false)"/>
			<bind name="repeat" value="nicknameSuggestions; 'SteamNamesRenderer'; { _selectedNameIndex: selectedNameIndex }"/>
		</block>
		<block className="button_close" type="native">
			<style>
				<position value="absolute"/>
				<right value="12px"/>
				<top value="4px"/>
			</style>
			<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_CLOSE'}"/>
			<bind name="dispatch" value="'click'; 'hideWrongMessageEv'; {}"/>
		</block>
	</block>
	<block className="SteamHostRenderer">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
		<bind name="firstEntityDH" value="'steamLoginEntity'; CC.steamLoginData"/>
		<bind name="watchDH" value="'steamHostRealm'; ['steamLoginEntity.steamLoginData.evUpdate']; steamLoginEntity.steamLoginData.hostsDataProvider[$index].realm"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<style>
			<width value="100%"/>
			<height value="50px"/>
		</style>
		<bind name="watch" value="'isSelected'; _selectedSteamHostIndex == $index"/>
		<bind name="name" value="'steamRealm_' + ids"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="transition" value="rollOver || isSelected; 0.15; {alpha: 0}; {alpha: 1.0}"/>
			<block className="dock_submenu_item_bg" type="native">
				<styleClass value="$Fullsize"/>
				<bind name="transition" value="mouseDown; 0.03; {alpha: 1}; {alpha: 0.5}"/>
				<bind name="action" value="'click'; 'updateSteamSelectedHost'; { hostIndex: $index }"/>
				<bind name="dispatch" value="steamHostRealm == realmConstants.currentRealm ? 'click' : ''; 'changeLoginScreenState'; { loginScreenState: 7 }"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<hitTest value="false"/>
			</style>
			<styleClass value="$MiddleVAligned"/>
			<block type="text">
				<style>
					<width value="100%"/>
					<textAlign value="center"/>
				</style>
				<styleClass value="$TextHeader"/>
				<bind name="class" value="isSelected == true ? '$Bold' : '$None'"/>
				<bind name="text" value="ids"/>
			</block>
			<block type="text">
				<bind name="visible" value="isRecommended == true"/>
				<style>
					<width value="100%"/>
					<textAlign value="center"/>
					<marginTop value="-6px"/>
				</style>
				<styleClass value="$TextSecondary"/>
				<text value="IDS_RECOMMENDED"/>
			</block>
		</block>
	</block>
	<block className="SteamNamesRenderer">
		<bind name="name" value="'SteamNamesRenderer_' + $index"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="watch" value="'_active'; _selectedNameIndex == $index"/>
		<style>
			<height value="29px"/>
			<marginLeft value="2px"/>
			<marginRight value="2px"/>
		</style>
		<bind name="dispatch" value="'click'; 'steamSelectName'; { selectedNameIndex: $index }"/>
		<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 2"/>
		<block className="button_dock_bg" type="native">
			<style>
				<height value="100%"/>
			</style>
			<bind name="gotoAndStop!" value="'down'"/>
			<bind name="transition" value="rollOver || _active; 0.15; {alpha: _active ? 1 : 0}; {alpha: 1}"/>
			<block>
				<bind name="transition" value="rollOver; 0.15; {alpha: _active ? 1 : 0.85}; {alpha: 1.0}"/>
				<style>
					<height value="100%"/>
					<marginLeft value="8px"/>
					<marginRight value="8px"/>
					<marginTop value="8px"/>
				</style>
				<block type="text">
					<style>
						<hitTest value="false"/>
					</style>
					<styleClass value="$TextDefault17NM"/>
					<bind name="text" value="$value"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ServerMessage">
		<bind name="appear" value="'addedToStage'; 0.15; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; 2"/>
		<bind name="action" value="'click'; 'showErrorMessage'; {header: '', message: ''}"/>
		<bind name="var" value="{errorStringsToIgnoreSupportLinkFor: [
		'IDS_ACCOUNT_ACTIVATION_ERROR_ALL_INCORRECT_CONFIRMATION_CODE',
		'IDS_ACCOUNT_ACTIVATION_ERROR_CODE_MIN_LENGTH',
		'IDS_ACCOUNT_ACTIVATION_ERROR_CODE_MAX_LENGTH',
		'IDS_ACCOUNT_ACTIVATION_ERROR_ALL_INCORRECT_CONFIRMATION_CODE_REQUEST_DEACTIVATED'
	]}"/>
		<style>
			<marginRight value="-1px"/>
			<marginLeft value="-1px"/>
		</style>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginTop value="1px"/>
			</style>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap3" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
		</block>
		<block className="notification_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<styleClass value="$MiddleAligned"/>
				<bind name="class" value="_messageHighlight ? '$FontColorCompareNegative' :'$FontColorUnready'"/>
				<bind name="name" value="'messageLoggerHeader'"/>
				<bind name="text" value="_headerText"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<style>
					<minWidth value="280"/>
					<maxWidth value="600"/>
					<textAlign value="center"/>
				</style>
				<bind name="class" value="_messageHighlight ? '$FontColorCompareNegative' :'$FontColorUnready'"/>
				<bind name="name" value="'messageLogger'"/>
				<bind name="text" value="_messageText"/>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<marginTop value="6px"/>
				</style>
				<bind name="instance" value="'LinkText'; errorStringsToIgnoreSupportLinkFor.indexOf(_messageText) &gt; -1 ? null : {_label: 'IDS_LINK_SUPPORT', _urlIdent: URL.SUPPORT, _tooltipText: 'IDS_LINK_SUPPORT_HINT', _name: 'ButtonSupport'}"/>
			</block>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="!(_messageHighlight)"/>
			<block className="notification_frame_orange" type="native">
				<styleClass value="$PxIndent"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="_messageHighlight"/>
			<block className="notification_frame" type="native">
				<styleClass value="$PxIndent"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block className="button_close" type="native">
			<style>
				<position value="absolute"/>
				<right value="8px"/>
				<top value="8px"/>
			</style>
			<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_CLOSE'}"/>
		</block>
	</block>
	<block className="LinkText">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: _tooltipText}"/>
		<bind name="action" value="'click'; 'gotoUrlByIdent'; {ident: _urlIdent}"/>
		<bind name="name" value="_name"/>
		<block type="text">
			<bind name="class" value="_large ? '$TextHeader' : '$TextDefault'"/>
			<bind name="class" value="(rollOver &amp;&amp; !mouseDown) ? '$FontColorWhite' : '$FontColorDefault'"/>
			<bind name="text" value="_label"/>
		</block>
		<block className="Underline">
			<bind name="style" value="'backgroundColor'; (rollOver &amp;&amp; !mouseDown) ? '0xFFFFFFFF' : '0x00856933'"/>
			<bind name="transition" value="(rollOver &amp;&amp; !mouseDown) == true; 0.3; {scaleX : 0, alpha : 0}; {scaleX : 1, alpha :1}"/>
			<style>
				<backgroundColor value="0xFFFFFFFF"/>
				<position value="absolute"/>
				<height value="1px"/>
				<width value="100%"/>
				<bottom value="0px"/>
				<marginLeft value="2px"/>
				<marginRight value="2px"/>
			</style>
		</block>
	</block>
	<block className="LicenseeLogos">
		<bind name="name" value="'LicenseeLogo_' + $value"/>
		<style>
			<width value="130px"/>
			<height value="70px"/>
		</style>
		<bind name="style" value="'backgroundImage'; 'url:' + Path.LOGOS + $value"/>
	</block>
	<block className="DevTraces"/>
	<block className="QuestWindow">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'challenges'; 'isActive'; true; 'challengesCollection'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'tasks'; 'isActive'; true; 'tasksCollection'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'events'; 'eventsCollection'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'privateTasksAndChallenges'; 'isActive'; true; 'personalTasksCollection'"/>
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerQuests"/>
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="watch" value="'challengesLayoutType';	(userPrefs.sseChallengesLayout == null)	? 0 : userPrefs.sseChallengesLayout"/>
		<bind name="watch" value="'battleTasksLayoutType';	(userPrefs.sseBattleTasksLayout == null) ? 0 : userPrefs.sseBattleTasksLayout"/>
		<bind name="watch" value="'battlePersonalTasksLayoutType';	(userPrefs.ssePrivateTasksAndChallengesLayout == null) ? 0 : userPrefs.ssePrivateTasksAndChallengesLayout"/>
		<bind name="catch" value="'challengesLayoutChangedEvent'; { challengesLayoutType: (challengesLayoutType == 0 ? 1 : 0)}"/>
		<bind name="catch" value="'battleTaskLayoutChangedEvent'; { battleTasksLayoutType: (battleTasksLayoutType == 0 ? 1 : 0)}"/>
		<bind name="catch" value="'PersonalTaskLayoutChangedEvent'; { battlePersonalTasksLayoutType: (battlePersonalTasksLayoutType == 0 ? 1 : 0)}"/>
		<bind name="changeDispatch" value="challengesLayoutType;		'changeChallengesLayoutTypeInPrefs'; null; true"/>
		<bind name="changeDispatch" value="battleTasksLayoutType;	'changeBattleTasksLayoutTypeInPrefs'; null; true"/>
		<bind name="changeDispatch" value="battlePersonalTasksLayoutType;	'changePersonaleTasksLayoutTypeInPrefs'; null; true"/>
		<bind name="action" value="'changeChallengesLayoutTypeInPrefs';	'setUserPref' ; {value : challengesLayoutType,	name : 'sseChallengesLayout'}"/>
		<bind name="action" value="'changeBattleTasksLayoutTypeInPrefs'; 'setUserPref' ; {value : battleTasksLayoutType, name : 'sseBattleTasksLayout'}"/>
		<bind name="action" value="'changePersonaleTasksLayoutTypeInPrefs'; 'setUserPref' ; {value : battlePersonalTasksLayoutType, name : 'ssePrivateTasksAndChallengesLayout'}"/>
		<styleClass value="$Fullsize"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMapCustom">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
			</style>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap5" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<block>
			<bind name="appear" value="'startShow'; 0.3; 0.15; {alpha: 0}; {alpha: 1}"/>
			<bind name="appear" value="'startHide'; 0.15; 0.15; {alpha: 1}; {alpha: 0}"/>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
			<block className="modal_panel" type="native">
				<style>
					<alpha value="0.8"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="var" value="{ insetsList: [SSETypes.EVENT, SSETypes.CHALLENGE, SSETypes.TASK, 'privateTasksAndChallenges'] }"/>
		<bind name="var" value="{inset: insetsList.indexOf($root.inset)}"/>
		<bind name="indexOf" value="personalTasksCollection; ptIndex; {'sseId': $root.sseId}"/>
		<bind name="catch" value="'changeQuestInset'"/>
		<bind name="watch" value=" 'header'; (	inset == 0	?	tr('IDS_EVENTS') + ' (' + eventsCollection.length + ')' :
								inset == 1	?	tr('IDS_CHALLENGES') + ' (' + challengesCollection.length + ')' :
								inset == 2	?	tr('IDS_TASKS') + ' (' + tasksCollection.length + ')'
											:	tr('IDS_PERSONAL_TASKS') + ' (' + personalTasksCollection.length + ')'
							)"/>
		<block>
			<styleClass value="$Fullsize"/>
			<block>
				<bind name="appear" value="'startShow'; 0.15; 0.22; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
				<bind name="appear" value="'startHide'; 0.15; 0.22; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
				<style>
					<marginTop value="220px"/>
				</style>
				<block className="NavigationBar">
					<block className="button_navigation_small" type="native">
						<params>
							<param name="toggle" value="false"/>
						</params>
						<bind name="name" value="'NavigationItem_' + 0"/>
						<style>
							<width value="204"/>
							<marginBottom value="1px"/>
						</style>
						<bind name="selected" value="inset == 0"/>
						<bind name="dispatch" value="'buttonClick'; 'changeQuestInset'; { inset: 0}"/>
						<bind name="label" value="toUpperCase(tr('IDS_EVENTS'))"/>
					</block>
				</block>
				<block className="NavigationBar">
					<block className="button_navigation_small" type="native">
						<params>
							<param name="toggle" value="false"/>
						</params>
						<bind name="name" value="'NavigationItem_' + 1"/>
						<style>
							<width value="204"/>
							<marginBottom value="1px"/>
						</style>
						<bind name="selected" value="inset == 1"/>
						<bind name="dispatch" value="'buttonClick'; 'changeQuestInset'; { inset: 1}"/>
						<bind name="label" value="toUpperCase(tr('IDS_CHALLENGES'))"/>
					</block>
				</block>
				<block className="NavigationBar">
					<block className="button_navigation_small" type="native">
						<params>
							<param name="toggle" value="false"/>
						</params>
						<bind name="name" value="'NavigationItem_' + 2"/>
						<style>
							<width value="204"/>
							<marginBottom value="1px"/>
						</style>
						<bind name="selected" value="inset == 2"/>
						<bind name="dispatch" value="'buttonClick'; 'changeQuestInset'; { inset: 2}"/>
						<bind name="label" value="toUpperCase(tr('IDS_TASKS'))"/>
					</block>
				</block>
				<block>
					<bind name="visible" value="personalTasksCollection.length &gt; 0"/>
					<block className="NavigationBar">
						<block className="button_navigation_small" type="native">
							<params>
								<param name="toggle" value="false"/>
							</params>
							<bind name="name" value="'NavigationItem_' + 3"/>
							<style>
								<width value="204"/>
								<marginBottom value="1px"/>
							</style>
							<bind name="selected" value="inset == 3"/>
							<bind name="dispatch" value="'buttonClick'; 'changeQuestInset'; { inset: 3}"/>
							<bind name="label" value="toUpperCase(tr('IDS_PERSONAL_TASKS'))"/>
						</block>
					</block>
				</block>
				<block>
					<style>
						<marginTop value="15px"/>
						<marginLeft value="8px"/>
					</style>
					<block className="BannerProjectR">
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
						<bind name="serverTime" value="'serverTime'"/>
						<bind name="watch" value="'projectRTimeTillEnd'; (1495112400 - serverTime)"/>
						<bind name="watch" value="'projectRTimeTillStart'; (1492088400 - serverTime)"/>
						<bind name="visible" value="(realmConstants.currentRealm == 'NA' || realmConstants.currentRealm == 'RU' ||
					realmConstants.currentRealm == 'EU' || realmConstants.currentRealm == 'ASIA')	&amp;&amp; (projectRTimeTillEnd &gt; 0)
																									&amp;&amp; (projectRTimeTillStart &lt; 0)"/>
						<bind name="appear" value="'startShow'; 0.15; 0.27; {alpha: 0, top: 0}; {alpha: 0.8, top: 0}"/>
						<bind name="appear" value="'startHide'; 0.15; 0.27; {alpha: 0.8, top: 0}; {alpha: 0, top: 0}"/>
						<bind name="tooltip" value="'SimpleTooltip';{tooltipText: 'IDS_FORWARD_TO_WOWS_WEBSITE'}"/>
						<block className="button_infopanel" type="native">
							<style>
								<width value="190px"/>
							</style>
							<bind name="request" value="'click'; 'webBrowser'; {url: URL.PROJECT_R}"/>
							<params>
								<param name="label" value=""/>
							</params>
						</block>
						<block type="text">
							<styleClass value="$MiddleVAligned"/>
							<styleClass value="$MiddleAligned"/>
							<styleClass value="$TextDefaultBold"/>
							<style>
								<position value="absolute"/>
								<hitTest value="false"/>
								<maxWidth value="180"/>
								<textAlign value="center"/>
							</style>
							<bind name="text" value="toUpperCase(tr('IDS_GRAND_NAVAL_BATTLES'))"/>
						</block>
						<block className="icon_out_grey" type="native">
							<style>
								<position value="absolute"/>
								<top value="4px"/>
								<right value="4px"/>
							</style>
						</block>
					</block>
				</block>
			</block>
			<block>
				<styleClass value="$Fullsize"/>
				<block>
					<styleClass value="$MiddleAligned"/>
					<style>
						<height value="100%"/>
						<width value="76sw"/>
						<marginLeft value="-50%"/>
						<left value="47%"/>
					</style>
					<block>
						<bind name="appear" value="'startShow'; 0.15; 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
						<bind name="stageSize"/>
						<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
						<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
						<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
						<bind name="watch" value="'headerHeight'; (48+(stageHeight - 720)/3) + (userPrefs.curRowCountIndex == 2 ? -46 : 0)"/>
						<bind name="style" value="'height'; headerHeight + 'px'"/>
						<style>
							<width value="100%"/>
						</style>
						<block>
							<style>
								<bottom value="-2"/>
								<width value="100%"/>
							</style>
							<bind name="instance" value="'ModalWindowHeader'; {_header: header, _headerWidth: '100%', _showInnerCloseButton:true}"/>
						</block>
					</block>
					<block>
						<bind name="appear" value="'startShow'; 0.15; 0.07; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
						<bind name="appear" value="'startHide'; 0.15; 0.07; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
						<styleClass value="$Fullsize"/>
						<block>
							<bind name="appear" value="'addedToStage'; 0.15; 0.12; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
							<bind name="appear" value="'startHide'; 0.15; 0.12; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
							<bind name="watch" value="'windowInstructionText'; 	inset == 0	? 	'IDS_EVENTS_WINDOW_INSTRUCTION' :
																inset == 1	? 	'IDS_CHALLENGES_WINDOW_INSTRUCTION' :
																inset == 2	? 	'IDS_TASKS_WINDOW_INSTRUCTION' :
																				'IDS_PERSONAL_TASKS_WINDOW_INSTRUCTION' "/>
							<style>
								<width value="100%"/>
							</style>
							<block>
								<styleClass value="$MiddleAligned"/>
								<style>
									<marginBottom value="5px"/>
									<marginTop value="3px"/>
								</style>
								<bind name="instance" value="'InstructionBigTech'; { _instructionText: windowInstructionText, _type: 'info', _maxWidth: '1000' }"/>
							</block>
							<block className="HorizontalDivider">
								<styleClass value="$PxHorizontalCorrection"/>
								<style>
									<width value="100%"/>
									<height value="3px"/>
								</style>
								<block className="divider_h" type="native">
									<styleClass value="$Fullsize"/>
								</block>
							</block>
						</block>
						<block>
							<styleClass value="$Fullsize"/>
							<bind name="changeDispatch" value="personalTasksCollection; (personalTasksCollection.length &gt; 0) || (inset != 3) ? null : 'personalTasksCollectionChanged'"/>
							<bind name="catch" value="'personalTasksCollectionChanged'; {inset: 0}"/>
							<bind name="changeDispatch" value="inset; 'insetChangedEvent'"/>
							<bind name="dispatch" value="'insetChangedEvent'; (	(inset == 1)	? 'questsInsetChangedToChallenges' :
																(inset == 2)	? 'questsInsetChangedToTasks' :
																(inset == 3)	? 'questsInsetChangedToPersonalTasks'
																				: ''); null; true"/>
							<bind name="child" value="inset; { 	layoutType: (	(inset == 1)	? challengesLayoutType :
																(inset == 2)	? battleTasksLayoutType :
																(inset == 3)	? battlePersonalTasksLayoutType 
																				: null),
												currentSelectedIndex: $root.sseId ? ptIndex : 0
											}; 'Events'; 'Challenges'; 'BattleQuests'; 'PersonalQuests'"/>
						</block>
					</block>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="appear" value="'startShow'; 0.15; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<bind name="appear" value="'startHide'; 0.15; 0.15; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
			<bind name="visible" value="	(inset == 1 &amp;&amp; challengesCollection.length &gt; 0) ||
						(inset == 2 &amp;&amp; tasksCollection.length &gt; 0) ||
						(inset == 3 &amp;&amp; personalTasksCollection.length &gt; 0) "/>
			<style>
				<width value="100%"/>
				<marginBottom value="16px"/>
			</style>
			<bind name="instance" value="'ShipCarouselContainerQuests'; {}"/>
		</block>
	</block>
	<block className="BannerProjectR">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
		<bind name="serverTime" value="'serverTime'"/>
		<bind name="watch" value="'projectRTimeTillEnd'; (1495112400 - serverTime)"/>
		<bind name="watch" value="'projectRTimeTillStart'; (1492088400 - serverTime)"/>
		<bind name="visible" value="(realmConstants.currentRealm == 'NA' || realmConstants.currentRealm == 'RU' ||
					realmConstants.currentRealm == 'EU' || realmConstants.currentRealm == 'ASIA')	&amp;&amp; (projectRTimeTillEnd &gt; 0)
																									&amp;&amp; (projectRTimeTillStart &lt; 0)"/>
		<bind name="appear" value="'startShow'; 0.15; 0.27; {alpha: 0, top: 0}; {alpha: 0.8, top: 0}"/>
		<bind name="appear" value="'startHide'; 0.15; 0.27; {alpha: 0.8, top: 0}; {alpha: 0, top: 0}"/>
		<bind name="tooltip" value="'SimpleTooltip';{tooltipText: 'IDS_FORWARD_TO_WOWS_WEBSITE'}"/>
		<block className="button_infopanel" type="native">
			<style>
				<width value="190px"/>
			</style>
			<bind name="request" value="'click'; 'webBrowser'; {url: URL.PROJECT_R}"/>
			<params>
				<param name="label" value=""/>
			</params>
		</block>
		<block type="text">
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$TextDefaultBold"/>
			<style>
				<position value="absolute"/>
				<hitTest value="false"/>
				<maxWidth value="180"/>
				<textAlign value="center"/>
			</style>
			<bind name="text" value="toUpperCase(tr('IDS_GRAND_NAVAL_BATTLES'))"/>
		</block>
		<block className="icon_out_grey" type="native">
			<style>
				<position value="absolute"/>
				<top value="4px"/>
				<right value="4px"/>
			</style>
		</block>
	</block>
	<block className="Challenges">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'challenges'; 'isActive'; true; 'challengesCollection'"/>
		<bind name="catch" value="'changeSelectedIndex'"/>
		<bind name="changeDispatch" value="currentSelectedIndex; 'selectedChallengeIndexChangedEvent'"/>
		<bind name="request" value="'selectedChallengeIndexChangedEvent'; 'selectedTaskChanged'; {sseId : challengesCollection[currentSelectedIndex].sseId, collectionName: challengesCollection[currentSelectedIndex].type}"/>
		<bind name="request" value="'questsInsetChangedToChallenges'; 'selectedTaskChanged'; {sseId : challengesCollection[currentSelectedIndex].sseId, collectionName: challengesCollection[currentSelectedIndex].type}"/>
		<bind name="request" value="'changeChallengesLayoutTypeInPrefs'; 'selectedTaskChanged'; {sseId : challengesCollection[currentSelectedIndex].sseId, collectionName: challengesCollection[currentSelectedIndex].type}"/>
		<styleClass value="$Fullsize"/>
		<bind name="instance" value="'NoItemsComeBackLater'; challengesCollection.length == 0 ? {_type: 'CHALLENGES'} : null"/>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="visible" value="challengesCollection.length &gt; 0"/>
			<bind name="child" value="0; {challengesCollection: challengesCollection, currentSelectedIndex: currentSelectedIndex}; 'ChallengesLargeTileLayout'; 'ChallengesSmallTileLayout'"/>
		</block>
	</block>
	<block className="ChallengesSmallTileLayout">
		<bind name="appear" value="'addedToStage'; 0.15; 0.12; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
		<bind name="appear" value="'startHide'; 0.15; 0.12; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
		<styleClass value="$Fullsize"/>
		<block>
			<styleClass value="$DefaultScrollBar"/>
			<style>
				<height value="100%f"/>
				<width value="100%"/>
				<overflow value="scroll"/>
			</style>
			<block>
				<style>
					<flow value="htile"/>
					<align value="center"/>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="stageSize"/>
					<bind name="style" value="'height'; (4+(stageHeight-720)/8)+'px'"/>
				</block>
				<bind name="repeat" value="challengesCollection; 'QuestsSmallItem'"/>
			</block>
		</block>
	</block>
	<block className="ChallengesLargeTileLayout">
		<bind name="appear" value="'addedToStage'; 0.15; 0.12; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
		<bind name="appear" value="'startHide'; 0.15; 0.12; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
		<style>
			<width value="100%"/>
		</style>
		<bind name="stageSize"/>
		<bind name="style" value="'top'; (4+(stageHeight-720)/8)+'px'"/>
		<bind name="instance" value="'SSECarousel'; {_wheelScrollSpeed: 419, _height: '480px', _repeatCollection: challengesCollection,
									_repeatElement: 'QuestsLargeItem', currentSelectedIndex: currentSelectedIndex, _type: SSETypes.CHALLENGE}"/>
	</block>
	<block className="BattleQuests">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'tasks'; 'isActive'; true; 'tasksCollection'"/>
		<bind name="catch" value="'changeSelectedIndex'"/>
		<bind name="changeDispatch" value="currentSelectedIndex; 'selectedTaskIndexChangedEvent'"/>
		<bind name="request" value="'selectedTaskIndexChangedEvent'; 'selectedTaskChanged';	 	{sseId : tasksCollection[currentSelectedIndex].sseId, collectionName: tasksCollection[currentSelectedIndex].type}"/>
		<bind name="request" value="'questsInsetChangedToTasks'; 'selectedTaskChanged'; 			{sseId : tasksCollection[currentSelectedIndex].sseId, collectionName: tasksCollection[currentSelectedIndex].type}"/>
		<bind name="request" value="'changeBattleTasksLayoutTypeInPrefs'; 'selectedTaskChanged'; {sseId : tasksCollection[currentSelectedIndex].sseId, collectionName: tasksCollection[currentSelectedIndex].type}"/>
		<styleClass value="$Fullsize"/>
		<bind name="instance" value="'NoItemsComeBackLater'; tasksCollection.length == 0 ? {_type: 'TASKS'} : null"/>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="visible" value="tasksCollection.length &gt; 0"/>
			<bind name="child" value="0; {tasksCollection: tasksCollection, currentSelectedIndex: currentSelectedIndex }; 'BattleQuestsLargeTileLayout'; 'BattleQuestsSmallTileLayout'"/>
		</block>
	</block>
	<block className="PersonalQuests">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'privateTasksAndChallenges'; 'isActive'; true; 'personalTasksCollection'"/>
		<bind name="catch" value="'changeSelectedIndex'"/>
		<bind name="changeDispatch" value="currentSelectedIndex; 'selectedPersonalTaskIndexChangedEvent'"/>
		<bind name="request" value="'selectedPersonalTaskIndexChangedEvent'; 'selectedTaskChanged';	 	{sseId : personalTasksCollection[currentSelectedIndex].sseId, collectionName: personalTasksCollection[currentSelectedIndex].type}"/>
		<bind name="request" value="'questsInsetChangedToPersonalTasks'; 'selectedTaskChanged'; 			{sseId : personalTasksCollection[currentSelectedIndex].sseId, collectionName: personalTasksCollection[currentSelectedIndex].type}"/>
		<bind name="request" value="'changePersonaleTasksLayoutTypeInPrefs'; 'selectedTaskChanged'; {sseId : personalTasksCollection[currentSelectedIndex].sseId, collectionName: personalTasksCollection[currentSelectedIndex].type}"/>
		<styleClass value="$Fullsize"/>
		<bind name="instance" value="'NoItemsComeBackLater'; personalTasksCollection.length == 0 ? {_type: 'privateTasksAndChallenges'} : null"/>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="visible" value="personalTasksCollection.length &gt; 0"/>
			<bind name="child" value="0; {personalTasksCollection: personalTasksCollection, currentSelectedIndex: currentSelectedIndex }; 'PersonalQuestsLargeTileLayout'; 'PersonalQuestsSmallTileLayout'"/>
		</block>
	</block>
	<block className="PersonalQuestsSmallTileLayout">
		<bind name="appear" value="'addedToStage'; 0.15; 0.12; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
		<bind name="appear" value="'startHide'; 0.15; 0.12; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
		<styleClass value="$Fullsize"/>
		<block>
			<styleClass value="$DefaultScrollBar"/>
			<style>
				<height value="100%f"/>
				<width value="100%"/>
				<overflow value="scroll"/>
			</style>
			<block>
				<style>
					<flow value="htile"/>
					<align value="center"/>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="stageSize"/>
					<bind name="style" value="'height'; (4+(stageHeight-720)/8)+'px'"/>
				</block>
				<bind name="repeat" value="personalTasksCollection; 'QuestsSmallItem'"/>
			</block>
		</block>
	</block>
	<block className="PersonalQuestsLargeTileLayout">
		<bind name="appear" value="'addedToStage'; 0.15; 0.12; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
		<bind name="appear" value="'startHide'; 0.15; 0.12; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
		<style>
			<width value="100%"/>
		</style>
		<bind name="stageSize"/>
		<bind name="style" value="'top'; (4+(stageHeight-720)/8)+'px'"/>
		<bind name="instance" value="'SSECarousel'; {_wheelScrollSpeed: 347, _repeatCollection: personalTasksCollection, _repeatElement: 'QuestsLargeItem', currentSelectedIndex: currentSelectedIndex, _height: '480px', _type: SSETypes.privateTasksAndChallenges}"/>
	</block>
	<block className="BattleQuestsSmallTileLayout">
		<bind name="appear" value="'addedToStage'; 0.15; 0.12; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
		<bind name="appear" value="'startHide'; 0.15; 0.12; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
		<styleClass value="$Fullsize"/>
		<block>
			<styleClass value="$DefaultScrollBar"/>
			<style>
				<height value="100%f"/>
				<width value="100%"/>
				<overflow value="scroll"/>
			</style>
			<block>
				<style>
					<flow value="htile"/>
					<align value="center"/>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="stageSize"/>
					<bind name="style" value="'height'; (4+(stageHeight-720)/8)+'px'"/>
				</block>
				<bind name="repeat" value="tasksCollection; 'QuestsSmallItem'"/>
			</block>
		</block>
	</block>
	<block className="BattleQuestsLargeTileLayout">
		<bind name="appear" value="'addedToStage'; 0.15; 0.12; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
		<bind name="appear" value="'startHide'; 0.15; 0.12; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
		<style>
			<width value="100%"/>
		</style>
		<bind name="stageSize"/>
		<bind name="style" value="'top'; (4+(stageHeight-720)/8)+'px'"/>
		<bind name="instance" value="'SSECarousel'; {_wheelScrollSpeed: 347, _height: '480px', _repeatCollection: tasksCollection, _repeatElement: 'QuestsLargeItem', currentSelectedIndex: currentSelectedIndex, _type: SSETypes.TASK}"/>
	</block>
	<block className="Events">
		<styleClass value="$Fullsize"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'events'; 'eventsCollection'"/>
		<bind name="instance" value="'NoItemsComeBackLater'; eventsCollection.length == 0 ? {_type: 'EVENTS'} : null"/>
		<block>
			<bind name="visible" value="eventsCollection.length &gt; 0"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="stageSize"/>
			<bind name="style" value="'top'; (4+(stageHeight-720)/8)+'px'"/>
			<bind name="instance" value="'SSECarousel'; {_repeatCollection: eventsCollection, _repeatElement: 'EventItem', _height: '630px', _wheelScrollSpeed: 917, _type: SSETypes.EVENT}"/>
		</block>
	</block>
	<block className="EventItem">
		<bind name="appear" value="'addedToStage'; 0.15; 0.12; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
		<bind name="appear" value="'startHide'; 0.15; 0.12; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
		<bind name="name" value="'EventItem_' + sseId"/>
		<style>
			<width value="916px"/>
			<height value="618px"/>
		</style>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<width value="900px"/>
				<height value="100%"/>
			</style>
			<block className="DropShadow">
				<styleClass value="$FullsizeAbsolute"/>
				<styleClass value="$MouseDisable"/>
				<block className="drop_shadow" type="native">
					<styleClass value="$Fullsize"/>
					<style>
						<position value="absolute"/>
						<marginTop value="-2px"/>
						<marginRight value="-6px"/>
						<marginBottom value="-10px"/>
						<marginLeft value="-6px"/>
					</style>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<backgroundSize value="cover"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:' + backgroundURL"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="29px"/>
					<marginRight value="27px"/>
					<marginTop value="21px"/>
					<marginBottom value="18px"/>
				</style>
				<block type="text">
					<style>
						<maxWidth value="680"/>
						<marginRight value="12px"/>
					</style>
					<styleClass value="$TextAccentBoldAccountLevel2"/>
					<bind name="text" value="toUpperCase(tr(titleText))"/>
				</block>
				<block type="text">
					<style>
						<right value="0"/>
						<position value="absolute"/>
					</style>
					<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_HINT_EVENT_LIFETIME'}"/>
					<styleClass value="$TextAccentBoldAccountLevel2"/>
					<bind name="text" value="startDate + '—' + stopDate"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="42px"/>
					<marginRight value="18px"/>
				</style>
				<bind name="repeat" value="actions; 'EventListItem'; { eventStartDate: startDate, eventStopDate: stopDate}"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<bottom value="0px"/>
					<position value="absolute"/>
				</style>
				<block className="quest_thumb_title" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<style>
						<width value="100%"/>
						<marginLeft value="28px"/>
						<marginRight value="26px"/>
						<marginTop value="14px"/>
						<marginBottom value="14px"/>
						<leading value="2"/>
					</style>
					<styleClass value="$TextHeader"/>
					<bind name="text" value="descriptionText"/>
				</block>
			</block>
		</block>
	</block>
	<block className="EventListItem">
		<style>
			<flow value="horizontal"/>
			<width value="100%"/>
			<height value="80px"/>
			<marginBottom value="1px"/>
		</style>
		<block>
			<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: descriptionText}"/>
			<style>
				<height value="80px"/>
				<width value="110px"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:' + iconURL"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: descriptionText}"/>
				<block type="text">
					<style>
						<maxWidth value="715"/>
						<marginTop value="9px"/>
						<marginLeft value="8px"/>
						<marginRight value="9px"/>
					</style>
					<styleClass value="$TextHeaderWhiteBold"/>
					<bind name="class" value="'$Bold'"/>
					<bind name="text" value="titleText"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="startDate != eventStartDate || stopDate != eventStopDate"/>
				<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_HINT_ACTION_LIFETIME'}"/>
				<block type="text">
					<style>
						<marginLeft value="8px"/>
						<marginTop value="-2px"/>
						<alpha value="0.75"/>
					</style>
					<styleClass value="$TextHeaderBold"/>
					<bind name="class" value="'$Bold'"/>
					<bind name="text" value="startDate + '—' + stopDate"/>
				</block>
			</block>
		</block>
	</block>
	<block className="SSECarousel">
		<style>
			<width value="100%"/>
			<flow value="horizontal"/>
		</style>
		<bind name="stageSize"/>
		<bind name="watch" value="'isScrollNeeded'; ((stageWidth*0.752) &lt; (_repeatCollection.length*_wheelScrollSpeed))"/>
		<bind name="watch" value="'itemWidth'; _type == SSETypes.CHALLENGE ? 416 : _type == SSETypes.TASK || _type == SSETypes.privateTasksAndChallenges ? 347 : 916"/>
		<bind name="style" value="'height'; _height"/>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="instance" value="'CarouselBlockWithScroll'; {	inQuestWindow: true, currentSelectedIndex: currentSelectedIndex,
                                                        _repeatElement: _repeatElement, _repeatCollection: _repeatCollection,
                                                        _wheelScrollSpeed: _wheelScrollSpeed,
                                                        _isScrollNeeded: isScrollNeeded,
                                                        _itemWidth: itemWidth,
                                                        _height: _height }"/>
		</block>
	</block>
	<block className="LayoutSwitcher">
		<style>
			<flow value="horizontal"/>
			<height value="28px"/>
		</style>
		<block>
			<style>
				<width value="34px"/>
				<height value="100%"/>
			</style>
			<block className="button_layout_horizontal" type="native">
				<bind name="name" value="'TileListHorizontal_0'"/>
				<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_SWITCH_TO_DETAIL_VIEW'}"/>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$MiddleVAligned"/>
				<bind name="selected" value="_layout == 0"/>
				<bind name="dispatch" value="'buttonClick'; (_layout == 0 ? '' : _changeEvent)"/>
			</block>
		</block>
		<block>
			<block className="divider_v" type="native">
				<style>
					<height value="20px"/>
					<marginTop value="3px"/>
				</style>
			</block>
		</block>
		<block>
			<style>
				<width value="34px"/>
				<height value="100%"/>
			</style>
			<block className="button_layout_tilelist" type="native">
				<bind name="name" value="'TileListHorizontal_1'"/>
				<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_SWITCH_TO_SHORT_VIEW'}"/>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$MiddleVAligned"/>
				<bind name="selected" value="_layout == 1"/>
				<bind name="dispatch" value="'buttonClick'; (_layout == 1 ? '' : _changeEvent)"/>
			</block>
		</block>
	</block>
	<block className="ShipCarouselContainerQuests">
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<style>
			<width value="100%"/>
		</style>
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="watch" value="'isSmallCarouselView'; (userPrefs.isSmallCarouselView == null) ? false : userPrefs.isSmallCarouselView"/>
		<bind name="watch" value="'isFilteredShipsHided'; (userPrefs.isFilteredShipsHided == null) ? false : userPrefs.isFilteredShipsHided"/>
		<bind name="action" value="'click'; 'log'; {event: 'other:sse.carouselClick'} "/>
		<bind name="instance" value="'ShipCarousel'; {	_fixedCarouselRows: _fixedCarouselRows,
										_addShipSlotsBuyBlocks: false,
										_shipFilterId: CC.mainShipFilter,
										_scrollToStart: false,
										isSmallCarouselView: isSmallCarouselView,
										_isFilteredShipsHided: isFilteredShipsHided}"/>
	</block>
	<block className="BlackDivider1">
		<bind name="class" value="'$ArcEventBackgroundColorDark'"/>
		<bind name="style" value="'width'; 	_vertical ? '1px' : '100%'"/>
		<bind name="style" value="'height'; 	_vertical ? '100%' : '1px'"/>
	</block>
	<block className="BlackDivider2">
		<bind name="class" value="'$ArcEventBackgroundColorDark'"/>
		<bind name="style" value="'width'; 	_vertical ? '2px' : '100%'"/>
		<bind name="style" value="'height'; 	_vertical ? '100%' : '2px'"/>
	</block>
	<block className="BlackDivider4">
		<bind name="class" value="'$ArcEventBackgroundColorDark'"/>
		<bind name="style" value="'width'; 	_vertical ? '4px' : '100%'"/>
		<bind name="style" value="'height'; 	_vertical ? '100%' : '4px'"/>
	</block>
	<css name="$ArcEventTooltipMargins">
		<margin value="16px|12px"/>
	</css>
	<css name="$ArcEventBackgroundColorLight">
		<backgroundColor value="0xffb5a98f"/>
	</css>
	<css name="$ArcEventTextColorLight">
		<textColor value="0xffe8d8b9"/>
	</css>
	<css name="$ArcEventBackgroundColorDark">
		<backgroundColor value="0xff2f3034"/>
	</css>
	<css name="$ArcEventTextColorDark">
		<textColor value="0xff2f3034"/>
	</css>
	<css name="$ArcEventTextStyle">
		<dropShadowFilter value="0 0 0x000000 0 0 0 0 0"/>
		<textColor value="0xff2f3034"/>
	</css>
	<block className="BattleGalleryItem">
		<style>
			<width value="900px"/>
			<height value="382px"/>
		</style>
		<block>
			<bind name="child" value="_galleryItemRendererParams[_index].image.type; { 	_galleryItemRendererParams: _galleryItemRendererParams,
																		_galleryImageWidth: 		900, 
																		_galleryImageHeight: 		382, 
																		_index: 					_index
																	}; 
																	{ 	Default: 	'DefaultPngViewer',
																		Hotkey: 	'HotkeyViewer',
																		Indicator: 	'IndicatorViewer'
																	}"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<right value="0px"/>
			</style>
			<bind name="instance" value="'TextRenderer'; { _galleryItemRendererParams: _galleryItemRendererParams, _index: _index}"/>
		</block>
	</block>
	<block className="DefaultPngViewer">
		<bind name="style" value="'width'; _galleryImageWidth + 'px'"/>
		<bind name="style" value="'height'; _galleryImageHeight + 'px'"/>
		<bind name="style" value="'backgroundImage'; _galleryItemRendererParams[_index].image.imagePath"/>
	</block>
	<block className="HotkeyViewer">
		<block>
			<bind name="instance" value="'DefaultPngViewer'; { _galleryImageWidth: _galleryImageWidth, _galleryImageHeight: _galleryImageHeight, _galleryItemRendererParams: _galleryItemRendererParams, _index: _index }"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<left value="108px"/>
				<bottom value="42px"/>
			</style>
			<block type="text">
				<style>
					<marginLeft value="-50%"/>
				</style>
				<bind name="substitute" value="5; null; tr(_galleryItemRendererParams[_index].image.hotkey); '_bg'"/>
			</block>
		</block>
	</block>
	<block className="IndicatorViewer">
		<block>
			<bind name="instance" value="'DefaultPngViewer'; { _galleryImageWidth: _galleryImageWidth, _galleryImageHeight: _galleryImageHeight, _galleryItemRendererParams: _galleryItemRendererParams, _index: _index }"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<right value="377px"/>
				<top value="46px"/>
				<width value="150px"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<backgroundImage value="symbol:icon_visibility_ship"/>
				</style>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<marginTop value="27px"/>
				</style>
				<block type="text">
					<style>
						<maxWidth value="150"/>
						<textAlign value="center"/>
					</style>
					<styleClass value="$TextDefaultBold"/>
					<bind name="class" value="'$FontColorUnready'"/>
					<bind name="text" value="toUpperCase(tr(_galleryItemRendererParams[_index].image.indicatorText))"/>
				</block>
			</block>
		</block>
	</block>
	<block className="TextRenderer">
		<style>
			<width value="360px"/>
			<height value="382px"/>
			<backgroundColor value="0x50000000"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="30px"/>
				<marginLeft value="20px"/>
				<marginRight value="20px"/>
			</style>
			<block>
				<block type="text">
					<style>
						<maxWidth value="320"/>
					</style>
					<styleClass value="$TextHeaderWhiteBold"/>
					<bind name="text" value="toUpperCase(tr(_galleryItemRendererParams[_index].description.textHeader))"/>
				</block>
			</block>
			<block>
				<styleClass value="$DefaultScrollBar"/>
				<style>
					<width value="100%"/>
					<height value="290px"/>
					<marginTop value="15px"/>
					<overflow value="scroll"/>
				</style>
				<block type="text">
					<style>
						<maxWidth value="320"/>
						<leading value="2.5"/>
					</style>
					<styleClass value="$TextHeader"/>
					<bind name="substitute" value="6; null; tr(_galleryItemRendererParams[_index].description.text); '_bg'"/>
				</block>
			</block>
		</block>
	</block>
	<block className="LegalInfo">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
		<styleClass value="$Fullsize"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block className="modal_panel" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$EyeLevelVAligned"/>
			<style>
				<width value="700px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="appear" value="'startShow'; 0.15; 0.1; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
				<bind name="appear" value="'startHide'; 0.15; 0.1; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
				<bind name="instance" value="'ModalWindowHeader'; { _header: toUpperCase(tr('IDS_LICENCE_INFO')), _headerWidth: '700px', _showInnerCloseButton: true}"/>
			</block>
			<block>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'licenseData'"/>
				<bind name="appear" value="'startShow'; 0.15; 0.2; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
				<bind name="appear" value="'startHide'; 0.15; 0.2; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
				<style>
					<width value="100%"/>
					<height value="380px"/>
					<overflow value="scroll"/>
					<marginTop value="6px"/>
				</style>
				<styleClass value="$DefaultScrollBar"/>
				<block type="text">
					<bind name="name" value="'legalText'"/>
					<style>
						<minHeight value="300"/>
						<minWidth value="686"/>
						<maxWidth value="686"/>
					</style>
					<styleClass value="$TextHeader"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<bind name="text" value="licenseData.licenseText"/>
				</block>
				<block>
					<styleClass value="$MiddleAligned"/>
					<style>
						<marginBottom value="12px"/>
						<marginTop value="12px"/>
					</style>
					<bind name="instance" value="'LinkText'; { _label: 'IDS_LINK_FULL_LEGAL_INFO', _urlIdent: URL.EXTRA_LICENCES, _tooltipText: 'IDS_LINK_FULL_LEGAL_INFO', _name: 'openExtraLicences', _large: true }"/>
				</block>
				<block>
					<bind name="appear" value="'startShow'; 0.15; 0.3; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
					<bind name="appear" value="'startHide'; 0.15; 0.3; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
					<styleClass value="$MiddleAligned"/>
					<block>
						<style>
							<marginTop value="18px"/>
						</style>
						<bind name="repeat" value="realmConstants.licenseLogoUrls; 'LicenseeLogos'"/>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<width value="130px"/>
					<marginTop value="24px"/>
				</style>
				<bind name="appear" value="'startShow'; 0.15; 0.4; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
				<bind name="appear" value="'startHide'; 0.15; 0.4; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
				<block className="DefaultButtonModal">
					<styleClass value="$InfoLineBoundaries"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="name" value="'Modal_window_action_Button' + 'IDS_CLOSE_UPPER_CASE'"/>
					<block className="button_default" type="native">
						<style>
							<width value="100%"/>
						</style>
						<bind name="label" value="'IDS_CLOSE_UPPER_CASE'"/>
						<params>
							<param name="name" value="btn_cancel"/>
						</params>
						<bind name="input"/>
						<bind name="focus" value="1;true"/>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="EULAConfirmation">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
		<bind name="var" value="{btnEnabled: realmConstants.showEulaText == false}"/>
		<bind name="catch" value="'ScrollTracker.scrollFinished'; {btnEnabled: true}"/>
		<styleClass value="$Fullsize"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block className="modal_panel" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$EyeLevelVAligned"/>
			<style>
				<width value="700px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="appear" value="'startShow'; 0.15; 0.3; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
				<bind name="appear" value="'startHide'; 0.15; 0.3; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
				<bind name="instance" value="'ModalWindowHeaderOptionalIcon'; { _header: 'IDS_EULA', _headerWidth: '700px', _showInnerCloseButton: $root.showCloseButton, _showIcon: false}"/>
			</block>
			<block className="LinkedEULA">
				<bind name="visible" value="realmConstants.showEulaText == false"/>
				<block>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<bind name="appear" value="'startShow'; 0.15; 0.45; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
					<bind name="appear" value="'startHide'; 0.15; 0.45; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
					<style>
						<flow value="horizontal"/>
						<marginTop value="6px"/>
					</style>
					<block type="text">
						<styleClass value="$TextHeader"/>
						<bind name="class" value="'$FontColorBlueish'"/>
						<text value="IDS_PLEASE_READ"/>
					</block>
					<block>
						<bind name="instance" value="'LinkText'; {_label: 'IDS_EULA', _urlIdent: URL.EULA, _tooltipText: 'IDS_EULA_TOOLTIP', _name: 'requestEULA', _large: true}"/>
					</block>
					<block type="text">
						<styleClass value="$TextHeader"/>
						<bind name="class" value="'$FontColorBlueish'"/>
						<text value="IDS_BEFORE_CONTINUE"/>
					</block>
				</block>
				<block>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<bind name="appear" value="'startShow'; 0.15; 0.6; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
					<bind name="appear" value="'startHide'; 0.15; 0.6; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
					<style>
						<marginTop value="12px"/>
					</style>
					<block type="text">
						<style>
							<maxWidth value="700"/>
						</style>
						<styleClass value="$TextHeader"/>
						<bind name="class" value="'$FontColorBlueish'"/>
						<text value="IDS_EULA_TEXT"/>
					</block>
				</block>
			</block>
			<block className="FullTextEULA">
				<bind name="visible" value="realmConstants.showEulaText == true"/>
				<bind name="controller" value="lesta.dialogs.controllers.ScrollTrackerController"/>
				<styleClass value="$DefaultScrollBar"/>
				<style>
					<width value="100%"/>
					<height value="400px"/>
					<overflow value="scroll"/>
					<wheelScrollSpeed value="50"/>
				</style>
				<block type="text">
					<styleClass value="$TextHeader"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="text" value="realmConstants.eulaText"/>
				</block>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<flow value="horizontal"/>
					<marginTop value="24px"/>
				</style>
				<block>
					<bind name="appear" value="'startShow'; 0.15; 0.9; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
					<bind name="appear" value="'startHide'; 0.15; 0.9; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
					<block className="button_default" type="native">
						<bind name="enabled" value="btnEnabled"/>
						<style>
							<width value="140px"/>
						</style>
						<bind name="label" value="'IDS_ACCEPT'"/>
						<bind name="action" value="'buttonClick'; 'confirmEULA'"/>
						<bind name="name" value="'confirmEULA'"/>
					</block>
				</block>
				<block>
					<bind name="appear" value="'startShow'; 0.15; 0.75; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
					<bind name="appear" value="'startHide'; 0.15; 0.75; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
					<style>
						<marginLeft value="20px"/>
					</style>
					<block className="button_default" type="native">
						<style>
							<width value="140px"/>
						</style>
						<bind name="label" value="toUpperCase(tr('IDS_REJECT'))"/>
						<bind name="action" value="'buttonClick'; 'rejectEULA'"/>
						<bind name="name" value="'rejectEULA'"/>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="FullTextEULA">
		<bind name="visible" value="realmConstants.showEulaText == true"/>
		<bind name="controller" value="lesta.dialogs.controllers.ScrollTrackerController"/>
		<styleClass value="$DefaultScrollBar"/>
		<style>
			<width value="100%"/>
			<height value="400px"/>
			<overflow value="scroll"/>
			<wheelScrollSpeed value="50"/>
		</style>
		<block type="text">
			<styleClass value="$TextHeader"/>
			<bind name="class" value="'$FontColorBlueish'"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="text" value="realmConstants.eulaText"/>
		</block>
	</block>
	<block className="LinkedEULA">
		<bind name="visible" value="realmConstants.showEulaText == false"/>
		<block>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<bind name="appear" value="'startShow'; 0.15; 0.45; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<bind name="appear" value="'startHide'; 0.15; 0.45; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
			<style>
				<flow value="horizontal"/>
				<marginTop value="6px"/>
			</style>
			<block type="text">
				<styleClass value="$TextHeader"/>
				<bind name="class" value="'$FontColorBlueish'"/>
				<text value="IDS_PLEASE_READ"/>
			</block>
			<block>
				<bind name="instance" value="'LinkText'; {_label: 'IDS_EULA', _urlIdent: URL.EULA, _tooltipText: 'IDS_EULA_TOOLTIP', _name: 'requestEULA', _large: true}"/>
			</block>
			<block type="text">
				<styleClass value="$TextHeader"/>
				<bind name="class" value="'$FontColorBlueish'"/>
				<text value="IDS_BEFORE_CONTINUE"/>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<bind name="appear" value="'startShow'; 0.15; 0.6; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<bind name="appear" value="'startHide'; 0.15; 0.6; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
			<style>
				<marginTop value="12px"/>
			</style>
			<block type="text">
				<style>
					<maxWidth value="700"/>
				</style>
				<styleClass value="$TextHeader"/>
				<bind name="class" value="'$FontColorBlueish'"/>
				<text value="IDS_EULA_TEXT"/>
			</block>
		</block>
	</block>
	<css name="$QuestBar">
		<backgroundColor value="0xFF009999"/>
	</css>
	<block className="QuestDesc">
		<style>
			<width value="100%"/>
		</style>
		<block type="text">
			<style>
				<width value="100%"/>
			</style>
			<styleClass value="$TextDefault"/>
			<bind name="class" value="'$FontSizeLarge'"/>
			<bind name="text" value="_questdesc"/>
		</block>
	</block>
	<css name="$QuestBlockVMargins">
		<width value="100%"/>
		<marginBottom value="6px"/>
	</css>
	<css name="$SSEDescTextNormal">
		<mouseChildren value="false"/>
		<leading value="-4"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="17"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$SSEDescTextSubheader">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="17"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0x9CBABA"/>
	</css>
	<css name="$SSEDescTextSubheaderSecondary">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="17"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0x9CBABA"/>
	</css>
	<css name="$TextHeaderBigDefaultBold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="17"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<block className="QuestsSmallItem">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="name" value="'QuestsSmallItem_' + sseId"/>
		<bind name="watch" value="'activeStepInfo'; steps[activeStep]"/>
		<bind name="watch" value="'isLimitedPerDay'; activeStepInfo.limit&gt;0 &amp;&amp; activeStepInfo.isDaily"/>
		<bind name="watch" value="'isDoneForToday'; (activeStepInfo.limit &gt; 0) &amp;&amp; (activeStepInfo.isDaily) &amp;&amp; (progress == 1) &amp;&amp; (activeStepInfo.limit == activeStepInfo.count)"/>
		<bind name="watch" value="'isChallenge'; type == SSETypes.CHALLENGE"/>
		<bind name="var" value="{bgWidthSmall: (isChallenge || isPrivate ? 524 : 304)}"/>
		<bind name="var" value="{bgHeightSmall: (isChallenge || isPrivate ? 164 : 154)}"/>
		<bind name="style" value="'width'; (bgWidthSmall + 16) + 'px'"/>
		<bind name="style" value="'height'; (bgHeightSmall + 16) + 'px'"/>
		<bind name="request" value="'click'; 'showExtendedQuest'; {selectedIndex: $index, collectionName: isPrivate ? 'privateTasksAndChallenges' : type, sseId: sseId}"/>
		<bind name="soundSet" value="'quest_item'"/>
		<bind name="watch" value="'isQuestHasLimitedAmount'; (activeStepInfo.limit &gt; 1 || isLimitedPerDay) "/>
		<block>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$MiddleVAligned"/>
			<bind name="style" value="'width'; bgWidthSmall + 'px'"/>
			<bind name="style" value="'height'; bgHeightSmall + 'px'"/>
			<bind name="style" value="'alpha'; isDoneForToday ? 0.6 : 1"/>
			<block className="DropShadow">
				<styleClass value="$FullsizeAbsolute"/>
				<styleClass value="$MouseDisable"/>
				<block className="drop_shadow" type="native">
					<styleClass value="$Fullsize"/>
					<style>
						<position value="absolute"/>
						<marginTop value="-2px"/>
						<marginRight value="-6px"/>
						<marginBottom value="-10px"/>
						<marginLeft value="-6px"/>
					</style>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: type == SSETypes.CHALLENGE ? 'IDS_HINT_OPEN_CHALLENGE' : 'IDS_HINT_OPEN_TASK' }], _maxWidth: 240 }"/>
				<block className="hint_panel" type="native">
					<bind name="transition" value="rollOver; 0.15; {alpha: 0}; {alpha: 1}"/>
					<styleClass value="$Fullsize"/>
					<style>
						<position value="absolute"/>
						<marginTop value="-1px"/>
						<marginBottom value="-1px"/>
						<marginLeft value="-1px"/>
						<marginRight value="-1px"/>
					</style>
				</block>
				<block>
					<styleClass value="$Fullsize"/>
					<style>
						<position value="absolute"/>
						<backgroundSize value="cover"/>
					</style>
					<bind name="style" value="'backgroundImage'; 'url:' + backgroundURL"/>
				</block>
				<block className="shadow_h_zero_edge_fullsize" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$MouseDisable"/>
					<bind name="instance" value="'QuestHeaderWithProgress'; { _isQuestHasLimitedAmount: isQuestHasLimitedAmount, _isDoneForToday: isDoneForToday,
															_numberOfQuestsGeneral: activeStepInfo.limit, titleText: titleText, progress: progress,
															inOneBattle: inOneBattle, peculiarity: peculiarity, isPrivate: isPrivate, type: type}"/>
				</block>
			</block>
			<block type="text">
				<style>
					<marginTop value="40px"/>
					<marginLeft value="9px"/>
				</style>
				<bind name="visible" value="isPrivate"/>
				<styleClass value="$TextHeaderBigDefaultBold"/>
				<bind name="class" value="'$FontColorGold'"/>
				<bind name="text" value="(type == SSETypes.CHALLENGE ? 'IDS_PERSONAL_CHALLENGE' : 'IDS_PERSONAL_BATTLE_TASK')"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<top value="4px"/>
					<left value="4px"/>
				</style>
				<block>
					<bind name="visible" value="isQuestHasLimitedAmount == true"/>
					<style>
						<marginBottom value="12px"/>
					</style>
					<bind name="instance" value="'QuestLimitedExecution'; isQuestHasLimitedAmount ? { _numberOfQuestsGeneral: activeStepInfo.limit,
																					_numberOfQuestsDone: activeStepInfo.count, 
																					_isLimitedPerDay: isLimitedPerDay } : null"/>
				</block>
				<block>
					<bind name="visible" value="peculiarity != 'default'"/>
					<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_' + toUpperCase(type) + (peculiarity != 'default' ? '_' + toUpperCase(peculiarity) : '')}"/>
					<bind name="class" value="isQuestHasLimitedAmount ? '$MiddleAligned' : '$None'"/>
					<block className="icon_quest_peculiarity" type="native">
						<bind name="gotoAndStop!" value="peculiarity"/>
					</block>
				</block>
			</block>
			<block>
				<bind name="visible" value="isChallenge"/>
				<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_HINT_CHALLENGE_LIFETIME'}"/>
				<style>
					<marginLeft value="9px"/>
					<bottom value="3px"/>
				</style>
				<block type="text">
					<styleClass value="$TextHeaderHugeWhite"/>
					<bind name="class" value="'$Bold'"/>
					<bind name="text" value="startDate + '—' + stopDate"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="transition" value="rollOver; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: 10}; 2"/>
			<style>
				<right value="14px"/>
				<bottom value="14px"/>
				<position value="absolute"/>
			</style>
			<bind name="instance" value="'RewardContainer'; {	_rewards: rewards, _rewardsSpecial: rewardsSpecial,
												_tooltipHeader: (isChallenge	? 'IDS_REWARD_FOR_FINISHING_CHALLENGE'
																				: 'IDS_REWARD_FOR_FINISHING_TASK'),
												_scale: 0.5}"/>
		</block>
	</block>
	<block className="QuestsLargeItem">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'dockDefaultValues'; 'dockInitData,dockUpdateData'"/>
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'shipId'; ['dockEntity.shipSelection.evShipUpdate']; dockEntity.shipSelection.currentShipId"/>
		<bind name="watchDH" value="'shipIdForModuleInset'; ['dockEntity.shipSelection.evShipViewUpdate']; dockEntity.shipSelection.currentShipIdForModuleInset"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; shipId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="collectionDH" value="CC.ownShip; 'shipsInFormation'; 'shipsInFormation'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerQuests"/>
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'operationsAccountLocked';	['resourceEntity.accountResource.evOperationsLockChanged'];	resourceEntity.accountResource.operationsLocked"/>
		<bind name="primaryEntityDH" value="'taskEntity'; CC.sseCore; taskId"/>
		<bind name="watchDH" value="'currentProgress';	['taskEntity.sseTask.evChanged'];	taskEntity.sseTask.conditionSet[0].currentProgress"/>
		<bind name="watchDH" value="'maxProgress';	['taskEntity.progress.evChanged'];	taskEntity.sseTask.conditionSet[0].maxProgress"/>
		<bind name="name" value="'QuestsLargeItem_' + sseId"/>
		<style>
			<width value="1px"/>
			<height value="442px"/>
			<marginTop value="1px"/>
			<marginLeft value="1px"/>
			<marginRight value="1px"/>
		</style>
		<bind name="watch" value="'isChallenge'; type == SSETypes.CHALLENGE"/>
		<bind name="watch" value="'activeStepInfo'; steps[activeStep]"/>
		<bind name="watch" value="'isLimitedPerDay'; activeStepInfo.limit &gt; 0 &amp;&amp; activeStepInfo.isDaily"/>
		<bind name="watch" value="'isDoneForToday'; (activeStepInfo.limit &gt; 0) &amp;&amp; (activeStepInfo.isDaily) &amp;&amp; (progress == 1) &amp;&amp; (activeStepInfo.limit == activeStepInfo.count)"/>
		<bind name="style" value="'width'; _itemWidth + 'px'"/>
		<bind name="transition" value="($index == currentSelectedIndex) || rollOver; 0.2; {alpha: 0.8}; {alpha: 1}"/>
		<bind name="dispatch" value="'click'; 'changeSelectedIndex'; {currentSelectedIndex: $index}"/>
		<bind name="soundSet" value="'quest_item'"/>
		<bind name="watch" value="'isQuestHasLimitedAmount'; (activeStepInfo.limit &gt; 1 || isLimitedPerDay) "/>
		<block>
			<bind name="visible" value="!inQuestWindow"/>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<width value="1px"/>
				<height value="430px"/>
			</style>
			<bind name="style" value="'alpha'; isDoneForToday ? 0.6 : 1"/>
			<bind name="transition" value="($index == currentSelectedIndex); 0.1; {width: (_itemWidth - 16), height: 430}; {width: _itemWidth - 2, height: 440}"/>
			<block className="DropShadow">
				<styleClass value="$FullsizeAbsolute"/>
				<styleClass value="$MouseDisable"/>
				<block className="drop_shadow" type="native">
					<styleClass value="$Fullsize"/>
					<style>
						<position value="absolute"/>
						<marginTop value="-2px"/>
						<marginRight value="-6px"/>
						<marginBottom value="-10px"/>
						<marginLeft value="-6px"/>
					</style>
				</block>
			</block>
			<block className="hint_panel" type="native">
				<bind name="transition" value="rollOver || (currentSelectedIndex == $index) ; 0.15; {alpha: 0}; {alpha: 1}"/>
				<styleClass value="$Fullsize"/>
				<style>
					<position value="absolute"/>
					<marginTop value="-1px"/>
					<marginBottom value="-1px"/>
					<marginLeft value="-1px"/>
					<marginRight value="-1px"/>
				</style>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<backgroundSize value="cover"/>
					<alpha value="0.9"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:' + backgroundURL"/>
			</block>
			<block className="quest_thumb_title" type="native">
				<styleClass value="$Fullsize"/>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<height value="128px"/>
				</style>
				<bind name="transition" value="($index == currentSelectedIndex); 0.1; {height: 128}; {height: 150}"/>
				<block>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<backgroundSize value="cover"/>
					</style>
					<bind name="style" value="'backgroundImage'; 'url:' + backgroundURL"/>
				</block>
				<block className="shadow_h_zero_edge_fullsize" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block>
					<bind name="watch" value="'milestoneProgress'; _isMilestone ? (currentProgress/maxProgress) : 0"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="instance" value="'QuestHeaderWithProgress'; {_isQuestHasLimitedAmount: isQuestHasLimitedAmount, _isDoneForToday: isDoneForToday,
															_numberOfQuestsGeneral: activeStepInfo.limit, titleText: titleText, 
															progress: _isMilestone == true ? milestoneProgress : (_doneThisBattle ? 1 : progress), 
															inOneBattle: inOneBattle, peculiarity: peculiarity, isPrivate: isPrivate, type: type}"/>
				</block>
				<block type="text">
					<style>
						<marginLeft value="11px"/>
					</style>
					<bind name="visible" value="isPrivate &amp;&amp; _isMilestone != true"/>
					<styleClass value="$TextHeaderBigDefaultBold"/>
					<bind name="class" value="'$FontColorGold'"/>
					<bind name="text" value="(type == SSETypes.CHALLENGE ? 'IDS_PERSONAL_CHALLENGE' : 'IDS_PERSONAL_BATTLE_TASK')"/>
				</block>
				<block type="text">
					<style>
						<marginLeft value="11px"/>
					</style>
					<bind name="visible" value="_isMilestone == true"/>
					<styleClass value="$TextHeaderBigDefaultBold"/>
					<bind name="class" value="'$FontColorGold'"/>
					<bind name="text" value="_epicName"/>
				</block>
				<block>
					<bind name="visible" value="_isMilestone != true"/>
					<style>
						<position value="absolute"/>
						<top value="4px"/>
						<left value="4px"/>
					</style>
					<block>
						<bind name="visible" value="isQuestHasLimitedAmount == true"/>
						<style>
							<marginBottom value="12px"/>
						</style>
						<bind name="instance" value="'QuestLimitedExecution'; isQuestHasLimitedAmount ? { _numberOfQuestsGeneral: activeStepInfo.limit, 
																				_numberOfQuestsDone: activeStepInfo.count, _isLimitedPerDay: isLimitedPerDay } : null"/>
					</block>
					<block>
						<bind name="visible" value="peculiarity != 'default'"/>
						<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_' + toUpperCase(type) + (peculiarity != 'default' ? '_' + toUpperCase(peculiarity) : '')}"/>
						<bind name="class" value="isQuestHasLimitedAmount ? '$MiddleAligned' : '$None'"/>
						<block className="icon_quest_peculiarity" type="native">
							<bind name="gotoAndStop!" value="peculiarity"/>
						</block>
					</block>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<bottom value="-2px"/>
						<marginLeft value="11px"/>
					</style>
					<bind name="visible" value="isChallenge &amp;&amp; _isMilestone == true"/>
					<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_HINT_CHALLENGE_LIFETIME'}"/>
					<block type="text">
						<styleClass value="$TextHeaderHugeWhite"/>
						<bind name="class" value="'$Bold'"/>
						<bind name="text" value="startDate + '—' + stopDate"/>
					</block>
				</block>
				<block>
					<style>
						<right value="6"/>
						<bottom value="6"/>
						<position value="absolute"/>
					</style>
					<bind name="instance" value="'RewardContainer'; {_rewards: rewards, _rewardsSpecial: rewardsSpecial,
													_tooltipHeader: (isChallenge ?	'IDS_REWARD_FOR_FINISHING_CHALLENGE' :
																					'IDS_REWARD_FOR_FINISHING_TASK'),
													_scale: 0.5}"/>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<style>
					<height value="100%"/>
				</style>
				<block>
					<styleClass value="$QuestBlockVMargins"/>
					<bind name="visible" value="steps.length &gt; 1"/>
					<bind name="watch" value="'stepProgressBarWidthSelected'; (_itemWidth - (24 + (steps.length - 1) * 3)) / steps.length"/>
					<bind name="watch" value="'stepProgressBarWidth'; (_itemWidth -16 - (24 + (steps.length - 1) * 3)) / steps.length"/>
					<block>
						<block type="text">
							<styleClass value="$SSEDescTextSubheader"/>
							<bind name="text" value="tr('IDS_STEP') + ' ' +  (activeStep + 1) + '/' + steps.length"/>
						</block>
						<block>
							<bind name="visible" value="(activeStepInfo.rewards.length + activeStepInfo.rewardsSpecial.length) &gt; 0"/>
							<style>
								<marginLeft value="7px"/>
								<marginTop value="-3px"/>
								<marginBottom value="3px"/>
								<alpha value="0.9"/>
							</style>
							<bind name="instance" value="'RewardContainer'; (activeStepInfo.rewards.length + activeStepInfo.rewardsSpecial.length) &gt; 0 	? {_rewards: activeStepInfo.rewards,
																																			_rewardsSpecial: activeStepInfo.rewardsSpecial,
																																			_tooltipHeader: 'IDS_REWARD_FOR_FINISHING_STEP', _scale: 0.3}
																																		: null"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<style>
							<marginBottom value="-3px"/>
						</style>
						<bind name="repeat" value="steps; 'StepProgressItem'; {	_steps: steps, _selected: ($index == currentSelectedIndex), _stepProgressBarWidth: stepProgressBarWidth, _stepProgressBarWidthSelected: stepProgressBarWidthSelected}"/>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
				<block>
					<style>
						<marginBottom value="4px"/>
						<width value="100%"/>
					</style>
					<bind name="instance" value="'QuestStepDescription'; {_step: activeStepInfo, _doneThisBattle: _doneThisBattle, _isDoneForToday: isDoneForToday}"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="visible" value="(activeStepInfo.technoIds != '' &amp;&amp; _isMilestone != true) || (activeStepInfo.linkedTasks.length &gt; 0 &amp;&amp; _isMilestone == true)"/>
					<styleClass value="$QuestBlockVMargins"/>
					<bind name="instance" value="'QuestRestrictionsAndLinkedTasks'; {_restrictionsIds: activeStepInfo.technoIds, _linkedTasks: activeStepInfo.linkedTasks}"/>
				</block>
				<block>
					<bind name="visible" value="_isMilestone == true"/>
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$QuestBlockVMargins"/>
					<bind name="instance" value="'MilestoneRestrictions'; {_technoids: _technoids, _addcondIds: _addcondIds, _precondIds: _precondIds,
												_aftercondIds: _aftercondIds, _conditionSet: _conditionSet, _currentProgress: currentProgress, _maxProgress: maxProgress}"/>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<bottom value="-3px"/>
						<alpha value="0.9"/>
					</style>
					<bind name="visible" value="!isChallenge"/>
					<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: 'IDS_HINT_BATTLE_TASK_LIFETIME'}"/>
					<block type="text">
						<styleClass value="$SSEDescTextSubheaderSecondary"/>
						<bind name="text" value="tr('IDS_EXPIRE_DATE') + ' ' + stopDate"/>
					</block>
				</block>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<position value="absolute"/>
					<bottom value="-35px"/>
				</style>
				<bind name="visible" value="_isMilestone != true"/>
				<block>
					<bind name="action" value="'click'; 'log'; {event: 'other:sse.ButtonToBattle'} "/>
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
					<bind name="fade" value="$index == currentSelectedIndex &amp;&amp; inQuestWindow &amp;&amp; !(isDoneForToday); 0.2; {alpha: 0, top: 15}; {alpha: 1, top: 0}"/>
					<bind name="watch" value="'battleTypeForQuest';	activeStepInfo.battleType																		? activeStepInfo.battleType :
													((dockDefaultValues.battleType == BattleTypes.RANKED_BATTLE) &amp;&amp; rankedBattlesSeason.denyReason)	? BattleTypes.RANDOM_BATTLE
																																					: dockDefaultValues.battleType"/>
					<bind name="primaryEntityDH" value="'battleTypeEntity'; CC.battleType; battleTypeForQuest"/>
					<bind name="watchDH" value="'fightButtonDenyReasons'; ['battleTypeEntity.battleType.evDisableReasonChanged']; battleTypeEntity.battleType.fightButtonReasons"/>
					<bind name="watch" value="'startButtonEnabled';	activeStepInfo.linkedTasksCompleted &amp;&amp; readyToBattle &amp;&amp;
													fightButtonDenyReasons.length == 0 &amp;&amp;
													!(activeStepInfo.battleType == BattleTypes.RANKED_BATTLE &amp;&amp; divisionData.divisionExist)"/>
					<bind name="firstEntityDH" value="'clanCurrentSeasonEntity'; CC.clanBattleSeason; 'current'"/>
					<bind name="watchDH" value="'cbs_primeTimeStartTime'; ['clanCurrentSeasonEntity.clanBattleSeason.evChanged']; clanCurrentSeasonEntity.clanBattleSeason.primeTimeStartTime"/>
					<bind name="watchDH" value="'cbs_primeTimeFinishTime'; ['clanCurrentSeasonEntity.clanBattleSeason.evChanged']; clanCurrentSeasonEntity.clanBattleSeason.primeTimeFinishTime"/>
					<bind name="countdown" value="cbs_primeTimeStartTime; 'startPrimeTimeText'; 'HIGHEST,WITH_DAYS'; 'timeoutEvent'"/>
					<bind name="countdown" value="cbs_primeTimeFinishTime; 'finishPrimeTimeText'; 'HIGHEST,WITH_DAYS'; 'timeoutEvent'"/>
					<bind name="watch" value="'specialDenyReason';	!(activeStepInfo.linkedTasksCompleted)											? 'IDS_COMPLETE_LINKED_TASKS_FIRST' :
													(!(divisionData.divisionExist) &amp;&amp; activeStepInfo.isInDivision)					? 'IDS_STARTBATTLE_LOCK_REASON_NOT_IN_DIVISION' :
													((activeStepInfo.battleType != BattleTypes.RANKED_BATTLE) &amp;&amp; !(readyToBattle))	? 'IDS_STARTBATTLE_LOCK_REASON_WRONG_SHIP' :
													fightButtonDenyReasons[0] == 'IDS_CLAN_BATTLES_PRIMETIME_STARTS_IN'				? subst('IDS_CLAN_BATTLES_PRIMETIME_STARTS_IN', [], {timeLeft: startPrimeTimeText}) :
													fightButtonDenyReasons.length &gt; 0												? fightButtonDenyReasons[0]
																																	: ''"/>
					<bind name="tooltip" value="'StartBattleTooltip'; ( shipId &gt; 0 ) 	? {	_shipID: shipsInFormation.length &gt; 0	? shipsInFormation[0].shipId : shipId,
																							_battleType: battleTypeForQuest,
																							_instructionType: 'left',
																							_buttonDisabled: !(startButtonEnabled),
																							_specialDenyReason: specialDenyReason
																						}
																						: null"/>
					<bind name="instance" value="'ButtonSpecial'; {	_enabled: startButtonEnabled, 
													_action: (operationsAccountLocked ? null : 'startBattleSSE'), 
													_name: 'StartQuestButton',
													_actionParams: {battleType: battleTypeForQuest},
													_label: (progress &gt; 0 &amp;&amp; !inOneBattle 	? isChallenge 	? toUpperCase(tr('IDS_CONTINUE_QUEST')) 
																											: toUpperCase(tr('IDS_CONTINUE_DAILY_TICKET'))
																							: toUpperCase(tr('IDS_START_BATTLE')))}"/>
				</block>
				<block>
					<bind name="fade" value="($index == currentSelectedIndex &amp;&amp; inQuestWindow &amp;&amp; isDoneForToday); 0.15; {alpha: 0, top: 15}; {alpha: 1, top: 0}; {alpha: 0, top: 15}"/>
					<block type="text">
						<styleClass value="$TextDefaultTech"/>
						<style>
							<maxWidth value="250"/>
							<marginTop value="9px"/>
							<leading value="-3"/>
							<textAlign value="center"/>
						</style>
						<text value="IDS_QUEST_LIMITED_EXECUTION_DONE"/>
					</block>
				</block>
			</block>
		</block>
	</block>
	<block className="StepProgressItem">
		<bind name="style" value="'width'; _stepProgressBarWidth+'px'"/>
		<bind name="style" value="'marginLeft'; $index &gt; 0 ? '3px' : '0px'"/>
		<bind name="transition" value="_selected &amp;&amp; _stepProgressBarWidth; 0.1; {width: _stepProgressBarWidth}; {width: _stepProgressBarWidthSelected}"/>
		<block>
			<style>
				<height value="12px"/>
				<width value="100%"/>
				<backgroundColor value="0x01000000"/>
			</style>
			<bind name="tooltip" value="'QuestStepDescriptionTooltip'; 	{_step: _steps[$index], 
														_tooltipStep: $index + 1, _totalSteps: _steps.length, 
														_restrictionsIds: _steps[$index].technoIds, _linkedTasks: _steps[$index].linkedTasks}"/>
			<block className="indicator_progress_bar" type="native">
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="value" value="_steps[$index].progress * 10"/>
			</block>
		</block>
	</block>
	<block className="QuestStepDescriptionTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<style>
				<position value="absolute"/>
			</style>
			<styleClass value="$Fullsize"/>
		</block>
		<block>
			<style>
				<width value="320px"/>
			</style>
			<styleClass value="$InfoBlockIndent"/>
			<block type="text">
				<styleClass value="$SSEDescTextSubheader"/>
				<bind name="text" value="tr('IDS_STEP') + ' ' +  _tooltipStep + '/' + _totalSteps"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'QuestStepDescription'; {_step: _step}"/>
			</block>
		</block>
		<block>
			<style>
				<width value="320px"/>
			</style>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'QuestRestrictionsAndLinkedTasks'; {_restrictionsIds: _restrictionsIds, _linkedTasks: _linkedTasks}"/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="_step.rewards.length &gt; 0 || _step.rewardsSpecial.length &gt; 0"/>
			<style>
				<width value="320px"/>
			</style>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<block>
					<block className="icon_giftbox_small" type="native">
						<style>
							<marginLeft value="6px"/>
						</style>
						<bind name="style" value="'alpha'; _step.progress == 1 ? 0.7 : 1.0"/>
					</block>
					<block>
						<bind name="visible" value="_step.progress == 1"/>
						<style>
							<position value="absolute"/>
							<top value="21px"/>
							<left value="23px"/>
						</style>
						<block className="icon_issued_small" type="native">
							<innerBind elementName="item.item" name="text" value="'IDS_ISSUED_STAMP'"/>
							<bind name="gotoAndStop!" value="'issued'"/>
						</block>
					</block>
				</block>
				<block type="text">
					<styleClass value="$TextHeaderBigDefaultTech"/>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<width value="100%"/>
						<marginLeft value="12px"/>
					</style>
					<text value="IDS_REWARD_FOR_FINISHING_STEP_GENERAL"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="_step.rewards.length &gt; 0"/>
				<style>
					<width value="100%"/>
					<marginLeft value="16px"/>
					<marginRight value="12px"/>
				</style>
				<bind name="repeat" value="_step.rewards; 'RewardContainerTooltipItem'"/>
			</block>
			<block>
				<bind name="visible" value="_step.rewardsSpecial.length &gt; 0"/>
				<style>
					<width value="100%"/>
					<marginLeft value="16px"/>
					<marginRight value="12px"/>
				</style>
				<bind name="repeat" value="_step.rewardsSpecial; 'RewardContainerTooltipItem'"/>
			</block>
		</block>
	</block>
	<block className="MilestoneRestrictions">
		<style>
			<width value="100%"/>
		</style>
		<block>
			<bind name="visible" value="_conditionSet != '' || _conditionSet != null"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$SSEDescTextNormal"/>
				<style>
					<width value="100%"/>
					<marginTop value="-2px"/>
				</style>
				<bind name="text" value="_conditionSet[0].ids"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="_currentProgress &gt; 0"/>
			<style>
				<width value="100%"/>
				<marginBottom value="3px"/>
			</style>
			<block className="indicator_progress_bar" type="native">
				<style>
					<width value="100%"/>
				</style>
				<bind name="value" value="(_currentProgress / _maxProgress)*10"/>
			</block>
		</block>
		<block type="text">
			<styleClass value="$SSEDescTextSubheaderSecondary"/>
			<text value="IDS_QUEST_START_CONDITIONS"/>
		</block>
		<block>
			<bind name="visible" value="_technoids != '' || _technoids != null"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$SSEDescTextNormal"/>
				<style>
					<width value="100%"/>
					<marginTop value="-2px"/>
				</style>
				<bind name="text" value="_technoids"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="_addcondIds != '' || _addcondIds != null"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$SSEDescTextNormal"/>
				<style>
					<width value="100%"/>
					<marginTop value="-2px"/>
				</style>
				<bind name="text" value="_addcondIds"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="_precondIds != '' || _precondIds != null"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$SSEDescTextNormal"/>
				<style>
					<width value="100%"/>
					<marginTop value="-2px"/>
				</style>
				<bind name="text" value="_precondIds"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="_aftercondIds != '' || _aftercondIds != null"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$SSEDescTextNormal"/>
				<style>
					<width value="100%"/>
					<marginTop value="-2px"/>
				</style>
				<bind name="text" value="_aftercondIds"/>
			</block>
		</block>
	</block>
	<block className="QuestRestrictionsAndLinkedTasks">
		<style>
			<width value="100%"/>
		</style>
		<bind name="visible" value="_restrictionsIds != ''"/>
		<block type="text">
			<styleClass value="$SSEDescTextSubheaderSecondary"/>
			<text value="IDS_QUEST_START_CONDITIONS"/>
		</block>
		<block>
			<bind name="tooltip" value="'SimpleTooltip'; { tooltipText: (isChallenge ? 'IDS_HINT_CHALLENGE_TECHNO_CONDITION' : 'IDS_HINT_BATTLE_TASK_TECHNO_CONDITION')}"/>
			<style>
				<width value="100%"/>
				<marginLeft value="15px"/>
			</style>
			<block type="text">
				<bind name="visible" value="_restrictionsIds != ''"/>
				<styleClass value="$SSEDescTextNormal"/>
				<style>
					<width value="100%"/>
					<marginTop value="-2px"/>
				</style>
				<bind name="text" value="_restrictionsIds"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="15px"/>
			</style>
			<bind name="repeat" value="_linkedTasks; 'QuestLinkedTaskItem'"/>
		</block>
	</block>
	<block className="QuestStepDescription">
		<style>
			<width value="100%"/>
		</style>
		<block type="text">
			<bind name="visible" value="_step.precondIds"/>
			<styleClass value="$SSEDescTextNormal"/>
			<style>
				<width value="100%"/>
				<marginBottom value="3px"/>
			</style>
			<bind name="text" value="_step.precondIds"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="style" value="'marginLeft'; _step.precondIds ? '15px' : '0px'"/>
			<bind name="repeat" value="_step.conditionSet; 'QuestConditionWithProgressItem'; { _inOneBattle: _step.inOneBattle, _doneThisBattle: _doneThisBattle, _isDoneForToday: _isDoneForToday} "/>
		</block>
		<block>
			<bind name="visible" value="_step.aftercondIds"/>
			<styleClass value="$SSEDescTextNormal"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="repeat" value="_step.aftercondIds; 'QuestAfterConditionItem'; {} "/>
		</block>
		<block type="text">
			<bind name="visible" value="_step.addcondIds"/>
			<styleClass value="$SSEDescTextNormal"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="text" value="_step.addcondIds"/>
		</block>
	</block>
	<block className="QuestConditionWithProgressItem">
		<style>
			<width value="100%"/>
			<marginBottom value="-2px"/>
			<backgroundColor value="0x01000000"/>
		</style>
		<bind name="watch" value="'showProgressBar'; maxProgress &amp;&amp; !_inOneBattle &amp;&amp; (currentProgress &gt; 0)"/>
		<bind name="tooltip" value="'SimpleTooltip'; showProgressBar ? {tooltipText: (tr('IDS_CURRENT_PROGRESS') + tr('IDS_COLON') + ' ' + currentProgress + '/' + maxProgress)} : null "/>
		<block type="text">
			<styleClass value="$SSEDescTextNormal"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="style" value="'marginBottom'; showProgressBar ? '3px' : '0px'"/>
			<bind name="text" value="ids"/>
		</block>
		<block>
			<bind name="visible" value="showProgressBar &amp;&amp; !(_isDoneForToday)"/>
			<style>
				<width value="100%"/>
				<marginBottom value="3px"/>
			</style>
			<block className="indicator_progress_bar" type="native">
				<style>
					<width value="100%"/>
				</style>
				<bind name="value" value="_doneThisBattle ? 10 : (currentProgress/maxProgress)*10"/>
			</block>
		</block>
	</block>
	<block className="QuestAfterConditionItem">
		<style>
			<width value="100%"/>
		</style>
		<block type="text">
			<bind name="visible" value="_step.aftercondIds"/>
			<styleClass value="$SSEDescTextNormal"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="text" value="ids"/>
		</block>
	</block>
	<block className="QuestHeaderWithProgress">
		<style>
			<width value="100%"/>
		</style>
		<block>
			<bind name="visible" value="!(inOneBattle) &amp;&amp; !(_isDoneForToday)"/>
			<styleClass value="$QuestBar"/>
			<style>
				<position value="absolute"/>
				<width value="0px"/>
				<height value="100%"/>
			</style>
			<bind name="style" value="'width'; (progress * 100) + '%'"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginRight value="10px"/>
				<marginBottom value="4px"/>
				<marginTop value="4px"/>
			</style>
			<bind name="style" value="'marginLeft';  peculiarity == null ? '10px' 
									: peculiarity != 'default' ? '38px'
									: ((_isQuestHasLimitedAmount) &amp;&amp; (_numberOfQuestsGeneral &gt; 99)) ? '62px'
									: ((_isQuestHasLimitedAmount) &amp;&amp; (_numberOfQuestsGeneral &gt; 9))	? '52px'
									: (_isQuestHasLimitedAmount) 									? '42px'
									: '10px'"/>
			<block type="text">
				<style>
					<width value="100%"/>
				</style>
				<styleClass value="$TextLargeHeaderBold"/>
				<bind name="text" value="titleText"/>
			</block>
		</block>
	</block>
	<block className="QuestLinkedTaskItem">
		<style>
			<width value="100%"/>
			<backgroundColor value="0x01000000"/>
		</style>
		<bind name="tooltip" value="'SSETaskTooltip'; type == SSETypes.TASK || type == SSETypes.CHALLENGE ? { _id: id, _isDone: isDone, _subtype: type, 
																							_isPrivate: isPrivate, _isBarge: false } : null; 0"/>
		<block>
			<bind name="visible" value="isDone"/>
			<style>
				<backgroundImage value="symbol:checkbox_check"/>
				<position value="absolute"/>
				<width value="20px"/>
				<height value="20px"/>
				<left value="-18px"/>
				<top value="4px"/>
			</style>
		</block>
		<block type="text">
			<styleClass value="$SSEDescTextNormal"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="style" value="'alpha'; isDone ? '0.7' : '1'"/>
			<bind name="text" value="ids"/>
		</block>
	</block>
	<block className="QuestLimitedExecution">
		<bind name="watch" value="'tooltipText';   _isLimitedPerDay	?	( _numberOfQuestsDone == _numberOfQuestsGeneral)	? 'IDS_QUEST_LIMITED_EXECUTION_DONE_PER_DAY' :
														( _numberOfQuestsDone &gt; 0)							? subst('IDS_QUEST_LIMITED_EXECUTION_START_PER_DAY',	[], {_numberOfQuestsGeneral: _numberOfQuestsGeneral, _numberOfQuestsDone: _numberOfQuestsDone}, _numberOfQuestsDone) :
														( _numberOfQuestsDone == 0)							? subst('IDS_QUEST_LIMITED_EXECUTION_PER_DAY', 			[], {_numberOfQuestsGeneral: _numberOfQuestsGeneral}, _numberOfQuestsGeneral) 
																											: ''
													:	
														( _numberOfQuestsDone == _numberOfQuestsGeneral)	? 'IDS_QUEST_LIMITED_EXECUTION_DONE' :
														( _numberOfQuestsDone &gt; 0)							? subst('IDS_QUEST_LIMITED_EXECUTION_START',			[], {_numberOfQuestsGeneral: _numberOfQuestsGeneral, _numberOfQuestsDone: _numberOfQuestsDone}, _numberOfQuestsDone) :
														( _numberOfQuestsDone == 0)							? subst('IDS_QUEST_LIMITED_EXECUTION',					[], {_numberOfQuestsGeneral: _numberOfQuestsGeneral}, _numberOfQuestsGeneral)
																											: '' } "/>
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: tooltipText}"/>
		<block className="icon_quest_challenge" type="native">
			<style>
				<position value="absolute"/>
				<height value="32px"/>
				<width value="100%"/>
			</style>
			<bind name="gotoAndStop!" value="_isLimitedPerDay ? 'daily_limited' : 'private_limited'"/>
		</block>
		<block type="text">
			<styleClass value="$TextDefaultWhite"/>
			<style>
				<marginLeft value="7px"/>
				<marginRight value="7px"/>
				<top value="4px"/>
				<styleSheet value="h3 {
					font-family: $WWSDefaultFontBold;
				}
				"/>
			</style>
			<bind name="text" value="'&lt;body&gt;' + _numberOfQuestsDone + '/' + '&lt;h3&gt;' + _numberOfQuestsGeneral + '&lt;/h3&gt;&lt;/body&gt;'"/>
		</block>
	</block>
	<block className="PostBattleSSEQuestTooltip">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'SSECompleted'; 'sseId'; _id; 'questItems'"/>
		<bind name="instance" value="'QuestsLargeItem';	questItems[0] != null ? {
											backgroundURL: questItems[0].backgroundURL,
											titleText: questItems[0].titleText,
											progress: questItems[0].progress,
											inOneBattle: questItems[0].inOneBattle,
											startDate: questItems[0].startDate,
											stopDate: questItems[0].stopDate,
											steps: questItems[0].steps,
											activeStep: questItems[0].currentStep &gt;= 0 ? questItems[0].currentStep : 0,
											peculiarity: questItems[0].peculiarity,
											type: _type,
											_doneThisBattle: _doneThisBattle,
											isPrivate: questItems[0].isPrivate,
											_itemWidth: _type == SSETypes.CHALLENGE ? 416 : 346
										}	:
										_isMilestone == true ? {
											type: _type,
											taskId: _id,
											_epicName: _epicName,
											titleText: _titleText,
											startDate: _startTime,
											stopDate: _stopTime,
											backgroundURL: _backgroundURL,
											_technoids: _technoids,
											_addcondIds: _addcondIds,
											_precondIds: _precondIds,
											_aftercondIds: _aftercondIds,
											_conditionSet: _conditionSet,
											_itemWidth: _type == SSETypes.CHALLENGE ? 416 : 346, 
											_isMilestone: _isMilestone
										} : null"/>
	</block>
	<block className="SSETaskTooltip">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 	_isPrivate 	? 'privateTasksAndChallenges' 
																					: _subtype == SSETypes.CHALLENGE ? 'challenges' 
																					: 'tasks'; 
																		'sseId'; 
																		_id;
																		'sseCollection'"/>
		<bind name="instance" value="'QuestsLargeItem'; 	{	backgroundURL: sseCollection[0].backgroundURL,
											titleText: sseCollection[0].titleText,
											progress: sseCollection[0].progress,
											inOneBattle: sseCollection[0].inOneBattle,
											startDate: sseCollection[0].startDate,
											stopDate: sseCollection[0].stopDate,
											steps: sseCollection[0].steps,
											activeStep: sseCollection[0].currentStep &gt;= 0 ? sseCollection[0].currentStep : 0,
											peculiarity: sseCollection[0].peculiarity,
											isPrivate: sseCollection[0].isPrivate,
											_doneThisBattle: _isDone,
											type: _subtype == SSETypes.CHALLENGE ? SSETypes.CHALLENGE : SSETypes.TASK,
											_itemWidth: _subtype == SSETypes.CHALLENGE ? 416 : 346
										}"/>
	</block>
	<block className="CarouselBlockWithScroll">
		<styleClass value="$MiddleAligned"/>
		<style>
			<flow value="horizontal"/>
			<width value="100%f"/>
			<height value="100%"/>
		</style>
		<block>
			<bind name="visible" value="_isScrollNeeded"/>
			<style>
				<width value="20px"/>
				<marginRight value="6px"/>
			</style>
			<styleClass value="$MiddleVAligned"/>
			<block className="button_slide_left" type="native">
				<params>
					<param name="focusable" value="false"/>
				</params>
				<bind name="event" value="'click'; scrollLeftByOneUnit"/>
				<bind name="name" value="_leftScrollName ? _leftScrollName : 'buttonCarouselLeft'"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%f"/>
				<height value="1px"/>
				<scrollbarController value="lesta.unbound.style.UbScrollingControllerTouch"/>
				<layout value="lesta.unbound.layout.measure.CarouselLayout"/>
				<itemWidth value="416"/>
				<itemHeight value="440"/>
			</style>
			<bind name="style" value="'height'; _height"/>
			<bind name="style" value="'overflow'; _isScrollNeeded ? 'scroll' : 'visible'"/>
			<bind name="event" value="'layoutChanged'; scrollToIndex; currentSelectedIndex"/>
			<bind name="style" value="'itemWidth'; _itemWidth"/>
			<bind name="style" value="'wheelScrollSpeed'; _wheelScrollSpeed"/>
			<bind name="controller" value="lesta.unbound.controls.UbCarouselController"/>
			<bind name="generator" value="_repeatCollection; _repeatElement; {inQuestWindow: inQuestWindow, currentSelectedIndex: currentSelectedIndex, _itemWidth: _itemWidth}"/>
			<bind name="scrollToIndex!" value="currentSelectedIndex"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="_isScrollNeeded"/>
			<style>
				<width value="20px"/>
				<marginLeft value="12px"/>
			</style>
			<styleClass value="$MiddleVAligned"/>
			<block className="button_slide_right" type="native">
				<params>
					<param name="focusable" value="false"/>
				</params>
				<bind name="name" value="_rightScrollName ? _rightScrollName : 'buttonCarouselRight'"/>
				<bind name="event" value="'click'; scrollRightByOneUnit"/>
			</block>
		</block>
	</block>
	<block className="NoItemsComeBackLater">
		<styleClass value="$MiddleAlignedAbsolutely"/>
		<style>
			<top value="35%"/>
			<marginTop value="-50%"/>
		</style>
		<block type="text">
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$TextAccentBold"/>
			<bind name="text" value="toUpperCase(tr('IDS_NO_CURRENT_' + _type))"/>
		</block>
		<bind name="instance" value="'InstructionBigTech'; _disableSubText != true ? { _instructionText: _subText ? _subText : 'IDS_COME_BACK_LATER', _type: 'info', _maxWidth: 980 } : null"/>
	</block>
	<block className="ServerIsUnavailable">
		<styleClass value="$MiddleAligned"/>
		<styleClass value="$MiddleVAligned"/>
		<block>
			<block type="text">
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$TextHeaderBold"/>
				<bind name="class" value="_isBig ? '$TextAccentBoldAccountLevel2' : '$TextHeaderBold'"/>
				<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : '300'"/>
				<bind name="style" value="'marginBottom'; _small ? '2px' : '4px'"/>
				<style>
					<textAlign value="center"/>
				</style>
				<bind name="class" value="'$FontColorUnready'"/>
				<bind name="text" value="_type	? toUpperCase(tr('IDS_SERVICE_IS_UNAVAILABLE_'+(_type)))
								: toUpperCase(tr('IDS_SERVICE_IS_UNAVAILABLE_CHAT'))"/>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'EmptyStatusParagraph'; {_text : 'IDS_WE_ARE_WORKING_ON_THIS', _maxWidth: (_maxWidth ? _maxWidth : '280'), _sizeClass: _isBig ? '$FontSizeHeader5' : '$FontSizeLarge'}"/>
			</block>
		</block>
	</block>
	<block className="DockTabLockedPlug">
		<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
		<style>
			<width value="500px"/>
			<minHeight value="32"/>
		</style>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginTop value="16px"/>
				<marginBottom value="16px"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefaultBold17NM"/>
				<style>
					<textAlign value="center"/>
					<maxWidth value="480"/>
				</style>
				<bind name="class" value="'$FontColorUnready'"/>
				<bind name="text" value="toUpperCase(tr(_text))"/>
			</block>
		</block>
	</block>
	<css name="$DockWindowHeaderBlock">
		<marginTop value="60px"/>
	</css>
	<css name="$TabWindowHolder">
		<position value="absolute"/>
		<marginTop value="60px"/>
	</css>
	<css name="$TopMenuItem">
		<marginRight value="12"/>
	</css>
	<css name="$BattleTypeSelectionText">
		<marginLeft value="10px"/>
	</css>
	<css name="$BattleTypeSelected">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="19"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$BattleTypeUnselected">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="19"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextDock">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="17"/>
		<dropShadowFilter value="0 0 0x000000 0 0 0 0 0"/>
		<selectable value="false"/>
		<textColor value="0x9CBABA"/>
	</css>
	<css name="$TextDockBold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="17"/>
		<dropShadowFilter value="0 0 0x000000 0 0 0 0 0"/>
		<selectable value="false"/>
		<textColor value="0x9CBABA"/>
	</css>
	<css name="$TextDockNano">
		<fontFamily value="$WWSDefaultFont"/>
		<textColor value="0x758b8b"/>
		<fontSize value="13"/>
		<dropShadowFilter value="0 0 0x000000 0 0 0 0 0"/>
	</css>
	<block className="Dock">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
		<styleClass value="$Fullsize"/>
		<bind name="firstEntityDH" value="'dockStateEntity'; CC.dockState"/>
		<bind name="watchDH" value="'dockStateName'; ['dockStateEntity.dockState.evUpdate']; dockStateEntity.dockState.stateName"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<bind name="action" value="'addedToStage'; realmConstants.newsUIAvailable ? 'IngameNewsProxy.getIngameNews' : null; {}"/>
		<bind name="collectionDH" value="CC.referral; 'referralCollection'"/>
		<bind name="watch" value="'isRefSysParticipant'; referralCollection.length &gt; 0"/>
		<bind name="action" value="'addedToStage'; isRefSysParticipant ? 'ReferralProgramProxy.requestReferralPoints' : null; {}"/>
		<block>
			<bind name="fade" value="dockStateName == 'dock'; 0.4; {alpha: 0}; {alpha: 1}; {alpha: 0}; 1; dockStateName == 'dock' ? 0.5 : 0"/>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'DefaultDock'; {}"/>
		</block>
		<block>
			<bind name="fade" value="dockStateName == 'barge'; 0.4; {alpha: 0}; {alpha: 1}; {alpha: 0}; 1; dockStateName == 'barge' ? 0.5 : 0"/>
			<bind name="name" value="'barge'"/>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'LootBoxes'; {}"/>
		</block>
		<block>
			<bind name="collectionDH" value="CC.sysMessage; 'informerLogItems'; 'messagesToShow.informerLog'"/>
			<style>
				<bottom value="196px"/>
			</style>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<bind name="scopeHoldRepeat" value="informerLogItems; 'InformerLogNotificationElement'; id"/>
		</block>
		<block>
			<style>
				<hitTest value="false"/>
			</style>
			<bind name="instance" value="'InteractiveNotificationTooltipFakeReason'; {}"/>
		</block>
		<bind name="firstEntityDH" value="'loginEntity'; CC.loginData"/>
		<bind name="watchDH" value="'isLazyLogin'; ['loginEntity.loginData.evUpdate']; (loginEntity.loginData.currentLoginType == 'DEMO')"/>
		<bind name="instance" value="'LazyRegistrationForcer'; isLazyLogin ? {} : null"/>
	</block>
	<block className="LazyRegistrationForcer">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'accountLevelInfo'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
		<bind name="firstEntityDH" value="'loginEntity'; CC.loginData"/>
		<bind name="watchDH" value="'showDemoWindow'; ['loginEntity.loginData.evUpdate']; loginEntity.loginData.showDemoWindow"/>
		<bind name="watch" value="'forceLazyRegistration'; (showDemoWindow &amp;&amp; (accountLevelInfo.accountLevel &gt;= realmConstants.lazyAccountMaxLevel))"/>
		<bind name="action" value="'addedToStage'; forceLazyRegistration ? 'forceCreateAccount' : null"/>
		<bind name="action" value="'addedToStage'; forceLazyRegistration ? 'demoWindowShown' : null"/>
	</block>
	<block className="InteractiveNotificationTooltipFakeReason">
		<bind name="tooltip" value="'InteractiveNotifications'; {}; TooltipBehaviour.interactiveWindow; null; null; null; true"/>
	</block>
	<block className="ExcursionHintBlock">
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="watch" value="'carouselRows'; (userPrefs.curRowCountIndex == null) ? 0 : userPrefs.curRowCountIndex"/>
		<bind name="watch" value="'isSmallCarouselView'; (userPrefs.isSmallCarouselView == null) ? false : userPrefs.isSmallCarouselView"/>
		<bind name="style" value="'bottom'; isSmallCarouselView	?	(carouselRows == 1) ? '233px' :
													(carouselRows == 2) ? '296px'
																		: '170px'
												: '170px'"/>
		<styleClass value="$MiddleAligned"/>
		<style>
			<position value="absolute"/>
		</style>
		<bind name="fade" value="excursionOn; 0.15; {alpha: 0, top: 10}; {alpha: 1, top:0 }; {alpha: 0, top: -10}; 1; 0.15"/>
		<block>
			<bind name="fade" value="excursionOn; 10; {alpha: 1}; {alpha: 0}; {alpha: 1}; 1; 30"/>
			<block className="icon_mouse_right" type="native">
				<style>
					<marginLeft value="5px"/>
				</style>
			</block>
			<block type="text">
				<styleClass value="$TextHeaderBigDefault"/>
				<style>
					<marginLeft value="3px"/>
					<marginTop value="-3"/>
				</style>
				<text value="IDS_INSTRUCTION_CAMERA_EXCURSION_RESET"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="DefaultDock">
		<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
		<bind name="watchDH" value="'shipId'; ['dockEntity.shipSelection.evShipUpdate']; dockEntity.shipSelection.currentShipId"/>
		<bind name="watchDH" value="'shipIdForModuleInset'; ['dockEntity.shipSelection.evShipViewUpdate']; dockEntity.shipSelection.currentShipIdForModuleInset"/>
		<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerLobby"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInDivision'; 'playersInDivision'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; selectedBattle.type == BattleTypes.TRAINING_BATTLE ? 'serverState' : null"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; selectedBattle.type == BattleTypes.RANKED_BATTLE ? 'rankedBattlesSeason' : null"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'dockDefaultValues'; 'dockInitData,dockUpdateData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'slimClientData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'accountLevelInfo'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
		<bind name="firstEntityDH" value="'enterBattleEntity'; CC.enterBattle"/>
		<bind name="watchDH" value="'selectedBattle'; ['enterBattleEntity.enterBattle.evBattleTypesChanged']; enterBattleEntity.enterBattle.selectedBattle"/>
		<styleClass value="$Fullsize"/>
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'operationsAccountLocked';	['resourceEntity.accountResource.evOperationsLockChanged'];	resourceEntity.accountResource.operationsLocked"/>
		<bind name="watchDH" value="'accountGold';		['resourceEntity.accountResource.evChangedGold'];		resourceEntity.accountResource.gold"/>
		<bind name="watchDH" value="'accountCredits';	['resourceEntity.accountResource.evChangedCredit'];		resourceEntity.accountResource.credits"/>
		<bind name="watchDH" value="'accountFreeXP';		['resourceEntity.accountResource.evChangedFreeXP'];		resourceEntity.accountResource.freeXP"/>
		<bind name="collectionDH" value="CC.coach; 'coachCollection'"/>
		<bind name="entityDH" value="'coachEntity'; coachCollection[0].id"/>
		<bind name="watchDH" value="'showCoachScreen'; ['coachEntity.coach.evShow']; coachEntity.coach.show"/>
		<bind name="watchDH" value="'currentCoachHint'; ['coachEntity.coach.evShow']; coachEntity.coach.hint"/>
		<bind name="action" value="'evHideCoachScreen'; 'CoachScreenProxyUSS.onCouchScreenClose'; {}"/>
		<block>
			<bind name="fade" value="shipOverview.enabled; shipOverview.enabled ? 0.3 : 0.15; {alpha: 0}; {alpha: 1}; {alpha: 0}; 2; shipOverview.enabled ? 0.85 : 0.3"/>
			<style>
				<position value="absolute"/>
				<left value="36px"/>
				<top value="24px"/>
			</style>
			<block className="wows_logo_pb" type="native">
				<bind name="scaleX" value="0.4"/>
				<bind name="scaleY" value="0.4"/>
				<bind name="gotoAndStop!" value="realmConstants.wowsLogo"/>
			</block>
		</block>
		<block>
			<style>
				<right value="-300"/>
				<position value="absolute"/>
			</style>
			<block className="ArmourTooltipOptimizer">
				<style>
					<width value="300px"/>
				</style>
				<block type="text">
					<styleClass value="$TextHeaderWhiteBold"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="text" value="'0123456789 ' + tr('IDS_ALPHABET')"/>
				</block>
				<block type="text">
					<styleClass value="$TextHeaderWhite"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="text" value="tr('IDS_ALPHABET') + 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="var" value="{inPort: true}"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
			<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
			<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
			<styleClass value="$Fullsize"/>
			<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
			<bind name="watchDH" value="'inset'; ['dockEntity.insetComponent.evUpdate']; dockEntity.insetComponent.inset"/>
			<bind name="firstEntityDH" value="'loginEntity'; CC.loginData"/>
			<bind name="watchDH" value="'isLazyLogin'; ['loginEntity.loginData.evUpdate']; (loginEntity.loginData.currentLoginType == 'DEMO')"/>
			<block>
				<styleClass value="$Fullsize"/>
				<styleClass value="$TabWindowHolder"/>
				<bind name="child" value="inset; {shipId: shipId, shipIdForModuleInset: shipIdForModuleInset};	'PortMainInset';
																								'ProfileMainInset';
																								'ShipResearchMainInset';
																								'ShipModulesMainInset';
																								'ExteriorsMainInset';
																								'ClanMainInset';
																								'CrewsSelectMainInset'"/>
			</block>
			<block className="ShipCarouselContainer">
				<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
				<bind name="watchDH" value="'accountSlotsNum'; ['resourceEntity.accountResource.evChangedSlotsNum']; resourceEntity.accountResource.slotsNum"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'slimClientData'"/>
				<bind name="var" value="{delayedShowCarousel: false}"/>
				<bind name="dispatch" value="'addedToStage'; 'delayedAddedToStage'; null; 2; 1.5"/>
				<bind name="catch" value="'delayedAddedToStage'; {delayedShowCarousel: true}"/>
				<bind name="firstEntityDH" value="'dockEntity'; CC.dockDataMarker"/>
				<bind name="watchDH" value="'carouselVisibility'; ['dockEntity.dockData.evUpdate']; dockEntity.dockData.carouselVisibility &amp;&amp; delayedShowCarousel"/>
				<bind name="fade" value="carouselVisibility ;carouselVisibility ? 0.15 : 0;	{alpha: 0, top: 10};
																	{alpha: 1, top: 0};
																	{alpha: 0, top: 10}; 1; carouselVisibility ? 0.1 : 0"/>
				<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
				<bind name="feature" value="'17'; ''"/>
				<block className="DeclareBlurLayer">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="transparentPixel" type="native">
						<bind name="blurLayer" value="0"/>
					</block>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<style>
					<position value="absolute"/>
					<width value="100%"/>
					<bottom value="36px"/>
					<backgroundColor value="0x01000000"/>
				</style>
				<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
				<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
				<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
				<bind name="watch" value="'isSmallCarouselView'; (userPrefs.isSmallCarouselView == null) ? false : userPrefs.isSmallCarouselView"/>
				<bind name="catch" value="'carouselViewChanged'; {isSmallCarouselView: !(isSmallCarouselView)}; 'saveCarouselViewState'"/>
				<bind name="action" value="'saveCarouselViewState'; 'setUserPref' ; {value : isSmallCarouselView, name: 'isSmallCarouselView'}"/>
				<bind name="watch" value="'isFilteredShipsHided'; (userPrefs.isFilteredShipsHided == null) ? false : userPrefs.isFilteredShipsHided"/>
				<bind name="catch" value="'carouselHideFilteredChanged'; {isFilteredShipsHided: !(isFilteredShipsHided)}; 'saveCarouselHideFilteredState'"/>
				<bind name="action" value="'saveCarouselHideFilteredState'; 'setUserPref' ; {value : isFilteredShipsHided, name: 'isFilteredShipsHided'}"/>
				<bind name="catch" value="'carouselRowsCountChanged'"/>
				<block>
					<style>
						<position value="absolute"/>
						<top value="-30px"/>
					</style>
					<block className="CarouselFilters">
						<bind name="stageSize"/>
						<bind name="watch" value="'isFourRowsEnabled'; (stageHeight != null) ? (stageHeight &gt; (720 + 160)) : true"/>
						<bind name="watch" value="'isThreeRowsEnabled'; (stageHeight != null) ? (stageHeight &gt; (720 + 88)) : true"/>
						<bind name="watch" value="'curCarouselRows';	(userPrefs.curRowCountIndex == null)															? 0 :
									(userPrefs.curRowCountIndex == 2 &amp;&amp; isFourRowsEnabled)											? 2 :
									((userPrefs.curRowCountIndex == 2 || userPrefs.curRowCountIndex == 1) &amp;&amp; isThreeRowsEnabled)	? 1
																																	: 0"/>
						<bind name="action" value="'carouselRowsCountChangedByStageHeight'; 'setUserPref' ; {value : curCarouselRows, name: 'curRowCountIndex'}"/>
						<bind name="changeDispatch" value="curCarouselRows; 'carouselRowsCountChangedByStageHeight'"/>
						<bind name="feature" value="13;''"/>
						<bind name="action" value="(feature_13 == 'locked') ? 'addedToStage' : '';  'setFilterValue'; {type: 'special', field: 'IDS_WITH_COMMANDER', value: false, ident: 0 }"/>
						<bind name="action" value="(feature_13 == 'locked') ? 'addedToStage' : '';  'setFilterValue'; {type: 'special', field: 'IDS_WITHOUT_COMMANDER', value: false, ident: 0 }"/>
						<style>
							<marginLeft value="7px"/>
							<height value="30px"/>
							<flow value="horizontal"/>
						</style>
						<block>
							<bind name="name" value="'CarouselFiltersButton'"/>
							<block className="button_carousel_filters" type="native">
								<bind name="tooltip" value="'CarouselFiltersInfotip'; {	AppliedFiltersCounter: AppliedFiltersCounter,
														_isSmallCarouselView: isSmallCarouselView,
														_isFilteredShipsHided: isFilteredShipsHided}; TooltipBehaviour.verticalInfotipSwitch; null; 'carouselFiltersInfotipIsVIsible'"/>
								<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_TOOLTIP_CAROUSEL_FILTERS'}], _maxWidth: 240 }"/>
								<bind name="selected" value="carouselFiltersInfotipIsVIsible"/>
							</block>
						</block>
						<bind name="catch" value="'shipNameFIlterInfotipSelectedChanged'"/>
						<bind name="firstEntityDH" value="'panelEntity'; CC.filterPanelComponent"/>
						<bind name="watchDH" value="'selectedFilters'; ['panelEntity.shipRestrictions.evUpdate']; panelEntity.shipRestrictions.selectedFilters"/>
						<block>
							<style>
								<height value="32px"/>
								<marginTop value="-4px"/>
								<marginRight value="12px"/>
								<marginLeft value="4px"/>
							</style>
							<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
							<bind name="firstEntityDH" value="'enterBattleEntity'; CC.enterBattle"/>
							<bind name="firstEntityDH" value="'trainingRoomEntity'; CC.trainingRoomWindowState"/>
							<bind name="watchDH" value="'selectedBattle'; ['enterBattleEntity.enterBattle.evBattleTypesChanged']; enterBattleEntity.enterBattle.selectedBattle"/>
							<block>
								<block className="HasTrainingRoomRestrictions">
									<bind name="watchDH" value="'shipRestrictions' ; ['trainingRoomEntity.shipRestrictions.evUpdate']; trainingRoomEntity.shipRestrictions.selectedFilters"/>
									<bind name="watchDH" value="'shipsCount' ; ['trainingRoomEntity.divisionRestrictions.evUpdate']; trainingRoomEntity.divisionRestrictions.shipsCount"/>
									<bind name="watchDH" value="'typesCount' ; ['trainingRoomEntity.divisionRestrictions.evUpdate']; trainingRoomEntity.divisionRestrictions.typesCount"/>
									<bind name="primaryEntityDH" value="'defaultRestrictionsEntity'; CC.battleType; BattleTypes.TRAINING_BATTLE"/>
									<bind name="watchDH" value="'defaultTypesCount' ; ['defaultRestrictionsEntity.divisionRestrictions.evUpdate']; defaultRestrictionsEntity.divisionRestrictions.typesCount"/>
									<bind name="collectionDH" value="CC.shipFilterItem; 'idsfilters'+'ROOT'"/>
									<bind name="collectionDesign" value="'DES_'+'idsfilters'+'ROOT'; 'idsfilters'; {'filter':$entity.shipFilterItem.type == 'shipId' &amp;&amp; isIn($entity.id, shipRestrictions)}; []"/>
									<bind name="collectionDH" value="CC.shipFilterItem; 'levelfilters'+'ROOT'"/>
									<bind name="collectionDesign" value="'DES_'+'levelfilters'+'ROOT'; 'levelfilters'; {'filter':$entity.shipFilterItem.type == 'level' &amp;&amp; isIn($entity.id, shipRestrictions)}; []"/>
									<bind name="collectionDH" value="CC.shipFilterItem; 'nationfilters'+'ROOT'"/>
									<bind name="collectionDesign" value="'DES_'+'nationfilters'+'ROOT'; 'nationfilters'; {'filter':$entity.shipFilterItem.type == 'nation' &amp;&amp; isIn($entity.id, shipRestrictions)}; []"/>
									<bind name="collectionFields" value="levelfilters; ['shipFilterItem.field']"/>
									<bind name="contains" value="typesCount; $item[1] == -1; 'isAnyShipTypeNotAllowed'"/>
									<bind name="watch" value="'isCarriersRestricted'; typesCount[ShipTypes.AircraftCarrier] &amp;&amp; typesCount[ShipTypes.AircraftCarrier][1] != defaultTypesCount[ShipTypes.AircraftCarrier][1]"/>
									<bind name="watch" value="'isBattleShipsRestricted'; typesCount[ShipTypes.BattleShip] &amp;&amp; typesCount[ShipTypes.BattleShip][1] != defaultTypesCount[ShipTypes.BattleShip][1]"/>
									<bind name="watch" value="'isCruisersRestricted'; typesCount[ShipTypes.Cruiser] &amp;&amp; typesCount[ShipTypes.Cruiser][1] != defaultTypesCount[ShipTypes.Cruiser][1]"/>
									<bind name="watch" value="'isDestroyersRestricted'; typesCount[ShipTypes.Destroyer] &amp;&amp; typesCount[ShipTypes.Destroyer][1] != defaultTypesCount[ShipTypes.Destroyer][1]"/>
									<bind name="watch" value="'isAnyShipTypeRestricted'; isCarriersRestricted || isBattleShipsRestricted || isCruisersRestricted || isDestroyersRestricted"/>
									<bind name="watch" value="'hasTrainingRoomRestrictions'; (idsfilters.length &gt; 0)			||
												(shipTypefilters.length &gt; 0)	||
												(levelfilters.length &gt; 0)		||
												(nationfilters.length &gt; 0)		||
												isShipFilterRestrictionsVisible"/>
									<bind name="watch" value="'isShipFilterRestrictionsVisible'; isAnyShipTypeRestricted &amp;&amp; isAnyShipTypeNotAllowed"/>
								</block>
								<bind name="watch" value="'pveFilterVisible'; selectedBattle.type == BattleTypes.PVE_BATTLE"/>
								<bind name="watch" value="'trainingFilterVisible'; trainingRoomEntity &amp;&amp; hasTrainingRoomRestrictions"/>
								<bind name="watch" value="'rankedFilterVisible'; selectedBattle.type == BattleTypes.RANKED_BATTLE"/>
								<bind name="watch" value="'eventFilterVisible'; selectedBattle.type == BattleTypes.EVENT_BATTLE"/>
								<bind name="watch" value="'clanFilterVisible'; selectedBattle.type == BattleTypes.CLAN_BATTLE"/>
								<bind name="watch" value="'battleTypeFilterVisible'; pveFilterVisible || trainingFilterVisible || rankedFilterVisible || eventFilterVisible || clanFilterVisible"/>
								<bind name="instance" value="'AppliedBattleTypeFilter'; battleTypeFilterVisible ? {}	: null"/>
							</block>
							<block>
								<bind name="instance" value="'AppliedFilter'; {_filterType: 'shipName', shipNameFilterInfotipSelected: shipNameFilterInfotipSelected, _panelEntityId: panelEntity.id}"/>
								<bind name="instance" value="'AppliedFilter'; {_filterType: 'level', _panelEntityId: panelEntity.id}"/>
								<bind name="instance" value="'AppliedFilter'; {_filterType: 'shipType', _panelEntityId: panelEntity.id}"/>
								<bind name="instance" value="'AppliedFilter'; {_filterType: 'nation', _panelEntityId: panelEntity.id}"/>
								<bind name="instance" value="'AppliedFilter'; {_filterType: 'special', _panelEntityId: panelEntity.id}"/>
								<style>
									<flow value="horizontal"/>
								</style>
							</block>
							<bind name="instance" value="'ResetAllFilters'; selectedFilters.length &gt; 0 ? {} : null"/>
							<style>
								<flow value="horizontal"/>
							</style>
						</block>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="instance" value="'ShipCarousel'; {	_addShipSlotsBuyBlocks: (feature_17 != 'locked'),
											_shipFilterId: CC.mainShipFilter,
											_scrollToStart: true, 
											isSmallCarouselView: isSmallCarouselView,
											_isFilteredShipsHided: isFilteredShipsHided}"/>
				</block>
				<block>
					<bind name="collectionDH" value="CC.ownShip; 'playerShips'"/>
					<bind name="transition" value="rollOver; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: 10}; 0; rollOver ? 0 : 3"/>
					<style>
						<position value="absolute"/>
						<right value="38px"/>
						<top value="-37px"/>
						<flow value="horizontal"/>
					</style>
					<block>
						<style>
							<marginRight value="2px"/>
						</style>
						<block type="text">
							<style>
								<alpha value="0.75"/>
								<right value="0px"/>
								<hitTest value="false"/>
							</style>
							<styleClass value="$TextDefaultWhite"/>
							<bind name="class" value="'$Bold'"/>
							<bind name="text" value="tr('IDS_SHIPS')+tr('IDS_COLON')+ ' ' + playerShips.length"/>
						</block>
						<block type="text">
							<bind name="visible" value="feature_17 != 'locked'"/>
							<style>
								<alpha value="0.75"/>
								<right value="0px"/>
								<marginTop value="-6px"/>
								<hitTest value="false"/>
							</style>
							<styleClass value="$TextDefaultWhite"/>
							<bind name="class" value="'$Bold'"/>
							<bind name="text" value="tr('IDS_FREE_SLOTS') + ' ' + accountSlotsNum"/>
						</block>
					</block>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<top value="-26px"/>
						<right value="16px"/>
					</style>
					<block className="button_settings_small" type="native">
						<params>
							<param name="name" value="peculiarityFilter"/>
						</params>
						<bind name="selected" value="contentFiltersInfotipIsVIsible"/>
						<bind name="tooltip" value="'PeculiarityFiltersContent'; {}; TooltipBehaviour.verticalInfotipSwitchUp; null; 'contentFiltersInfotipIsVIsible'"/>
						<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_TOOLTIP_CAROUSEL_FILTERS_SPECIAL'}], _maxWidth: 240 }"/>
					</block>
				</block>
			</block>
			<block className="ExcursionHintBlock">
				<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
				<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
				<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
				<bind name="watch" value="'carouselRows'; (userPrefs.curRowCountIndex == null) ? 0 : userPrefs.curRowCountIndex"/>
				<bind name="watch" value="'isSmallCarouselView'; (userPrefs.isSmallCarouselView == null) ? false : userPrefs.isSmallCarouselView"/>
				<bind name="style" value="'bottom'; isSmallCarouselView	?	(carouselRows == 1) ? '233px' :
													(carouselRows == 2) ? '296px'
																		: '170px'
												: '170px'"/>
				<styleClass value="$MiddleAligned"/>
				<style>
					<position value="absolute"/>
				</style>
				<bind name="fade" value="excursionOn; 0.15; {alpha: 0, top: 10}; {alpha: 1, top:0 }; {alpha: 0, top: -10}; 1; 0.15"/>
				<block>
					<bind name="fade" value="excursionOn; 10; {alpha: 1}; {alpha: 0}; {alpha: 1}; 1; 30"/>
					<block className="icon_mouse_right" type="native">
						<style>
							<marginLeft value="5px"/>
						</style>
					</block>
					<block type="text">
						<styleClass value="$TextHeaderBigDefault"/>
						<style>
							<marginLeft value="3px"/>
							<marginTop value="-3"/>
						</style>
						<text value="IDS_INSTRUCTION_CAMERA_EXCURSION_RESET"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="instance" value="'ArmourDisplay'; dockDefaultValues.armourVisibility == true ? {shipId: shipIdForModuleInset} : null "/>
			</block>
			<block>
				<style>
					<top value="98px"/>
					<right value="10px"/>
					<marginBottom value="2px"/>
					<position value="absolute"/>
					<height value="100%"/>
				</style>
				<bind name="instance" value="'ShipPanel'; shipIdForModuleInset 	? { shipId: shipIdForModuleInset}
																: null"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<width value="100%"/>
					<height value="60px"/>
					<mouseEnabled value="false"/>
				</style>
				<block>
					<styleClass value="$MiddleAlignedAbsolutely"/>
					<style>
						<hitTest value="false"/>
					</style>
					<block>
						<style>
							<backgroundImage value="symbol:dock_menu_bg_tile"/>
							<backgroundRepeatX value="true"/>
							<width value="2200px"/>
							<height value="158px"/>
							<alpha value="0.8"/>
						</style>
					</block>
					<block className="dock_menu_bg_clip" type="native">
						<style>
							<alpha value="0.8"/>
						</style>
					</block>
					<block>
						<style>
							<backgroundImage value="symbol:dock_menu_bg_tile"/>
							<backgroundRepeatX value="true"/>
							<width value="2200px"/>
							<height value="158px"/>
							<alpha value="0.8"/>
						</style>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<bind name="collectionDH" value="CC.userTask; 'userTaskCollection'"/>
					<bind name="entityDH" value="'userTaskEntity'; userTaskCollection[0].id"/>
					<bind name="watchDH" value="'currentUserTaskFlag'; ['userTaskEntity.userTask.evFlagChanged']; userTaskEntity.userTask.flag"/>
					<bind name="firstEntityDH" value="'loginEntity'; CC.loginData"/>
					<bind name="watchDH" value="'isExternalPlatformClient'; ['loginEntity.loginData.evUpdate']; loginEntity.loginData.isExternalPlatformClient"/>
					<style>
						<width value="50%"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<block>
							<bind name="instance" value="'SettingsButtonPort'; {}"/>
						</block>
						<block>
							<block>
								<bind name="instance" value="'PlayerDogTagButtonPort'; {}"/>
							</block>
						</block>
						<block>
							<style>
								<width value="1280:8,1920:12aw"/>
							</style>
						</block>
						<block>
							<style>
								<width value="100%f"/>
							</style>
							<block>
								<style>
									<width value="100%f"/>
								</style>
								<bind name="instance" value="'ButtonAccount'; {}"/>
							</block>
						</block>
						<block>
							<style>
								<width value="1280:16,1920:32aw"/>
							</style>
						</block>
						<block>
							<bind name="instance" value="'PortSwitcher'; {}"/>
						</block>
						<block>
							<style>
								<width value="1280:16,1920:32aw"/>
							</style>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'slimClientData'"/>
						<bind name="action" value="'click'; 'ServerUIDataUSS.setUserTaskExecuted'; { taskId: UserTasksFlags.KNOWS_ABOUT_DIVISION_IN_RANKES }"/>
						<bind name="watch" value="'userDoNotWatchRankDivision'; ((currentUserTaskFlag &amp; UserTasksFlags.KNOWS_ABOUT_DIVISION_IN_RANKES) == 0)"/>
						<bind name="instance" value="'DivisionButtonPort'; slimClientData.isFull ? {} : null"/>
					</block>
					<block>
						<style>
							<width value="1280:89,1920:101aw"/>
						</style>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<styleClass value="$MiddleAlignedAbsolutely"/>
					<block>
						<bind name="watchDH" value="'isSelfPlayerCommander'; ['selfPlayerEntity.preBattlePlayerSimple.evIsCommanderChanged']; selfPlayerEntity.preBattlePlayerSimple.isCommander"/>
						<style>
							<marginTop value="4px"/>
						</style>
						<bind name="instance" value="'StartBattleButtonBig'; !(divisionData.divisionExist) || isSelfPlayerCommander) ? {} : null"/>
						<bind name="instance" value="'BigReadyForFormationBattleButton'; (divisionData.divisionExist) &amp;&amp; !isSelfPlayerCommander ? {} : null"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block>
					<bind name="soundSet" value="'resources_widget'"/>
					<style>
						<width value="50%"/>
					</style>
					<block>
						<style>
							<width value="1280:85,1920:97aw"/>
						</style>
					</block>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<bind name="instance" value="'BattleTypeChooser'; {_fromDock: true, _canShowTip: true}"/>
					</block>
					<block>
						<style>
							<width value="1280:14,1920:30aw"/>
						</style>
					</block>
					<block>
						<block>
							<bind name="name" value="'buttonBuyGold'"/>
							<bind name="watchDH" value="'isSyncedWithWallet'; ['resourceEntity.accountResource.evChangedIsSyncedWithWallet']; resourceEntity.accountResource.isSyncedWithWallet"/>
							<bind name="watchDH" value="'walletAvailable'; ['resourceEntity.accountResource.evChangedWalletStatus']; resourceEntity.accountResource.walletStatus"/>
							<bind name="watchDH" value="'splitGold'; ['resourceEntity.accountResource.evUpdateSplitCurrency']; resourceEntity.accountResource.splitGold"/>
							<bind name="watch" value="'showWGWalletWarning'; (!(isLazyLogin) &amp;&amp; ((isSyncedWithWallet == false) || (walletAvailable == false)))"/>
							<block>
								<style>
									<backgroundColor value="0x01000000"/>
								</style>
								<bind name="style" value="'alpha'; showWGWalletWarning ? 0.5 : 1"/>
								<bind name="watch" value="'isOpenPremInClientBrowser'; ( (isExternalPlatformClient == true || realmConstants.premshopUIAvailable == true) &amp;&amp; !(isLazyLogin) )"/>
								<bind name="action" value="'click';	isOpenPremInClientBrowser 	? 	null 
																				:	isLazyLogin	? 'forceCreateAccount' 
																								: 'gotoUrlByIdent'; {ident: URL.BUY_GOLD}"/>
								<bind name="request" value="'click'; isOpenPremInClientBrowser 	? 'webBrowser' 
																				: null; {url: URL.BUY_GOLD_IN_GAME}"/>
								<bind name="tooltip" value="'DockResourcesWidgetTooltip';	isLazyLogin	?	{	_currency: 				'gold', 
																								_showSplitCurrency: 	splitGold,
																								_multiParagraphArray: 	[{_paragraphText: 		'IDS_GOLD_PURCHACE_NOT_AVAILABLE_FOR_LAZY_TOOLTIP'}],
																								_mouseInstructions: 	[{	_type: 				'left', 
																															_instructionText: 	'IDS_REGISTER_ACCOUNT_MOUSE_INSTRUCTION'}],  
																								_maxWidth: 				250 }

																						:	{	_currency: 				'gold', 
																								_showSplitCurrency: 	splitGold,
																								_mouseInstructions: 	[{	_type: 				'left', 
																															_instructionText:  	isOpenPremInClientBrowser	? tr('IDS_HINT_OPEN_INGAME_STORE')
																																											: tr('IDS_BUY_GOLD_LC') + '. ' + tr('IDS_HINT_REDIRECT_TO_STORE')} ], 
																								_maxWidth: 				250 }"/>
								<bind name="instance" value="'DockResourcesWidget'; {_name: 'goldBalance', _rQuantity: accountGold, _currency: 'gold', _label: 'IDS_GOLD'} "/>
							</block>
							<block>
								<styleClass value="$FullsizeAbsolute"/>
								<bind name="instance" value="'WGWalletServiceStatus'; showWGWalletWarning ? {_walletAvailable: walletAvailable, _isSyncedWithWallet: isSyncedWithWallet } : null"/>
							</block>
						</block>
						<block>
							<style>
								<width value="1280:10,1920:18aw"/>
							</style>
						</block>
						<block>
							<bind name="name" value="'buttonExchangeGold'"/>
							<bind name="watchDH" value="'splitCredits'; ['resourceEntity.accountResource.evUpdateSplitCurrency']; resourceEntity.accountResource.splitCredits"/>
							<bind name="watchDH" value="'externalCredits'; ['resourceEntity.accountResource.evUpdateSplitCurrency']; resourceEntity.accountResource.externalCredits"/>
							<block>
								<style>
									<backgroundColor value="0x01000000"/>
								</style>
								<bind name="style" value="'alpha'; externalCredits &amp;&amp; showWGWalletWarning ? 0.5 : 1"/>
								<bind name="action" value="'click'; isLazyLogin ? 'forceCreateAccount' : 'creditsGoldWindow'"/>
								<bind name="instance" value="'DockResourcesWidget'; {_name: 'creditBalance', _rQuantity: accountCredits, _currency: 'credits', _label: 'IDS_CONVERT_CREDITS'} "/>
								<bind name="tooltip" value="'DockResourcesWidgetTooltip'; isLazyLogin	?	{	_currency: 'credits', _showSplitCurrency: splitCredits,
																							_multiParagraphArray: [{_paragraphText: 'IDS_GOLD_CONVERTION_NOT_AVAILABLE_FOR_LAZY_TOOLTIP'}],
																							_mouseInstructions: [{_type: 'left', _instructionText: 'IDS_REGISTER_ACCOUNT_MOUSE_INSTRUCTION'}],  _maxWidth: 250 }
																						:	{	_currency: 'credits', _showSplitCurrency: splitCredits,
																							_mouseInstructions: [{_type: 'left', _instructionText: 'IDS_TOOLTIP_CREDIT_BALANCE'}], _maxWidth: 250 }"/>
							</block>
							<block>
								<styleClass value="$FullsizeAbsolute"/>
								<bind name="instance" value="'WGWalletServiceStatus'; externalCredits &amp;&amp; showWGWalletWarning ? {_walletAvailable: walletAvailable, _isSyncedWithWallet: isSyncedWithWallet } : null"/>
							</block>
						</block>
						<block>
							<style>
								<width value="1280:10,1920:18aw"/>
							</style>
						</block>
						<block>
							<bind name="name" value="'buttonConvertExp'"/>
							<bind name="action" value="'click'; isLazyLogin ? 'forceCreateAccount' : 'xpFreeExpWindow'"/>
							<bind name="feature" value="5; 'click'"/>
							<bind name="visible" value="feature_5 != 'locked'"/>
							<block>
								<bind name="tooltip" value="'DockResourcesWidgetTooltip'; isLazyLogin	?	{ _multiParagraphArray: [{_paragraphText: 'IDS_EXP_CONVERTION_NOT_AVAILABLE_FOR_LAZY_TOOLTIP'}],
																							  _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_REGISTER_ACCOUNT_MOUSE_INSTRUCTION'}],  _maxWidth: 250 }
																						:	{ _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_TOOLTIP_CONVERT_EXP'}], _maxWidth: 250 }"/>
								<bind name="instance" value="'DockResourcesWidget'; {_name: 'freeExpBalance', _rQuantity: accountFreeXP, _currency: 'freexp', _label: 'IDS_CONVERT_FREE_EXPERIENCE'}"/>
							</block>
							<block>
								<bind name="fade" value="(feature_5 == 'new'); 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
								<style>
									<position value="absolute"/>
									<right value="-7px"/>
									<top value="7px"/>
								</style>
								<bind name="instance" value="'MarkerNewAttention'; { }"/>
							</block>
						</block>
						<block>
							<style>
								<width value="1280:9,1920:13aw"/>
							</style>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<position value="absolute"/>
					<height value="60px"/>
					<top value="59"/>
				</style>
				<block className="tab_bar_bg" type="native">
					<style>
						<height value="29px"/>
					</style>
					<block>
						<bind name="watch" value="'isEnableTabButton'; (shipId != 0)"/>
						<style>
							<marginLeft value="2px"/>
							<marginRight value="2px"/>
						</style>
						<block>
							<bind name="instance" value="'MainTabButton'; { 	_label: 'IDS_DOCK',
															_name: 'DockSubMenuPort',
															_tooltipData: { paragraphText: 'IDS_TOOLTIP_TAB_DOCK' },
															_selected: (inset == LobbyConstants.DOCK &amp;&amp; crewInset != 1),
															_action: 'changeInset',
															_actionParams: { inset: LobbyConstants.DOCK },
															_dispatch: 'hideCrew'
															}"/>
						</block>
						<block className="divider_v" type="native">
							<style>
								<height value="25px"/>
								<marginTop value="2px"/>
							</style>
						</block>
						<block>
							<bind name="visible" value="feature_17 != 'locked'"/>
							<bind name="feature" value="'17'; 'click'"/>
							<bind name="feature" value="'12'; ''"/>
							<bind name="controller" value="lesta.dialogs.dock.controllers.ControllerModernizations"/>
							<bind name="watch" value="'isNewModulesMarker'; (modernizationsSlotsList.length &gt; 0) &amp;&amp; ((feature_17 == 'new') || (feature_12 == 'new'))"/>
							<bind name="name" value="'moduleTabBlock'"/>
							<bind name="stageCoord" value="true"/>
							<bind name="primaryEntityDH" value="'exploreModuleContextTip'; CC.contextGuidingTip; SC.Context_guiding_tip.TIP_TYPES.DOCK_MODULES_EXPLORE"/>
							<bind name="primaryEntityDH" value="'buyModuleContextTip'; CC.contextGuidingTip; SC.Context_guiding_tip.TIP_TYPES.DOCK_MODULES_BUY"/>
							<bind name="watchDH" value="'moduleContextGuidingTip'; ['exploreModuleContextTip.contextGuidingTip.evActiveChanged', 'buyModuleContextTip.contextGuidingTip.evActiveChanged']; buyModuleContextTip.contextGuidingTip.active == true ? buyModuleContextTip : exploreModuleContextTip"/>
							<block>
								<bind name="instance" value="'MainTabButton'; feature_17 != 'locked' ? {	_label: 'IDS_MODULES',
																						_name: 'DockSubMenuModules',
																						_tooltipData: isEnableTabButton ?	{ paragraphText: 'IDS_TOOLTIP_TAB_EXTERIOR' }
																														:	{ mouseInstructions: [{ _type: 'warning', _instructionText: tr('IDS_WARNING_NO_SHIPS_IN_PORT') }],
																															paragraphText: null },
																						_selected: (inset == LobbyConstants.SHIP_MODULES &amp;&amp; crewInset != 1),
																						_action: 'changeInset',
																						_actionParams: { inset: LobbyConstants.SHIP_MODULES },
																						_dispatch: 'hideCrew',
																						_enabled: isEnableTabButton,
																						_isNewMarker: isNewModulesMarker
																						}
																					: null"/>
								<bind name="instance" value="'ContextGuidingTipHub'; {
												_tooltipID: moduleContextGuidingTip.contextGuidingTip.id,
												_tipPositioning: 'bottom', 
												_extraCondition: true,
												_offset: 5, 
												_screenOffset : 0, 
												_hideOnReasonClick :false

							}"/>
							</block>
						</block>
						<block>
							<style>
								<height value="100%"/>
							</style>
							<bind name="visible" value="feature_17 != 'locked'"/>
							<block className="divider_v" type="native">
								<style>
									<width value="3px"/>
									<height value="25px"/>
									<marginTop value="2px"/>
								</style>
							</block>
						</block>
						<block>
							<bind name="visible" value="isExteriorUnlock"/>
							<bind name="feature" value="'14'; 'click'"/>
							<bind name="feature" value="'15'; ''"/>
							<bind name="primaryEntityDH" value="'shipEntity'; CC.ownShip; shipId"/>
							<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
							<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
							<bind name="collectionDH" value="CC.ownShip; 'playerShips'"/>
							<bind name="watchDH" value="'canEquipCamouflage'; ['shipEntity.ownShip.evUpdateConfig']; shipEntity.ownShip.canEquipCamouflage"/>
							<bind name="watch" value="'isNewExteriorMarker'; (canEquipCamouflage == true) &amp;&amp; ((feature_14 == 'new') || (feature_15 == 'new'))"/>
							<bind name="watch" value="'isExteriorUnlock'; feature_14 != 'locked' || feature_15 != 'locked'"/>
							<style>
								<height value="100%"/>
							</style>
							<bind name="stageCoord" value="true"/>
							<bind name="name" value="'signalsTabBlock'"/>
							<block>
								<bind name="instance" value="'MainTabButton'; isExteriorUnlock 	? {	_label: 'IDS_EXTERIOR',
																					_name: 'DockSubMenuExterior',
																					_tooltipData: isEnableTabButton ? { paragraphText: 'IDS_TOOLTIP_TAB_EXTERIOR' }
																													: { mouseInstructions: [{_type: 'warning', _instructionText: tr('IDS_WARNING_NO_SHIPS_IN_PORT')}],
																														paragraphText: null },
																					_selected: (inset ==  LobbyConstants.SHIP_EXTERIOR &amp;&amp; crewInset != 1),
																					_action: 'changeInset',
																					_actionParams: { inset: LobbyConstants.SHIP_EXTERIOR },
																					_dispatch: 'hideCrew',
																					_enabled: isEnableTabButton,
																					_isNewMarker: isNewExteriorMarker
																					}
																				: null"/>
							</block>
						</block>
						<block>
							<style>
								<height value="100%"/>
							</style>
							<bind name="visible" value="isExteriorUnlock"/>
							<block className="divider_v" type="native">
								<style>
									<width value="3px"/>
									<height value="25px"/>
									<marginTop value="2px"/>
								</style>
							</block>
						</block>
						<block>
							<bind name="feature" value="'17'; 'click'"/>
							<bind name="visible" value="feature_17 != 'locked'"/>
							<bind name="primaryEntityDH" value="'exploreShipContextTip'; CC.contextGuidingTip; SC.Context_guiding_tip.TIP_TYPES.DOCK_TECH_TREE"/>
							<bind name="primaryEntityDH" value="'buyShipContextTip'; CC.contextGuidingTip; SC.Context_guiding_tip.TIP_TYPES.DOCK_TECH_TREE_BUY"/>
							<bind name="watchDH" value="'shipContextGuidingTip'; ['exploreShipContextTip.contextGuidingTip.evActiveChanged', 'buyShipContextTip.contextGuidingTip.evActiveChanged']; buyShipContextTip.contextGuidingTip.active == true ? buyShipContextTip : exploreShipContextTip"/>
							<block>
								<block>
									<bind name="instance" value="'MainTabButton'; feature_17 != 'locked' ? {	_label: 'IDS_RESEARCH',
																							_name: 'DockSubMenuResearch',
																							_tooltipData: { paragraphText: 'IDS_TOOLTIP_TAB_RESEARCH' },
																							_selected: (inset == LobbyConstants.SHIP_RESEARCH_TREE &amp;&amp; crewInset != 1),
																							_action: 'changeInset',
																							_actionParams: { inset: LobbyConstants.SHIP_RESEARCH_TREE },
																							_dispatch: 'hideCrew'
																							}
																						: null"/>
								</block>
								<bind name="instance" value="'ContextGuidingTipHub'; {
												_tooltipID: shipContextGuidingTip.contextGuidingTip.id, 
												_tipPositioning: 'bottom', 
												_extraCondition: true, 
												_offset: 5, 
												_screenOffset : 0, 
												_hideOnReasonClick :false

							}"/>
							</block>
						</block>
						<block>
							<style>
								<height value="100%"/>
							</style>
							<bind name="visible" value="feature_17 != 'locked'"/>
							<block className="divider_v" type="native">
								<style>
									<width value="3px"/>
									<height value="25px"/>
									<marginTop value="2px"/>
								</style>
							</block>
						</block>
						<block>
							<bind name="feature" value="'16'; ''"/>
							<bind name="primaryEntityDH" value="'newCardsEntity'; CC.newContent; SC.Common.CONTENT_CATEGORY.CARDS"/>
							<bind name="watchDH" value="'newCardsCounter'; ['newCardsEntity.newContent.evCountChanged']; newCardsEntity.newContent.count"/>
							<bind name="instance" value="'MainTabButton'; {	_label: 'IDS_PROFILE',
															_name: 'DockSubMenuProfile',
															_tooltipData: { paragraphText: 'IDS_TOOLTIP_TAB_PROFILE' },
															_selected: (inset == LobbyConstants.PLAYER_PROFILE &amp;&amp; crewInset != 1),
															_action: 'changeInset',
															_actionParams: { 	inset: LobbyConstants.PLAYER_PROFILE,
																				isPortBannerClicked: false },
															_dispatch: 'hideCrew',
															_newContentCounter: newCardsCounter,
															_isNewMarker: (feature_16 == 'new')
															}"/>
						</block>
						<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
						<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
						<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
						<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
						<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; selfPlayerEntity.clanman.clanId"/>
						<bind name="watchDH" value="'clanTag'; ['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
						<bind name="watchDH" value="'clanName'; ['clanEntity.clanExtended.evNameChanged']; clanEntity.clanExtended.name"/>
						<bind name="watch" value="'isClanTabVisible'; (selfPlayerEntity.clanman) || (feature_27 != 'locked')"/>
						<block>
							<bind name="visible" value="isClanTabVisible"/>
							<style>
								<height value="100%"/>
							</style>
							<block className="divider_v" type="native">
								<style>
									<width value="3px"/>
									<height value="25px"/>
									<marginTop value="2px"/>
								</style>
							</block>
						</block>
						<block>
							<bind name="visible" value="isClanTabVisible"/>
							<bind name="feature" value="'27'; 'click'"/>
							<bind name="watch" value="'clanLabel'; (selfPlayerEntity.clanman) ? '['+clanTag+']' : toUpperCase(tr('IDS_CLANS'))"/>
							<bind name="watch" value="'clanHint'; (selfPlayerEntity.clanman) ? 'IDS_TOOLTIP_TAB_CLAN' : 'IDS_HINT_CLANS'"/>
							<block>
								<bind name="instance" value="'MainTabButton'; isClanTabVisible 	? {	_label: clanLabel,
																					_name: 'DockSubMenuClan',
																					_tooltipData: { paragraphText: clanHint },
																					_selected: (inset == LobbyConstants.CLAN &amp;&amp; crewInset != 1),
																					_action: 'changeInset',
																					_actionParams: { 	inset: LobbyConstants.CLAN,
																										pageData: {'url': URL.CLANS_IN_GAME}
																									},
																					_dispatch: 'hideCrew',
																					_isNewMarker: ((feature_27 == 'new') &amp;&amp; !(selfPlayerEntity.clanman))
																					}
																				: null}"/>
							</block>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
		</block>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<bind name="catch" value="'stageCoordChanged'"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="fade" value="showCoachScreen; 0.15; {alpha: 0}; {alpha: 1}; {alpha: 0}; 1"/>
			<bind name="watch" value="'coachHint'; currentCoachHint ? currentCoachHint : 0"/>
			<bind name="childParentScope" value="coachHint; {};	{0: 'CoachScreenBattleType',
												 1: 'CoachScreenResearch',
												 2: 'CoachScreenCrew',
												 3: 'CoachScreenModernizations',
												 4: 'CoachScreenSignals',
												 5: 'CoachScreenCamo',
												 6: 'CoachScreenFlags',
												 27: 'CoachScreenCompleteAccount',
												 28: 'CoachScreenCompleteAccount',
												 29: 'CoachScreenCompleteAccount'}"/>
		</block>
	</block>
	<block className="DivisionButtonPort">
		<params>
			<param name="name" value="createDivision"/>
		</params>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'isSelfPlayerCommander'; ['selfPlayerEntity.preBattlePlayerSimple.evIsCommanderChanged']; selfPlayerEntity.preBattlePlayerSimple.isCommander"/>
		<bind name="watchDH" value="'selfPreBattleId'; ['selfPlayerEntity.preBattlePlayerSimple.evPreBattleIdChanged']; selfPlayerEntity.preBattlePlayerSimple.preBattleId"/>
		<bind name="watch" value="'preBattleTypeStr'; 	(selectedBattle.type == BattleTypes.CLUB_BATTLE)	? 'party'
																							: 'division'"/>
		<bind name="collectionDH" value="CC.preBattlePlayerSimple; 'preBattlePlayers'; 'byPreBattle.' + selfPreBattleId + '.preBattleMembers'"/>
		<bind name="watch" value="'curPlayersInFormation'; preBattlePlayers.length"/>
		<bind name="watch" value="'isInDivision'; curPlayersInFormation &gt; 0"/>
		<bind name="firstEntityDH" value="'enterBattleEntity'; CC.enterBattle"/>
		<bind name="watchDH" value="'selectedBattle'; ['enterBattleEntity.enterBattle.evBattleTypesChanged']; enterBattleEntity.enterBattle.selectedBattle"/>
		<bind name="primaryEntityDH" value="'battleTypeEntity'; CC.battleType; selectedBattle.type"/>
		<bind name="watch" value="'maxPlayersInFormation'; battleTypeEntity.divisionRestrictions.shipsCount[1]"/>
		<bind name="watch" value="'minPlayersInDivision'; battleTypeEntity.battleType.minPlayersInDivision"/>
		<bind name="watch" value="'isReadyForBattle'; minPlayersInDivision &lt;= curPlayersInFormation"/>
		<bind name="firstEntityDH" value="'enterBattleEntity'; CC.enterBattle"/>
		<bind name="watchDH" value="'selectedBattle'; ['enterBattleEntity.enterBattle.evBattleTypesChanged']; enterBattleEntity.enterBattle.selectedBattle"/>
		<bind name="action" value="'click'; 'ServerUIDataUSS.setUserTaskExecuted'; { taskId: UserTasksFlags.KNOWS_ABOUT_DIVISION_IN_RANKES }"/>
		<bind name="tooltip" value="'ResizableFormationWidget'; {_isFromDockFormationBtn: true}; TooltipBehaviour.verticalInfotipSwitch; null"/>
		<bind name="tooltip" value="'ButtonDivisionTooltip'; {_battleType: selectedBattle.type, _isFormationsEnabled: true}"/>
		<bind name="soundSet" value="'dropmenu_button'"/>
		<style>
			<height value="60px"/>
			<backgroundColor value="0x01000000"/>
		</style>
		<block>
			<bind name="visible" value="!isInDivision"/>
			<bind name="transition" value="rollOver &amp;&amp; !(mouseDown); 0.07; {alpha: 0.85}; {alpha: 1.0}"/>
			<style>
				<marginTop value="15px"/>
				<right value="0"/>
			</style>
			<block type="text">
				<style>
					<multiline value="false"/>
				</style>
				<styleClass value="$TextDefaultBold17NM"/>
				<bind name="class" value="isReadyForBattle ? '$FontColorGolden' : divisionEntranceData.seekerStatus ? '$FontColorTurquoise' : '$FontColorBlueish'"/>
				<bind name="text" value="divisionEntranceData.seekerStatus ? 'IDS_WANT_IN_DIVISION' : 'IDS_DIVISIONS'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="!isInDivision"/>
			<style>
				<marginTop value="8"/>
				<right value="0"/>
			</style>
			<block type="text">
				<style>
					<multiline value="false"/>
				</style>
				<bind name="transition" value="rollOver &amp;&amp; !(mouseDown); 0.07; {alpha: 0.75}; {alpha: 1.0}"/>
				<styleClass value="$TextDefault13NM"/>
				<bind name="class" value="'$FontColorStrongBlueish'"/>
				<bind name="text" value="selectedBattle.type == BattleTypes.CLUB_BATTLE ? 'IDS_CREATE_PARTY' : 'IDS_CREATE_DIVISION'"/>
			</block>
		</block>
		<block>
			<bind name="transition" value="rollOver &amp;&amp; !(mouseDown); 0.07; {alpha: 0.85}; {alpha: 1.0}"/>
			<bind name="visible" value="isInDivision"/>
			<style>
				<marginTop value="17px"/>
				<right value="-8"/>
			</style>
			<bind name="watch" value="'repeatArray'; (maxPlayersInFormation &gt;= curPlayersInFormation) ? maxPlayersInFormation - curPlayersInFormation : 0"/>
			<block>
				<bind name="collectionRepeatDH" value="CC.preBattlePlayerSimple; 'DHFormationPlayerIcon'; 'byPreBattle.' + selfPreBattleId + '.preBattleMembers.sorted'; {}"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="repeat" value="preBattleInvitedPlayers.length; 'FormationPlayerIcon'; {_isEmptySlot: true, _formationType: preBattleTypeStr}"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<style>
					<alpha value="0.5"/>
				</style>
				<bind name="repeat" value="repeatArray; 'FormationPlayerIcon'; {_isEmptySlot: true, _formationType: preBattleTypeStr}"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="SettingsButtonPort">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="name" value="'ButtonSettings'"/>
		<bind name="transition" value="rollOver &amp;&amp; !(mouseDown); 0.07; {alpha: 0.85}; {alpha: 1.0}"/>
		<bind name="transition" value="mouseDown; 0.07; {alpha: 0.85}; {alpha: 0.5}"/>
		<bind name="action" value="'click'; 'openMenu'; {showCoach: showTutorial}"/>
		<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_TOOLTIP_MENU'}], _maxWidth: 250 }"/>
		<block>
			<style>
				<width value="60px"/>
				<height value="60px"/>
				<backgroundColor value="0x01000000"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="44px"/>
					<height value="36px"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:../service_kit/icons/button_settings.png'"/>
			</block>
		</block>
	</block>
	<block className="PlayerDogTagButtonPort">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<block>
			<bind name="transition" value="rollOver &amp;&amp; !(mouseDown); 0.07; {alpha: 1}; {alpha: 0.3}"/>
			<bind name="request" value="'click'; 'modalDogTag' ; {}"/>
			<bind name="tooltip" value="'MouseInstructionTooltip'; {_mouseInstructions: [{_type: 'left', _instructionText: 'IDS_DOGTAG_TOOLTIP_GO_TO_CONSTUCTOR'}], _maxWidth: 250}"/>
			<block>
				<style>
					<marginTop value="2"/>
				</style>
				<bind name="instance" value="'PlayerDogTag'; { _playerDbId: selfPlayerDbId, _size: 'profile'}"/>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<styleClass value="$MiddleVAligned"/>
			<bind name="transition" value="(rollOver); 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: 10}"/>
			<block className="button_dock_bg" type="native">
				<style>
					<hitTest value="false"/>
					<paddingLeft value="8px"/>
					<paddingRight value="8px"/>
					<paddingTop value="8px"/>
					<paddingBottom value="8px"/>
				</style>
				<bind name="transition" value="rollOver &amp;&amp; !(mouseDown); 0.15; {alpha: 0}; {alpha: 1}; {alpha: 0}"/>
				<bind name="gotoAndStop!" value="'up'"/>
				<block>
					<bind name="name" value="'changeDogTag'"/>
					<style>
						<hitTest value="false"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefault13NM"/>
						<bind name="class" value="'$FontFamilyDefaultBold'"/>
						<style>
							<multiline value="false"/>
						</style>
						<bind name="text" value="toUpperCase(tr('IDS_DOG_TAG_DOLL_CHANGE'))"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<bind name="primaryEntityDH" value="'newMarkerDogtagsEntity'; CC.newContent; SC.Common.CONTENT_CATEGORY.DOGTAGS"/>
			<bind name="watchDH" value="'newDogtagsCounter'; ['newMarkerDogtagsEntity.newContent.evCountChanged']; newMarkerDogtagsEntity.newContent.count"/>
			<style>
				<position value="absolute"/>
				<right value="0px"/>
				<top value="7px"/>
			</style>
			<bind name="instance" value="'MarkerNewCounter'; newDogtagsCounter &gt; 0 ? { _newContentCounter: newDogtagsCounter } : null"/>
		</block>
	</block>
	<block className="PortSwitcher">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="name" value="'buttonSelectPort'"/>
		<bind name="request" value="'click'; 'openModalWindowSelectPort'; {}"/>
		<bind name="collectionDH" value="CC.port; 'currentPort'; 'visible.current'"/>
		<bind name="watch" value="'currentPortName'; currentPort[0].port.nameIds ? currentPort[0].port.nameIds : 'IDS_PORT_BASIC'"/>
		<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_SELECT_PORT'}], _maxWidth: 250 }"/>
		<bind name="soundSet" value="'resources_widget'"/>
		<style>
			<height value="60px"/>
			<backgroundColor value="0x01000000"/>
		</style>
		<block type="text">
			<style>
				<marginTop value="15px"/>
				<multiline value="false"/>
			</style>
			<styleClass value="$TextDefaultBold17NM"/>
			<bind name="class" value="'$FontColorBlueish'"/>
			<bind name="transition" value="rollOver &amp;&amp; !(mouseDown); 0.07; {alpha: 0.85}; {alpha: 1.0}"/>
			<bind name="text" value="currentPortName"/>
		</block>
		<block type="text">
			<bind name="transition" value="rollOver &amp;&amp; !(mouseDown); 0.07; {alpha: 0.75}; {alpha: 1.0}"/>
			<styleClass value="$TextDefault13NM"/>
			<bind name="class" value="'$FontColorStrongBlueish'"/>
			<style>
				<multiline value="false"/>
				<marginTop value="8"/>
			</style>
			<text value="IDS_CHOOSE_CURRENT_PORT"/>
		</block>
	</block>
	<block className="ButtonAccount">
		<bind name="firstEntityDH" value="'loginEntity'; CC.loginData"/>
		<bind name="watchDH" value="'isLazyLogin'; ['loginEntity.loginData.evUpdate']; (loginEntity.loginData.currentLoginType == 'DEMO')"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'accountLevelInfo'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesStats'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'isPremiumAccount';	['resourceEntity.accountResource.evChangedPrem'];	resourceEntity.accountResource.isPremium"/>
		<bind name="watchDH" value="'premBefore';		['resourceEntity.accountResource.evChangedPrem'];	resourceEntity.accountResource.premBefore"/>
		<bind name="watchDH" value="'wowsPremBefore';	['resourceEntity.accountResource.evChangedPrem'];	resourceEntity.accountResource.wowsPremBefore"/>
		<bind name="watchDH" value="'premiumAccountTimeStr';	['resourceEntity.accountResource.evChangedPrem'];	resourceEntity.accountResource.premiumTimeStr"/>
		<bind name="watchDH" value="'wowsPremiumTimeStr';	['resourceEntity.accountResource.evChangedPrem'];	resourceEntity.accountResource.wowsPremiumTimeStr"/>
		<bind name="watch" value="'activePremTime'; ((wowsPremBefore &gt; 0) &amp;&amp; (premBefore &gt; 0)) 	? wowsPremiumTimeStr :
																(wowsPremBefore &gt; 0)	? wowsPremiumTimeStr
																						: premiumAccountTimeStr"/>
		<bind name="watch" value="'accountText'; isPremiumAccount ? (tr('IDS_ACCOUNT_PREMIUM') + ' ' + activePremTime) : 'IDS_ACCOUNT_DEFAULT'"/>
		<bind name="watchDH" value="'isSyncedWithWallet'; ['resourceEntity.accountResource.evChangedIsSyncedWithWallet']; resourceEntity.accountResource.isSyncedWithWallet"/>
		<bind name="watchDH" value="'walletAvailable'; ['resourceEntity.accountResource.evChangedWalletStatus']; resourceEntity.accountResource.walletStatus"/>
		<bind name="watch" value="'showWGWalletWarning'; (!(isLazyLogin) &amp;&amp; ((isSyncedWithWallet == false) || (walletAvailable == false)))"/>
		<bind name="watch" value="'isAbuseStatusConfirmed'; accountLevelInfo.abuseStatus &gt; 0"/>
		<bind name="tooltip" value="'AccountInfotip'; isLazyLogin ? null : {}; 9; null; 'accountInfotipIsVisible'"/>
		<bind name="tooltip" value="'AbuseStatusProfileTooltip'; !isAbuseStatusConfirmed ?	null :
												isLazyLogin				?	{_mouseInstructionText: 'IDS_REGISTER_ACCOUNT_MOUSE_INSTRUCTION'} 
																		:	{_mouseInstructionText: 'IDS_CHOOSE_ACCOUNT_ACTION'}"/>
		<bind name="tooltip" value="'MouseInstructionTooltip'; 	isAbuseStatusConfirmed 	?	null :
												isLazyLogin				?	{ _multiParagraphArray: [{_paragraphText: 'IDS_REGISTER_ACCOUNT_TOOLTIP'}], _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_REGISTER_ACCOUNT_MOUSE_INSTRUCTION'}],  _maxWidth: 250 }
																		:	{ _multiParagraphArray: [{_paragraphText: 'IDS_TOOLTIP_ACCOUNT_TYPE'}], _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_CHOOSE_ACCOUNT_ACTION'}], _maxWidth: 250 }"/>
		<bind name="action" value="'click'; isLazyLogin ? 'forceCreateAccount' : null"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'rank'; 				['selfPlayerEntity.accountRank.evRankChanged']; selfPlayerEntity.accountRank.rank"/>
		<bind name="watchDH" value="'rankSeasonId'; 		['selfPlayerEntity.accountRank.evRankChanged']; selfPlayerEntity.accountRank.seasonId"/>
		<bind name="soundSet" value="'dropmenu_button'"/>
		<style>
			<width value="100%f"/>
			<height value="60px"/>
			<marginLeft value="-8px"/>
			<flow value="horizontal"/>
			<backgroundColor value="0x01000000"/>
		</style>
		<block>
			<bind name="transition" value="rollOver &amp;&amp; !(mouseDown); 0.07; {alpha: 0.85}; {alpha: 1.0}"/>
			<style>
				<marginTop value="8px"/>
				<marginRight value="4px"/>
			</style>
			<bind name="instance" value="'IconRankSmall'; rankedBattlesStats.participated &amp;&amp; !(rankedBattlesSeason.denyReason &amp; RBDeny.NO_SEASON) ?
										{_rankId: rank, _hideRankNumber: true, _seasonId:rankSeasonId} : null"/>
		</block>
		<block>
			<bind name="style" value="'alpha'; showWGWalletWarning ? 0.5 : 1"/>
			<style>
				<width value="100%f"/>
				<hitTest value="false"/>
				<marginTop value="8"/>
			</style>
			<block>
				<style>
					<width value="100%f"/>
				</style>
				<block>
					<style>
						<width value="100%f"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefaultBold17NM"/>
						<style>
							<width value="100%f"/>
							<multiline value="false"/>
							<marginTop value="7px"/>
						</style>
						<bind name="class" value="	accountLevelInfo.abuseStatus == AbuseStatus.CONFIRMED	? '$FontColorCompareNegative' :
									accountLevelInfo.abuseStatus == AbuseStatus.SUSPECT		? '$FontColorTeamkiller' :
									isPremiumAccount										? '$FontColorGold'
																							: '$FontColorBlueish'"/>
						<bind name="name" value="'playerName_button_account'"/>
						<bind name="text" value="selfPlayerName"/>
					</block>
					<block>
						<style>
							<marginLeft value="3px"/>
							<marginTop value="-1px"/>
						</style>
						<block>
							<bind name="feature" value="23; 'click'"/>
							<bind name="firstEntityDH" value="'loginEntity'; CC.loginData"/>
							<bind name="watchDH" value="'isExternalPlatformClient'; 	['loginEntity.loginData.evUpdate']; loginEntity.loginData.isExternalPlatformClient"/>
							<bind name="watchDH" value="'isSteamClient'; 			['loginEntity.loginData.evUpdate']; loginEntity.loginData.isSteam"/>
							<bind name="watchDH" value="'isWinstoreClient'; 			['loginEntity.loginData.evUpdate']; loginEntity.loginData.isWinstore"/>
							<bind name="collectionDH" value="CC.userTask; 'userTaskCollection'"/>
							<bind name="entityDH" value="'userTaskEntity'; userTaskCollection[0].id"/>
							<bind name="watchDH" value="'currentUserTaskFlag'; ['userTaskEntity.userTask.evFlagChanged']; userTaskEntity.userTask.flag"/>
							<bind name="firstEntityDH" value="'steamLoginEntity'; CC.steamLoginData"/>
							<bind name="watchDH" value="'accountCompleted'; ['steamLoginEntity.steamLoginData.evUpdate']; steamLoginEntity.steamLoginData.emailBind"/>
							<bind name="watch" value="'externalFeaturesEnabled'; (isSteamClient 		&amp;&amp; realmConstants.accountCompletion.steam) ||
																(isWinstoreClient 	&amp;&amp; realmConstants.accountCompletion.live)"/>
							<bind name="watch" value="'showAccountCompletion'; externalFeaturesEnabled &amp;&amp; !(accountCompleted)"/>
							<bind name="watch" value="'featuresEnabled'; 	!(isExternalPlatformClient) ||
															externalFeaturesEnabled"/>
							<bind name="watch" value="'isInviteFriendStickerNotSeen'; ((currentUserTaskFlag &amp; UserTasksFlags.CONTROL_SEEN_PLAYTOGETHER) == 0 &amp;&amp; (accountLevelInfo.accountLevel &gt;= 3) &amp;&amp; !(isLazyLogin) &amp;&amp; featuresEnabled)"/>
							<bind name="watch" value="'isPremShopStickerNotSeen'; ((currentUserTaskFlag &amp; UserTasksFlags.KNOWS_ABOUT_WOWS_PREM) == 0) &amp;&amp; accountLevelInfo.accountLevel &gt;= 5"/>
							<bind name="watch" value="'showButtonAccountSticker'; 	showAccountCompletion ||
																	isInviteFriendStickerNotSeen ||
																	(feature_23 == 'new') ||
																	isPremShopStickerNotSeen
																	"/>
							<bind name="fade" value="showButtonAccountSticker; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
							<bind name="instance" value="'MarkerNewAttention'; {}"/>
						</block>
						<block>
							<bind name="watch" value="'isNewsCounter'; realmConstants.newsUIAvailable &amp;&amp; (accountLevelInfo.accountLevel &gt; 1) &amp;&amp; (newsCount &gt; 0) &amp;&amp; (showButtonAccountSticker != true)"/>
							<bind name="primaryEntityDH" value="'unseenNewsEntity'; CC.newContent; SC.Common.CONTENT_CATEGORY.NEWS"/>
							<bind name="watchDH" value="'newsCount'; ['unseenNewsEntity.newContent.evCountChanged']; unseenNewsEntity.newContent.count"/>
							<bind name="fade" value="isNewsCounter; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2; 0.15"/>
							<bind name="instance" value="'MarkerNewCounter'; { _newContentCounter: newsCount }"/>
						</block>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<block type="text">
					<bind name="transition" value="rollOver &amp;&amp; !(mouseDown); 0.07; {alpha: 0.75}; {alpha: 1}"/>
					<styleClass value="$TextDefault13NM"/>
					<bind name="class" value="isPremiumAccount ? '$FontColorGold' : '$FontColorStrongBlueish'"/>
					<style>
						<multiline value="false"/>
						<marginTop value="8px"/>
					</style>
					<bind name="name" value="'label_button_account'"/>
					<bind name="text" value="accountText"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="(isLazyLogin == true)"/>
				<style>
					<width value="30px"/>
					<height value="30px"/>
					<marginLeft value="4"/>
					<marginRight value="4"/>
					<marginTop value="3px"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:../service_kit/icons/icon_lazy_account.png'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
			</style>
			<bind name="instance" value="'WGWalletServiceStatus'; showWGWalletWarning ? {_walletAvailable: walletAvailable, _isSyncedWithWallet: isSyncedWithWallet } : null"/>
		</block>
		<bind name="instance" value="'ContextGuidingTipHub'; {
						_tooltipID: SC.Context_guiding_tip.TIP_TYPES.INVITE_DOCK_USER_MENU, 
						_tipPositioning: 'bottom', 
						_extraCondition: !accountInfotipIsVisible, 
						_offset: -3, 
						_screenOffset : 0, 
						_hideOnReasonClick: true,
						_keepOnNotFit : true

	}"/>
	</block>
	<block className="AccountInfotipItem">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<style>
			<width value="260px"/>
			<height value="46px"/>
		</style>
		<bind name="action" value="'click'; 'log'; { event: 'click:playerMenu.' + _logItemName }"/>
		<block className="dock_submenu_item" type="native">
			<style>
				<width value="260px"/>
				<height value="45px"/>
				<flow value="horizontal"/>
			</style>
			<params>
				<param name="soundSet" value="dropmenu_button"/>
			</params>
		</block>
		<block>
			<style>
				<hitTest value="false"/>
				<width value="100%"/>
				<height value="100%"/>
				<position value="absolute"/>
			</style>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="32px"/>
					<height value="32px"/>
					<marginLeft value="29px"/>
					<marginRight value="29px"/>
					<hitTest value="false"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:../service_kit/account_menu/' + _icon + '.png'"/>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<hitTest value="false"/>
				</style>
				<block type="text">
					<bind name="var" value="{alphaValue: _isGolden ? 0.85 : 0.75}"/>
					<bind name="transition" value="rollOver &amp;&amp; !mouseDown; 0.1; {alpha: alphaValue}; {alpha: 1}; {alpha: alphaValue}; 2"/>
					<style>
						<maxWidth value="140"/>
						<leading value="-2"/>
						<marginTop value="1px"/>
					</style>
					<styleClass value="$TextDefaultBoldNM"/>
					<bind name="class" value="_isGolden ? '$FontColorGold' : '$FontColorBlueish'"/>
					<bind name="text" value="_text"/>
				</block>
				<block>
					<style>
						<marginLeft value="2px"/>
						<marginTop value="-8px"/>
					</style>
					<block>
						<bind name="fade" value="_markerNewVisible == true; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 2"/>
						<bind name="instance" value="'MarkerNewAttention'; { }"/>
					</block>
					<block>
						<bind name="primaryEntityDH" value="'newMarkerEntity'; CC.newContent; _newMarkerType"/>
						<bind name="watchDH" value="'newMarkerCounter'; ['newMarkerEntity.newContent.evCountChanged']; newMarkerEntity.newContent.count"/>
						<style>
							<position value="absolute"/>
						</style>
						<bind name="instance" value="'MarkerNewCounter'; !_markerNewVisible &amp;&amp; (newMarkerCounter &gt; 0) ? {_newContentCounter: newMarkerCounter} : null"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="_external"/>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<hitTest value="false"/>
				</style>
				<block className="icon_out_grey" type="native">
					<bind name="enabled" value="_enabled"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="divider_h" type="native">
			<style>
				<width value="100%"/>
				<bottom value="-1px"/>
				<position value="absolute"/>
				<hitTest value="false"/>
			</style>
		</block>
	</block>
	<block className="DockResourcesWidget">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="soundSet" value="'resources_widget'"/>
		<style>
			<height value="60px"/>
			<backgroundColor value="0x01000000"/>
		</style>
		<block>
			<style>
				<marginTop value="8"/>
				<right value="0"/>
			</style>
			<bind name="transition" value="rollOver &amp;&amp; !(mouseDown); 0.07; {alpha: 0.85}; {alpha: 1.0}"/>
			<bind name="instance" value="'PriceTag'; { priceInfo: {finalPrice: _rQuantity, currency: _currency}, _medium:true, _name: _name}"/>
		</block>
		<block type="text">
			<bind name="transition" value="rollOver &amp;&amp; !(mouseDown); 0.07; {alpha: 0.75}; {alpha: 1.0}"/>
			<style>
				<marginTop value="-4"/>
				<right value="0"/>
			</style>
			<styleClass value="$TextDockNano"/>
			<bind name="class" value="'$FontColorStrongBlueish'"/>
			<bind name="text" value="_label"/>
		</block>
	</block>
	<block className="DockResourcesWidgetTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'splitGold'; ['resourceEntity.accountResource.evUpdateSplitCurrency']; resourceEntity.accountResource.splitGold"/>
		<bind name="watchDH" value="'splitCredits'; ['resourceEntity.accountResource.evUpdateSplitCurrency']; resourceEntity.accountResource.splitCredits"/>
		<bind name="watchDH" value="'accountGoldLooted';		['resourceEntity.accountResource.evChangedSplitGold'];	resourceEntity.accountResource.goldLooted"/>
		<bind name="watchDH" value="'accountGoldPurchased';	['resourceEntity.accountResource.evChangedSplitGold'];	resourceEntity.accountResource.goldPurchased"/>
		<bind name="watchDH" value="'accountCreditsLooted';		['resourceEntity.accountResource.evChangedSplitCredit'];	resourceEntity.accountResource.creditsLooted"/>
		<bind name="watchDH" value="'accountCreditsPurchased';	['resourceEntity.accountResource.evChangedSplitCredit'];	resourceEntity.accountResource.creditsPurchased"/>
		<bind name="watch" value="'lootedMoney'; {	gold: { finalPrice: accountGoldLooted, currency: 'gold' },
									credits: { finalPrice: accountCreditsLooted, currency: 'credits' }
								}"/>
		<bind name="watch" value="'purchasedMoney'; {gold: { finalPrice: accountGoldPurchased, currency: 'gold' },
									credits: { finalPrice: accountCreditsPurchased, currency: 'credits' }
									}"/>
		<bind name="action" value="'Tooltip.selfOpened'; (lootedMoney[_currency].finalPrice &lt; 0) &amp;&amp; (splitGold || splitCredits) ? 'DockProxy.getSplitCurrencies' : null"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'TooltipBackground'; {}"/>
		</block>
		<block>
			<bind name="visible" value="_multiParagraphArray.length &gt; 0"/>
			<styleClass value="$InfoBlockHorizontalIndentNoWidth"/>
			<style>
				<marginTop value="9px"/>
			</style>
			<bind name="style" value="'marginBottom'; (_multiParagraphArray.length &gt; 0) &amp;&amp; (_mouseInstructions.length &gt; 0) ? '0px' : '5px'"/>
			<bind name="repeat" value="_multiParagraphArray; 'RepeatParagraphItem'; {_maxWidth: _maxWidth, _marginBottom: _marginBottom}"/>
		</block>
		<block>
			<bind name="visible" value="(_multiParagraphArray.length &gt; 0) &amp;&amp; (_showSplitCurrency == true)"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="_showSplitCurrency == true"/>
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<block type="text">
				<styleClass value="$TextHeaderBigDefault"/>
				<bind name="style" value="'maxWidth'; _maxWidth"/>
				<bind name="text" value="'IDS_CURRENCY_LOOTED_' + toUpperCase(_currency)"/>
			</block>
			<bind name="watch" value="'lootedMoneySynced'; lootedMoney[_currency].finalPrice &gt;= 0"/>
			<block>
				<style>
					<height value="30px"/>
				</style>
				<block>
					<bind name="instance" value="'PriceTag'; lootedMoneySynced ? { priceInfo: lootedMoney[_currency], _medium:true } : null"/>
				</block>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<bind name="instance" value="'BusyIndicator'; { _showBusyIndicator: !lootedMoneySynced }"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block type="text">
				<styleClass value="$TextHeaderBigDefault"/>
				<style>
					<marginTop value="4px"/>
				</style>
				<bind name="style" value="'maxWidth'; _maxWidth"/>
				<bind name="text" value="'IDS_CURRENCY_PURCHASED_' + toUpperCase(_currency)"/>
			</block>
			<bind name="watch" value="'purchasedMoneySynced'; purchasedMoney[_currency].finalPrice &gt;= 0"/>
			<block>
				<style>
					<height value="30px"/>
				</style>
				<block>
					<bind name="instance" value="'PriceTag'; purchasedMoneySynced ? { priceInfo: purchasedMoney[_currency], _medium:true } : null"/>
				</block>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<bind name="instance" value="'BusyIndicator'; { _showBusyIndicator: !purchasedMoneySynced }"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<bind name="visible" value="((_multiParagraphArray.length &gt; 0) || (_showSplitCurrency == true)) &amp;&amp; (_mouseInstructions.length &gt; 0)"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="_mouseInstructions.length &gt; 0"/>
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<bind name="repeat" value="_mouseInstructions; 'MouseInstructionRepeater'; {_maxWidth: _maxWidth, _lastIndex: _mouseInstructions.length - 1}"/>
		</block>
	</block>
	<block className="WGWalletServiceStatus">
		<styleClass value="$Fullsize"/>
		<style>
			<backgroundColor value="0x01000000"/>
			<marginRight value="-2px"/>
			<marginLeft value="-2px"/>
			<marginBottom value="-2px"/>
			<marginTop value="-2px"/>
		</style>
		<bind name="tooltip" value="'SimpleTooltip'; (_walletAvailable == true) ? {tooltipText: 'IDS_SYNC_GOES_INFO'} : null; 0"/>
		<bind name="tooltip" value="'SimpleWarningTooltip'; (_walletAvailable == false) ? {_text: tr('IDS_SERVICE_IS_NOT_AVAILABLE')} : null; 0"/>
		<block>
			<bind name="visible" value="((_isSyncedWithWallet == false) &amp;&amp; (_walletAvailable == true))"/>
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<block className="indicator_busy_small" type="native"/>
		</block>
		<block>
			<bind name="visible" value="(_walletAvailable == false)"/>
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<block className="icon_warning_orange_big" type="native"/>
		</block>
	</block>
	<block className="EventPersonalBattleTask">
		<style>
			<width value="400px"/>
			<height value="30px"/>
			<flow value="horizontal"/>
		</style>
		<bind name="appear" value="'startShow'; 0.5; (($index * 2) + 4); {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<block className="icon_player_status" type="native">
				<bind name="gotoAndStop!" value="'not_ready'"/>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<marginLeft value="8"/>
			</style>
			<block type="text">
				<style>
					<maxWidth value="350"/>
				</style>
				<styleClass value="$TextDefault19NM"/>
				<bind name="text" value="_taskText"/>
			</block>
		</block>
	</block>
</ui>
